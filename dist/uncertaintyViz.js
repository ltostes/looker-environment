!function(n,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.uncertaintyViz=e():n.uncertaintyViz=e()}(self,(()=>(()=>{"use strict";var __webpack_modules__={764:module=>{eval("\n\n// (a, y, c, l, h) = (array, y[, cmp, lo, hi])\nfunction ge(a, y, c, l, h) {\n  var i = h + 1;\n  while (l <= h) {\n    var m = l + h >>> 1,\n      x = a[m];\n    var p = c !== undefined ? c(x, y) : x - y;\n    if (p >= 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n  return i;\n}\n;\nfunction gt(a, y, c, l, h) {\n  var i = h + 1;\n  while (l <= h) {\n    var m = l + h >>> 1,\n      x = a[m];\n    var p = c !== undefined ? c(x, y) : x - y;\n    if (p > 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n  return i;\n}\n;\nfunction lt(a, y, c, l, h) {\n  var i = l - 1;\n  while (l <= h) {\n    var m = l + h >>> 1,\n      x = a[m];\n    var p = c !== undefined ? c(x, y) : x - y;\n    if (p < 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n  return i;\n}\n;\nfunction le(a, y, c, l, h) {\n  var i = l - 1;\n  while (l <= h) {\n    var m = l + h >>> 1,\n      x = a[m];\n    var p = c !== undefined ? c(x, y) : x - y;\n    if (p <= 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n  return i;\n}\n;\nfunction eq(a, y, c, l, h) {\n  while (l <= h) {\n    var m = l + h >>> 1,\n      x = a[m];\n    var p = c !== undefined ? c(x, y) : x - y;\n    if (p === 0) {\n      return m;\n    }\n    if (p <= 0) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n  return -1;\n}\n;\nfunction norm(a, y, c, l, h, f) {\n  if (typeof c === 'function') {\n    return f(a, y, c, l === undefined ? 0 : l | 0, h === undefined ? a.length - 1 : h | 0);\n  }\n  return f(a, y, undefined, c === undefined ? 0 : c | 0, l === undefined ? a.length - 1 : l | 0);\n}\nmodule.exports = {\n  ge: function (a, y, c, l, h) {\n    return norm(a, y, c, l, h, ge);\n  },\n  gt: function (a, y, c, l, h) {\n    return norm(a, y, c, l, h, gt);\n  },\n  lt: function (a, y, c, l, h) {\n    return norm(a, y, c, l, h, lt);\n  },\n  le: function (a, y, c, l, h) {\n    return norm(a, y, c, l, h, le);\n  },\n  eq: function (a, y, c, l, h) {\n    return norm(a, y, c, l, h, eq);\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/binary-search-bounds/search-bounds.js?")},82:(module,__unused_webpack_exports,__webpack_require__)=>{eval('\n\nvar bounds = __webpack_require__(764);\nvar NOT_FOUND = 0;\nvar SUCCESS = 1;\nvar EMPTY = 2;\nmodule.exports = createWrapper;\nfunction IntervalTreeNode(mid, left, right, leftPoints, rightPoints) {\n  this.mid = mid;\n  this.left = left;\n  this.right = right;\n  this.leftPoints = leftPoints;\n  this.rightPoints = rightPoints;\n  this.count = (left ? left.count : 0) + (right ? right.count : 0) + leftPoints.length;\n}\nvar proto = IntervalTreeNode.prototype;\nfunction copy(a, b) {\n  a.mid = b.mid;\n  a.left = b.left;\n  a.right = b.right;\n  a.leftPoints = b.leftPoints;\n  a.rightPoints = b.rightPoints;\n  a.count = b.count;\n}\nfunction rebuild(node, intervals) {\n  var ntree = createIntervalTree(intervals);\n  node.mid = ntree.mid;\n  node.left = ntree.left;\n  node.right = ntree.right;\n  node.leftPoints = ntree.leftPoints;\n  node.rightPoints = ntree.rightPoints;\n  node.count = ntree.count;\n}\nfunction rebuildWithInterval(node, interval) {\n  var intervals = node.intervals([]);\n  intervals.push(interval);\n  rebuild(node, intervals);\n}\nfunction rebuildWithoutInterval(node, interval) {\n  var intervals = node.intervals([]);\n  var idx = intervals.indexOf(interval);\n  if (idx < 0) {\n    return NOT_FOUND;\n  }\n  intervals.splice(idx, 1);\n  rebuild(node, intervals);\n  return SUCCESS;\n}\nproto.intervals = function (result) {\n  result.push.apply(result, this.leftPoints);\n  if (this.left) {\n    this.left.intervals(result);\n  }\n  if (this.right) {\n    this.right.intervals(result);\n  }\n  return result;\n};\nproto.insert = function (interval) {\n  var weight = this.count - this.leftPoints.length;\n  this.count += 1;\n  if (interval[1] < this.mid) {\n    if (this.left) {\n      if (4 * (this.left.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.left.insert(interval);\n      }\n    } else {\n      this.left = createIntervalTree([interval]);\n    }\n  } else if (interval[0] > this.mid) {\n    if (this.right) {\n      if (4 * (this.right.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.right.insert(interval);\n      }\n    } else {\n      this.right = createIntervalTree([interval]);\n    }\n  } else {\n    var l = bounds.ge(this.leftPoints, interval, compareBegin);\n    var r = bounds.ge(this.rightPoints, interval, compareEnd);\n    this.leftPoints.splice(l, 0, interval);\n    this.rightPoints.splice(r, 0, interval);\n  }\n};\nproto.remove = function (interval) {\n  var weight = this.count - this.leftPoints;\n  if (interval[1] < this.mid) {\n    if (!this.left) {\n      return NOT_FOUND;\n    }\n    var rw = this.right ? this.right.count : 0;\n    if (4 * rw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n    var r = this.left.remove(interval);\n    if (r === EMPTY) {\n      this.left = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n    return r;\n  } else if (interval[0] > this.mid) {\n    if (!this.right) {\n      return NOT_FOUND;\n    }\n    var lw = this.left ? this.left.count : 0;\n    if (4 * lw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n    var r = this.right.remove(interval);\n    if (r === EMPTY) {\n      this.right = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n    return r;\n  } else {\n    if (this.count === 1) {\n      if (this.leftPoints[0] === interval) {\n        return EMPTY;\n      } else {\n        return NOT_FOUND;\n      }\n    }\n    if (this.leftPoints.length === 1 && this.leftPoints[0] === interval) {\n      if (this.left && this.right) {\n        var p = this;\n        var n = this.left;\n        while (n.right) {\n          p = n;\n          n = n.right;\n        }\n        if (p === this) {\n          n.right = this.right;\n        } else {\n          var l = this.left;\n          var r = this.right;\n          p.count -= n.count;\n          p.right = n.left;\n          n.left = l;\n          n.right = r;\n        }\n        copy(this, n);\n        this.count = (this.left ? this.left.count : 0) + (this.right ? this.right.count : 0) + this.leftPoints.length;\n      } else if (this.left) {\n        copy(this, this.left);\n      } else {\n        copy(this, this.right);\n      }\n      return SUCCESS;\n    }\n    for (var l = bounds.ge(this.leftPoints, interval, compareBegin); l < this.leftPoints.length; ++l) {\n      if (this.leftPoints[l][0] !== interval[0]) {\n        break;\n      }\n      if (this.leftPoints[l] === interval) {\n        this.count -= 1;\n        this.leftPoints.splice(l, 1);\n        for (var r = bounds.ge(this.rightPoints, interval, compareEnd); r < this.rightPoints.length; ++r) {\n          if (this.rightPoints[r][1] !== interval[1]) {\n            break;\n          } else if (this.rightPoints[r] === interval) {\n            this.rightPoints.splice(r, 1);\n            return SUCCESS;\n          }\n        }\n      }\n    }\n    return NOT_FOUND;\n  }\n};\nfunction reportLeftRange(arr, hi, cb) {\n  for (var i = 0; i < arr.length && arr[i][0] <= hi; ++i) {\n    var r = cb(arr[i]);\n    if (r) {\n      return r;\n    }\n  }\n}\nfunction reportRightRange(arr, lo, cb) {\n  for (var i = arr.length - 1; i >= 0 && arr[i][1] >= lo; --i) {\n    var r = cb(arr[i]);\n    if (r) {\n      return r;\n    }\n  }\n}\nfunction reportRange(arr, cb) {\n  for (var i = 0; i < arr.length; ++i) {\n    var r = cb(arr[i]);\n    if (r) {\n      return r;\n    }\n  }\n}\nproto.queryPoint = function (x, cb) {\n  if (x < this.mid) {\n    if (this.left) {\n      var r = this.left.queryPoint(x, cb);\n      if (r) {\n        return r;\n      }\n    }\n    return reportLeftRange(this.leftPoints, x, cb);\n  } else if (x > this.mid) {\n    if (this.right) {\n      var r = this.right.queryPoint(x, cb);\n      if (r) {\n        return r;\n      }\n    }\n    return reportRightRange(this.rightPoints, x, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\nproto.queryInterval = function (lo, hi, cb) {\n  if (lo < this.mid && this.left) {\n    var r = this.left.queryInterval(lo, hi, cb);\n    if (r) {\n      return r;\n    }\n  }\n  if (hi > this.mid && this.right) {\n    var r = this.right.queryInterval(lo, hi, cb);\n    if (r) {\n      return r;\n    }\n  }\n  if (hi < this.mid) {\n    return reportLeftRange(this.leftPoints, hi, cb);\n  } else if (lo > this.mid) {\n    return reportRightRange(this.rightPoints, lo, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\nfunction compareNumbers(a, b) {\n  return a - b;\n}\nfunction compareBegin(a, b) {\n  var d = a[0] - b[0];\n  if (d) {\n    return d;\n  }\n  return a[1] - b[1];\n}\nfunction compareEnd(a, b) {\n  var d = a[1] - b[1];\n  if (d) {\n    return d;\n  }\n  return a[0] - b[0];\n}\nfunction createIntervalTree(intervals) {\n  if (intervals.length === 0) {\n    return null;\n  }\n  var pts = [];\n  for (var i = 0; i < intervals.length; ++i) {\n    pts.push(intervals[i][0], intervals[i][1]);\n  }\n  pts.sort(compareNumbers);\n  var mid = pts[pts.length >> 1];\n  var leftIntervals = [];\n  var rightIntervals = [];\n  var centerIntervals = [];\n  for (var i = 0; i < intervals.length; ++i) {\n    var s = intervals[i];\n    if (s[1] < mid) {\n      leftIntervals.push(s);\n    } else if (mid < s[0]) {\n      rightIntervals.push(s);\n    } else {\n      centerIntervals.push(s);\n    }\n  }\n\n  //Split center intervals\n  var leftPoints = centerIntervals;\n  var rightPoints = centerIntervals.slice();\n  leftPoints.sort(compareBegin);\n  rightPoints.sort(compareEnd);\n  return new IntervalTreeNode(mid, createIntervalTree(leftIntervals), createIntervalTree(rightIntervals), leftPoints, rightPoints);\n}\n\n//User friendly wrapper that makes it possible to support empty trees\nfunction IntervalTree(root) {\n  this.root = root;\n}\nvar tproto = IntervalTree.prototype;\ntproto.insert = function (interval) {\n  if (this.root) {\n    this.root.insert(interval);\n  } else {\n    this.root = new IntervalTreeNode(interval[0], null, null, [interval], [interval]);\n  }\n};\ntproto.remove = function (interval) {\n  if (this.root) {\n    var r = this.root.remove(interval);\n    if (r === EMPTY) {\n      this.root = null;\n    }\n    return r !== NOT_FOUND;\n  }\n  return false;\n};\ntproto.queryPoint = function (p, cb) {\n  if (this.root) {\n    return this.root.queryPoint(p, cb);\n  }\n};\ntproto.queryInterval = function (lo, hi, cb) {\n  if (lo <= hi && this.root) {\n    return this.root.queryInterval(lo, hi, cb);\n  }\n};\nObject.defineProperty(tproto, "count", {\n  get: function () {\n    if (this.root) {\n      return this.root.count;\n    }\n    return 0;\n  }\n});\nObject.defineProperty(tproto, "intervals", {\n  get: function () {\n    if (this.root) {\n      return this.root.intervals([]);\n    }\n    return [];\n  }\n});\nfunction createWrapper(intervals) {\n  if (!intervals || intervals.length === 0) {\n    return new IntervalTree(null);\n  }\n  return new IntervalTree(createIntervalTree(intervals));\n}\n\n//# sourceURL=webpack:///./node_modules/interval-tree-1d/interval-tree.js?')},748:(__unused_webpack_module,exports,__webpack_require__)=>{eval('/**\n * @license React\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n\n\nvar aa = __webpack_require__(466),\n  ca = __webpack_require__(767);\nfunction p(a) {\n  for (var b = "https://reactjs.org/docs/error-decoder.html?invariant=" + a, c = 1; c < arguments.length; c++) b += "&args[]=" + encodeURIComponent(arguments[c]);\n  return "Minified React error #" + a + "; visit " + b + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";\n}\nvar da = new Set(),\n  ea = {};\nfunction fa(a, b) {\n  ha(a, b);\n  ha(a + "Capture", b);\n}\nfunction ha(a, b) {\n  ea[a] = b;\n  for (a = 0; a < b.length; a++) da.add(b[a]);\n}\nvar ia = !("undefined" === typeof window || "undefined" === typeof window.document || "undefined" === typeof window.document.createElement),\n  ja = Object.prototype.hasOwnProperty,\n  ka = /^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,\n  la = {},\n  ma = {};\nfunction oa(a) {\n  if (ja.call(ma, a)) return !0;\n  if (ja.call(la, a)) return !1;\n  if (ka.test(a)) return ma[a] = !0;\n  la[a] = !0;\n  return !1;\n}\nfunction pa(a, b, c, d) {\n  if (null !== c && 0 === c.type) return !1;\n  switch (typeof b) {\n    case "function":\n    case "symbol":\n      return !0;\n    case "boolean":\n      if (d) return !1;\n      if (null !== c) return !c.acceptsBooleans;\n      a = a.toLowerCase().slice(0, 5);\n      return "data-" !== a && "aria-" !== a;\n    default:\n      return !1;\n  }\n}\nfunction qa(a, b, c, d) {\n  if (null === b || "undefined" === typeof b || pa(a, b, c, d)) return !0;\n  if (d) return !1;\n  if (null !== c) switch (c.type) {\n    case 3:\n      return !b;\n    case 4:\n      return !1 === b;\n    case 5:\n      return isNaN(b);\n    case 6:\n      return isNaN(b) || 1 > b;\n  }\n  return !1;\n}\nfunction v(a, b, c, d, e, f, g) {\n  this.acceptsBooleans = 2 === b || 3 === b || 4 === b;\n  this.attributeName = d;\n  this.attributeNamespace = e;\n  this.mustUseProperty = c;\n  this.propertyName = a;\n  this.type = b;\n  this.sanitizeURL = f;\n  this.removeEmptyString = g;\n}\nvar z = {};\n"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function (a) {\n  z[a] = new v(a, 0, !1, a, null, !1, !1);\n});\n[["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function (a) {\n  var b = a[0];\n  z[b] = new v(b, 1, !1, a[1], null, !1, !1);\n});\n["contentEditable", "draggable", "spellCheck", "value"].forEach(function (a) {\n  z[a] = new v(a, 2, !1, a.toLowerCase(), null, !1, !1);\n});\n["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function (a) {\n  z[a] = new v(a, 2, !1, a, null, !1, !1);\n});\n"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function (a) {\n  z[a] = new v(a, 3, !1, a.toLowerCase(), null, !1, !1);\n});\n["checked", "multiple", "muted", "selected"].forEach(function (a) {\n  z[a] = new v(a, 3, !0, a, null, !1, !1);\n});\n["capture", "download"].forEach(function (a) {\n  z[a] = new v(a, 4, !1, a, null, !1, !1);\n});\n["cols", "rows", "size", "span"].forEach(function (a) {\n  z[a] = new v(a, 6, !1, a, null, !1, !1);\n});\n["rowSpan", "start"].forEach(function (a) {\n  z[a] = new v(a, 5, !1, a.toLowerCase(), null, !1, !1);\n});\nvar ra = /[\\-:]([a-z])/g;\nfunction sa(a) {\n  return a[1].toUpperCase();\n}\n"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function (a) {\n  var b = a.replace(ra, sa);\n  z[b] = new v(b, 1, !1, a, null, !1, !1);\n});\n"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function (a) {\n  var b = a.replace(ra, sa);\n  z[b] = new v(b, 1, !1, a, "http://www.w3.org/1999/xlink", !1, !1);\n});\n["xml:base", "xml:lang", "xml:space"].forEach(function (a) {\n  var b = a.replace(ra, sa);\n  z[b] = new v(b, 1, !1, a, "http://www.w3.org/XML/1998/namespace", !1, !1);\n});\n["tabIndex", "crossOrigin"].forEach(function (a) {\n  z[a] = new v(a, 1, !1, a.toLowerCase(), null, !1, !1);\n});\nz.xlinkHref = new v("xlinkHref", 1, !1, "xlink:href", "http://www.w3.org/1999/xlink", !0, !1);\n["src", "href", "action", "formAction"].forEach(function (a) {\n  z[a] = new v(a, 1, !1, a.toLowerCase(), null, !0, !0);\n});\nfunction ta(a, b, c, d) {\n  var e = z.hasOwnProperty(b) ? z[b] : null;\n  if (null !== e ? 0 !== e.type : d || !(2 < b.length) || "o" !== b[0] && "O" !== b[0] || "n" !== b[1] && "N" !== b[1]) qa(b, c, e, d) && (c = null), d || null === e ? oa(b) && (null === c ? a.removeAttribute(b) : a.setAttribute(b, "" + c)) : e.mustUseProperty ? a[e.propertyName] = null === c ? 3 === e.type ? !1 : "" : c : (b = e.attributeName, d = e.attributeNamespace, null === c ? a.removeAttribute(b) : (e = e.type, c = 3 === e || 4 === e && !0 === c ? "" : "" + c, d ? a.setAttributeNS(d, b, c) : a.setAttribute(b, c)));\n}\nvar ua = aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,\n  va = Symbol.for("react.element"),\n  wa = Symbol.for("react.portal"),\n  ya = Symbol.for("react.fragment"),\n  za = Symbol.for("react.strict_mode"),\n  Aa = Symbol.for("react.profiler"),\n  Ba = Symbol.for("react.provider"),\n  Ca = Symbol.for("react.context"),\n  Da = Symbol.for("react.forward_ref"),\n  Ea = Symbol.for("react.suspense"),\n  Fa = Symbol.for("react.suspense_list"),\n  Ga = Symbol.for("react.memo"),\n  Ha = Symbol.for("react.lazy");\nSymbol.for("react.scope");\nSymbol.for("react.debug_trace_mode");\nvar Ia = Symbol.for("react.offscreen");\nSymbol.for("react.legacy_hidden");\nSymbol.for("react.cache");\nSymbol.for("react.tracing_marker");\nvar Ja = Symbol.iterator;\nfunction Ka(a) {\n  if (null === a || "object" !== typeof a) return null;\n  a = Ja && a[Ja] || a["@@iterator"];\n  return "function" === typeof a ? a : null;\n}\nvar A = Object.assign,\n  La;\nfunction Ma(a) {\n  if (void 0 === La) try {\n    throw Error();\n  } catch (c) {\n    var b = c.stack.trim().match(/\\n( *(at )?)/);\n    La = b && b[1] || "";\n  }\n  return "\\n" + La + a;\n}\nvar Na = !1;\nfunction Oa(a, b) {\n  if (!a || Na) return "";\n  Na = !0;\n  var c = Error.prepareStackTrace;\n  Error.prepareStackTrace = void 0;\n  try {\n    if (b) {\n      if (b = function () {\n        throw Error();\n      }, Object.defineProperty(b.prototype, "props", {\n        set: function () {\n          throw Error();\n        }\n      }), "object" === typeof Reflect && Reflect.construct) {\n        try {\n          Reflect.construct(b, []);\n        } catch (l) {\n          var d = l;\n        }\n        Reflect.construct(a, [], b);\n      } else {\n        try {\n          b.call();\n        } catch (l) {\n          d = l;\n        }\n        a.call(b.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (l) {\n        d = l;\n      }\n      a();\n    }\n  } catch (l) {\n    if (l && d && "string" === typeof l.stack) {\n      for (var e = l.stack.split("\\n"), f = d.stack.split("\\n"), g = e.length - 1, h = f.length - 1; 1 <= g && 0 <= h && e[g] !== f[h];) h--;\n      for (; 1 <= g && 0 <= h; g--, h--) if (e[g] !== f[h]) {\n        if (1 !== g || 1 !== h) {\n          do if (g--, h--, 0 > h || e[g] !== f[h]) {\n            var k = "\\n" + e[g].replace(" at new ", " at ");\n            a.displayName && k.includes("<anonymous>") && (k = k.replace("<anonymous>", a.displayName));\n            return k;\n          } while (1 <= g && 0 <= h);\n        }\n        break;\n      }\n    }\n  } finally {\n    Na = !1, Error.prepareStackTrace = c;\n  }\n  return (a = a ? a.displayName || a.name : "") ? Ma(a) : "";\n}\nfunction Pa(a) {\n  switch (a.tag) {\n    case 5:\n      return Ma(a.type);\n    case 16:\n      return Ma("Lazy");\n    case 13:\n      return Ma("Suspense");\n    case 19:\n      return Ma("SuspenseList");\n    case 0:\n    case 2:\n    case 15:\n      return a = Oa(a.type, !1), a;\n    case 11:\n      return a = Oa(a.type.render, !1), a;\n    case 1:\n      return a = Oa(a.type, !0), a;\n    default:\n      return "";\n  }\n}\nfunction Qa(a) {\n  if (null == a) return null;\n  if ("function" === typeof a) return a.displayName || a.name || null;\n  if ("string" === typeof a) return a;\n  switch (a) {\n    case ya:\n      return "Fragment";\n    case wa:\n      return "Portal";\n    case Aa:\n      return "Profiler";\n    case za:\n      return "StrictMode";\n    case Ea:\n      return "Suspense";\n    case Fa:\n      return "SuspenseList";\n  }\n  if ("object" === typeof a) switch (a.$$typeof) {\n    case Ca:\n      return (a.displayName || "Context") + ".Consumer";\n    case Ba:\n      return (a._context.displayName || "Context") + ".Provider";\n    case Da:\n      var b = a.render;\n      a = a.displayName;\n      a || (a = b.displayName || b.name || "", a = "" !== a ? "ForwardRef(" + a + ")" : "ForwardRef");\n      return a;\n    case Ga:\n      return b = a.displayName || null, null !== b ? b : Qa(a.type) || "Memo";\n    case Ha:\n      b = a._payload;\n      a = a._init;\n      try {\n        return Qa(a(b));\n      } catch (c) {}\n  }\n  return null;\n}\nfunction Ra(a) {\n  var b = a.type;\n  switch (a.tag) {\n    case 24:\n      return "Cache";\n    case 9:\n      return (b.displayName || "Context") + ".Consumer";\n    case 10:\n      return (b._context.displayName || "Context") + ".Provider";\n    case 18:\n      return "DehydratedFragment";\n    case 11:\n      return a = b.render, a = a.displayName || a.name || "", b.displayName || ("" !== a ? "ForwardRef(" + a + ")" : "ForwardRef");\n    case 7:\n      return "Fragment";\n    case 5:\n      return b;\n    case 4:\n      return "Portal";\n    case 3:\n      return "Root";\n    case 6:\n      return "Text";\n    case 16:\n      return Qa(b);\n    case 8:\n      return b === za ? "StrictMode" : "Mode";\n    case 22:\n      return "Offscreen";\n    case 12:\n      return "Profiler";\n    case 21:\n      return "Scope";\n    case 13:\n      return "Suspense";\n    case 19:\n      return "SuspenseList";\n    case 25:\n      return "TracingMarker";\n    case 1:\n    case 0:\n    case 17:\n    case 2:\n    case 14:\n    case 15:\n      if ("function" === typeof b) return b.displayName || b.name || null;\n      if ("string" === typeof b) return b;\n  }\n  return null;\n}\nfunction Sa(a) {\n  switch (typeof a) {\n    case "boolean":\n    case "number":\n    case "string":\n    case "undefined":\n      return a;\n    case "object":\n      return a;\n    default:\n      return "";\n  }\n}\nfunction Ta(a) {\n  var b = a.type;\n  return (a = a.nodeName) && "input" === a.toLowerCase() && ("checkbox" === b || "radio" === b);\n}\nfunction Ua(a) {\n  var b = Ta(a) ? "checked" : "value",\n    c = Object.getOwnPropertyDescriptor(a.constructor.prototype, b),\n    d = "" + a[b];\n  if (!a.hasOwnProperty(b) && "undefined" !== typeof c && "function" === typeof c.get && "function" === typeof c.set) {\n    var e = c.get,\n      f = c.set;\n    Object.defineProperty(a, b, {\n      configurable: !0,\n      get: function () {\n        return e.call(this);\n      },\n      set: function (a) {\n        d = "" + a;\n        f.call(this, a);\n      }\n    });\n    Object.defineProperty(a, b, {\n      enumerable: c.enumerable\n    });\n    return {\n      getValue: function () {\n        return d;\n      },\n      setValue: function (a) {\n        d = "" + a;\n      },\n      stopTracking: function () {\n        a._valueTracker = null;\n        delete a[b];\n      }\n    };\n  }\n}\nfunction Va(a) {\n  a._valueTracker || (a._valueTracker = Ua(a));\n}\nfunction Wa(a) {\n  if (!a) return !1;\n  var b = a._valueTracker;\n  if (!b) return !0;\n  var c = b.getValue();\n  var d = "";\n  a && (d = Ta(a) ? a.checked ? "true" : "false" : a.value);\n  a = d;\n  return a !== c ? (b.setValue(a), !0) : !1;\n}\nfunction Xa(a) {\n  a = a || ("undefined" !== typeof document ? document : void 0);\n  if ("undefined" === typeof a) return null;\n  try {\n    return a.activeElement || a.body;\n  } catch (b) {\n    return a.body;\n  }\n}\nfunction Ya(a, b) {\n  var c = b.checked;\n  return A({}, b, {\n    defaultChecked: void 0,\n    defaultValue: void 0,\n    value: void 0,\n    checked: null != c ? c : a._wrapperState.initialChecked\n  });\n}\nfunction Za(a, b) {\n  var c = null == b.defaultValue ? "" : b.defaultValue,\n    d = null != b.checked ? b.checked : b.defaultChecked;\n  c = Sa(null != b.value ? b.value : c);\n  a._wrapperState = {\n    initialChecked: d,\n    initialValue: c,\n    controlled: "checkbox" === b.type || "radio" === b.type ? null != b.checked : null != b.value\n  };\n}\nfunction ab(a, b) {\n  b = b.checked;\n  null != b && ta(a, "checked", b, !1);\n}\nfunction bb(a, b) {\n  ab(a, b);\n  var c = Sa(b.value),\n    d = b.type;\n  if (null != c) {\n    if ("number" === d) {\n      if (0 === c && "" === a.value || a.value != c) a.value = "" + c;\n    } else a.value !== "" + c && (a.value = "" + c);\n  } else if ("submit" === d || "reset" === d) {\n    a.removeAttribute("value");\n    return;\n  }\n  b.hasOwnProperty("value") ? cb(a, b.type, c) : b.hasOwnProperty("defaultValue") && cb(a, b.type, Sa(b.defaultValue));\n  null == b.checked && null != b.defaultChecked && (a.defaultChecked = !!b.defaultChecked);\n}\nfunction db(a, b, c) {\n  if (b.hasOwnProperty("value") || b.hasOwnProperty("defaultValue")) {\n    var d = b.type;\n    if (!("submit" !== d && "reset" !== d || void 0 !== b.value && null !== b.value)) return;\n    b = "" + a._wrapperState.initialValue;\n    c || b === a.value || (a.value = b);\n    a.defaultValue = b;\n  }\n  c = a.name;\n  "" !== c && (a.name = "");\n  a.defaultChecked = !!a._wrapperState.initialChecked;\n  "" !== c && (a.name = c);\n}\nfunction cb(a, b, c) {\n  if ("number" !== b || Xa(a.ownerDocument) !== a) null == c ? a.defaultValue = "" + a._wrapperState.initialValue : a.defaultValue !== "" + c && (a.defaultValue = "" + c);\n}\nvar eb = Array.isArray;\nfunction fb(a, b, c, d) {\n  a = a.options;\n  if (b) {\n    b = {};\n    for (var e = 0; e < c.length; e++) b["$" + c[e]] = !0;\n    for (c = 0; c < a.length; c++) e = b.hasOwnProperty("$" + a[c].value), a[c].selected !== e && (a[c].selected = e), e && d && (a[c].defaultSelected = !0);\n  } else {\n    c = "" + Sa(c);\n    b = null;\n    for (e = 0; e < a.length; e++) {\n      if (a[e].value === c) {\n        a[e].selected = !0;\n        d && (a[e].defaultSelected = !0);\n        return;\n      }\n      null !== b || a[e].disabled || (b = a[e]);\n    }\n    null !== b && (b.selected = !0);\n  }\n}\nfunction gb(a, b) {\n  if (null != b.dangerouslySetInnerHTML) throw Error(p(91));\n  return A({}, b, {\n    value: void 0,\n    defaultValue: void 0,\n    children: "" + a._wrapperState.initialValue\n  });\n}\nfunction hb(a, b) {\n  var c = b.value;\n  if (null == c) {\n    c = b.children;\n    b = b.defaultValue;\n    if (null != c) {\n      if (null != b) throw Error(p(92));\n      if (eb(c)) {\n        if (1 < c.length) throw Error(p(93));\n        c = c[0];\n      }\n      b = c;\n    }\n    null == b && (b = "");\n    c = b;\n  }\n  a._wrapperState = {\n    initialValue: Sa(c)\n  };\n}\nfunction ib(a, b) {\n  var c = Sa(b.value),\n    d = Sa(b.defaultValue);\n  null != c && (c = "" + c, c !== a.value && (a.value = c), null == b.defaultValue && a.defaultValue !== c && (a.defaultValue = c));\n  null != d && (a.defaultValue = "" + d);\n}\nfunction jb(a) {\n  var b = a.textContent;\n  b === a._wrapperState.initialValue && "" !== b && null !== b && (a.value = b);\n}\nfunction kb(a) {\n  switch (a) {\n    case "svg":\n      return "http://www.w3.org/2000/svg";\n    case "math":\n      return "http://www.w3.org/1998/Math/MathML";\n    default:\n      return "http://www.w3.org/1999/xhtml";\n  }\n}\nfunction lb(a, b) {\n  return null == a || "http://www.w3.org/1999/xhtml" === a ? kb(b) : "http://www.w3.org/2000/svg" === a && "foreignObject" === b ? "http://www.w3.org/1999/xhtml" : a;\n}\nvar mb,\n  nb = function (a) {\n    return "undefined" !== typeof MSApp && MSApp.execUnsafeLocalFunction ? function (b, c, d, e) {\n      MSApp.execUnsafeLocalFunction(function () {\n        return a(b, c, d, e);\n      });\n    } : a;\n  }(function (a, b) {\n    if ("http://www.w3.org/2000/svg" !== a.namespaceURI || "innerHTML" in a) a.innerHTML = b;else {\n      mb = mb || document.createElement("div");\n      mb.innerHTML = "<svg>" + b.valueOf().toString() + "</svg>";\n      for (b = mb.firstChild; a.firstChild;) a.removeChild(a.firstChild);\n      for (; b.firstChild;) a.appendChild(b.firstChild);\n    }\n  });\nfunction ob(a, b) {\n  if (b) {\n    var c = a.firstChild;\n    if (c && c === a.lastChild && 3 === c.nodeType) {\n      c.nodeValue = b;\n      return;\n    }\n  }\n  a.textContent = b;\n}\nvar pb = {\n    animationIterationCount: !0,\n    aspectRatio: !0,\n    borderImageOutset: !0,\n    borderImageSlice: !0,\n    borderImageWidth: !0,\n    boxFlex: !0,\n    boxFlexGroup: !0,\n    boxOrdinalGroup: !0,\n    columnCount: !0,\n    columns: !0,\n    flex: !0,\n    flexGrow: !0,\n    flexPositive: !0,\n    flexShrink: !0,\n    flexNegative: !0,\n    flexOrder: !0,\n    gridArea: !0,\n    gridRow: !0,\n    gridRowEnd: !0,\n    gridRowSpan: !0,\n    gridRowStart: !0,\n    gridColumn: !0,\n    gridColumnEnd: !0,\n    gridColumnSpan: !0,\n    gridColumnStart: !0,\n    fontWeight: !0,\n    lineClamp: !0,\n    lineHeight: !0,\n    opacity: !0,\n    order: !0,\n    orphans: !0,\n    tabSize: !0,\n    widows: !0,\n    zIndex: !0,\n    zoom: !0,\n    fillOpacity: !0,\n    floodOpacity: !0,\n    stopOpacity: !0,\n    strokeDasharray: !0,\n    strokeDashoffset: !0,\n    strokeMiterlimit: !0,\n    strokeOpacity: !0,\n    strokeWidth: !0\n  },\n  qb = ["Webkit", "ms", "Moz", "O"];\nObject.keys(pb).forEach(function (a) {\n  qb.forEach(function (b) {\n    b = b + a.charAt(0).toUpperCase() + a.substring(1);\n    pb[b] = pb[a];\n  });\n});\nfunction rb(a, b, c) {\n  return null == b || "boolean" === typeof b || "" === b ? "" : c || "number" !== typeof b || 0 === b || pb.hasOwnProperty(a) && pb[a] ? ("" + b).trim() : b + "px";\n}\nfunction sb(a, b) {\n  a = a.style;\n  for (var c in b) if (b.hasOwnProperty(c)) {\n    var d = 0 === c.indexOf("--"),\n      e = rb(c, b[c], d);\n    "float" === c && (c = "cssFloat");\n    d ? a.setProperty(c, e) : a[c] = e;\n  }\n}\nvar tb = A({\n  menuitem: !0\n}, {\n  area: !0,\n  base: !0,\n  br: !0,\n  col: !0,\n  embed: !0,\n  hr: !0,\n  img: !0,\n  input: !0,\n  keygen: !0,\n  link: !0,\n  meta: !0,\n  param: !0,\n  source: !0,\n  track: !0,\n  wbr: !0\n});\nfunction ub(a, b) {\n  if (b) {\n    if (tb[a] && (null != b.children || null != b.dangerouslySetInnerHTML)) throw Error(p(137, a));\n    if (null != b.dangerouslySetInnerHTML) {\n      if (null != b.children) throw Error(p(60));\n      if ("object" !== typeof b.dangerouslySetInnerHTML || !("__html" in b.dangerouslySetInnerHTML)) throw Error(p(61));\n    }\n    if (null != b.style && "object" !== typeof b.style) throw Error(p(62));\n  }\n}\nfunction vb(a, b) {\n  if (-1 === a.indexOf("-")) return "string" === typeof b.is;\n  switch (a) {\n    case "annotation-xml":\n    case "color-profile":\n    case "font-face":\n    case "font-face-src":\n    case "font-face-uri":\n    case "font-face-format":\n    case "font-face-name":\n    case "missing-glyph":\n      return !1;\n    default:\n      return !0;\n  }\n}\nvar wb = null;\nfunction xb(a) {\n  a = a.target || a.srcElement || window;\n  a.correspondingUseElement && (a = a.correspondingUseElement);\n  return 3 === a.nodeType ? a.parentNode : a;\n}\nvar yb = null,\n  zb = null,\n  Ab = null;\nfunction Bb(a) {\n  if (a = Cb(a)) {\n    if ("function" !== typeof yb) throw Error(p(280));\n    var b = a.stateNode;\n    b && (b = Db(b), yb(a.stateNode, a.type, b));\n  }\n}\nfunction Eb(a) {\n  zb ? Ab ? Ab.push(a) : Ab = [a] : zb = a;\n}\nfunction Fb() {\n  if (zb) {\n    var a = zb,\n      b = Ab;\n    Ab = zb = null;\n    Bb(a);\n    if (b) for (a = 0; a < b.length; a++) Bb(b[a]);\n  }\n}\nfunction Gb(a, b) {\n  return a(b);\n}\nfunction Hb() {}\nvar Ib = !1;\nfunction Jb(a, b, c) {\n  if (Ib) return a(b, c);\n  Ib = !0;\n  try {\n    return Gb(a, b, c);\n  } finally {\n    if (Ib = !1, null !== zb || null !== Ab) Hb(), Fb();\n  }\n}\nfunction Kb(a, b) {\n  var c = a.stateNode;\n  if (null === c) return null;\n  var d = Db(c);\n  if (null === d) return null;\n  c = d[b];\n  a: switch (b) {\n    case "onClick":\n    case "onClickCapture":\n    case "onDoubleClick":\n    case "onDoubleClickCapture":\n    case "onMouseDown":\n    case "onMouseDownCapture":\n    case "onMouseMove":\n    case "onMouseMoveCapture":\n    case "onMouseUp":\n    case "onMouseUpCapture":\n    case "onMouseEnter":\n      (d = !d.disabled) || (a = a.type, d = !("button" === a || "input" === a || "select" === a || "textarea" === a));\n      a = !d;\n      break a;\n    default:\n      a = !1;\n  }\n  if (a) return null;\n  if (c && "function" !== typeof c) throw Error(p(231, b, typeof c));\n  return c;\n}\nvar Lb = !1;\nif (ia) try {\n  var Mb = {};\n  Object.defineProperty(Mb, "passive", {\n    get: function () {\n      Lb = !0;\n    }\n  });\n  window.addEventListener("test", Mb, Mb);\n  window.removeEventListener("test", Mb, Mb);\n} catch (a) {\n  Lb = !1;\n}\nfunction Nb(a, b, c, d, e, f, g, h, k) {\n  var l = Array.prototype.slice.call(arguments, 3);\n  try {\n    b.apply(c, l);\n  } catch (m) {\n    this.onError(m);\n  }\n}\nvar Ob = !1,\n  Pb = null,\n  Qb = !1,\n  Rb = null,\n  Sb = {\n    onError: function (a) {\n      Ob = !0;\n      Pb = a;\n    }\n  };\nfunction Tb(a, b, c, d, e, f, g, h, k) {\n  Ob = !1;\n  Pb = null;\n  Nb.apply(Sb, arguments);\n}\nfunction Ub(a, b, c, d, e, f, g, h, k) {\n  Tb.apply(this, arguments);\n  if (Ob) {\n    if (Ob) {\n      var l = Pb;\n      Ob = !1;\n      Pb = null;\n    } else throw Error(p(198));\n    Qb || (Qb = !0, Rb = l);\n  }\n}\nfunction Vb(a) {\n  var b = a,\n    c = a;\n  if (a.alternate) for (; b.return;) b = b.return;else {\n    a = b;\n    do b = a, 0 !== (b.flags & 4098) && (c = b.return), a = b.return; while (a);\n  }\n  return 3 === b.tag ? c : null;\n}\nfunction Wb(a) {\n  if (13 === a.tag) {\n    var b = a.memoizedState;\n    null === b && (a = a.alternate, null !== a && (b = a.memoizedState));\n    if (null !== b) return b.dehydrated;\n  }\n  return null;\n}\nfunction Xb(a) {\n  if (Vb(a) !== a) throw Error(p(188));\n}\nfunction Yb(a) {\n  var b = a.alternate;\n  if (!b) {\n    b = Vb(a);\n    if (null === b) throw Error(p(188));\n    return b !== a ? null : a;\n  }\n  for (var c = a, d = b;;) {\n    var e = c.return;\n    if (null === e) break;\n    var f = e.alternate;\n    if (null === f) {\n      d = e.return;\n      if (null !== d) {\n        c = d;\n        continue;\n      }\n      break;\n    }\n    if (e.child === f.child) {\n      for (f = e.child; f;) {\n        if (f === c) return Xb(e), a;\n        if (f === d) return Xb(e), b;\n        f = f.sibling;\n      }\n      throw Error(p(188));\n    }\n    if (c.return !== d.return) c = e, d = f;else {\n      for (var g = !1, h = e.child; h;) {\n        if (h === c) {\n          g = !0;\n          c = e;\n          d = f;\n          break;\n        }\n        if (h === d) {\n          g = !0;\n          d = e;\n          c = f;\n          break;\n        }\n        h = h.sibling;\n      }\n      if (!g) {\n        for (h = f.child; h;) {\n          if (h === c) {\n            g = !0;\n            c = f;\n            d = e;\n            break;\n          }\n          if (h === d) {\n            g = !0;\n            d = f;\n            c = e;\n            break;\n          }\n          h = h.sibling;\n        }\n        if (!g) throw Error(p(189));\n      }\n    }\n    if (c.alternate !== d) throw Error(p(190));\n  }\n  if (3 !== c.tag) throw Error(p(188));\n  return c.stateNode.current === c ? a : b;\n}\nfunction Zb(a) {\n  a = Yb(a);\n  return null !== a ? $b(a) : null;\n}\nfunction $b(a) {\n  if (5 === a.tag || 6 === a.tag) return a;\n  for (a = a.child; null !== a;) {\n    var b = $b(a);\n    if (null !== b) return b;\n    a = a.sibling;\n  }\n  return null;\n}\nvar ac = ca.unstable_scheduleCallback,\n  bc = ca.unstable_cancelCallback,\n  cc = ca.unstable_shouldYield,\n  dc = ca.unstable_requestPaint,\n  B = ca.unstable_now,\n  ec = ca.unstable_getCurrentPriorityLevel,\n  fc = ca.unstable_ImmediatePriority,\n  gc = ca.unstable_UserBlockingPriority,\n  hc = ca.unstable_NormalPriority,\n  ic = ca.unstable_LowPriority,\n  jc = ca.unstable_IdlePriority,\n  kc = null,\n  lc = null;\nfunction mc(a) {\n  if (lc && "function" === typeof lc.onCommitFiberRoot) try {\n    lc.onCommitFiberRoot(kc, a, void 0, 128 === (a.current.flags & 128));\n  } catch (b) {}\n}\nvar oc = Math.clz32 ? Math.clz32 : nc,\n  pc = Math.log,\n  qc = Math.LN2;\nfunction nc(a) {\n  a >>>= 0;\n  return 0 === a ? 32 : 31 - (pc(a) / qc | 0) | 0;\n}\nvar rc = 64,\n  sc = 4194304;\nfunction tc(a) {\n  switch (a & -a) {\n    case 1:\n      return 1;\n    case 2:\n      return 2;\n    case 4:\n      return 4;\n    case 8:\n      return 8;\n    case 16:\n      return 16;\n    case 32:\n      return 32;\n    case 64:\n    case 128:\n    case 256:\n    case 512:\n    case 1024:\n    case 2048:\n    case 4096:\n    case 8192:\n    case 16384:\n    case 32768:\n    case 65536:\n    case 131072:\n    case 262144:\n    case 524288:\n    case 1048576:\n    case 2097152:\n      return a & 4194240;\n    case 4194304:\n    case 8388608:\n    case 16777216:\n    case 33554432:\n    case 67108864:\n      return a & 130023424;\n    case 134217728:\n      return 134217728;\n    case 268435456:\n      return 268435456;\n    case 536870912:\n      return 536870912;\n    case 1073741824:\n      return 1073741824;\n    default:\n      return a;\n  }\n}\nfunction uc(a, b) {\n  var c = a.pendingLanes;\n  if (0 === c) return 0;\n  var d = 0,\n    e = a.suspendedLanes,\n    f = a.pingedLanes,\n    g = c & 268435455;\n  if (0 !== g) {\n    var h = g & ~e;\n    0 !== h ? d = tc(h) : (f &= g, 0 !== f && (d = tc(f)));\n  } else g = c & ~e, 0 !== g ? d = tc(g) : 0 !== f && (d = tc(f));\n  if (0 === d) return 0;\n  if (0 !== b && b !== d && 0 === (b & e) && (e = d & -d, f = b & -b, e >= f || 16 === e && 0 !== (f & 4194240))) return b;\n  0 !== (d & 4) && (d |= c & 16);\n  b = a.entangledLanes;\n  if (0 !== b) for (a = a.entanglements, b &= d; 0 < b;) c = 31 - oc(b), e = 1 << c, d |= a[c], b &= ~e;\n  return d;\n}\nfunction vc(a, b) {\n  switch (a) {\n    case 1:\n    case 2:\n    case 4:\n      return b + 250;\n    case 8:\n    case 16:\n    case 32:\n    case 64:\n    case 128:\n    case 256:\n    case 512:\n    case 1024:\n    case 2048:\n    case 4096:\n    case 8192:\n    case 16384:\n    case 32768:\n    case 65536:\n    case 131072:\n    case 262144:\n    case 524288:\n    case 1048576:\n    case 2097152:\n      return b + 5E3;\n    case 4194304:\n    case 8388608:\n    case 16777216:\n    case 33554432:\n    case 67108864:\n      return -1;\n    case 134217728:\n    case 268435456:\n    case 536870912:\n    case 1073741824:\n      return -1;\n    default:\n      return -1;\n  }\n}\nfunction wc(a, b) {\n  for (var c = a.suspendedLanes, d = a.pingedLanes, e = a.expirationTimes, f = a.pendingLanes; 0 < f;) {\n    var g = 31 - oc(f),\n      h = 1 << g,\n      k = e[g];\n    if (-1 === k) {\n      if (0 === (h & c) || 0 !== (h & d)) e[g] = vc(h, b);\n    } else k <= b && (a.expiredLanes |= h);\n    f &= ~h;\n  }\n}\nfunction xc(a) {\n  a = a.pendingLanes & -1073741825;\n  return 0 !== a ? a : a & 1073741824 ? 1073741824 : 0;\n}\nfunction yc() {\n  var a = rc;\n  rc <<= 1;\n  0 === (rc & 4194240) && (rc = 64);\n  return a;\n}\nfunction zc(a) {\n  for (var b = [], c = 0; 31 > c; c++) b.push(a);\n  return b;\n}\nfunction Ac(a, b, c) {\n  a.pendingLanes |= b;\n  536870912 !== b && (a.suspendedLanes = 0, a.pingedLanes = 0);\n  a = a.eventTimes;\n  b = 31 - oc(b);\n  a[b] = c;\n}\nfunction Bc(a, b) {\n  var c = a.pendingLanes & ~b;\n  a.pendingLanes = b;\n  a.suspendedLanes = 0;\n  a.pingedLanes = 0;\n  a.expiredLanes &= b;\n  a.mutableReadLanes &= b;\n  a.entangledLanes &= b;\n  b = a.entanglements;\n  var d = a.eventTimes;\n  for (a = a.expirationTimes; 0 < c;) {\n    var e = 31 - oc(c),\n      f = 1 << e;\n    b[e] = 0;\n    d[e] = -1;\n    a[e] = -1;\n    c &= ~f;\n  }\n}\nfunction Cc(a, b) {\n  var c = a.entangledLanes |= b;\n  for (a = a.entanglements; c;) {\n    var d = 31 - oc(c),\n      e = 1 << d;\n    e & b | a[d] & b && (a[d] |= b);\n    c &= ~e;\n  }\n}\nvar C = 0;\nfunction Dc(a) {\n  a &= -a;\n  return 1 < a ? 4 < a ? 0 !== (a & 268435455) ? 16 : 536870912 : 4 : 1;\n}\nvar Ec,\n  Fc,\n  Gc,\n  Hc,\n  Ic,\n  Jc = !1,\n  Kc = [],\n  Lc = null,\n  Mc = null,\n  Nc = null,\n  Oc = new Map(),\n  Pc = new Map(),\n  Qc = [],\n  Rc = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");\nfunction Sc(a, b) {\n  switch (a) {\n    case "focusin":\n    case "focusout":\n      Lc = null;\n      break;\n    case "dragenter":\n    case "dragleave":\n      Mc = null;\n      break;\n    case "mouseover":\n    case "mouseout":\n      Nc = null;\n      break;\n    case "pointerover":\n    case "pointerout":\n      Oc.delete(b.pointerId);\n      break;\n    case "gotpointercapture":\n    case "lostpointercapture":\n      Pc.delete(b.pointerId);\n  }\n}\nfunction Tc(a, b, c, d, e, f) {\n  if (null === a || a.nativeEvent !== f) return a = {\n    blockedOn: b,\n    domEventName: c,\n    eventSystemFlags: d,\n    nativeEvent: f,\n    targetContainers: [e]\n  }, null !== b && (b = Cb(b), null !== b && Fc(b)), a;\n  a.eventSystemFlags |= d;\n  b = a.targetContainers;\n  null !== e && -1 === b.indexOf(e) && b.push(e);\n  return a;\n}\nfunction Uc(a, b, c, d, e) {\n  switch (b) {\n    case "focusin":\n      return Lc = Tc(Lc, a, b, c, d, e), !0;\n    case "dragenter":\n      return Mc = Tc(Mc, a, b, c, d, e), !0;\n    case "mouseover":\n      return Nc = Tc(Nc, a, b, c, d, e), !0;\n    case "pointerover":\n      var f = e.pointerId;\n      Oc.set(f, Tc(Oc.get(f) || null, a, b, c, d, e));\n      return !0;\n    case "gotpointercapture":\n      return f = e.pointerId, Pc.set(f, Tc(Pc.get(f) || null, a, b, c, d, e)), !0;\n  }\n  return !1;\n}\nfunction Vc(a) {\n  var b = Wc(a.target);\n  if (null !== b) {\n    var c = Vb(b);\n    if (null !== c) if (b = c.tag, 13 === b) {\n      if (b = Wb(c), null !== b) {\n        a.blockedOn = b;\n        Ic(a.priority, function () {\n          Gc(c);\n        });\n        return;\n      }\n    } else if (3 === b && c.stateNode.current.memoizedState.isDehydrated) {\n      a.blockedOn = 3 === c.tag ? c.stateNode.containerInfo : null;\n      return;\n    }\n  }\n  a.blockedOn = null;\n}\nfunction Xc(a) {\n  if (null !== a.blockedOn) return !1;\n  for (var b = a.targetContainers; 0 < b.length;) {\n    var c = Yc(a.domEventName, a.eventSystemFlags, b[0], a.nativeEvent);\n    if (null === c) {\n      c = a.nativeEvent;\n      var d = new c.constructor(c.type, c);\n      wb = d;\n      c.target.dispatchEvent(d);\n      wb = null;\n    } else return b = Cb(c), null !== b && Fc(b), a.blockedOn = c, !1;\n    b.shift();\n  }\n  return !0;\n}\nfunction Zc(a, b, c) {\n  Xc(a) && c.delete(b);\n}\nfunction $c() {\n  Jc = !1;\n  null !== Lc && Xc(Lc) && (Lc = null);\n  null !== Mc && Xc(Mc) && (Mc = null);\n  null !== Nc && Xc(Nc) && (Nc = null);\n  Oc.forEach(Zc);\n  Pc.forEach(Zc);\n}\nfunction ad(a, b) {\n  a.blockedOn === b && (a.blockedOn = null, Jc || (Jc = !0, ca.unstable_scheduleCallback(ca.unstable_NormalPriority, $c)));\n}\nfunction bd(a) {\n  function b(b) {\n    return ad(b, a);\n  }\n  if (0 < Kc.length) {\n    ad(Kc[0], a);\n    for (var c = 1; c < Kc.length; c++) {\n      var d = Kc[c];\n      d.blockedOn === a && (d.blockedOn = null);\n    }\n  }\n  null !== Lc && ad(Lc, a);\n  null !== Mc && ad(Mc, a);\n  null !== Nc && ad(Nc, a);\n  Oc.forEach(b);\n  Pc.forEach(b);\n  for (c = 0; c < Qc.length; c++) d = Qc[c], d.blockedOn === a && (d.blockedOn = null);\n  for (; 0 < Qc.length && (c = Qc[0], null === c.blockedOn);) Vc(c), null === c.blockedOn && Qc.shift();\n}\nvar cd = ua.ReactCurrentBatchConfig,\n  dd = !0;\nfunction ed(a, b, c, d) {\n  var e = C,\n    f = cd.transition;\n  cd.transition = null;\n  try {\n    C = 1, fd(a, b, c, d);\n  } finally {\n    C = e, cd.transition = f;\n  }\n}\nfunction gd(a, b, c, d) {\n  var e = C,\n    f = cd.transition;\n  cd.transition = null;\n  try {\n    C = 4, fd(a, b, c, d);\n  } finally {\n    C = e, cd.transition = f;\n  }\n}\nfunction fd(a, b, c, d) {\n  if (dd) {\n    var e = Yc(a, b, c, d);\n    if (null === e) hd(a, b, d, id, c), Sc(a, d);else if (Uc(e, a, b, c, d)) d.stopPropagation();else if (Sc(a, d), b & 4 && -1 < Rc.indexOf(a)) {\n      for (; null !== e;) {\n        var f = Cb(e);\n        null !== f && Ec(f);\n        f = Yc(a, b, c, d);\n        null === f && hd(a, b, d, id, c);\n        if (f === e) break;\n        e = f;\n      }\n      null !== e && d.stopPropagation();\n    } else hd(a, b, d, null, c);\n  }\n}\nvar id = null;\nfunction Yc(a, b, c, d) {\n  id = null;\n  a = xb(d);\n  a = Wc(a);\n  if (null !== a) if (b = Vb(a), null === b) a = null;else if (c = b.tag, 13 === c) {\n    a = Wb(b);\n    if (null !== a) return a;\n    a = null;\n  } else if (3 === c) {\n    if (b.stateNode.current.memoizedState.isDehydrated) return 3 === b.tag ? b.stateNode.containerInfo : null;\n    a = null;\n  } else b !== a && (a = null);\n  id = a;\n  return null;\n}\nfunction jd(a) {\n  switch (a) {\n    case "cancel":\n    case "click":\n    case "close":\n    case "contextmenu":\n    case "copy":\n    case "cut":\n    case "auxclick":\n    case "dblclick":\n    case "dragend":\n    case "dragstart":\n    case "drop":\n    case "focusin":\n    case "focusout":\n    case "input":\n    case "invalid":\n    case "keydown":\n    case "keypress":\n    case "keyup":\n    case "mousedown":\n    case "mouseup":\n    case "paste":\n    case "pause":\n    case "play":\n    case "pointercancel":\n    case "pointerdown":\n    case "pointerup":\n    case "ratechange":\n    case "reset":\n    case "resize":\n    case "seeked":\n    case "submit":\n    case "touchcancel":\n    case "touchend":\n    case "touchstart":\n    case "volumechange":\n    case "change":\n    case "selectionchange":\n    case "textInput":\n    case "compositionstart":\n    case "compositionend":\n    case "compositionupdate":\n    case "beforeblur":\n    case "afterblur":\n    case "beforeinput":\n    case "blur":\n    case "fullscreenchange":\n    case "focus":\n    case "hashchange":\n    case "popstate":\n    case "select":\n    case "selectstart":\n      return 1;\n    case "drag":\n    case "dragenter":\n    case "dragexit":\n    case "dragleave":\n    case "dragover":\n    case "mousemove":\n    case "mouseout":\n    case "mouseover":\n    case "pointermove":\n    case "pointerout":\n    case "pointerover":\n    case "scroll":\n    case "toggle":\n    case "touchmove":\n    case "wheel":\n    case "mouseenter":\n    case "mouseleave":\n    case "pointerenter":\n    case "pointerleave":\n      return 4;\n    case "message":\n      switch (ec()) {\n        case fc:\n          return 1;\n        case gc:\n          return 4;\n        case hc:\n        case ic:\n          return 16;\n        case jc:\n          return 536870912;\n        default:\n          return 16;\n      }\n    default:\n      return 16;\n  }\n}\nvar kd = null,\n  ld = null,\n  md = null;\nfunction nd() {\n  if (md) return md;\n  var a,\n    b = ld,\n    c = b.length,\n    d,\n    e = "value" in kd ? kd.value : kd.textContent,\n    f = e.length;\n  for (a = 0; a < c && b[a] === e[a]; a++);\n  var g = c - a;\n  for (d = 1; d <= g && b[c - d] === e[f - d]; d++);\n  return md = e.slice(a, 1 < d ? 1 - d : void 0);\n}\nfunction od(a) {\n  var b = a.keyCode;\n  "charCode" in a ? (a = a.charCode, 0 === a && 13 === b && (a = 13)) : a = b;\n  10 === a && (a = 13);\n  return 32 <= a || 13 === a ? a : 0;\n}\nfunction pd() {\n  return !0;\n}\nfunction qd() {\n  return !1;\n}\nfunction rd(a) {\n  function b(b, d, e, f, g) {\n    this._reactName = b;\n    this._targetInst = e;\n    this.type = d;\n    this.nativeEvent = f;\n    this.target = g;\n    this.currentTarget = null;\n    for (var c in a) a.hasOwnProperty(c) && (b = a[c], this[c] = b ? b(f) : f[c]);\n    this.isDefaultPrevented = (null != f.defaultPrevented ? f.defaultPrevented : !1 === f.returnValue) ? pd : qd;\n    this.isPropagationStopped = qd;\n    return this;\n  }\n  A(b.prototype, {\n    preventDefault: function () {\n      this.defaultPrevented = !0;\n      var a = this.nativeEvent;\n      a && (a.preventDefault ? a.preventDefault() : "unknown" !== typeof a.returnValue && (a.returnValue = !1), this.isDefaultPrevented = pd);\n    },\n    stopPropagation: function () {\n      var a = this.nativeEvent;\n      a && (a.stopPropagation ? a.stopPropagation() : "unknown" !== typeof a.cancelBubble && (a.cancelBubble = !0), this.isPropagationStopped = pd);\n    },\n    persist: function () {},\n    isPersistent: pd\n  });\n  return b;\n}\nvar sd = {\n    eventPhase: 0,\n    bubbles: 0,\n    cancelable: 0,\n    timeStamp: function (a) {\n      return a.timeStamp || Date.now();\n    },\n    defaultPrevented: 0,\n    isTrusted: 0\n  },\n  td = rd(sd),\n  ud = A({}, sd, {\n    view: 0,\n    detail: 0\n  }),\n  vd = rd(ud),\n  wd,\n  xd,\n  yd,\n  Ad = A({}, ud, {\n    screenX: 0,\n    screenY: 0,\n    clientX: 0,\n    clientY: 0,\n    pageX: 0,\n    pageY: 0,\n    ctrlKey: 0,\n    shiftKey: 0,\n    altKey: 0,\n    metaKey: 0,\n    getModifierState: zd,\n    button: 0,\n    buttons: 0,\n    relatedTarget: function (a) {\n      return void 0 === a.relatedTarget ? a.fromElement === a.srcElement ? a.toElement : a.fromElement : a.relatedTarget;\n    },\n    movementX: function (a) {\n      if ("movementX" in a) return a.movementX;\n      a !== yd && (yd && "mousemove" === a.type ? (wd = a.screenX - yd.screenX, xd = a.screenY - yd.screenY) : xd = wd = 0, yd = a);\n      return wd;\n    },\n    movementY: function (a) {\n      return "movementY" in a ? a.movementY : xd;\n    }\n  }),\n  Bd = rd(Ad),\n  Cd = A({}, Ad, {\n    dataTransfer: 0\n  }),\n  Dd = rd(Cd),\n  Ed = A({}, ud, {\n    relatedTarget: 0\n  }),\n  Fd = rd(Ed),\n  Gd = A({}, sd, {\n    animationName: 0,\n    elapsedTime: 0,\n    pseudoElement: 0\n  }),\n  Hd = rd(Gd),\n  Id = A({}, sd, {\n    clipboardData: function (a) {\n      return "clipboardData" in a ? a.clipboardData : window.clipboardData;\n    }\n  }),\n  Jd = rd(Id),\n  Kd = A({}, sd, {\n    data: 0\n  }),\n  Ld = rd(Kd),\n  Md = {\n    Esc: "Escape",\n    Spacebar: " ",\n    Left: "ArrowLeft",\n    Up: "ArrowUp",\n    Right: "ArrowRight",\n    Down: "ArrowDown",\n    Del: "Delete",\n    Win: "OS",\n    Menu: "ContextMenu",\n    Apps: "ContextMenu",\n    Scroll: "ScrollLock",\n    MozPrintableKey: "Unidentified"\n  },\n  Nd = {\n    8: "Backspace",\n    9: "Tab",\n    12: "Clear",\n    13: "Enter",\n    16: "Shift",\n    17: "Control",\n    18: "Alt",\n    19: "Pause",\n    20: "CapsLock",\n    27: "Escape",\n    32: " ",\n    33: "PageUp",\n    34: "PageDown",\n    35: "End",\n    36: "Home",\n    37: "ArrowLeft",\n    38: "ArrowUp",\n    39: "ArrowRight",\n    40: "ArrowDown",\n    45: "Insert",\n    46: "Delete",\n    112: "F1",\n    113: "F2",\n    114: "F3",\n    115: "F4",\n    116: "F5",\n    117: "F6",\n    118: "F7",\n    119: "F8",\n    120: "F9",\n    121: "F10",\n    122: "F11",\n    123: "F12",\n    144: "NumLock",\n    145: "ScrollLock",\n    224: "Meta"\n  },\n  Od = {\n    Alt: "altKey",\n    Control: "ctrlKey",\n    Meta: "metaKey",\n    Shift: "shiftKey"\n  };\nfunction Pd(a) {\n  var b = this.nativeEvent;\n  return b.getModifierState ? b.getModifierState(a) : (a = Od[a]) ? !!b[a] : !1;\n}\nfunction zd() {\n  return Pd;\n}\nvar Qd = A({}, ud, {\n    key: function (a) {\n      if (a.key) {\n        var b = Md[a.key] || a.key;\n        if ("Unidentified" !== b) return b;\n      }\n      return "keypress" === a.type ? (a = od(a), 13 === a ? "Enter" : String.fromCharCode(a)) : "keydown" === a.type || "keyup" === a.type ? Nd[a.keyCode] || "Unidentified" : "";\n    },\n    code: 0,\n    location: 0,\n    ctrlKey: 0,\n    shiftKey: 0,\n    altKey: 0,\n    metaKey: 0,\n    repeat: 0,\n    locale: 0,\n    getModifierState: zd,\n    charCode: function (a) {\n      return "keypress" === a.type ? od(a) : 0;\n    },\n    keyCode: function (a) {\n      return "keydown" === a.type || "keyup" === a.type ? a.keyCode : 0;\n    },\n    which: function (a) {\n      return "keypress" === a.type ? od(a) : "keydown" === a.type || "keyup" === a.type ? a.keyCode : 0;\n    }\n  }),\n  Rd = rd(Qd),\n  Sd = A({}, Ad, {\n    pointerId: 0,\n    width: 0,\n    height: 0,\n    pressure: 0,\n    tangentialPressure: 0,\n    tiltX: 0,\n    tiltY: 0,\n    twist: 0,\n    pointerType: 0,\n    isPrimary: 0\n  }),\n  Td = rd(Sd),\n  Ud = A({}, ud, {\n    touches: 0,\n    targetTouches: 0,\n    changedTouches: 0,\n    altKey: 0,\n    metaKey: 0,\n    ctrlKey: 0,\n    shiftKey: 0,\n    getModifierState: zd\n  }),\n  Vd = rd(Ud),\n  Wd = A({}, sd, {\n    propertyName: 0,\n    elapsedTime: 0,\n    pseudoElement: 0\n  }),\n  Xd = rd(Wd),\n  Yd = A({}, Ad, {\n    deltaX: function (a) {\n      return "deltaX" in a ? a.deltaX : "wheelDeltaX" in a ? -a.wheelDeltaX : 0;\n    },\n    deltaY: function (a) {\n      return "deltaY" in a ? a.deltaY : "wheelDeltaY" in a ? -a.wheelDeltaY : "wheelDelta" in a ? -a.wheelDelta : 0;\n    },\n    deltaZ: 0,\n    deltaMode: 0\n  }),\n  Zd = rd(Yd),\n  $d = [9, 13, 27, 32],\n  ae = ia && "CompositionEvent" in window,\n  be = null;\nia && "documentMode" in document && (be = document.documentMode);\nvar ce = ia && "TextEvent" in window && !be,\n  de = ia && (!ae || be && 8 < be && 11 >= be),\n  ee = String.fromCharCode(32),\n  fe = !1;\nfunction ge(a, b) {\n  switch (a) {\n    case "keyup":\n      return -1 !== $d.indexOf(b.keyCode);\n    case "keydown":\n      return 229 !== b.keyCode;\n    case "keypress":\n    case "mousedown":\n    case "focusout":\n      return !0;\n    default:\n      return !1;\n  }\n}\nfunction he(a) {\n  a = a.detail;\n  return "object" === typeof a && "data" in a ? a.data : null;\n}\nvar ie = !1;\nfunction je(a, b) {\n  switch (a) {\n    case "compositionend":\n      return he(b);\n    case "keypress":\n      if (32 !== b.which) return null;\n      fe = !0;\n      return ee;\n    case "textInput":\n      return a = b.data, a === ee && fe ? null : a;\n    default:\n      return null;\n  }\n}\nfunction ke(a, b) {\n  if (ie) return "compositionend" === a || !ae && ge(a, b) ? (a = nd(), md = ld = kd = null, ie = !1, a) : null;\n  switch (a) {\n    case "paste":\n      return null;\n    case "keypress":\n      if (!(b.ctrlKey || b.altKey || b.metaKey) || b.ctrlKey && b.altKey) {\n        if (b.char && 1 < b.char.length) return b.char;\n        if (b.which) return String.fromCharCode(b.which);\n      }\n      return null;\n    case "compositionend":\n      return de && "ko" !== b.locale ? null : b.data;\n    default:\n      return null;\n  }\n}\nvar le = {\n  color: !0,\n  date: !0,\n  datetime: !0,\n  "datetime-local": !0,\n  email: !0,\n  month: !0,\n  number: !0,\n  password: !0,\n  range: !0,\n  search: !0,\n  tel: !0,\n  text: !0,\n  time: !0,\n  url: !0,\n  week: !0\n};\nfunction me(a) {\n  var b = a && a.nodeName && a.nodeName.toLowerCase();\n  return "input" === b ? !!le[a.type] : "textarea" === b ? !0 : !1;\n}\nfunction ne(a, b, c, d) {\n  Eb(d);\n  b = oe(b, "onChange");\n  0 < b.length && (c = new td("onChange", "change", null, c, d), a.push({\n    event: c,\n    listeners: b\n  }));\n}\nvar pe = null,\n  qe = null;\nfunction re(a) {\n  se(a, 0);\n}\nfunction te(a) {\n  var b = ue(a);\n  if (Wa(b)) return a;\n}\nfunction ve(a, b) {\n  if ("change" === a) return b;\n}\nvar we = !1;\nif (ia) {\n  var xe;\n  if (ia) {\n    var ye = ("oninput" in document);\n    if (!ye) {\n      var ze = document.createElement("div");\n      ze.setAttribute("oninput", "return;");\n      ye = "function" === typeof ze.oninput;\n    }\n    xe = ye;\n  } else xe = !1;\n  we = xe && (!document.documentMode || 9 < document.documentMode);\n}\nfunction Ae() {\n  pe && (pe.detachEvent("onpropertychange", Be), qe = pe = null);\n}\nfunction Be(a) {\n  if ("value" === a.propertyName && te(qe)) {\n    var b = [];\n    ne(b, qe, a, xb(a));\n    Jb(re, b);\n  }\n}\nfunction Ce(a, b, c) {\n  "focusin" === a ? (Ae(), pe = b, qe = c, pe.attachEvent("onpropertychange", Be)) : "focusout" === a && Ae();\n}\nfunction De(a) {\n  if ("selectionchange" === a || "keyup" === a || "keydown" === a) return te(qe);\n}\nfunction Ee(a, b) {\n  if ("click" === a) return te(b);\n}\nfunction Fe(a, b) {\n  if ("input" === a || "change" === a) return te(b);\n}\nfunction Ge(a, b) {\n  return a === b && (0 !== a || 1 / a === 1 / b) || a !== a && b !== b;\n}\nvar He = "function" === typeof Object.is ? Object.is : Ge;\nfunction Ie(a, b) {\n  if (He(a, b)) return !0;\n  if ("object" !== typeof a || null === a || "object" !== typeof b || null === b) return !1;\n  var c = Object.keys(a),\n    d = Object.keys(b);\n  if (c.length !== d.length) return !1;\n  for (d = 0; d < c.length; d++) {\n    var e = c[d];\n    if (!ja.call(b, e) || !He(a[e], b[e])) return !1;\n  }\n  return !0;\n}\nfunction Je(a) {\n  for (; a && a.firstChild;) a = a.firstChild;\n  return a;\n}\nfunction Ke(a, b) {\n  var c = Je(a);\n  a = 0;\n  for (var d; c;) {\n    if (3 === c.nodeType) {\n      d = a + c.textContent.length;\n      if (a <= b && d >= b) return {\n        node: c,\n        offset: b - a\n      };\n      a = d;\n    }\n    a: {\n      for (; c;) {\n        if (c.nextSibling) {\n          c = c.nextSibling;\n          break a;\n        }\n        c = c.parentNode;\n      }\n      c = void 0;\n    }\n    c = Je(c);\n  }\n}\nfunction Le(a, b) {\n  return a && b ? a === b ? !0 : a && 3 === a.nodeType ? !1 : b && 3 === b.nodeType ? Le(a, b.parentNode) : "contains" in a ? a.contains(b) : a.compareDocumentPosition ? !!(a.compareDocumentPosition(b) & 16) : !1 : !1;\n}\nfunction Me() {\n  for (var a = window, b = Xa(); b instanceof a.HTMLIFrameElement;) {\n    try {\n      var c = "string" === typeof b.contentWindow.location.href;\n    } catch (d) {\n      c = !1;\n    }\n    if (c) a = b.contentWindow;else break;\n    b = Xa(a.document);\n  }\n  return b;\n}\nfunction Ne(a) {\n  var b = a && a.nodeName && a.nodeName.toLowerCase();\n  return b && ("input" === b && ("text" === a.type || "search" === a.type || "tel" === a.type || "url" === a.type || "password" === a.type) || "textarea" === b || "true" === a.contentEditable);\n}\nfunction Oe(a) {\n  var b = Me(),\n    c = a.focusedElem,\n    d = a.selectionRange;\n  if (b !== c && c && c.ownerDocument && Le(c.ownerDocument.documentElement, c)) {\n    if (null !== d && Ne(c)) if (b = d.start, a = d.end, void 0 === a && (a = b), "selectionStart" in c) c.selectionStart = b, c.selectionEnd = Math.min(a, c.value.length);else if (a = (b = c.ownerDocument || document) && b.defaultView || window, a.getSelection) {\n      a = a.getSelection();\n      var e = c.textContent.length,\n        f = Math.min(d.start, e);\n      d = void 0 === d.end ? f : Math.min(d.end, e);\n      !a.extend && f > d && (e = d, d = f, f = e);\n      e = Ke(c, f);\n      var g = Ke(c, d);\n      e && g && (1 !== a.rangeCount || a.anchorNode !== e.node || a.anchorOffset !== e.offset || a.focusNode !== g.node || a.focusOffset !== g.offset) && (b = b.createRange(), b.setStart(e.node, e.offset), a.removeAllRanges(), f > d ? (a.addRange(b), a.extend(g.node, g.offset)) : (b.setEnd(g.node, g.offset), a.addRange(b)));\n    }\n    b = [];\n    for (a = c; a = a.parentNode;) 1 === a.nodeType && b.push({\n      element: a,\n      left: a.scrollLeft,\n      top: a.scrollTop\n    });\n    "function" === typeof c.focus && c.focus();\n    for (c = 0; c < b.length; c++) a = b[c], a.element.scrollLeft = a.left, a.element.scrollTop = a.top;\n  }\n}\nvar Pe = ia && "documentMode" in document && 11 >= document.documentMode,\n  Qe = null,\n  Re = null,\n  Se = null,\n  Te = !1;\nfunction Ue(a, b, c) {\n  var d = c.window === c ? c.document : 9 === c.nodeType ? c : c.ownerDocument;\n  Te || null == Qe || Qe !== Xa(d) || (d = Qe, "selectionStart" in d && Ne(d) ? d = {\n    start: d.selectionStart,\n    end: d.selectionEnd\n  } : (d = (d.ownerDocument && d.ownerDocument.defaultView || window).getSelection(), d = {\n    anchorNode: d.anchorNode,\n    anchorOffset: d.anchorOffset,\n    focusNode: d.focusNode,\n    focusOffset: d.focusOffset\n  }), Se && Ie(Se, d) || (Se = d, d = oe(Re, "onSelect"), 0 < d.length && (b = new td("onSelect", "select", null, b, c), a.push({\n    event: b,\n    listeners: d\n  }), b.target = Qe)));\n}\nfunction Ve(a, b) {\n  var c = {};\n  c[a.toLowerCase()] = b.toLowerCase();\n  c["Webkit" + a] = "webkit" + b;\n  c["Moz" + a] = "moz" + b;\n  return c;\n}\nvar We = {\n    animationend: Ve("Animation", "AnimationEnd"),\n    animationiteration: Ve("Animation", "AnimationIteration"),\n    animationstart: Ve("Animation", "AnimationStart"),\n    transitionend: Ve("Transition", "TransitionEnd")\n  },\n  Xe = {},\n  Ye = {};\nia && (Ye = document.createElement("div").style, "AnimationEvent" in window || (delete We.animationend.animation, delete We.animationiteration.animation, delete We.animationstart.animation), "TransitionEvent" in window || delete We.transitionend.transition);\nfunction Ze(a) {\n  if (Xe[a]) return Xe[a];\n  if (!We[a]) return a;\n  var b = We[a],\n    c;\n  for (c in b) if (b.hasOwnProperty(c) && c in Ye) return Xe[a] = b[c];\n  return a;\n}\nvar $e = Ze("animationend"),\n  af = Ze("animationiteration"),\n  bf = Ze("animationstart"),\n  cf = Ze("transitionend"),\n  df = new Map(),\n  ef = "abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");\nfunction ff(a, b) {\n  df.set(a, b);\n  fa(b, [a]);\n}\nfor (var gf = 0; gf < ef.length; gf++) {\n  var hf = ef[gf],\n    jf = hf.toLowerCase(),\n    kf = hf[0].toUpperCase() + hf.slice(1);\n  ff(jf, "on" + kf);\n}\nff($e, "onAnimationEnd");\nff(af, "onAnimationIteration");\nff(bf, "onAnimationStart");\nff("dblclick", "onDoubleClick");\nff("focusin", "onFocus");\nff("focusout", "onBlur");\nff(cf, "onTransitionEnd");\nha("onMouseEnter", ["mouseout", "mouseover"]);\nha("onMouseLeave", ["mouseout", "mouseover"]);\nha("onPointerEnter", ["pointerout", "pointerover"]);\nha("onPointerLeave", ["pointerout", "pointerover"]);\nfa("onChange", "change click focusin focusout input keydown keyup selectionchange".split(" "));\nfa("onSelect", "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));\nfa("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]);\nfa("onCompositionEnd", "compositionend focusout keydown keypress keyup mousedown".split(" "));\nfa("onCompositionStart", "compositionstart focusout keydown keypress keyup mousedown".split(" "));\nfa("onCompositionUpdate", "compositionupdate focusout keydown keypress keyup mousedown".split(" "));\nvar lf = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),\n  mf = new Set("cancel close invalid load scroll toggle".split(" ").concat(lf));\nfunction nf(a, b, c) {\n  var d = a.type || "unknown-event";\n  a.currentTarget = c;\n  Ub(d, b, void 0, a);\n  a.currentTarget = null;\n}\nfunction se(a, b) {\n  b = 0 !== (b & 4);\n  for (var c = 0; c < a.length; c++) {\n    var d = a[c],\n      e = d.event;\n    d = d.listeners;\n    a: {\n      var f = void 0;\n      if (b) for (var g = d.length - 1; 0 <= g; g--) {\n        var h = d[g],\n          k = h.instance,\n          l = h.currentTarget;\n        h = h.listener;\n        if (k !== f && e.isPropagationStopped()) break a;\n        nf(e, h, l);\n        f = k;\n      } else for (g = 0; g < d.length; g++) {\n        h = d[g];\n        k = h.instance;\n        l = h.currentTarget;\n        h = h.listener;\n        if (k !== f && e.isPropagationStopped()) break a;\n        nf(e, h, l);\n        f = k;\n      }\n    }\n  }\n  if (Qb) throw a = Rb, Qb = !1, Rb = null, a;\n}\nfunction D(a, b) {\n  var c = b[of];\n  void 0 === c && (c = b[of] = new Set());\n  var d = a + "__bubble";\n  c.has(d) || (pf(b, a, 2, !1), c.add(d));\n}\nfunction qf(a, b, c) {\n  var d = 0;\n  b && (d |= 4);\n  pf(c, a, d, b);\n}\nvar rf = "_reactListening" + Math.random().toString(36).slice(2);\nfunction sf(a) {\n  if (!a[rf]) {\n    a[rf] = !0;\n    da.forEach(function (b) {\n      "selectionchange" !== b && (mf.has(b) || qf(b, !1, a), qf(b, !0, a));\n    });\n    var b = 9 === a.nodeType ? a : a.ownerDocument;\n    null === b || b[rf] || (b[rf] = !0, qf("selectionchange", !1, b));\n  }\n}\nfunction pf(a, b, c, d) {\n  switch (jd(b)) {\n    case 1:\n      var e = ed;\n      break;\n    case 4:\n      e = gd;\n      break;\n    default:\n      e = fd;\n  }\n  c = e.bind(null, b, c, a);\n  e = void 0;\n  !Lb || "touchstart" !== b && "touchmove" !== b && "wheel" !== b || (e = !0);\n  d ? void 0 !== e ? a.addEventListener(b, c, {\n    capture: !0,\n    passive: e\n  }) : a.addEventListener(b, c, !0) : void 0 !== e ? a.addEventListener(b, c, {\n    passive: e\n  }) : a.addEventListener(b, c, !1);\n}\nfunction hd(a, b, c, d, e) {\n  var f = d;\n  if (0 === (b & 1) && 0 === (b & 2) && null !== d) a: for (;;) {\n    if (null === d) return;\n    var g = d.tag;\n    if (3 === g || 4 === g) {\n      var h = d.stateNode.containerInfo;\n      if (h === e || 8 === h.nodeType && h.parentNode === e) break;\n      if (4 === g) for (g = d.return; null !== g;) {\n        var k = g.tag;\n        if (3 === k || 4 === k) if (k = g.stateNode.containerInfo, k === e || 8 === k.nodeType && k.parentNode === e) return;\n        g = g.return;\n      }\n      for (; null !== h;) {\n        g = Wc(h);\n        if (null === g) return;\n        k = g.tag;\n        if (5 === k || 6 === k) {\n          d = f = g;\n          continue a;\n        }\n        h = h.parentNode;\n      }\n    }\n    d = d.return;\n  }\n  Jb(function () {\n    var d = f,\n      e = xb(c),\n      g = [];\n    a: {\n      var h = df.get(a);\n      if (void 0 !== h) {\n        var k = td,\n          n = a;\n        switch (a) {\n          case "keypress":\n            if (0 === od(c)) break a;\n          case "keydown":\n          case "keyup":\n            k = Rd;\n            break;\n          case "focusin":\n            n = "focus";\n            k = Fd;\n            break;\n          case "focusout":\n            n = "blur";\n            k = Fd;\n            break;\n          case "beforeblur":\n          case "afterblur":\n            k = Fd;\n            break;\n          case "click":\n            if (2 === c.button) break a;\n          case "auxclick":\n          case "dblclick":\n          case "mousedown":\n          case "mousemove":\n          case "mouseup":\n          case "mouseout":\n          case "mouseover":\n          case "contextmenu":\n            k = Bd;\n            break;\n          case "drag":\n          case "dragend":\n          case "dragenter":\n          case "dragexit":\n          case "dragleave":\n          case "dragover":\n          case "dragstart":\n          case "drop":\n            k = Dd;\n            break;\n          case "touchcancel":\n          case "touchend":\n          case "touchmove":\n          case "touchstart":\n            k = Vd;\n            break;\n          case $e:\n          case af:\n          case bf:\n            k = Hd;\n            break;\n          case cf:\n            k = Xd;\n            break;\n          case "scroll":\n            k = vd;\n            break;\n          case "wheel":\n            k = Zd;\n            break;\n          case "copy":\n          case "cut":\n          case "paste":\n            k = Jd;\n            break;\n          case "gotpointercapture":\n          case "lostpointercapture":\n          case "pointercancel":\n          case "pointerdown":\n          case "pointermove":\n          case "pointerout":\n          case "pointerover":\n          case "pointerup":\n            k = Td;\n        }\n        var t = 0 !== (b & 4),\n          J = !t && "scroll" === a,\n          x = t ? null !== h ? h + "Capture" : null : h;\n        t = [];\n        for (var w = d, u; null !== w;) {\n          u = w;\n          var F = u.stateNode;\n          5 === u.tag && null !== F && (u = F, null !== x && (F = Kb(w, x), null != F && t.push(tf(w, F, u))));\n          if (J) break;\n          w = w.return;\n        }\n        0 < t.length && (h = new k(h, n, null, c, e), g.push({\n          event: h,\n          listeners: t\n        }));\n      }\n    }\n    if (0 === (b & 7)) {\n      a: {\n        h = "mouseover" === a || "pointerover" === a;\n        k = "mouseout" === a || "pointerout" === a;\n        if (h && c !== wb && (n = c.relatedTarget || c.fromElement) && (Wc(n) || n[uf])) break a;\n        if (k || h) {\n          h = e.window === e ? e : (h = e.ownerDocument) ? h.defaultView || h.parentWindow : window;\n          if (k) {\n            if (n = c.relatedTarget || c.toElement, k = d, n = n ? Wc(n) : null, null !== n && (J = Vb(n), n !== J || 5 !== n.tag && 6 !== n.tag)) n = null;\n          } else k = null, n = d;\n          if (k !== n) {\n            t = Bd;\n            F = "onMouseLeave";\n            x = "onMouseEnter";\n            w = "mouse";\n            if ("pointerout" === a || "pointerover" === a) t = Td, F = "onPointerLeave", x = "onPointerEnter", w = "pointer";\n            J = null == k ? h : ue(k);\n            u = null == n ? h : ue(n);\n            h = new t(F, w + "leave", k, c, e);\n            h.target = J;\n            h.relatedTarget = u;\n            F = null;\n            Wc(e) === d && (t = new t(x, w + "enter", n, c, e), t.target = u, t.relatedTarget = J, F = t);\n            J = F;\n            if (k && n) b: {\n              t = k;\n              x = n;\n              w = 0;\n              for (u = t; u; u = vf(u)) w++;\n              u = 0;\n              for (F = x; F; F = vf(F)) u++;\n              for (; 0 < w - u;) t = vf(t), w--;\n              for (; 0 < u - w;) x = vf(x), u--;\n              for (; w--;) {\n                if (t === x || null !== x && t === x.alternate) break b;\n                t = vf(t);\n                x = vf(x);\n              }\n              t = null;\n            } else t = null;\n            null !== k && wf(g, h, k, t, !1);\n            null !== n && null !== J && wf(g, J, n, t, !0);\n          }\n        }\n      }\n      a: {\n        h = d ? ue(d) : window;\n        k = h.nodeName && h.nodeName.toLowerCase();\n        if ("select" === k || "input" === k && "file" === h.type) var na = ve;else if (me(h)) {\n          if (we) na = Fe;else {\n            na = De;\n            var xa = Ce;\n          }\n        } else (k = h.nodeName) && "input" === k.toLowerCase() && ("checkbox" === h.type || "radio" === h.type) && (na = Ee);\n        if (na && (na = na(a, d))) {\n          ne(g, na, c, e);\n          break a;\n        }\n        xa && xa(a, h, d);\n        "focusout" === a && (xa = h._wrapperState) && xa.controlled && "number" === h.type && cb(h, "number", h.value);\n      }\n      xa = d ? ue(d) : window;\n      switch (a) {\n        case "focusin":\n          if (me(xa) || "true" === xa.contentEditable) Qe = xa, Re = d, Se = null;\n          break;\n        case "focusout":\n          Se = Re = Qe = null;\n          break;\n        case "mousedown":\n          Te = !0;\n          break;\n        case "contextmenu":\n        case "mouseup":\n        case "dragend":\n          Te = !1;\n          Ue(g, c, e);\n          break;\n        case "selectionchange":\n          if (Pe) break;\n        case "keydown":\n        case "keyup":\n          Ue(g, c, e);\n      }\n      var $a;\n      if (ae) b: {\n        switch (a) {\n          case "compositionstart":\n            var ba = "onCompositionStart";\n            break b;\n          case "compositionend":\n            ba = "onCompositionEnd";\n            break b;\n          case "compositionupdate":\n            ba = "onCompositionUpdate";\n            break b;\n        }\n        ba = void 0;\n      } else ie ? ge(a, c) && (ba = "onCompositionEnd") : "keydown" === a && 229 === c.keyCode && (ba = "onCompositionStart");\n      ba && (de && "ko" !== c.locale && (ie || "onCompositionStart" !== ba ? "onCompositionEnd" === ba && ie && ($a = nd()) : (kd = e, ld = "value" in kd ? kd.value : kd.textContent, ie = !0)), xa = oe(d, ba), 0 < xa.length && (ba = new Ld(ba, a, null, c, e), g.push({\n        event: ba,\n        listeners: xa\n      }), $a ? ba.data = $a : ($a = he(c), null !== $a && (ba.data = $a))));\n      if ($a = ce ? je(a, c) : ke(a, c)) d = oe(d, "onBeforeInput"), 0 < d.length && (e = new Ld("onBeforeInput", "beforeinput", null, c, e), g.push({\n        event: e,\n        listeners: d\n      }), e.data = $a);\n    }\n    se(g, b);\n  });\n}\nfunction tf(a, b, c) {\n  return {\n    instance: a,\n    listener: b,\n    currentTarget: c\n  };\n}\nfunction oe(a, b) {\n  for (var c = b + "Capture", d = []; null !== a;) {\n    var e = a,\n      f = e.stateNode;\n    5 === e.tag && null !== f && (e = f, f = Kb(a, c), null != f && d.unshift(tf(a, f, e)), f = Kb(a, b), null != f && d.push(tf(a, f, e)));\n    a = a.return;\n  }\n  return d;\n}\nfunction vf(a) {\n  if (null === a) return null;\n  do a = a.return; while (a && 5 !== a.tag);\n  return a ? a : null;\n}\nfunction wf(a, b, c, d, e) {\n  for (var f = b._reactName, g = []; null !== c && c !== d;) {\n    var h = c,\n      k = h.alternate,\n      l = h.stateNode;\n    if (null !== k && k === d) break;\n    5 === h.tag && null !== l && (h = l, e ? (k = Kb(c, f), null != k && g.unshift(tf(c, k, h))) : e || (k = Kb(c, f), null != k && g.push(tf(c, k, h))));\n    c = c.return;\n  }\n  0 !== g.length && a.push({\n    event: b,\n    listeners: g\n  });\n}\nvar xf = /\\r\\n?/g,\n  yf = /\\u0000|\\uFFFD/g;\nfunction zf(a) {\n  return ("string" === typeof a ? a : "" + a).replace(xf, "\\n").replace(yf, "");\n}\nfunction Af(a, b, c) {\n  b = zf(b);\n  if (zf(a) !== b && c) throw Error(p(425));\n}\nfunction Bf() {}\nvar Cf = null,\n  Df = null;\nfunction Ef(a, b) {\n  return "textarea" === a || "noscript" === a || "string" === typeof b.children || "number" === typeof b.children || "object" === typeof b.dangerouslySetInnerHTML && null !== b.dangerouslySetInnerHTML && null != b.dangerouslySetInnerHTML.__html;\n}\nvar Ff = "function" === typeof setTimeout ? setTimeout : void 0,\n  Gf = "function" === typeof clearTimeout ? clearTimeout : void 0,\n  Hf = "function" === typeof Promise ? Promise : void 0,\n  Jf = "function" === typeof queueMicrotask ? queueMicrotask : "undefined" !== typeof Hf ? function (a) {\n    return Hf.resolve(null).then(a).catch(If);\n  } : Ff;\nfunction If(a) {\n  setTimeout(function () {\n    throw a;\n  });\n}\nfunction Kf(a, b) {\n  var c = b,\n    d = 0;\n  do {\n    var e = c.nextSibling;\n    a.removeChild(c);\n    if (e && 8 === e.nodeType) if (c = e.data, "/$" === c) {\n      if (0 === d) {\n        a.removeChild(e);\n        bd(b);\n        return;\n      }\n      d--;\n    } else "$" !== c && "$?" !== c && "$!" !== c || d++;\n    c = e;\n  } while (c);\n  bd(b);\n}\nfunction Lf(a) {\n  for (; null != a; a = a.nextSibling) {\n    var b = a.nodeType;\n    if (1 === b || 3 === b) break;\n    if (8 === b) {\n      b = a.data;\n      if ("$" === b || "$!" === b || "$?" === b) break;\n      if ("/$" === b) return null;\n    }\n  }\n  return a;\n}\nfunction Mf(a) {\n  a = a.previousSibling;\n  for (var b = 0; a;) {\n    if (8 === a.nodeType) {\n      var c = a.data;\n      if ("$" === c || "$!" === c || "$?" === c) {\n        if (0 === b) return a;\n        b--;\n      } else "/$" === c && b++;\n    }\n    a = a.previousSibling;\n  }\n  return null;\n}\nvar Nf = Math.random().toString(36).slice(2),\n  Of = "__reactFiber$" + Nf,\n  Pf = "__reactProps$" + Nf,\n  uf = "__reactContainer$" + Nf,\n  of = "__reactEvents$" + Nf,\n  Qf = "__reactListeners$" + Nf,\n  Rf = "__reactHandles$" + Nf;\nfunction Wc(a) {\n  var b = a[Of];\n  if (b) return b;\n  for (var c = a.parentNode; c;) {\n    if (b = c[uf] || c[Of]) {\n      c = b.alternate;\n      if (null !== b.child || null !== c && null !== c.child) for (a = Mf(a); null !== a;) {\n        if (c = a[Of]) return c;\n        a = Mf(a);\n      }\n      return b;\n    }\n    a = c;\n    c = a.parentNode;\n  }\n  return null;\n}\nfunction Cb(a) {\n  a = a[Of] || a[uf];\n  return !a || 5 !== a.tag && 6 !== a.tag && 13 !== a.tag && 3 !== a.tag ? null : a;\n}\nfunction ue(a) {\n  if (5 === a.tag || 6 === a.tag) return a.stateNode;\n  throw Error(p(33));\n}\nfunction Db(a) {\n  return a[Pf] || null;\n}\nvar Sf = [],\n  Tf = -1;\nfunction Uf(a) {\n  return {\n    current: a\n  };\n}\nfunction E(a) {\n  0 > Tf || (a.current = Sf[Tf], Sf[Tf] = null, Tf--);\n}\nfunction G(a, b) {\n  Tf++;\n  Sf[Tf] = a.current;\n  a.current = b;\n}\nvar Vf = {},\n  H = Uf(Vf),\n  Wf = Uf(!1),\n  Xf = Vf;\nfunction Yf(a, b) {\n  var c = a.type.contextTypes;\n  if (!c) return Vf;\n  var d = a.stateNode;\n  if (d && d.__reactInternalMemoizedUnmaskedChildContext === b) return d.__reactInternalMemoizedMaskedChildContext;\n  var e = {},\n    f;\n  for (f in c) e[f] = b[f];\n  d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = b, a.__reactInternalMemoizedMaskedChildContext = e);\n  return e;\n}\nfunction Zf(a) {\n  a = a.childContextTypes;\n  return null !== a && void 0 !== a;\n}\nfunction $f() {\n  E(Wf);\n  E(H);\n}\nfunction ag(a, b, c) {\n  if (H.current !== Vf) throw Error(p(168));\n  G(H, b);\n  G(Wf, c);\n}\nfunction bg(a, b, c) {\n  var d = a.stateNode;\n  b = b.childContextTypes;\n  if ("function" !== typeof d.getChildContext) return c;\n  d = d.getChildContext();\n  for (var e in d) if (!(e in b)) throw Error(p(108, Ra(a) || "Unknown", e));\n  return A({}, c, d);\n}\nfunction cg(a) {\n  a = (a = a.stateNode) && a.__reactInternalMemoizedMergedChildContext || Vf;\n  Xf = H.current;\n  G(H, a);\n  G(Wf, Wf.current);\n  return !0;\n}\nfunction dg(a, b, c) {\n  var d = a.stateNode;\n  if (!d) throw Error(p(169));\n  c ? (a = bg(a, b, Xf), d.__reactInternalMemoizedMergedChildContext = a, E(Wf), E(H), G(H, a)) : E(Wf);\n  G(Wf, c);\n}\nvar eg = null,\n  fg = !1,\n  gg = !1;\nfunction hg(a) {\n  null === eg ? eg = [a] : eg.push(a);\n}\nfunction ig(a) {\n  fg = !0;\n  hg(a);\n}\nfunction jg() {\n  if (!gg && null !== eg) {\n    gg = !0;\n    var a = 0,\n      b = C;\n    try {\n      var c = eg;\n      for (C = 1; a < c.length; a++) {\n        var d = c[a];\n        do d = d(!0); while (null !== d);\n      }\n      eg = null;\n      fg = !1;\n    } catch (e) {\n      throw null !== eg && (eg = eg.slice(a + 1)), ac(fc, jg), e;\n    } finally {\n      C = b, gg = !1;\n    }\n  }\n  return null;\n}\nvar kg = [],\n  lg = 0,\n  mg = null,\n  ng = 0,\n  og = [],\n  pg = 0,\n  qg = null,\n  rg = 1,\n  sg = "";\nfunction tg(a, b) {\n  kg[lg++] = ng;\n  kg[lg++] = mg;\n  mg = a;\n  ng = b;\n}\nfunction ug(a, b, c) {\n  og[pg++] = rg;\n  og[pg++] = sg;\n  og[pg++] = qg;\n  qg = a;\n  var d = rg;\n  a = sg;\n  var e = 32 - oc(d) - 1;\n  d &= ~(1 << e);\n  c += 1;\n  var f = 32 - oc(b) + e;\n  if (30 < f) {\n    var g = e - e % 5;\n    f = (d & (1 << g) - 1).toString(32);\n    d >>= g;\n    e -= g;\n    rg = 1 << 32 - oc(b) + e | c << e | d;\n    sg = f + a;\n  } else rg = 1 << f | c << e | d, sg = a;\n}\nfunction vg(a) {\n  null !== a.return && (tg(a, 1), ug(a, 1, 0));\n}\nfunction wg(a) {\n  for (; a === mg;) mg = kg[--lg], kg[lg] = null, ng = kg[--lg], kg[lg] = null;\n  for (; a === qg;) qg = og[--pg], og[pg] = null, sg = og[--pg], og[pg] = null, rg = og[--pg], og[pg] = null;\n}\nvar xg = null,\n  yg = null,\n  I = !1,\n  zg = null;\nfunction Ag(a, b) {\n  var c = Bg(5, null, null, 0);\n  c.elementType = "DELETED";\n  c.stateNode = b;\n  c.return = a;\n  b = a.deletions;\n  null === b ? (a.deletions = [c], a.flags |= 16) : b.push(c);\n}\nfunction Cg(a, b) {\n  switch (a.tag) {\n    case 5:\n      var c = a.type;\n      b = 1 !== b.nodeType || c.toLowerCase() !== b.nodeName.toLowerCase() ? null : b;\n      return null !== b ? (a.stateNode = b, xg = a, yg = Lf(b.firstChild), !0) : !1;\n    case 6:\n      return b = "" === a.pendingProps || 3 !== b.nodeType ? null : b, null !== b ? (a.stateNode = b, xg = a, yg = null, !0) : !1;\n    case 13:\n      return b = 8 !== b.nodeType ? null : b, null !== b ? (c = null !== qg ? {\n        id: rg,\n        overflow: sg\n      } : null, a.memoizedState = {\n        dehydrated: b,\n        treeContext: c,\n        retryLane: 1073741824\n      }, c = Bg(18, null, null, 0), c.stateNode = b, c.return = a, a.child = c, xg = a, yg = null, !0) : !1;\n    default:\n      return !1;\n  }\n}\nfunction Dg(a) {\n  return 0 !== (a.mode & 1) && 0 === (a.flags & 128);\n}\nfunction Eg(a) {\n  if (I) {\n    var b = yg;\n    if (b) {\n      var c = b;\n      if (!Cg(a, b)) {\n        if (Dg(a)) throw Error(p(418));\n        b = Lf(c.nextSibling);\n        var d = xg;\n        b && Cg(a, b) ? Ag(d, c) : (a.flags = a.flags & -4097 | 2, I = !1, xg = a);\n      }\n    } else {\n      if (Dg(a)) throw Error(p(418));\n      a.flags = a.flags & -4097 | 2;\n      I = !1;\n      xg = a;\n    }\n  }\n}\nfunction Fg(a) {\n  for (a = a.return; null !== a && 5 !== a.tag && 3 !== a.tag && 13 !== a.tag;) a = a.return;\n  xg = a;\n}\nfunction Gg(a) {\n  if (a !== xg) return !1;\n  if (!I) return Fg(a), I = !0, !1;\n  var b;\n  (b = 3 !== a.tag) && !(b = 5 !== a.tag) && (b = a.type, b = "head" !== b && "body" !== b && !Ef(a.type, a.memoizedProps));\n  if (b && (b = yg)) {\n    if (Dg(a)) throw Hg(), Error(p(418));\n    for (; b;) Ag(a, b), b = Lf(b.nextSibling);\n  }\n  Fg(a);\n  if (13 === a.tag) {\n    a = a.memoizedState;\n    a = null !== a ? a.dehydrated : null;\n    if (!a) throw Error(p(317));\n    a: {\n      a = a.nextSibling;\n      for (b = 0; a;) {\n        if (8 === a.nodeType) {\n          var c = a.data;\n          if ("/$" === c) {\n            if (0 === b) {\n              yg = Lf(a.nextSibling);\n              break a;\n            }\n            b--;\n          } else "$" !== c && "$!" !== c && "$?" !== c || b++;\n        }\n        a = a.nextSibling;\n      }\n      yg = null;\n    }\n  } else yg = xg ? Lf(a.stateNode.nextSibling) : null;\n  return !0;\n}\nfunction Hg() {\n  for (var a = yg; a;) a = Lf(a.nextSibling);\n}\nfunction Ig() {\n  yg = xg = null;\n  I = !1;\n}\nfunction Jg(a) {\n  null === zg ? zg = [a] : zg.push(a);\n}\nvar Kg = ua.ReactCurrentBatchConfig;\nfunction Lg(a, b) {\n  if (a && a.defaultProps) {\n    b = A({}, b);\n    a = a.defaultProps;\n    for (var c in a) void 0 === b[c] && (b[c] = a[c]);\n    return b;\n  }\n  return b;\n}\nvar Mg = Uf(null),\n  Ng = null,\n  Og = null,\n  Pg = null;\nfunction Qg() {\n  Pg = Og = Ng = null;\n}\nfunction Rg(a) {\n  var b = Mg.current;\n  E(Mg);\n  a._currentValue = b;\n}\nfunction Sg(a, b, c) {\n  for (; null !== a;) {\n    var d = a.alternate;\n    (a.childLanes & b) !== b ? (a.childLanes |= b, null !== d && (d.childLanes |= b)) : null !== d && (d.childLanes & b) !== b && (d.childLanes |= b);\n    if (a === c) break;\n    a = a.return;\n  }\n}\nfunction Tg(a, b) {\n  Ng = a;\n  Pg = Og = null;\n  a = a.dependencies;\n  null !== a && null !== a.firstContext && (0 !== (a.lanes & b) && (Ug = !0), a.firstContext = null);\n}\nfunction Vg(a) {\n  var b = a._currentValue;\n  if (Pg !== a) if (a = {\n    context: a,\n    memoizedValue: b,\n    next: null\n  }, null === Og) {\n    if (null === Ng) throw Error(p(308));\n    Og = a;\n    Ng.dependencies = {\n      lanes: 0,\n      firstContext: a\n    };\n  } else Og = Og.next = a;\n  return b;\n}\nvar Wg = null;\nfunction Xg(a) {\n  null === Wg ? Wg = [a] : Wg.push(a);\n}\nfunction Yg(a, b, c, d) {\n  var e = b.interleaved;\n  null === e ? (c.next = c, Xg(b)) : (c.next = e.next, e.next = c);\n  b.interleaved = c;\n  return Zg(a, d);\n}\nfunction Zg(a, b) {\n  a.lanes |= b;\n  var c = a.alternate;\n  null !== c && (c.lanes |= b);\n  c = a;\n  for (a = a.return; null !== a;) a.childLanes |= b, c = a.alternate, null !== c && (c.childLanes |= b), c = a, a = a.return;\n  return 3 === c.tag ? c.stateNode : null;\n}\nvar $g = !1;\nfunction ah(a) {\n  a.updateQueue = {\n    baseState: a.memoizedState,\n    firstBaseUpdate: null,\n    lastBaseUpdate: null,\n    shared: {\n      pending: null,\n      interleaved: null,\n      lanes: 0\n    },\n    effects: null\n  };\n}\nfunction bh(a, b) {\n  a = a.updateQueue;\n  b.updateQueue === a && (b.updateQueue = {\n    baseState: a.baseState,\n    firstBaseUpdate: a.firstBaseUpdate,\n    lastBaseUpdate: a.lastBaseUpdate,\n    shared: a.shared,\n    effects: a.effects\n  });\n}\nfunction ch(a, b) {\n  return {\n    eventTime: a,\n    lane: b,\n    tag: 0,\n    payload: null,\n    callback: null,\n    next: null\n  };\n}\nfunction dh(a, b, c) {\n  var d = a.updateQueue;\n  if (null === d) return null;\n  d = d.shared;\n  if (0 !== (K & 2)) {\n    var e = d.pending;\n    null === e ? b.next = b : (b.next = e.next, e.next = b);\n    d.pending = b;\n    return Zg(a, c);\n  }\n  e = d.interleaved;\n  null === e ? (b.next = b, Xg(d)) : (b.next = e.next, e.next = b);\n  d.interleaved = b;\n  return Zg(a, c);\n}\nfunction eh(a, b, c) {\n  b = b.updateQueue;\n  if (null !== b && (b = b.shared, 0 !== (c & 4194240))) {\n    var d = b.lanes;\n    d &= a.pendingLanes;\n    c |= d;\n    b.lanes = c;\n    Cc(a, c);\n  }\n}\nfunction fh(a, b) {\n  var c = a.updateQueue,\n    d = a.alternate;\n  if (null !== d && (d = d.updateQueue, c === d)) {\n    var e = null,\n      f = null;\n    c = c.firstBaseUpdate;\n    if (null !== c) {\n      do {\n        var g = {\n          eventTime: c.eventTime,\n          lane: c.lane,\n          tag: c.tag,\n          payload: c.payload,\n          callback: c.callback,\n          next: null\n        };\n        null === f ? e = f = g : f = f.next = g;\n        c = c.next;\n      } while (null !== c);\n      null === f ? e = f = b : f = f.next = b;\n    } else e = f = b;\n    c = {\n      baseState: d.baseState,\n      firstBaseUpdate: e,\n      lastBaseUpdate: f,\n      shared: d.shared,\n      effects: d.effects\n    };\n    a.updateQueue = c;\n    return;\n  }\n  a = c.lastBaseUpdate;\n  null === a ? c.firstBaseUpdate = b : a.next = b;\n  c.lastBaseUpdate = b;\n}\nfunction gh(a, b, c, d) {\n  var e = a.updateQueue;\n  $g = !1;\n  var f = e.firstBaseUpdate,\n    g = e.lastBaseUpdate,\n    h = e.shared.pending;\n  if (null !== h) {\n    e.shared.pending = null;\n    var k = h,\n      l = k.next;\n    k.next = null;\n    null === g ? f = l : g.next = l;\n    g = k;\n    var m = a.alternate;\n    null !== m && (m = m.updateQueue, h = m.lastBaseUpdate, h !== g && (null === h ? m.firstBaseUpdate = l : h.next = l, m.lastBaseUpdate = k));\n  }\n  if (null !== f) {\n    var q = e.baseState;\n    g = 0;\n    m = l = k = null;\n    h = f;\n    do {\n      var r = h.lane,\n        y = h.eventTime;\n      if ((d & r) === r) {\n        null !== m && (m = m.next = {\n          eventTime: y,\n          lane: 0,\n          tag: h.tag,\n          payload: h.payload,\n          callback: h.callback,\n          next: null\n        });\n        a: {\n          var n = a,\n            t = h;\n          r = b;\n          y = c;\n          switch (t.tag) {\n            case 1:\n              n = t.payload;\n              if ("function" === typeof n) {\n                q = n.call(y, q, r);\n                break a;\n              }\n              q = n;\n              break a;\n            case 3:\n              n.flags = n.flags & -65537 | 128;\n            case 0:\n              n = t.payload;\n              r = "function" === typeof n ? n.call(y, q, r) : n;\n              if (null === r || void 0 === r) break a;\n              q = A({}, q, r);\n              break a;\n            case 2:\n              $g = !0;\n          }\n        }\n        null !== h.callback && 0 !== h.lane && (a.flags |= 64, r = e.effects, null === r ? e.effects = [h] : r.push(h));\n      } else y = {\n        eventTime: y,\n        lane: r,\n        tag: h.tag,\n        payload: h.payload,\n        callback: h.callback,\n        next: null\n      }, null === m ? (l = m = y, k = q) : m = m.next = y, g |= r;\n      h = h.next;\n      if (null === h) if (h = e.shared.pending, null === h) break;else r = h, h = r.next, r.next = null, e.lastBaseUpdate = r, e.shared.pending = null;\n    } while (1);\n    null === m && (k = q);\n    e.baseState = k;\n    e.firstBaseUpdate = l;\n    e.lastBaseUpdate = m;\n    b = e.shared.interleaved;\n    if (null !== b) {\n      e = b;\n      do g |= e.lane, e = e.next; while (e !== b);\n    } else null === f && (e.shared.lanes = 0);\n    hh |= g;\n    a.lanes = g;\n    a.memoizedState = q;\n  }\n}\nfunction ih(a, b, c) {\n  a = b.effects;\n  b.effects = null;\n  if (null !== a) for (b = 0; b < a.length; b++) {\n    var d = a[b],\n      e = d.callback;\n    if (null !== e) {\n      d.callback = null;\n      d = c;\n      if ("function" !== typeof e) throw Error(p(191, e));\n      e.call(d);\n    }\n  }\n}\nvar jh = new aa.Component().refs;\nfunction kh(a, b, c, d) {\n  b = a.memoizedState;\n  c = c(d, b);\n  c = null === c || void 0 === c ? b : A({}, b, c);\n  a.memoizedState = c;\n  0 === a.lanes && (a.updateQueue.baseState = c);\n}\nvar nh = {\n  isMounted: function (a) {\n    return (a = a._reactInternals) ? Vb(a) === a : !1;\n  },\n  enqueueSetState: function (a, b, c) {\n    a = a._reactInternals;\n    var d = L(),\n      e = lh(a),\n      f = ch(d, e);\n    f.payload = b;\n    void 0 !== c && null !== c && (f.callback = c);\n    b = dh(a, f, e);\n    null !== b && (mh(b, a, e, d), eh(b, a, e));\n  },\n  enqueueReplaceState: function (a, b, c) {\n    a = a._reactInternals;\n    var d = L(),\n      e = lh(a),\n      f = ch(d, e);\n    f.tag = 1;\n    f.payload = b;\n    void 0 !== c && null !== c && (f.callback = c);\n    b = dh(a, f, e);\n    null !== b && (mh(b, a, e, d), eh(b, a, e));\n  },\n  enqueueForceUpdate: function (a, b) {\n    a = a._reactInternals;\n    var c = L(),\n      d = lh(a),\n      e = ch(c, d);\n    e.tag = 2;\n    void 0 !== b && null !== b && (e.callback = b);\n    b = dh(a, e, d);\n    null !== b && (mh(b, a, d, c), eh(b, a, d));\n  }\n};\nfunction oh(a, b, c, d, e, f, g) {\n  a = a.stateNode;\n  return "function" === typeof a.shouldComponentUpdate ? a.shouldComponentUpdate(d, f, g) : b.prototype && b.prototype.isPureReactComponent ? !Ie(c, d) || !Ie(e, f) : !0;\n}\nfunction ph(a, b, c) {\n  var d = !1,\n    e = Vf;\n  var f = b.contextType;\n  "object" === typeof f && null !== f ? f = Vg(f) : (e = Zf(b) ? Xf : H.current, d = b.contextTypes, f = (d = null !== d && void 0 !== d) ? Yf(a, e) : Vf);\n  b = new b(c, f);\n  a.memoizedState = null !== b.state && void 0 !== b.state ? b.state : null;\n  b.updater = nh;\n  a.stateNode = b;\n  b._reactInternals = a;\n  d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = e, a.__reactInternalMemoizedMaskedChildContext = f);\n  return b;\n}\nfunction qh(a, b, c, d) {\n  a = b.state;\n  "function" === typeof b.componentWillReceiveProps && b.componentWillReceiveProps(c, d);\n  "function" === typeof b.UNSAFE_componentWillReceiveProps && b.UNSAFE_componentWillReceiveProps(c, d);\n  b.state !== a && nh.enqueueReplaceState(b, b.state, null);\n}\nfunction rh(a, b, c, d) {\n  var e = a.stateNode;\n  e.props = c;\n  e.state = a.memoizedState;\n  e.refs = jh;\n  ah(a);\n  var f = b.contextType;\n  "object" === typeof f && null !== f ? e.context = Vg(f) : (f = Zf(b) ? Xf : H.current, e.context = Yf(a, f));\n  e.state = a.memoizedState;\n  f = b.getDerivedStateFromProps;\n  "function" === typeof f && (kh(a, b, f, c), e.state = a.memoizedState);\n  "function" === typeof b.getDerivedStateFromProps || "function" === typeof e.getSnapshotBeforeUpdate || "function" !== typeof e.UNSAFE_componentWillMount && "function" !== typeof e.componentWillMount || (b = e.state, "function" === typeof e.componentWillMount && e.componentWillMount(), "function" === typeof e.UNSAFE_componentWillMount && e.UNSAFE_componentWillMount(), b !== e.state && nh.enqueueReplaceState(e, e.state, null), gh(a, c, e, d), e.state = a.memoizedState);\n  "function" === typeof e.componentDidMount && (a.flags |= 4194308);\n}\nfunction sh(a, b, c) {\n  a = c.ref;\n  if (null !== a && "function" !== typeof a && "object" !== typeof a) {\n    if (c._owner) {\n      c = c._owner;\n      if (c) {\n        if (1 !== c.tag) throw Error(p(309));\n        var d = c.stateNode;\n      }\n      if (!d) throw Error(p(147, a));\n      var e = d,\n        f = "" + a;\n      if (null !== b && null !== b.ref && "function" === typeof b.ref && b.ref._stringRef === f) return b.ref;\n      b = function (a) {\n        var b = e.refs;\n        b === jh && (b = e.refs = {});\n        null === a ? delete b[f] : b[f] = a;\n      };\n      b._stringRef = f;\n      return b;\n    }\n    if ("string" !== typeof a) throw Error(p(284));\n    if (!c._owner) throw Error(p(290, a));\n  }\n  return a;\n}\nfunction th(a, b) {\n  a = Object.prototype.toString.call(b);\n  throw Error(p(31, "[object Object]" === a ? "object with keys {" + Object.keys(b).join(", ") + "}" : a));\n}\nfunction uh(a) {\n  var b = a._init;\n  return b(a._payload);\n}\nfunction vh(a) {\n  function b(b, c) {\n    if (a) {\n      var d = b.deletions;\n      null === d ? (b.deletions = [c], b.flags |= 16) : d.push(c);\n    }\n  }\n  function c(c, d) {\n    if (!a) return null;\n    for (; null !== d;) b(c, d), d = d.sibling;\n    return null;\n  }\n  function d(a, b) {\n    for (a = new Map(); null !== b;) null !== b.key ? a.set(b.key, b) : a.set(b.index, b), b = b.sibling;\n    return a;\n  }\n  function e(a, b) {\n    a = wh(a, b);\n    a.index = 0;\n    a.sibling = null;\n    return a;\n  }\n  function f(b, c, d) {\n    b.index = d;\n    if (!a) return b.flags |= 1048576, c;\n    d = b.alternate;\n    if (null !== d) return d = d.index, d < c ? (b.flags |= 2, c) : d;\n    b.flags |= 2;\n    return c;\n  }\n  function g(b) {\n    a && null === b.alternate && (b.flags |= 2);\n    return b;\n  }\n  function h(a, b, c, d) {\n    if (null === b || 6 !== b.tag) return b = xh(c, a.mode, d), b.return = a, b;\n    b = e(b, c);\n    b.return = a;\n    return b;\n  }\n  function k(a, b, c, d) {\n    var f = c.type;\n    if (f === ya) return m(a, b, c.props.children, d, c.key);\n    if (null !== b && (b.elementType === f || "object" === typeof f && null !== f && f.$$typeof === Ha && uh(f) === b.type)) return d = e(b, c.props), d.ref = sh(a, b, c), d.return = a, d;\n    d = yh(c.type, c.key, c.props, null, a.mode, d);\n    d.ref = sh(a, b, c);\n    d.return = a;\n    return d;\n  }\n  function l(a, b, c, d) {\n    if (null === b || 4 !== b.tag || b.stateNode.containerInfo !== c.containerInfo || b.stateNode.implementation !== c.implementation) return b = zh(c, a.mode, d), b.return = a, b;\n    b = e(b, c.children || []);\n    b.return = a;\n    return b;\n  }\n  function m(a, b, c, d, f) {\n    if (null === b || 7 !== b.tag) return b = Ah(c, a.mode, d, f), b.return = a, b;\n    b = e(b, c);\n    b.return = a;\n    return b;\n  }\n  function q(a, b, c) {\n    if ("string" === typeof b && "" !== b || "number" === typeof b) return b = xh("" + b, a.mode, c), b.return = a, b;\n    if ("object" === typeof b && null !== b) {\n      switch (b.$$typeof) {\n        case va:\n          return c = yh(b.type, b.key, b.props, null, a.mode, c), c.ref = sh(a, null, b), c.return = a, c;\n        case wa:\n          return b = zh(b, a.mode, c), b.return = a, b;\n        case Ha:\n          var d = b._init;\n          return q(a, d(b._payload), c);\n      }\n      if (eb(b) || Ka(b)) return b = Ah(b, a.mode, c, null), b.return = a, b;\n      th(a, b);\n    }\n    return null;\n  }\n  function r(a, b, c, d) {\n    var e = null !== b ? b.key : null;\n    if ("string" === typeof c && "" !== c || "number" === typeof c) return null !== e ? null : h(a, b, "" + c, d);\n    if ("object" === typeof c && null !== c) {\n      switch (c.$$typeof) {\n        case va:\n          return c.key === e ? k(a, b, c, d) : null;\n        case wa:\n          return c.key === e ? l(a, b, c, d) : null;\n        case Ha:\n          return e = c._init, r(a, b, e(c._payload), d);\n      }\n      if (eb(c) || Ka(c)) return null !== e ? null : m(a, b, c, d, null);\n      th(a, c);\n    }\n    return null;\n  }\n  function y(a, b, c, d, e) {\n    if ("string" === typeof d && "" !== d || "number" === typeof d) return a = a.get(c) || null, h(b, a, "" + d, e);\n    if ("object" === typeof d && null !== d) {\n      switch (d.$$typeof) {\n        case va:\n          return a = a.get(null === d.key ? c : d.key) || null, k(b, a, d, e);\n        case wa:\n          return a = a.get(null === d.key ? c : d.key) || null, l(b, a, d, e);\n        case Ha:\n          var f = d._init;\n          return y(a, b, c, f(d._payload), e);\n      }\n      if (eb(d) || Ka(d)) return a = a.get(c) || null, m(b, a, d, e, null);\n      th(b, d);\n    }\n    return null;\n  }\n  function n(e, g, h, k) {\n    for (var l = null, m = null, u = g, w = g = 0, x = null; null !== u && w < h.length; w++) {\n      u.index > w ? (x = u, u = null) : x = u.sibling;\n      var n = r(e, u, h[w], k);\n      if (null === n) {\n        null === u && (u = x);\n        break;\n      }\n      a && u && null === n.alternate && b(e, u);\n      g = f(n, g, w);\n      null === m ? l = n : m.sibling = n;\n      m = n;\n      u = x;\n    }\n    if (w === h.length) return c(e, u), I && tg(e, w), l;\n    if (null === u) {\n      for (; w < h.length; w++) u = q(e, h[w], k), null !== u && (g = f(u, g, w), null === m ? l = u : m.sibling = u, m = u);\n      I && tg(e, w);\n      return l;\n    }\n    for (u = d(e, u); w < h.length; w++) x = y(u, e, w, h[w], k), null !== x && (a && null !== x.alternate && u.delete(null === x.key ? w : x.key), g = f(x, g, w), null === m ? l = x : m.sibling = x, m = x);\n    a && u.forEach(function (a) {\n      return b(e, a);\n    });\n    I && tg(e, w);\n    return l;\n  }\n  function t(e, g, h, k) {\n    var l = Ka(h);\n    if ("function" !== typeof l) throw Error(p(150));\n    h = l.call(h);\n    if (null == h) throw Error(p(151));\n    for (var u = l = null, m = g, w = g = 0, x = null, n = h.next(); null !== m && !n.done; w++, n = h.next()) {\n      m.index > w ? (x = m, m = null) : x = m.sibling;\n      var t = r(e, m, n.value, k);\n      if (null === t) {\n        null === m && (m = x);\n        break;\n      }\n      a && m && null === t.alternate && b(e, m);\n      g = f(t, g, w);\n      null === u ? l = t : u.sibling = t;\n      u = t;\n      m = x;\n    }\n    if (n.done) return c(e, m), I && tg(e, w), l;\n    if (null === m) {\n      for (; !n.done; w++, n = h.next()) n = q(e, n.value, k), null !== n && (g = f(n, g, w), null === u ? l = n : u.sibling = n, u = n);\n      I && tg(e, w);\n      return l;\n    }\n    for (m = d(e, m); !n.done; w++, n = h.next()) n = y(m, e, w, n.value, k), null !== n && (a && null !== n.alternate && m.delete(null === n.key ? w : n.key), g = f(n, g, w), null === u ? l = n : u.sibling = n, u = n);\n    a && m.forEach(function (a) {\n      return b(e, a);\n    });\n    I && tg(e, w);\n    return l;\n  }\n  function J(a, d, f, h) {\n    "object" === typeof f && null !== f && f.type === ya && null === f.key && (f = f.props.children);\n    if ("object" === typeof f && null !== f) {\n      switch (f.$$typeof) {\n        case va:\n          a: {\n            for (var k = f.key, l = d; null !== l;) {\n              if (l.key === k) {\n                k = f.type;\n                if (k === ya) {\n                  if (7 === l.tag) {\n                    c(a, l.sibling);\n                    d = e(l, f.props.children);\n                    d.return = a;\n                    a = d;\n                    break a;\n                  }\n                } else if (l.elementType === k || "object" === typeof k && null !== k && k.$$typeof === Ha && uh(k) === l.type) {\n                  c(a, l.sibling);\n                  d = e(l, f.props);\n                  d.ref = sh(a, l, f);\n                  d.return = a;\n                  a = d;\n                  break a;\n                }\n                c(a, l);\n                break;\n              } else b(a, l);\n              l = l.sibling;\n            }\n            f.type === ya ? (d = Ah(f.props.children, a.mode, h, f.key), d.return = a, a = d) : (h = yh(f.type, f.key, f.props, null, a.mode, h), h.ref = sh(a, d, f), h.return = a, a = h);\n          }\n          return g(a);\n        case wa:\n          a: {\n            for (l = f.key; null !== d;) {\n              if (d.key === l) {\n                if (4 === d.tag && d.stateNode.containerInfo === f.containerInfo && d.stateNode.implementation === f.implementation) {\n                  c(a, d.sibling);\n                  d = e(d, f.children || []);\n                  d.return = a;\n                  a = d;\n                  break a;\n                } else {\n                  c(a, d);\n                  break;\n                }\n              } else b(a, d);\n              d = d.sibling;\n            }\n            d = zh(f, a.mode, h);\n            d.return = a;\n            a = d;\n          }\n          return g(a);\n        case Ha:\n          return l = f._init, J(a, d, l(f._payload), h);\n      }\n      if (eb(f)) return n(a, d, f, h);\n      if (Ka(f)) return t(a, d, f, h);\n      th(a, f);\n    }\n    return "string" === typeof f && "" !== f || "number" === typeof f ? (f = "" + f, null !== d && 6 === d.tag ? (c(a, d.sibling), d = e(d, f), d.return = a, a = d) : (c(a, d), d = xh(f, a.mode, h), d.return = a, a = d), g(a)) : c(a, d);\n  }\n  return J;\n}\nvar Bh = vh(!0),\n  Ch = vh(!1),\n  Dh = {},\n  Eh = Uf(Dh),\n  Fh = Uf(Dh),\n  Gh = Uf(Dh);\nfunction Hh(a) {\n  if (a === Dh) throw Error(p(174));\n  return a;\n}\nfunction Ih(a, b) {\n  G(Gh, b);\n  G(Fh, a);\n  G(Eh, Dh);\n  a = b.nodeType;\n  switch (a) {\n    case 9:\n    case 11:\n      b = (b = b.documentElement) ? b.namespaceURI : lb(null, "");\n      break;\n    default:\n      a = 8 === a ? b.parentNode : b, b = a.namespaceURI || null, a = a.tagName, b = lb(b, a);\n  }\n  E(Eh);\n  G(Eh, b);\n}\nfunction Jh() {\n  E(Eh);\n  E(Fh);\n  E(Gh);\n}\nfunction Kh(a) {\n  Hh(Gh.current);\n  var b = Hh(Eh.current);\n  var c = lb(b, a.type);\n  b !== c && (G(Fh, a), G(Eh, c));\n}\nfunction Lh(a) {\n  Fh.current === a && (E(Eh), E(Fh));\n}\nvar M = Uf(0);\nfunction Mh(a) {\n  for (var b = a; null !== b;) {\n    if (13 === b.tag) {\n      var c = b.memoizedState;\n      if (null !== c && (c = c.dehydrated, null === c || "$?" === c.data || "$!" === c.data)) return b;\n    } else if (19 === b.tag && void 0 !== b.memoizedProps.revealOrder) {\n      if (0 !== (b.flags & 128)) return b;\n    } else if (null !== b.child) {\n      b.child.return = b;\n      b = b.child;\n      continue;\n    }\n    if (b === a) break;\n    for (; null === b.sibling;) {\n      if (null === b.return || b.return === a) return null;\n      b = b.return;\n    }\n    b.sibling.return = b.return;\n    b = b.sibling;\n  }\n  return null;\n}\nvar Nh = [];\nfunction Oh() {\n  for (var a = 0; a < Nh.length; a++) Nh[a]._workInProgressVersionPrimary = null;\n  Nh.length = 0;\n}\nvar Ph = ua.ReactCurrentDispatcher,\n  Qh = ua.ReactCurrentBatchConfig,\n  Rh = 0,\n  N = null,\n  O = null,\n  P = null,\n  Sh = !1,\n  Th = !1,\n  Uh = 0,\n  Vh = 0;\nfunction Q() {\n  throw Error(p(321));\n}\nfunction Wh(a, b) {\n  if (null === b) return !1;\n  for (var c = 0; c < b.length && c < a.length; c++) if (!He(a[c], b[c])) return !1;\n  return !0;\n}\nfunction Xh(a, b, c, d, e, f) {\n  Rh = f;\n  N = b;\n  b.memoizedState = null;\n  b.updateQueue = null;\n  b.lanes = 0;\n  Ph.current = null === a || null === a.memoizedState ? Yh : Zh;\n  a = c(d, e);\n  if (Th) {\n    f = 0;\n    do {\n      Th = !1;\n      Uh = 0;\n      if (25 <= f) throw Error(p(301));\n      f += 1;\n      P = O = null;\n      b.updateQueue = null;\n      Ph.current = $h;\n      a = c(d, e);\n    } while (Th);\n  }\n  Ph.current = ai;\n  b = null !== O && null !== O.next;\n  Rh = 0;\n  P = O = N = null;\n  Sh = !1;\n  if (b) throw Error(p(300));\n  return a;\n}\nfunction bi() {\n  var a = 0 !== Uh;\n  Uh = 0;\n  return a;\n}\nfunction ci() {\n  var a = {\n    memoizedState: null,\n    baseState: null,\n    baseQueue: null,\n    queue: null,\n    next: null\n  };\n  null === P ? N.memoizedState = P = a : P = P.next = a;\n  return P;\n}\nfunction di() {\n  if (null === O) {\n    var a = N.alternate;\n    a = null !== a ? a.memoizedState : null;\n  } else a = O.next;\n  var b = null === P ? N.memoizedState : P.next;\n  if (null !== b) P = b, O = a;else {\n    if (null === a) throw Error(p(310));\n    O = a;\n    a = {\n      memoizedState: O.memoizedState,\n      baseState: O.baseState,\n      baseQueue: O.baseQueue,\n      queue: O.queue,\n      next: null\n    };\n    null === P ? N.memoizedState = P = a : P = P.next = a;\n  }\n  return P;\n}\nfunction ei(a, b) {\n  return "function" === typeof b ? b(a) : b;\n}\nfunction fi(a) {\n  var b = di(),\n    c = b.queue;\n  if (null === c) throw Error(p(311));\n  c.lastRenderedReducer = a;\n  var d = O,\n    e = d.baseQueue,\n    f = c.pending;\n  if (null !== f) {\n    if (null !== e) {\n      var g = e.next;\n      e.next = f.next;\n      f.next = g;\n    }\n    d.baseQueue = e = f;\n    c.pending = null;\n  }\n  if (null !== e) {\n    f = e.next;\n    d = d.baseState;\n    var h = g = null,\n      k = null,\n      l = f;\n    do {\n      var m = l.lane;\n      if ((Rh & m) === m) null !== k && (k = k.next = {\n        lane: 0,\n        action: l.action,\n        hasEagerState: l.hasEagerState,\n        eagerState: l.eagerState,\n        next: null\n      }), d = l.hasEagerState ? l.eagerState : a(d, l.action);else {\n        var q = {\n          lane: m,\n          action: l.action,\n          hasEagerState: l.hasEagerState,\n          eagerState: l.eagerState,\n          next: null\n        };\n        null === k ? (h = k = q, g = d) : k = k.next = q;\n        N.lanes |= m;\n        hh |= m;\n      }\n      l = l.next;\n    } while (null !== l && l !== f);\n    null === k ? g = d : k.next = h;\n    He(d, b.memoizedState) || (Ug = !0);\n    b.memoizedState = d;\n    b.baseState = g;\n    b.baseQueue = k;\n    c.lastRenderedState = d;\n  }\n  a = c.interleaved;\n  if (null !== a) {\n    e = a;\n    do f = e.lane, N.lanes |= f, hh |= f, e = e.next; while (e !== a);\n  } else null === e && (c.lanes = 0);\n  return [b.memoizedState, c.dispatch];\n}\nfunction gi(a) {\n  var b = di(),\n    c = b.queue;\n  if (null === c) throw Error(p(311));\n  c.lastRenderedReducer = a;\n  var d = c.dispatch,\n    e = c.pending,\n    f = b.memoizedState;\n  if (null !== e) {\n    c.pending = null;\n    var g = e = e.next;\n    do f = a(f, g.action), g = g.next; while (g !== e);\n    He(f, b.memoizedState) || (Ug = !0);\n    b.memoizedState = f;\n    null === b.baseQueue && (b.baseState = f);\n    c.lastRenderedState = f;\n  }\n  return [f, d];\n}\nfunction hi() {}\nfunction ii(a, b) {\n  var c = N,\n    d = di(),\n    e = b(),\n    f = !He(d.memoizedState, e);\n  f && (d.memoizedState = e, Ug = !0);\n  d = d.queue;\n  ji(ki.bind(null, c, d, a), [a]);\n  if (d.getSnapshot !== b || f || null !== P && P.memoizedState.tag & 1) {\n    c.flags |= 2048;\n    li(9, mi.bind(null, c, d, e, b), void 0, null);\n    if (null === R) throw Error(p(349));\n    0 !== (Rh & 30) || ni(c, b, e);\n  }\n  return e;\n}\nfunction ni(a, b, c) {\n  a.flags |= 16384;\n  a = {\n    getSnapshot: b,\n    value: c\n  };\n  b = N.updateQueue;\n  null === b ? (b = {\n    lastEffect: null,\n    stores: null\n  }, N.updateQueue = b, b.stores = [a]) : (c = b.stores, null === c ? b.stores = [a] : c.push(a));\n}\nfunction mi(a, b, c, d) {\n  b.value = c;\n  b.getSnapshot = d;\n  oi(b) && pi(a);\n}\nfunction ki(a, b, c) {\n  return c(function () {\n    oi(b) && pi(a);\n  });\n}\nfunction oi(a) {\n  var b = a.getSnapshot;\n  a = a.value;\n  try {\n    var c = b();\n    return !He(a, c);\n  } catch (d) {\n    return !0;\n  }\n}\nfunction pi(a) {\n  var b = Zg(a, 1);\n  null !== b && mh(b, a, 1, -1);\n}\nfunction qi(a) {\n  var b = ci();\n  "function" === typeof a && (a = a());\n  b.memoizedState = b.baseState = a;\n  a = {\n    pending: null,\n    interleaved: null,\n    lanes: 0,\n    dispatch: null,\n    lastRenderedReducer: ei,\n    lastRenderedState: a\n  };\n  b.queue = a;\n  a = a.dispatch = ri.bind(null, N, a);\n  return [b.memoizedState, a];\n}\nfunction li(a, b, c, d) {\n  a = {\n    tag: a,\n    create: b,\n    destroy: c,\n    deps: d,\n    next: null\n  };\n  b = N.updateQueue;\n  null === b ? (b = {\n    lastEffect: null,\n    stores: null\n  }, N.updateQueue = b, b.lastEffect = a.next = a) : (c = b.lastEffect, null === c ? b.lastEffect = a.next = a : (d = c.next, c.next = a, a.next = d, b.lastEffect = a));\n  return a;\n}\nfunction si() {\n  return di().memoizedState;\n}\nfunction ti(a, b, c, d) {\n  var e = ci();\n  N.flags |= a;\n  e.memoizedState = li(1 | b, c, void 0, void 0 === d ? null : d);\n}\nfunction ui(a, b, c, d) {\n  var e = di();\n  d = void 0 === d ? null : d;\n  var f = void 0;\n  if (null !== O) {\n    var g = O.memoizedState;\n    f = g.destroy;\n    if (null !== d && Wh(d, g.deps)) {\n      e.memoizedState = li(b, c, f, d);\n      return;\n    }\n  }\n  N.flags |= a;\n  e.memoizedState = li(1 | b, c, f, d);\n}\nfunction vi(a, b) {\n  return ti(8390656, 8, a, b);\n}\nfunction ji(a, b) {\n  return ui(2048, 8, a, b);\n}\nfunction wi(a, b) {\n  return ui(4, 2, a, b);\n}\nfunction xi(a, b) {\n  return ui(4, 4, a, b);\n}\nfunction yi(a, b) {\n  if ("function" === typeof b) return a = a(), b(a), function () {\n    b(null);\n  };\n  if (null !== b && void 0 !== b) return a = a(), b.current = a, function () {\n    b.current = null;\n  };\n}\nfunction zi(a, b, c) {\n  c = null !== c && void 0 !== c ? c.concat([a]) : null;\n  return ui(4, 4, yi.bind(null, b, a), c);\n}\nfunction Ai() {}\nfunction Bi(a, b) {\n  var c = di();\n  b = void 0 === b ? null : b;\n  var d = c.memoizedState;\n  if (null !== d && null !== b && Wh(b, d[1])) return d[0];\n  c.memoizedState = [a, b];\n  return a;\n}\nfunction Ci(a, b) {\n  var c = di();\n  b = void 0 === b ? null : b;\n  var d = c.memoizedState;\n  if (null !== d && null !== b && Wh(b, d[1])) return d[0];\n  a = a();\n  c.memoizedState = [a, b];\n  return a;\n}\nfunction Di(a, b, c) {\n  if (0 === (Rh & 21)) return a.baseState && (a.baseState = !1, Ug = !0), a.memoizedState = c;\n  He(c, b) || (c = yc(), N.lanes |= c, hh |= c, a.baseState = !0);\n  return b;\n}\nfunction Ei(a, b) {\n  var c = C;\n  C = 0 !== c && 4 > c ? c : 4;\n  a(!0);\n  var d = Qh.transition;\n  Qh.transition = {};\n  try {\n    a(!1), b();\n  } finally {\n    C = c, Qh.transition = d;\n  }\n}\nfunction Fi() {\n  return di().memoizedState;\n}\nfunction Gi(a, b, c) {\n  var d = lh(a);\n  c = {\n    lane: d,\n    action: c,\n    hasEagerState: !1,\n    eagerState: null,\n    next: null\n  };\n  if (Hi(a)) Ii(b, c);else if (c = Yg(a, b, c, d), null !== c) {\n    var e = L();\n    mh(c, a, d, e);\n    Ji(c, b, d);\n  }\n}\nfunction ri(a, b, c) {\n  var d = lh(a),\n    e = {\n      lane: d,\n      action: c,\n      hasEagerState: !1,\n      eagerState: null,\n      next: null\n    };\n  if (Hi(a)) Ii(b, e);else {\n    var f = a.alternate;\n    if (0 === a.lanes && (null === f || 0 === f.lanes) && (f = b.lastRenderedReducer, null !== f)) try {\n      var g = b.lastRenderedState,\n        h = f(g, c);\n      e.hasEagerState = !0;\n      e.eagerState = h;\n      if (He(h, g)) {\n        var k = b.interleaved;\n        null === k ? (e.next = e, Xg(b)) : (e.next = k.next, k.next = e);\n        b.interleaved = e;\n        return;\n      }\n    } catch (l) {} finally {}\n    c = Yg(a, b, e, d);\n    null !== c && (e = L(), mh(c, a, d, e), Ji(c, b, d));\n  }\n}\nfunction Hi(a) {\n  var b = a.alternate;\n  return a === N || null !== b && b === N;\n}\nfunction Ii(a, b) {\n  Th = Sh = !0;\n  var c = a.pending;\n  null === c ? b.next = b : (b.next = c.next, c.next = b);\n  a.pending = b;\n}\nfunction Ji(a, b, c) {\n  if (0 !== (c & 4194240)) {\n    var d = b.lanes;\n    d &= a.pendingLanes;\n    c |= d;\n    b.lanes = c;\n    Cc(a, c);\n  }\n}\nvar ai = {\n    readContext: Vg,\n    useCallback: Q,\n    useContext: Q,\n    useEffect: Q,\n    useImperativeHandle: Q,\n    useInsertionEffect: Q,\n    useLayoutEffect: Q,\n    useMemo: Q,\n    useReducer: Q,\n    useRef: Q,\n    useState: Q,\n    useDebugValue: Q,\n    useDeferredValue: Q,\n    useTransition: Q,\n    useMutableSource: Q,\n    useSyncExternalStore: Q,\n    useId: Q,\n    unstable_isNewReconciler: !1\n  },\n  Yh = {\n    readContext: Vg,\n    useCallback: function (a, b) {\n      ci().memoizedState = [a, void 0 === b ? null : b];\n      return a;\n    },\n    useContext: Vg,\n    useEffect: vi,\n    useImperativeHandle: function (a, b, c) {\n      c = null !== c && void 0 !== c ? c.concat([a]) : null;\n      return ti(4194308, 4, yi.bind(null, b, a), c);\n    },\n    useLayoutEffect: function (a, b) {\n      return ti(4194308, 4, a, b);\n    },\n    useInsertionEffect: function (a, b) {\n      return ti(4, 2, a, b);\n    },\n    useMemo: function (a, b) {\n      var c = ci();\n      b = void 0 === b ? null : b;\n      a = a();\n      c.memoizedState = [a, b];\n      return a;\n    },\n    useReducer: function (a, b, c) {\n      var d = ci();\n      b = void 0 !== c ? c(b) : b;\n      d.memoizedState = d.baseState = b;\n      a = {\n        pending: null,\n        interleaved: null,\n        lanes: 0,\n        dispatch: null,\n        lastRenderedReducer: a,\n        lastRenderedState: b\n      };\n      d.queue = a;\n      a = a.dispatch = Gi.bind(null, N, a);\n      return [d.memoizedState, a];\n    },\n    useRef: function (a) {\n      var b = ci();\n      a = {\n        current: a\n      };\n      return b.memoizedState = a;\n    },\n    useState: qi,\n    useDebugValue: Ai,\n    useDeferredValue: function (a) {\n      return ci().memoizedState = a;\n    },\n    useTransition: function () {\n      var a = qi(!1),\n        b = a[0];\n      a = Ei.bind(null, a[1]);\n      ci().memoizedState = a;\n      return [b, a];\n    },\n    useMutableSource: function () {},\n    useSyncExternalStore: function (a, b, c) {\n      var d = N,\n        e = ci();\n      if (I) {\n        if (void 0 === c) throw Error(p(407));\n        c = c();\n      } else {\n        c = b();\n        if (null === R) throw Error(p(349));\n        0 !== (Rh & 30) || ni(d, b, c);\n      }\n      e.memoizedState = c;\n      var f = {\n        value: c,\n        getSnapshot: b\n      };\n      e.queue = f;\n      vi(ki.bind(null, d, f, a), [a]);\n      d.flags |= 2048;\n      li(9, mi.bind(null, d, f, c, b), void 0, null);\n      return c;\n    },\n    useId: function () {\n      var a = ci(),\n        b = R.identifierPrefix;\n      if (I) {\n        var c = sg;\n        var d = rg;\n        c = (d & ~(1 << 32 - oc(d) - 1)).toString(32) + c;\n        b = ":" + b + "R" + c;\n        c = Uh++;\n        0 < c && (b += "H" + c.toString(32));\n        b += ":";\n      } else c = Vh++, b = ":" + b + "r" + c.toString(32) + ":";\n      return a.memoizedState = b;\n    },\n    unstable_isNewReconciler: !1\n  },\n  Zh = {\n    readContext: Vg,\n    useCallback: Bi,\n    useContext: Vg,\n    useEffect: ji,\n    useImperativeHandle: zi,\n    useInsertionEffect: wi,\n    useLayoutEffect: xi,\n    useMemo: Ci,\n    useReducer: fi,\n    useRef: si,\n    useState: function () {\n      return fi(ei);\n    },\n    useDebugValue: Ai,\n    useDeferredValue: function (a) {\n      var b = di();\n      return Di(b, O.memoizedState, a);\n    },\n    useTransition: function () {\n      var a = fi(ei)[0],\n        b = di().memoizedState;\n      return [a, b];\n    },\n    useMutableSource: hi,\n    useSyncExternalStore: ii,\n    useId: Fi,\n    unstable_isNewReconciler: !1\n  },\n  $h = {\n    readContext: Vg,\n    useCallback: Bi,\n    useContext: Vg,\n    useEffect: ji,\n    useImperativeHandle: zi,\n    useInsertionEffect: wi,\n    useLayoutEffect: xi,\n    useMemo: Ci,\n    useReducer: gi,\n    useRef: si,\n    useState: function () {\n      return gi(ei);\n    },\n    useDebugValue: Ai,\n    useDeferredValue: function (a) {\n      var b = di();\n      return null === O ? b.memoizedState = a : Di(b, O.memoizedState, a);\n    },\n    useTransition: function () {\n      var a = gi(ei)[0],\n        b = di().memoizedState;\n      return [a, b];\n    },\n    useMutableSource: hi,\n    useSyncExternalStore: ii,\n    useId: Fi,\n    unstable_isNewReconciler: !1\n  };\nfunction Ki(a, b) {\n  try {\n    var c = "",\n      d = b;\n    do c += Pa(d), d = d.return; while (d);\n    var e = c;\n  } catch (f) {\n    e = "\\nError generating stack: " + f.message + "\\n" + f.stack;\n  }\n  return {\n    value: a,\n    source: b,\n    stack: e,\n    digest: null\n  };\n}\nfunction Li(a, b, c) {\n  return {\n    value: a,\n    source: null,\n    stack: null != c ? c : null,\n    digest: null != b ? b : null\n  };\n}\nfunction Mi(a, b) {\n  try {\n    console.error(b.value);\n  } catch (c) {\n    setTimeout(function () {\n      throw c;\n    });\n  }\n}\nvar Ni = "function" === typeof WeakMap ? WeakMap : Map;\nfunction Oi(a, b, c) {\n  c = ch(-1, c);\n  c.tag = 3;\n  c.payload = {\n    element: null\n  };\n  var d = b.value;\n  c.callback = function () {\n    Pi || (Pi = !0, Qi = d);\n    Mi(a, b);\n  };\n  return c;\n}\nfunction Ri(a, b, c) {\n  c = ch(-1, c);\n  c.tag = 3;\n  var d = a.type.getDerivedStateFromError;\n  if ("function" === typeof d) {\n    var e = b.value;\n    c.payload = function () {\n      return d(e);\n    };\n    c.callback = function () {\n      Mi(a, b);\n    };\n  }\n  var f = a.stateNode;\n  null !== f && "function" === typeof f.componentDidCatch && (c.callback = function () {\n    Mi(a, b);\n    "function" !== typeof d && (null === Si ? Si = new Set([this]) : Si.add(this));\n    var c = b.stack;\n    this.componentDidCatch(b.value, {\n      componentStack: null !== c ? c : ""\n    });\n  });\n  return c;\n}\nfunction Ti(a, b, c) {\n  var d = a.pingCache;\n  if (null === d) {\n    d = a.pingCache = new Ni();\n    var e = new Set();\n    d.set(b, e);\n  } else e = d.get(b), void 0 === e && (e = new Set(), d.set(b, e));\n  e.has(c) || (e.add(c), a = Ui.bind(null, a, b, c), b.then(a, a));\n}\nfunction Vi(a) {\n  do {\n    var b;\n    if (b = 13 === a.tag) b = a.memoizedState, b = null !== b ? null !== b.dehydrated ? !0 : !1 : !0;\n    if (b) return a;\n    a = a.return;\n  } while (null !== a);\n  return null;\n}\nfunction Wi(a, b, c, d, e) {\n  if (0 === (a.mode & 1)) return a === b ? a.flags |= 65536 : (a.flags |= 128, c.flags |= 131072, c.flags &= -52805, 1 === c.tag && (null === c.alternate ? c.tag = 17 : (b = ch(-1, 1), b.tag = 2, dh(c, b, 1))), c.lanes |= 1), a;\n  a.flags |= 65536;\n  a.lanes = e;\n  return a;\n}\nvar Xi = ua.ReactCurrentOwner,\n  Ug = !1;\nfunction Yi(a, b, c, d) {\n  b.child = null === a ? Ch(b, null, c, d) : Bh(b, a.child, c, d);\n}\nfunction Zi(a, b, c, d, e) {\n  c = c.render;\n  var f = b.ref;\n  Tg(b, e);\n  d = Xh(a, b, c, d, f, e);\n  c = bi();\n  if (null !== a && !Ug) return b.updateQueue = a.updateQueue, b.flags &= -2053, a.lanes &= ~e, $i(a, b, e);\n  I && c && vg(b);\n  b.flags |= 1;\n  Yi(a, b, d, e);\n  return b.child;\n}\nfunction aj(a, b, c, d, e) {\n  if (null === a) {\n    var f = c.type;\n    if ("function" === typeof f && !bj(f) && void 0 === f.defaultProps && null === c.compare && void 0 === c.defaultProps) return b.tag = 15, b.type = f, cj(a, b, f, d, e);\n    a = yh(c.type, null, d, b, b.mode, e);\n    a.ref = b.ref;\n    a.return = b;\n    return b.child = a;\n  }\n  f = a.child;\n  if (0 === (a.lanes & e)) {\n    var g = f.memoizedProps;\n    c = c.compare;\n    c = null !== c ? c : Ie;\n    if (c(g, d) && a.ref === b.ref) return $i(a, b, e);\n  }\n  b.flags |= 1;\n  a = wh(f, d);\n  a.ref = b.ref;\n  a.return = b;\n  return b.child = a;\n}\nfunction cj(a, b, c, d, e) {\n  if (null !== a) {\n    var f = a.memoizedProps;\n    if (Ie(f, d) && a.ref === b.ref) if (Ug = !1, b.pendingProps = d = f, 0 !== (a.lanes & e)) 0 !== (a.flags & 131072) && (Ug = !0);else return b.lanes = a.lanes, $i(a, b, e);\n  }\n  return dj(a, b, c, d, e);\n}\nfunction ej(a, b, c) {\n  var d = b.pendingProps,\n    e = d.children,\n    f = null !== a ? a.memoizedState : null;\n  if ("hidden" === d.mode) {\n    if (0 === (b.mode & 1)) b.memoizedState = {\n      baseLanes: 0,\n      cachePool: null,\n      transitions: null\n    }, G(fj, gj), gj |= c;else {\n      if (0 === (c & 1073741824)) return a = null !== f ? f.baseLanes | c : c, b.lanes = b.childLanes = 1073741824, b.memoizedState = {\n        baseLanes: a,\n        cachePool: null,\n        transitions: null\n      }, b.updateQueue = null, G(fj, gj), gj |= a, null;\n      b.memoizedState = {\n        baseLanes: 0,\n        cachePool: null,\n        transitions: null\n      };\n      d = null !== f ? f.baseLanes : c;\n      G(fj, gj);\n      gj |= d;\n    }\n  } else null !== f ? (d = f.baseLanes | c, b.memoizedState = null) : d = c, G(fj, gj), gj |= d;\n  Yi(a, b, e, c);\n  return b.child;\n}\nfunction hj(a, b) {\n  var c = b.ref;\n  if (null === a && null !== c || null !== a && a.ref !== c) b.flags |= 512, b.flags |= 2097152;\n}\nfunction dj(a, b, c, d, e) {\n  var f = Zf(c) ? Xf : H.current;\n  f = Yf(b, f);\n  Tg(b, e);\n  c = Xh(a, b, c, d, f, e);\n  d = bi();\n  if (null !== a && !Ug) return b.updateQueue = a.updateQueue, b.flags &= -2053, a.lanes &= ~e, $i(a, b, e);\n  I && d && vg(b);\n  b.flags |= 1;\n  Yi(a, b, c, e);\n  return b.child;\n}\nfunction ij(a, b, c, d, e) {\n  if (Zf(c)) {\n    var f = !0;\n    cg(b);\n  } else f = !1;\n  Tg(b, e);\n  if (null === b.stateNode) jj(a, b), ph(b, c, d), rh(b, c, d, e), d = !0;else if (null === a) {\n    var g = b.stateNode,\n      h = b.memoizedProps;\n    g.props = h;\n    var k = g.context,\n      l = c.contextType;\n    "object" === typeof l && null !== l ? l = Vg(l) : (l = Zf(c) ? Xf : H.current, l = Yf(b, l));\n    var m = c.getDerivedStateFromProps,\n      q = "function" === typeof m || "function" === typeof g.getSnapshotBeforeUpdate;\n    q || "function" !== typeof g.UNSAFE_componentWillReceiveProps && "function" !== typeof g.componentWillReceiveProps || (h !== d || k !== l) && qh(b, g, d, l);\n    $g = !1;\n    var r = b.memoizedState;\n    g.state = r;\n    gh(b, d, g, e);\n    k = b.memoizedState;\n    h !== d || r !== k || Wf.current || $g ? ("function" === typeof m && (kh(b, c, m, d), k = b.memoizedState), (h = $g || oh(b, c, h, d, r, k, l)) ? (q || "function" !== typeof g.UNSAFE_componentWillMount && "function" !== typeof g.componentWillMount || ("function" === typeof g.componentWillMount && g.componentWillMount(), "function" === typeof g.UNSAFE_componentWillMount && g.UNSAFE_componentWillMount()), "function" === typeof g.componentDidMount && (b.flags |= 4194308)) : ("function" === typeof g.componentDidMount && (b.flags |= 4194308), b.memoizedProps = d, b.memoizedState = k), g.props = d, g.state = k, g.context = l, d = h) : ("function" === typeof g.componentDidMount && (b.flags |= 4194308), d = !1);\n  } else {\n    g = b.stateNode;\n    bh(a, b);\n    h = b.memoizedProps;\n    l = b.type === b.elementType ? h : Lg(b.type, h);\n    g.props = l;\n    q = b.pendingProps;\n    r = g.context;\n    k = c.contextType;\n    "object" === typeof k && null !== k ? k = Vg(k) : (k = Zf(c) ? Xf : H.current, k = Yf(b, k));\n    var y = c.getDerivedStateFromProps;\n    (m = "function" === typeof y || "function" === typeof g.getSnapshotBeforeUpdate) || "function" !== typeof g.UNSAFE_componentWillReceiveProps && "function" !== typeof g.componentWillReceiveProps || (h !== q || r !== k) && qh(b, g, d, k);\n    $g = !1;\n    r = b.memoizedState;\n    g.state = r;\n    gh(b, d, g, e);\n    var n = b.memoizedState;\n    h !== q || r !== n || Wf.current || $g ? ("function" === typeof y && (kh(b, c, y, d), n = b.memoizedState), (l = $g || oh(b, c, l, d, r, n, k) || !1) ? (m || "function" !== typeof g.UNSAFE_componentWillUpdate && "function" !== typeof g.componentWillUpdate || ("function" === typeof g.componentWillUpdate && g.componentWillUpdate(d, n, k), "function" === typeof g.UNSAFE_componentWillUpdate && g.UNSAFE_componentWillUpdate(d, n, k)), "function" === typeof g.componentDidUpdate && (b.flags |= 4), "function" === typeof g.getSnapshotBeforeUpdate && (b.flags |= 1024)) : ("function" !== typeof g.componentDidUpdate || h === a.memoizedProps && r === a.memoizedState || (b.flags |= 4), "function" !== typeof g.getSnapshotBeforeUpdate || h === a.memoizedProps && r === a.memoizedState || (b.flags |= 1024), b.memoizedProps = d, b.memoizedState = n), g.props = d, g.state = n, g.context = k, d = l) : ("function" !== typeof g.componentDidUpdate || h === a.memoizedProps && r === a.memoizedState || (b.flags |= 4), "function" !== typeof g.getSnapshotBeforeUpdate || h === a.memoizedProps && r === a.memoizedState || (b.flags |= 1024), d = !1);\n  }\n  return kj(a, b, c, d, f, e);\n}\nfunction kj(a, b, c, d, e, f) {\n  hj(a, b);\n  var g = 0 !== (b.flags & 128);\n  if (!d && !g) return e && dg(b, c, !1), $i(a, b, f);\n  d = b.stateNode;\n  Xi.current = b;\n  var h = g && "function" !== typeof c.getDerivedStateFromError ? null : d.render();\n  b.flags |= 1;\n  null !== a && g ? (b.child = Bh(b, a.child, null, f), b.child = Bh(b, null, h, f)) : Yi(a, b, h, f);\n  b.memoizedState = d.state;\n  e && dg(b, c, !0);\n  return b.child;\n}\nfunction lj(a) {\n  var b = a.stateNode;\n  b.pendingContext ? ag(a, b.pendingContext, b.pendingContext !== b.context) : b.context && ag(a, b.context, !1);\n  Ih(a, b.containerInfo);\n}\nfunction mj(a, b, c, d, e) {\n  Ig();\n  Jg(e);\n  b.flags |= 256;\n  Yi(a, b, c, d);\n  return b.child;\n}\nvar nj = {\n  dehydrated: null,\n  treeContext: null,\n  retryLane: 0\n};\nfunction oj(a) {\n  return {\n    baseLanes: a,\n    cachePool: null,\n    transitions: null\n  };\n}\nfunction pj(a, b, c) {\n  var d = b.pendingProps,\n    e = M.current,\n    f = !1,\n    g = 0 !== (b.flags & 128),\n    h;\n  (h = g) || (h = null !== a && null === a.memoizedState ? !1 : 0 !== (e & 2));\n  if (h) f = !0, b.flags &= -129;else if (null === a || null !== a.memoizedState) e |= 1;\n  G(M, e & 1);\n  if (null === a) {\n    Eg(b);\n    a = b.memoizedState;\n    if (null !== a && (a = a.dehydrated, null !== a)) return 0 === (b.mode & 1) ? b.lanes = 1 : "$!" === a.data ? b.lanes = 8 : b.lanes = 1073741824, null;\n    g = d.children;\n    a = d.fallback;\n    return f ? (d = b.mode, f = b.child, g = {\n      mode: "hidden",\n      children: g\n    }, 0 === (d & 1) && null !== f ? (f.childLanes = 0, f.pendingProps = g) : f = qj(g, d, 0, null), a = Ah(a, d, c, null), f.return = b, a.return = b, f.sibling = a, b.child = f, b.child.memoizedState = oj(c), b.memoizedState = nj, a) : rj(b, g);\n  }\n  e = a.memoizedState;\n  if (null !== e && (h = e.dehydrated, null !== h)) return sj(a, b, g, d, h, e, c);\n  if (f) {\n    f = d.fallback;\n    g = b.mode;\n    e = a.child;\n    h = e.sibling;\n    var k = {\n      mode: "hidden",\n      children: d.children\n    };\n    0 === (g & 1) && b.child !== e ? (d = b.child, d.childLanes = 0, d.pendingProps = k, b.deletions = null) : (d = wh(e, k), d.subtreeFlags = e.subtreeFlags & 14680064);\n    null !== h ? f = wh(h, f) : (f = Ah(f, g, c, null), f.flags |= 2);\n    f.return = b;\n    d.return = b;\n    d.sibling = f;\n    b.child = d;\n    d = f;\n    f = b.child;\n    g = a.child.memoizedState;\n    g = null === g ? oj(c) : {\n      baseLanes: g.baseLanes | c,\n      cachePool: null,\n      transitions: g.transitions\n    };\n    f.memoizedState = g;\n    f.childLanes = a.childLanes & ~c;\n    b.memoizedState = nj;\n    return d;\n  }\n  f = a.child;\n  a = f.sibling;\n  d = wh(f, {\n    mode: "visible",\n    children: d.children\n  });\n  0 === (b.mode & 1) && (d.lanes = c);\n  d.return = b;\n  d.sibling = null;\n  null !== a && (c = b.deletions, null === c ? (b.deletions = [a], b.flags |= 16) : c.push(a));\n  b.child = d;\n  b.memoizedState = null;\n  return d;\n}\nfunction rj(a, b) {\n  b = qj({\n    mode: "visible",\n    children: b\n  }, a.mode, 0, null);\n  b.return = a;\n  return a.child = b;\n}\nfunction tj(a, b, c, d) {\n  null !== d && Jg(d);\n  Bh(b, a.child, null, c);\n  a = rj(b, b.pendingProps.children);\n  a.flags |= 2;\n  b.memoizedState = null;\n  return a;\n}\nfunction sj(a, b, c, d, e, f, g) {\n  if (c) {\n    if (b.flags & 256) return b.flags &= -257, d = Li(Error(p(422))), tj(a, b, g, d);\n    if (null !== b.memoizedState) return b.child = a.child, b.flags |= 128, null;\n    f = d.fallback;\n    e = b.mode;\n    d = qj({\n      mode: "visible",\n      children: d.children\n    }, e, 0, null);\n    f = Ah(f, e, g, null);\n    f.flags |= 2;\n    d.return = b;\n    f.return = b;\n    d.sibling = f;\n    b.child = d;\n    0 !== (b.mode & 1) && Bh(b, a.child, null, g);\n    b.child.memoizedState = oj(g);\n    b.memoizedState = nj;\n    return f;\n  }\n  if (0 === (b.mode & 1)) return tj(a, b, g, null);\n  if ("$!" === e.data) {\n    d = e.nextSibling && e.nextSibling.dataset;\n    if (d) var h = d.dgst;\n    d = h;\n    f = Error(p(419));\n    d = Li(f, d, void 0);\n    return tj(a, b, g, d);\n  }\n  h = 0 !== (g & a.childLanes);\n  if (Ug || h) {\n    d = R;\n    if (null !== d) {\n      switch (g & -g) {\n        case 4:\n          e = 2;\n          break;\n        case 16:\n          e = 8;\n          break;\n        case 64:\n        case 128:\n        case 256:\n        case 512:\n        case 1024:\n        case 2048:\n        case 4096:\n        case 8192:\n        case 16384:\n        case 32768:\n        case 65536:\n        case 131072:\n        case 262144:\n        case 524288:\n        case 1048576:\n        case 2097152:\n        case 4194304:\n        case 8388608:\n        case 16777216:\n        case 33554432:\n        case 67108864:\n          e = 32;\n          break;\n        case 536870912:\n          e = 268435456;\n          break;\n        default:\n          e = 0;\n      }\n      e = 0 !== (e & (d.suspendedLanes | g)) ? 0 : e;\n      0 !== e && e !== f.retryLane && (f.retryLane = e, Zg(a, e), mh(d, a, e, -1));\n    }\n    uj();\n    d = Li(Error(p(421)));\n    return tj(a, b, g, d);\n  }\n  if ("$?" === e.data) return b.flags |= 128, b.child = a.child, b = vj.bind(null, a), e._reactRetry = b, null;\n  a = f.treeContext;\n  yg = Lf(e.nextSibling);\n  xg = b;\n  I = !0;\n  zg = null;\n  null !== a && (og[pg++] = rg, og[pg++] = sg, og[pg++] = qg, rg = a.id, sg = a.overflow, qg = b);\n  b = rj(b, d.children);\n  b.flags |= 4096;\n  return b;\n}\nfunction wj(a, b, c) {\n  a.lanes |= b;\n  var d = a.alternate;\n  null !== d && (d.lanes |= b);\n  Sg(a.return, b, c);\n}\nfunction xj(a, b, c, d, e) {\n  var f = a.memoizedState;\n  null === f ? a.memoizedState = {\n    isBackwards: b,\n    rendering: null,\n    renderingStartTime: 0,\n    last: d,\n    tail: c,\n    tailMode: e\n  } : (f.isBackwards = b, f.rendering = null, f.renderingStartTime = 0, f.last = d, f.tail = c, f.tailMode = e);\n}\nfunction yj(a, b, c) {\n  var d = b.pendingProps,\n    e = d.revealOrder,\n    f = d.tail;\n  Yi(a, b, d.children, c);\n  d = M.current;\n  if (0 !== (d & 2)) d = d & 1 | 2, b.flags |= 128;else {\n    if (null !== a && 0 !== (a.flags & 128)) a: for (a = b.child; null !== a;) {\n      if (13 === a.tag) null !== a.memoizedState && wj(a, c, b);else if (19 === a.tag) wj(a, c, b);else if (null !== a.child) {\n        a.child.return = a;\n        a = a.child;\n        continue;\n      }\n      if (a === b) break a;\n      for (; null === a.sibling;) {\n        if (null === a.return || a.return === b) break a;\n        a = a.return;\n      }\n      a.sibling.return = a.return;\n      a = a.sibling;\n    }\n    d &= 1;\n  }\n  G(M, d);\n  if (0 === (b.mode & 1)) b.memoizedState = null;else switch (e) {\n    case "forwards":\n      c = b.child;\n      for (e = null; null !== c;) a = c.alternate, null !== a && null === Mh(a) && (e = c), c = c.sibling;\n      c = e;\n      null === c ? (e = b.child, b.child = null) : (e = c.sibling, c.sibling = null);\n      xj(b, !1, e, c, f);\n      break;\n    case "backwards":\n      c = null;\n      e = b.child;\n      for (b.child = null; null !== e;) {\n        a = e.alternate;\n        if (null !== a && null === Mh(a)) {\n          b.child = e;\n          break;\n        }\n        a = e.sibling;\n        e.sibling = c;\n        c = e;\n        e = a;\n      }\n      xj(b, !0, c, null, f);\n      break;\n    case "together":\n      xj(b, !1, null, null, void 0);\n      break;\n    default:\n      b.memoizedState = null;\n  }\n  return b.child;\n}\nfunction jj(a, b) {\n  0 === (b.mode & 1) && null !== a && (a.alternate = null, b.alternate = null, b.flags |= 2);\n}\nfunction $i(a, b, c) {\n  null !== a && (b.dependencies = a.dependencies);\n  hh |= b.lanes;\n  if (0 === (c & b.childLanes)) return null;\n  if (null !== a && b.child !== a.child) throw Error(p(153));\n  if (null !== b.child) {\n    a = b.child;\n    c = wh(a, a.pendingProps);\n    b.child = c;\n    for (c.return = b; null !== a.sibling;) a = a.sibling, c = c.sibling = wh(a, a.pendingProps), c.return = b;\n    c.sibling = null;\n  }\n  return b.child;\n}\nfunction zj(a, b, c) {\n  switch (b.tag) {\n    case 3:\n      lj(b);\n      Ig();\n      break;\n    case 5:\n      Kh(b);\n      break;\n    case 1:\n      Zf(b.type) && cg(b);\n      break;\n    case 4:\n      Ih(b, b.stateNode.containerInfo);\n      break;\n    case 10:\n      var d = b.type._context,\n        e = b.memoizedProps.value;\n      G(Mg, d._currentValue);\n      d._currentValue = e;\n      break;\n    case 13:\n      d = b.memoizedState;\n      if (null !== d) {\n        if (null !== d.dehydrated) return G(M, M.current & 1), b.flags |= 128, null;\n        if (0 !== (c & b.child.childLanes)) return pj(a, b, c);\n        G(M, M.current & 1);\n        a = $i(a, b, c);\n        return null !== a ? a.sibling : null;\n      }\n      G(M, M.current & 1);\n      break;\n    case 19:\n      d = 0 !== (c & b.childLanes);\n      if (0 !== (a.flags & 128)) {\n        if (d) return yj(a, b, c);\n        b.flags |= 128;\n      }\n      e = b.memoizedState;\n      null !== e && (e.rendering = null, e.tail = null, e.lastEffect = null);\n      G(M, M.current);\n      if (d) break;else return null;\n    case 22:\n    case 23:\n      return b.lanes = 0, ej(a, b, c);\n  }\n  return $i(a, b, c);\n}\nvar Aj, Bj, Cj, Dj;\nAj = function (a, b) {\n  for (var c = b.child; null !== c;) {\n    if (5 === c.tag || 6 === c.tag) a.appendChild(c.stateNode);else if (4 !== c.tag && null !== c.child) {\n      c.child.return = c;\n      c = c.child;\n      continue;\n    }\n    if (c === b) break;\n    for (; null === c.sibling;) {\n      if (null === c.return || c.return === b) return;\n      c = c.return;\n    }\n    c.sibling.return = c.return;\n    c = c.sibling;\n  }\n};\nBj = function () {};\nCj = function (a, b, c, d) {\n  var e = a.memoizedProps;\n  if (e !== d) {\n    a = b.stateNode;\n    Hh(Eh.current);\n    var f = null;\n    switch (c) {\n      case "input":\n        e = Ya(a, e);\n        d = Ya(a, d);\n        f = [];\n        break;\n      case "select":\n        e = A({}, e, {\n          value: void 0\n        });\n        d = A({}, d, {\n          value: void 0\n        });\n        f = [];\n        break;\n      case "textarea":\n        e = gb(a, e);\n        d = gb(a, d);\n        f = [];\n        break;\n      default:\n        "function" !== typeof e.onClick && "function" === typeof d.onClick && (a.onclick = Bf);\n    }\n    ub(c, d);\n    var g;\n    c = null;\n    for (l in e) if (!d.hasOwnProperty(l) && e.hasOwnProperty(l) && null != e[l]) if ("style" === l) {\n      var h = e[l];\n      for (g in h) h.hasOwnProperty(g) && (c || (c = {}), c[g] = "");\n    } else "dangerouslySetInnerHTML" !== l && "children" !== l && "suppressContentEditableWarning" !== l && "suppressHydrationWarning" !== l && "autoFocus" !== l && (ea.hasOwnProperty(l) ? f || (f = []) : (f = f || []).push(l, null));\n    for (l in d) {\n      var k = d[l];\n      h = null != e ? e[l] : void 0;\n      if (d.hasOwnProperty(l) && k !== h && (null != k || null != h)) if ("style" === l) {\n        if (h) {\n          for (g in h) !h.hasOwnProperty(g) || k && k.hasOwnProperty(g) || (c || (c = {}), c[g] = "");\n          for (g in k) k.hasOwnProperty(g) && h[g] !== k[g] && (c || (c = {}), c[g] = k[g]);\n        } else c || (f || (f = []), f.push(l, c)), c = k;\n      } else "dangerouslySetInnerHTML" === l ? (k = k ? k.__html : void 0, h = h ? h.__html : void 0, null != k && h !== k && (f = f || []).push(l, k)) : "children" === l ? "string" !== typeof k && "number" !== typeof k || (f = f || []).push(l, "" + k) : "suppressContentEditableWarning" !== l && "suppressHydrationWarning" !== l && (ea.hasOwnProperty(l) ? (null != k && "onScroll" === l && D("scroll", a), f || h === k || (f = [])) : (f = f || []).push(l, k));\n    }\n    c && (f = f || []).push("style", c);\n    var l = f;\n    if (b.updateQueue = l) b.flags |= 4;\n  }\n};\nDj = function (a, b, c, d) {\n  c !== d && (b.flags |= 4);\n};\nfunction Ej(a, b) {\n  if (!I) switch (a.tailMode) {\n    case "hidden":\n      b = a.tail;\n      for (var c = null; null !== b;) null !== b.alternate && (c = b), b = b.sibling;\n      null === c ? a.tail = null : c.sibling = null;\n      break;\n    case "collapsed":\n      c = a.tail;\n      for (var d = null; null !== c;) null !== c.alternate && (d = c), c = c.sibling;\n      null === d ? b || null === a.tail ? a.tail = null : a.tail.sibling = null : d.sibling = null;\n  }\n}\nfunction S(a) {\n  var b = null !== a.alternate && a.alternate.child === a.child,\n    c = 0,\n    d = 0;\n  if (b) for (var e = a.child; null !== e;) c |= e.lanes | e.childLanes, d |= e.subtreeFlags & 14680064, d |= e.flags & 14680064, e.return = a, e = e.sibling;else for (e = a.child; null !== e;) c |= e.lanes | e.childLanes, d |= e.subtreeFlags, d |= e.flags, e.return = a, e = e.sibling;\n  a.subtreeFlags |= d;\n  a.childLanes = c;\n  return b;\n}\nfunction Fj(a, b, c) {\n  var d = b.pendingProps;\n  wg(b);\n  switch (b.tag) {\n    case 2:\n    case 16:\n    case 15:\n    case 0:\n    case 11:\n    case 7:\n    case 8:\n    case 12:\n    case 9:\n    case 14:\n      return S(b), null;\n    case 1:\n      return Zf(b.type) && $f(), S(b), null;\n    case 3:\n      d = b.stateNode;\n      Jh();\n      E(Wf);\n      E(H);\n      Oh();\n      d.pendingContext && (d.context = d.pendingContext, d.pendingContext = null);\n      if (null === a || null === a.child) Gg(b) ? b.flags |= 4 : null === a || a.memoizedState.isDehydrated && 0 === (b.flags & 256) || (b.flags |= 1024, null !== zg && (Gj(zg), zg = null));\n      Bj(a, b);\n      S(b);\n      return null;\n    case 5:\n      Lh(b);\n      var e = Hh(Gh.current);\n      c = b.type;\n      if (null !== a && null != b.stateNode) Cj(a, b, c, d, e), a.ref !== b.ref && (b.flags |= 512, b.flags |= 2097152);else {\n        if (!d) {\n          if (null === b.stateNode) throw Error(p(166));\n          S(b);\n          return null;\n        }\n        a = Hh(Eh.current);\n        if (Gg(b)) {\n          d = b.stateNode;\n          c = b.type;\n          var f = b.memoizedProps;\n          d[Of] = b;\n          d[Pf] = f;\n          a = 0 !== (b.mode & 1);\n          switch (c) {\n            case "dialog":\n              D("cancel", d);\n              D("close", d);\n              break;\n            case "iframe":\n            case "object":\n            case "embed":\n              D("load", d);\n              break;\n            case "video":\n            case "audio":\n              for (e = 0; e < lf.length; e++) D(lf[e], d);\n              break;\n            case "source":\n              D("error", d);\n              break;\n            case "img":\n            case "image":\n            case "link":\n              D("error", d);\n              D("load", d);\n              break;\n            case "details":\n              D("toggle", d);\n              break;\n            case "input":\n              Za(d, f);\n              D("invalid", d);\n              break;\n            case "select":\n              d._wrapperState = {\n                wasMultiple: !!f.multiple\n              };\n              D("invalid", d);\n              break;\n            case "textarea":\n              hb(d, f), D("invalid", d);\n          }\n          ub(c, f);\n          e = null;\n          for (var g in f) if (f.hasOwnProperty(g)) {\n            var h = f[g];\n            "children" === g ? "string" === typeof h ? d.textContent !== h && (!0 !== f.suppressHydrationWarning && Af(d.textContent, h, a), e = ["children", h]) : "number" === typeof h && d.textContent !== "" + h && (!0 !== f.suppressHydrationWarning && Af(d.textContent, h, a), e = ["children", "" + h]) : ea.hasOwnProperty(g) && null != h && "onScroll" === g && D("scroll", d);\n          }\n          switch (c) {\n            case "input":\n              Va(d);\n              db(d, f, !0);\n              break;\n            case "textarea":\n              Va(d);\n              jb(d);\n              break;\n            case "select":\n            case "option":\n              break;\n            default:\n              "function" === typeof f.onClick && (d.onclick = Bf);\n          }\n          d = e;\n          b.updateQueue = d;\n          null !== d && (b.flags |= 4);\n        } else {\n          g = 9 === e.nodeType ? e : e.ownerDocument;\n          "http://www.w3.org/1999/xhtml" === a && (a = kb(c));\n          "http://www.w3.org/1999/xhtml" === a ? "script" === c ? (a = g.createElement("div"), a.innerHTML = "<script>\\x3c/script>", a = a.removeChild(a.firstChild)) : "string" === typeof d.is ? a = g.createElement(c, {\n            is: d.is\n          }) : (a = g.createElement(c), "select" === c && (g = a, d.multiple ? g.multiple = !0 : d.size && (g.size = d.size))) : a = g.createElementNS(a, c);\n          a[Of] = b;\n          a[Pf] = d;\n          Aj(a, b, !1, !1);\n          b.stateNode = a;\n          a: {\n            g = vb(c, d);\n            switch (c) {\n              case "dialog":\n                D("cancel", a);\n                D("close", a);\n                e = d;\n                break;\n              case "iframe":\n              case "object":\n              case "embed":\n                D("load", a);\n                e = d;\n                break;\n              case "video":\n              case "audio":\n                for (e = 0; e < lf.length; e++) D(lf[e], a);\n                e = d;\n                break;\n              case "source":\n                D("error", a);\n                e = d;\n                break;\n              case "img":\n              case "image":\n              case "link":\n                D("error", a);\n                D("load", a);\n                e = d;\n                break;\n              case "details":\n                D("toggle", a);\n                e = d;\n                break;\n              case "input":\n                Za(a, d);\n                e = Ya(a, d);\n                D("invalid", a);\n                break;\n              case "option":\n                e = d;\n                break;\n              case "select":\n                a._wrapperState = {\n                  wasMultiple: !!d.multiple\n                };\n                e = A({}, d, {\n                  value: void 0\n                });\n                D("invalid", a);\n                break;\n              case "textarea":\n                hb(a, d);\n                e = gb(a, d);\n                D("invalid", a);\n                break;\n              default:\n                e = d;\n            }\n            ub(c, e);\n            h = e;\n            for (f in h) if (h.hasOwnProperty(f)) {\n              var k = h[f];\n              "style" === f ? sb(a, k) : "dangerouslySetInnerHTML" === f ? (k = k ? k.__html : void 0, null != k && nb(a, k)) : "children" === f ? "string" === typeof k ? ("textarea" !== c || "" !== k) && ob(a, k) : "number" === typeof k && ob(a, "" + k) : "suppressContentEditableWarning" !== f && "suppressHydrationWarning" !== f && "autoFocus" !== f && (ea.hasOwnProperty(f) ? null != k && "onScroll" === f && D("scroll", a) : null != k && ta(a, f, k, g));\n            }\n            switch (c) {\n              case "input":\n                Va(a);\n                db(a, d, !1);\n                break;\n              case "textarea":\n                Va(a);\n                jb(a);\n                break;\n              case "option":\n                null != d.value && a.setAttribute("value", "" + Sa(d.value));\n                break;\n              case "select":\n                a.multiple = !!d.multiple;\n                f = d.value;\n                null != f ? fb(a, !!d.multiple, f, !1) : null != d.defaultValue && fb(a, !!d.multiple, d.defaultValue, !0);\n                break;\n              default:\n                "function" === typeof e.onClick && (a.onclick = Bf);\n            }\n            switch (c) {\n              case "button":\n              case "input":\n              case "select":\n              case "textarea":\n                d = !!d.autoFocus;\n                break a;\n              case "img":\n                d = !0;\n                break a;\n              default:\n                d = !1;\n            }\n          }\n          d && (b.flags |= 4);\n        }\n        null !== b.ref && (b.flags |= 512, b.flags |= 2097152);\n      }\n      S(b);\n      return null;\n    case 6:\n      if (a && null != b.stateNode) Dj(a, b, a.memoizedProps, d);else {\n        if ("string" !== typeof d && null === b.stateNode) throw Error(p(166));\n        c = Hh(Gh.current);\n        Hh(Eh.current);\n        if (Gg(b)) {\n          d = b.stateNode;\n          c = b.memoizedProps;\n          d[Of] = b;\n          if (f = d.nodeValue !== c) if (a = xg, null !== a) switch (a.tag) {\n            case 3:\n              Af(d.nodeValue, c, 0 !== (a.mode & 1));\n              break;\n            case 5:\n              !0 !== a.memoizedProps.suppressHydrationWarning && Af(d.nodeValue, c, 0 !== (a.mode & 1));\n          }\n          f && (b.flags |= 4);\n        } else d = (9 === c.nodeType ? c : c.ownerDocument).createTextNode(d), d[Of] = b, b.stateNode = d;\n      }\n      S(b);\n      return null;\n    case 13:\n      E(M);\n      d = b.memoizedState;\n      if (null === a || null !== a.memoizedState && null !== a.memoizedState.dehydrated) {\n        if (I && null !== yg && 0 !== (b.mode & 1) && 0 === (b.flags & 128)) Hg(), Ig(), b.flags |= 98560, f = !1;else if (f = Gg(b), null !== d && null !== d.dehydrated) {\n          if (null === a) {\n            if (!f) throw Error(p(318));\n            f = b.memoizedState;\n            f = null !== f ? f.dehydrated : null;\n            if (!f) throw Error(p(317));\n            f[Of] = b;\n          } else Ig(), 0 === (b.flags & 128) && (b.memoizedState = null), b.flags |= 4;\n          S(b);\n          f = !1;\n        } else null !== zg && (Gj(zg), zg = null), f = !0;\n        if (!f) return b.flags & 65536 ? b : null;\n      }\n      if (0 !== (b.flags & 128)) return b.lanes = c, b;\n      d = null !== d;\n      d !== (null !== a && null !== a.memoizedState) && d && (b.child.flags |= 8192, 0 !== (b.mode & 1) && (null === a || 0 !== (M.current & 1) ? 0 === T && (T = 3) : uj()));\n      null !== b.updateQueue && (b.flags |= 4);\n      S(b);\n      return null;\n    case 4:\n      return Jh(), Bj(a, b), null === a && sf(b.stateNode.containerInfo), S(b), null;\n    case 10:\n      return Rg(b.type._context), S(b), null;\n    case 17:\n      return Zf(b.type) && $f(), S(b), null;\n    case 19:\n      E(M);\n      f = b.memoizedState;\n      if (null === f) return S(b), null;\n      d = 0 !== (b.flags & 128);\n      g = f.rendering;\n      if (null === g) {\n        if (d) Ej(f, !1);else {\n          if (0 !== T || null !== a && 0 !== (a.flags & 128)) for (a = b.child; null !== a;) {\n            g = Mh(a);\n            if (null !== g) {\n              b.flags |= 128;\n              Ej(f, !1);\n              d = g.updateQueue;\n              null !== d && (b.updateQueue = d, b.flags |= 4);\n              b.subtreeFlags = 0;\n              d = c;\n              for (c = b.child; null !== c;) f = c, a = d, f.flags &= 14680066, g = f.alternate, null === g ? (f.childLanes = 0, f.lanes = a, f.child = null, f.subtreeFlags = 0, f.memoizedProps = null, f.memoizedState = null, f.updateQueue = null, f.dependencies = null, f.stateNode = null) : (f.childLanes = g.childLanes, f.lanes = g.lanes, f.child = g.child, f.subtreeFlags = 0, f.deletions = null, f.memoizedProps = g.memoizedProps, f.memoizedState = g.memoizedState, f.updateQueue = g.updateQueue, f.type = g.type, a = g.dependencies, f.dependencies = null === a ? null : {\n                lanes: a.lanes,\n                firstContext: a.firstContext\n              }), c = c.sibling;\n              G(M, M.current & 1 | 2);\n              return b.child;\n            }\n            a = a.sibling;\n          }\n          null !== f.tail && B() > Hj && (b.flags |= 128, d = !0, Ej(f, !1), b.lanes = 4194304);\n        }\n      } else {\n        if (!d) if (a = Mh(g), null !== a) {\n          if (b.flags |= 128, d = !0, c = a.updateQueue, null !== c && (b.updateQueue = c, b.flags |= 4), Ej(f, !0), null === f.tail && "hidden" === f.tailMode && !g.alternate && !I) return S(b), null;\n        } else 2 * B() - f.renderingStartTime > Hj && 1073741824 !== c && (b.flags |= 128, d = !0, Ej(f, !1), b.lanes = 4194304);\n        f.isBackwards ? (g.sibling = b.child, b.child = g) : (c = f.last, null !== c ? c.sibling = g : b.child = g, f.last = g);\n      }\n      if (null !== f.tail) return b = f.tail, f.rendering = b, f.tail = b.sibling, f.renderingStartTime = B(), b.sibling = null, c = M.current, G(M, d ? c & 1 | 2 : c & 1), b;\n      S(b);\n      return null;\n    case 22:\n    case 23:\n      return Ij(), d = null !== b.memoizedState, null !== a && null !== a.memoizedState !== d && (b.flags |= 8192), d && 0 !== (b.mode & 1) ? 0 !== (gj & 1073741824) && (S(b), b.subtreeFlags & 6 && (b.flags |= 8192)) : S(b), null;\n    case 24:\n      return null;\n    case 25:\n      return null;\n  }\n  throw Error(p(156, b.tag));\n}\nfunction Jj(a, b) {\n  wg(b);\n  switch (b.tag) {\n    case 1:\n      return Zf(b.type) && $f(), a = b.flags, a & 65536 ? (b.flags = a & -65537 | 128, b) : null;\n    case 3:\n      return Jh(), E(Wf), E(H), Oh(), a = b.flags, 0 !== (a & 65536) && 0 === (a & 128) ? (b.flags = a & -65537 | 128, b) : null;\n    case 5:\n      return Lh(b), null;\n    case 13:\n      E(M);\n      a = b.memoizedState;\n      if (null !== a && null !== a.dehydrated) {\n        if (null === b.alternate) throw Error(p(340));\n        Ig();\n      }\n      a = b.flags;\n      return a & 65536 ? (b.flags = a & -65537 | 128, b) : null;\n    case 19:\n      return E(M), null;\n    case 4:\n      return Jh(), null;\n    case 10:\n      return Rg(b.type._context), null;\n    case 22:\n    case 23:\n      return Ij(), null;\n    case 24:\n      return null;\n    default:\n      return null;\n  }\n}\nvar Kj = !1,\n  U = !1,\n  Lj = "function" === typeof WeakSet ? WeakSet : Set,\n  V = null;\nfunction Mj(a, b) {\n  var c = a.ref;\n  if (null !== c) if ("function" === typeof c) try {\n    c(null);\n  } catch (d) {\n    W(a, b, d);\n  } else c.current = null;\n}\nfunction Nj(a, b, c) {\n  try {\n    c();\n  } catch (d) {\n    W(a, b, d);\n  }\n}\nvar Oj = !1;\nfunction Pj(a, b) {\n  Cf = dd;\n  a = Me();\n  if (Ne(a)) {\n    if ("selectionStart" in a) var c = {\n      start: a.selectionStart,\n      end: a.selectionEnd\n    };else a: {\n      c = (c = a.ownerDocument) && c.defaultView || window;\n      var d = c.getSelection && c.getSelection();\n      if (d && 0 !== d.rangeCount) {\n        c = d.anchorNode;\n        var e = d.anchorOffset,\n          f = d.focusNode;\n        d = d.focusOffset;\n        try {\n          c.nodeType, f.nodeType;\n        } catch (F) {\n          c = null;\n          break a;\n        }\n        var g = 0,\n          h = -1,\n          k = -1,\n          l = 0,\n          m = 0,\n          q = a,\n          r = null;\n        b: for (;;) {\n          for (var y;;) {\n            q !== c || 0 !== e && 3 !== q.nodeType || (h = g + e);\n            q !== f || 0 !== d && 3 !== q.nodeType || (k = g + d);\n            3 === q.nodeType && (g += q.nodeValue.length);\n            if (null === (y = q.firstChild)) break;\n            r = q;\n            q = y;\n          }\n          for (;;) {\n            if (q === a) break b;\n            r === c && ++l === e && (h = g);\n            r === f && ++m === d && (k = g);\n            if (null !== (y = q.nextSibling)) break;\n            q = r;\n            r = q.parentNode;\n          }\n          q = y;\n        }\n        c = -1 === h || -1 === k ? null : {\n          start: h,\n          end: k\n        };\n      } else c = null;\n    }\n    c = c || {\n      start: 0,\n      end: 0\n    };\n  } else c = null;\n  Df = {\n    focusedElem: a,\n    selectionRange: c\n  };\n  dd = !1;\n  for (V = b; null !== V;) if (b = V, a = b.child, 0 !== (b.subtreeFlags & 1028) && null !== a) a.return = b, V = a;else for (; null !== V;) {\n    b = V;\n    try {\n      var n = b.alternate;\n      if (0 !== (b.flags & 1024)) switch (b.tag) {\n        case 0:\n        case 11:\n        case 15:\n          break;\n        case 1:\n          if (null !== n) {\n            var t = n.memoizedProps,\n              J = n.memoizedState,\n              x = b.stateNode,\n              w = x.getSnapshotBeforeUpdate(b.elementType === b.type ? t : Lg(b.type, t), J);\n            x.__reactInternalSnapshotBeforeUpdate = w;\n          }\n          break;\n        case 3:\n          var u = b.stateNode.containerInfo;\n          1 === u.nodeType ? u.textContent = "" : 9 === u.nodeType && u.documentElement && u.removeChild(u.documentElement);\n          break;\n        case 5:\n        case 6:\n        case 4:\n        case 17:\n          break;\n        default:\n          throw Error(p(163));\n      }\n    } catch (F) {\n      W(b, b.return, F);\n    }\n    a = b.sibling;\n    if (null !== a) {\n      a.return = b.return;\n      V = a;\n      break;\n    }\n    V = b.return;\n  }\n  n = Oj;\n  Oj = !1;\n  return n;\n}\nfunction Qj(a, b, c) {\n  var d = b.updateQueue;\n  d = null !== d ? d.lastEffect : null;\n  if (null !== d) {\n    var e = d = d.next;\n    do {\n      if ((e.tag & a) === a) {\n        var f = e.destroy;\n        e.destroy = void 0;\n        void 0 !== f && Nj(b, c, f);\n      }\n      e = e.next;\n    } while (e !== d);\n  }\n}\nfunction Rj(a, b) {\n  b = b.updateQueue;\n  b = null !== b ? b.lastEffect : null;\n  if (null !== b) {\n    var c = b = b.next;\n    do {\n      if ((c.tag & a) === a) {\n        var d = c.create;\n        c.destroy = d();\n      }\n      c = c.next;\n    } while (c !== b);\n  }\n}\nfunction Sj(a) {\n  var b = a.ref;\n  if (null !== b) {\n    var c = a.stateNode;\n    switch (a.tag) {\n      case 5:\n        a = c;\n        break;\n      default:\n        a = c;\n    }\n    "function" === typeof b ? b(a) : b.current = a;\n  }\n}\nfunction Tj(a) {\n  var b = a.alternate;\n  null !== b && (a.alternate = null, Tj(b));\n  a.child = null;\n  a.deletions = null;\n  a.sibling = null;\n  5 === a.tag && (b = a.stateNode, null !== b && (delete b[Of], delete b[Pf], delete b[of], delete b[Qf], delete b[Rf]));\n  a.stateNode = null;\n  a.return = null;\n  a.dependencies = null;\n  a.memoizedProps = null;\n  a.memoizedState = null;\n  a.pendingProps = null;\n  a.stateNode = null;\n  a.updateQueue = null;\n}\nfunction Uj(a) {\n  return 5 === a.tag || 3 === a.tag || 4 === a.tag;\n}\nfunction Vj(a) {\n  a: for (;;) {\n    for (; null === a.sibling;) {\n      if (null === a.return || Uj(a.return)) return null;\n      a = a.return;\n    }\n    a.sibling.return = a.return;\n    for (a = a.sibling; 5 !== a.tag && 6 !== a.tag && 18 !== a.tag;) {\n      if (a.flags & 2) continue a;\n      if (null === a.child || 4 === a.tag) continue a;else a.child.return = a, a = a.child;\n    }\n    if (!(a.flags & 2)) return a.stateNode;\n  }\n}\nfunction Wj(a, b, c) {\n  var d = a.tag;\n  if (5 === d || 6 === d) a = a.stateNode, b ? 8 === c.nodeType ? c.parentNode.insertBefore(a, b) : c.insertBefore(a, b) : (8 === c.nodeType ? (b = c.parentNode, b.insertBefore(a, c)) : (b = c, b.appendChild(a)), c = c._reactRootContainer, null !== c && void 0 !== c || null !== b.onclick || (b.onclick = Bf));else if (4 !== d && (a = a.child, null !== a)) for (Wj(a, b, c), a = a.sibling; null !== a;) Wj(a, b, c), a = a.sibling;\n}\nfunction Xj(a, b, c) {\n  var d = a.tag;\n  if (5 === d || 6 === d) a = a.stateNode, b ? c.insertBefore(a, b) : c.appendChild(a);else if (4 !== d && (a = a.child, null !== a)) for (Xj(a, b, c), a = a.sibling; null !== a;) Xj(a, b, c), a = a.sibling;\n}\nvar X = null,\n  Yj = !1;\nfunction Zj(a, b, c) {\n  for (c = c.child; null !== c;) ak(a, b, c), c = c.sibling;\n}\nfunction ak(a, b, c) {\n  if (lc && "function" === typeof lc.onCommitFiberUnmount) try {\n    lc.onCommitFiberUnmount(kc, c);\n  } catch (h) {}\n  switch (c.tag) {\n    case 5:\n      U || Mj(c, b);\n    case 6:\n      var d = X,\n        e = Yj;\n      X = null;\n      Zj(a, b, c);\n      X = d;\n      Yj = e;\n      null !== X && (Yj ? (a = X, c = c.stateNode, 8 === a.nodeType ? a.parentNode.removeChild(c) : a.removeChild(c)) : X.removeChild(c.stateNode));\n      break;\n    case 18:\n      null !== X && (Yj ? (a = X, c = c.stateNode, 8 === a.nodeType ? Kf(a.parentNode, c) : 1 === a.nodeType && Kf(a, c), bd(a)) : Kf(X, c.stateNode));\n      break;\n    case 4:\n      d = X;\n      e = Yj;\n      X = c.stateNode.containerInfo;\n      Yj = !0;\n      Zj(a, b, c);\n      X = d;\n      Yj = e;\n      break;\n    case 0:\n    case 11:\n    case 14:\n    case 15:\n      if (!U && (d = c.updateQueue, null !== d && (d = d.lastEffect, null !== d))) {\n        e = d = d.next;\n        do {\n          var f = e,\n            g = f.destroy;\n          f = f.tag;\n          void 0 !== g && (0 !== (f & 2) ? Nj(c, b, g) : 0 !== (f & 4) && Nj(c, b, g));\n          e = e.next;\n        } while (e !== d);\n      }\n      Zj(a, b, c);\n      break;\n    case 1:\n      if (!U && (Mj(c, b), d = c.stateNode, "function" === typeof d.componentWillUnmount)) try {\n        d.props = c.memoizedProps, d.state = c.memoizedState, d.componentWillUnmount();\n      } catch (h) {\n        W(c, b, h);\n      }\n      Zj(a, b, c);\n      break;\n    case 21:\n      Zj(a, b, c);\n      break;\n    case 22:\n      c.mode & 1 ? (U = (d = U) || null !== c.memoizedState, Zj(a, b, c), U = d) : Zj(a, b, c);\n      break;\n    default:\n      Zj(a, b, c);\n  }\n}\nfunction bk(a) {\n  var b = a.updateQueue;\n  if (null !== b) {\n    a.updateQueue = null;\n    var c = a.stateNode;\n    null === c && (c = a.stateNode = new Lj());\n    b.forEach(function (b) {\n      var d = ck.bind(null, a, b);\n      c.has(b) || (c.add(b), b.then(d, d));\n    });\n  }\n}\nfunction dk(a, b) {\n  var c = b.deletions;\n  if (null !== c) for (var d = 0; d < c.length; d++) {\n    var e = c[d];\n    try {\n      var f = a,\n        g = b,\n        h = g;\n      a: for (; null !== h;) {\n        switch (h.tag) {\n          case 5:\n            X = h.stateNode;\n            Yj = !1;\n            break a;\n          case 3:\n            X = h.stateNode.containerInfo;\n            Yj = !0;\n            break a;\n          case 4:\n            X = h.stateNode.containerInfo;\n            Yj = !0;\n            break a;\n        }\n        h = h.return;\n      }\n      if (null === X) throw Error(p(160));\n      ak(f, g, e);\n      X = null;\n      Yj = !1;\n      var k = e.alternate;\n      null !== k && (k.return = null);\n      e.return = null;\n    } catch (l) {\n      W(e, b, l);\n    }\n  }\n  if (b.subtreeFlags & 12854) for (b = b.child; null !== b;) ek(b, a), b = b.sibling;\n}\nfunction ek(a, b) {\n  var c = a.alternate,\n    d = a.flags;\n  switch (a.tag) {\n    case 0:\n    case 11:\n    case 14:\n    case 15:\n      dk(b, a);\n      fk(a);\n      if (d & 4) {\n        try {\n          Qj(3, a, a.return), Rj(3, a);\n        } catch (t) {\n          W(a, a.return, t);\n        }\n        try {\n          Qj(5, a, a.return);\n        } catch (t) {\n          W(a, a.return, t);\n        }\n      }\n      break;\n    case 1:\n      dk(b, a);\n      fk(a);\n      d & 512 && null !== c && Mj(c, c.return);\n      break;\n    case 5:\n      dk(b, a);\n      fk(a);\n      d & 512 && null !== c && Mj(c, c.return);\n      if (a.flags & 32) {\n        var e = a.stateNode;\n        try {\n          ob(e, "");\n        } catch (t) {\n          W(a, a.return, t);\n        }\n      }\n      if (d & 4 && (e = a.stateNode, null != e)) {\n        var f = a.memoizedProps,\n          g = null !== c ? c.memoizedProps : f,\n          h = a.type,\n          k = a.updateQueue;\n        a.updateQueue = null;\n        if (null !== k) try {\n          "input" === h && "radio" === f.type && null != f.name && ab(e, f);\n          vb(h, g);\n          var l = vb(h, f);\n          for (g = 0; g < k.length; g += 2) {\n            var m = k[g],\n              q = k[g + 1];\n            "style" === m ? sb(e, q) : "dangerouslySetInnerHTML" === m ? nb(e, q) : "children" === m ? ob(e, q) : ta(e, m, q, l);\n          }\n          switch (h) {\n            case "input":\n              bb(e, f);\n              break;\n            case "textarea":\n              ib(e, f);\n              break;\n            case "select":\n              var r = e._wrapperState.wasMultiple;\n              e._wrapperState.wasMultiple = !!f.multiple;\n              var y = f.value;\n              null != y ? fb(e, !!f.multiple, y, !1) : r !== !!f.multiple && (null != f.defaultValue ? fb(e, !!f.multiple, f.defaultValue, !0) : fb(e, !!f.multiple, f.multiple ? [] : "", !1));\n          }\n          e[Pf] = f;\n        } catch (t) {\n          W(a, a.return, t);\n        }\n      }\n      break;\n    case 6:\n      dk(b, a);\n      fk(a);\n      if (d & 4) {\n        if (null === a.stateNode) throw Error(p(162));\n        e = a.stateNode;\n        f = a.memoizedProps;\n        try {\n          e.nodeValue = f;\n        } catch (t) {\n          W(a, a.return, t);\n        }\n      }\n      break;\n    case 3:\n      dk(b, a);\n      fk(a);\n      if (d & 4 && null !== c && c.memoizedState.isDehydrated) try {\n        bd(b.containerInfo);\n      } catch (t) {\n        W(a, a.return, t);\n      }\n      break;\n    case 4:\n      dk(b, a);\n      fk(a);\n      break;\n    case 13:\n      dk(b, a);\n      fk(a);\n      e = a.child;\n      e.flags & 8192 && (f = null !== e.memoizedState, e.stateNode.isHidden = f, !f || null !== e.alternate && null !== e.alternate.memoizedState || (gk = B()));\n      d & 4 && bk(a);\n      break;\n    case 22:\n      m = null !== c && null !== c.memoizedState;\n      a.mode & 1 ? (U = (l = U) || m, dk(b, a), U = l) : dk(b, a);\n      fk(a);\n      if (d & 8192) {\n        l = null !== a.memoizedState;\n        if ((a.stateNode.isHidden = l) && !m && 0 !== (a.mode & 1)) for (V = a, m = a.child; null !== m;) {\n          for (q = V = m; null !== V;) {\n            r = V;\n            y = r.child;\n            switch (r.tag) {\n              case 0:\n              case 11:\n              case 14:\n              case 15:\n                Qj(4, r, r.return);\n                break;\n              case 1:\n                Mj(r, r.return);\n                var n = r.stateNode;\n                if ("function" === typeof n.componentWillUnmount) {\n                  d = r;\n                  c = r.return;\n                  try {\n                    b = d, n.props = b.memoizedProps, n.state = b.memoizedState, n.componentWillUnmount();\n                  } catch (t) {\n                    W(d, c, t);\n                  }\n                }\n                break;\n              case 5:\n                Mj(r, r.return);\n                break;\n              case 22:\n                if (null !== r.memoizedState) {\n                  hk(q);\n                  continue;\n                }\n            }\n            null !== y ? (y.return = r, V = y) : hk(q);\n          }\n          m = m.sibling;\n        }\n        a: for (m = null, q = a;;) {\n          if (5 === q.tag) {\n            if (null === m) {\n              m = q;\n              try {\n                e = q.stateNode, l ? (f = e.style, "function" === typeof f.setProperty ? f.setProperty("display", "none", "important") : f.display = "none") : (h = q.stateNode, k = q.memoizedProps.style, g = void 0 !== k && null !== k && k.hasOwnProperty("display") ? k.display : null, h.style.display = rb("display", g));\n              } catch (t) {\n                W(a, a.return, t);\n              }\n            }\n          } else if (6 === q.tag) {\n            if (null === m) try {\n              q.stateNode.nodeValue = l ? "" : q.memoizedProps;\n            } catch (t) {\n              W(a, a.return, t);\n            }\n          } else if ((22 !== q.tag && 23 !== q.tag || null === q.memoizedState || q === a) && null !== q.child) {\n            q.child.return = q;\n            q = q.child;\n            continue;\n          }\n          if (q === a) break a;\n          for (; null === q.sibling;) {\n            if (null === q.return || q.return === a) break a;\n            m === q && (m = null);\n            q = q.return;\n          }\n          m === q && (m = null);\n          q.sibling.return = q.return;\n          q = q.sibling;\n        }\n      }\n      break;\n    case 19:\n      dk(b, a);\n      fk(a);\n      d & 4 && bk(a);\n      break;\n    case 21:\n      break;\n    default:\n      dk(b, a), fk(a);\n  }\n}\nfunction fk(a) {\n  var b = a.flags;\n  if (b & 2) {\n    try {\n      a: {\n        for (var c = a.return; null !== c;) {\n          if (Uj(c)) {\n            var d = c;\n            break a;\n          }\n          c = c.return;\n        }\n        throw Error(p(160));\n      }\n      switch (d.tag) {\n        case 5:\n          var e = d.stateNode;\n          d.flags & 32 && (ob(e, ""), d.flags &= -33);\n          var f = Vj(a);\n          Xj(a, f, e);\n          break;\n        case 3:\n        case 4:\n          var g = d.stateNode.containerInfo,\n            h = Vj(a);\n          Wj(a, h, g);\n          break;\n        default:\n          throw Error(p(161));\n      }\n    } catch (k) {\n      W(a, a.return, k);\n    }\n    a.flags &= -3;\n  }\n  b & 4096 && (a.flags &= -4097);\n}\nfunction ik(a, b, c) {\n  V = a;\n  jk(a, b, c);\n}\nfunction jk(a, b, c) {\n  for (var d = 0 !== (a.mode & 1); null !== V;) {\n    var e = V,\n      f = e.child;\n    if (22 === e.tag && d) {\n      var g = null !== e.memoizedState || Kj;\n      if (!g) {\n        var h = e.alternate,\n          k = null !== h && null !== h.memoizedState || U;\n        h = Kj;\n        var l = U;\n        Kj = g;\n        if ((U = k) && !l) for (V = e; null !== V;) g = V, k = g.child, 22 === g.tag && null !== g.memoizedState ? kk(e) : null !== k ? (k.return = g, V = k) : kk(e);\n        for (; null !== f;) V = f, jk(f, b, c), f = f.sibling;\n        V = e;\n        Kj = h;\n        U = l;\n      }\n      lk(a, b, c);\n    } else 0 !== (e.subtreeFlags & 8772) && null !== f ? (f.return = e, V = f) : lk(a, b, c);\n  }\n}\nfunction lk(a) {\n  for (; null !== V;) {\n    var b = V;\n    if (0 !== (b.flags & 8772)) {\n      var c = b.alternate;\n      try {\n        if (0 !== (b.flags & 8772)) switch (b.tag) {\n          case 0:\n          case 11:\n          case 15:\n            U || Rj(5, b);\n            break;\n          case 1:\n            var d = b.stateNode;\n            if (b.flags & 4 && !U) if (null === c) d.componentDidMount();else {\n              var e = b.elementType === b.type ? c.memoizedProps : Lg(b.type, c.memoizedProps);\n              d.componentDidUpdate(e, c.memoizedState, d.__reactInternalSnapshotBeforeUpdate);\n            }\n            var f = b.updateQueue;\n            null !== f && ih(b, f, d);\n            break;\n          case 3:\n            var g = b.updateQueue;\n            if (null !== g) {\n              c = null;\n              if (null !== b.child) switch (b.child.tag) {\n                case 5:\n                  c = b.child.stateNode;\n                  break;\n                case 1:\n                  c = b.child.stateNode;\n              }\n              ih(b, g, c);\n            }\n            break;\n          case 5:\n            var h = b.stateNode;\n            if (null === c && b.flags & 4) {\n              c = h;\n              var k = b.memoizedProps;\n              switch (b.type) {\n                case "button":\n                case "input":\n                case "select":\n                case "textarea":\n                  k.autoFocus && c.focus();\n                  break;\n                case "img":\n                  k.src && (c.src = k.src);\n              }\n            }\n            break;\n          case 6:\n            break;\n          case 4:\n            break;\n          case 12:\n            break;\n          case 13:\n            if (null === b.memoizedState) {\n              var l = b.alternate;\n              if (null !== l) {\n                var m = l.memoizedState;\n                if (null !== m) {\n                  var q = m.dehydrated;\n                  null !== q && bd(q);\n                }\n              }\n            }\n            break;\n          case 19:\n          case 17:\n          case 21:\n          case 22:\n          case 23:\n          case 25:\n            break;\n          default:\n            throw Error(p(163));\n        }\n        U || b.flags & 512 && Sj(b);\n      } catch (r) {\n        W(b, b.return, r);\n      }\n    }\n    if (b === a) {\n      V = null;\n      break;\n    }\n    c = b.sibling;\n    if (null !== c) {\n      c.return = b.return;\n      V = c;\n      break;\n    }\n    V = b.return;\n  }\n}\nfunction hk(a) {\n  for (; null !== V;) {\n    var b = V;\n    if (b === a) {\n      V = null;\n      break;\n    }\n    var c = b.sibling;\n    if (null !== c) {\n      c.return = b.return;\n      V = c;\n      break;\n    }\n    V = b.return;\n  }\n}\nfunction kk(a) {\n  for (; null !== V;) {\n    var b = V;\n    try {\n      switch (b.tag) {\n        case 0:\n        case 11:\n        case 15:\n          var c = b.return;\n          try {\n            Rj(4, b);\n          } catch (k) {\n            W(b, c, k);\n          }\n          break;\n        case 1:\n          var d = b.stateNode;\n          if ("function" === typeof d.componentDidMount) {\n            var e = b.return;\n            try {\n              d.componentDidMount();\n            } catch (k) {\n              W(b, e, k);\n            }\n          }\n          var f = b.return;\n          try {\n            Sj(b);\n          } catch (k) {\n            W(b, f, k);\n          }\n          break;\n        case 5:\n          var g = b.return;\n          try {\n            Sj(b);\n          } catch (k) {\n            W(b, g, k);\n          }\n      }\n    } catch (k) {\n      W(b, b.return, k);\n    }\n    if (b === a) {\n      V = null;\n      break;\n    }\n    var h = b.sibling;\n    if (null !== h) {\n      h.return = b.return;\n      V = h;\n      break;\n    }\n    V = b.return;\n  }\n}\nvar mk = Math.ceil,\n  nk = ua.ReactCurrentDispatcher,\n  ok = ua.ReactCurrentOwner,\n  pk = ua.ReactCurrentBatchConfig,\n  K = 0,\n  R = null,\n  Y = null,\n  Z = 0,\n  gj = 0,\n  fj = Uf(0),\n  T = 0,\n  qk = null,\n  hh = 0,\n  rk = 0,\n  sk = 0,\n  tk = null,\n  uk = null,\n  gk = 0,\n  Hj = Infinity,\n  vk = null,\n  Pi = !1,\n  Qi = null,\n  Si = null,\n  wk = !1,\n  xk = null,\n  yk = 0,\n  zk = 0,\n  Ak = null,\n  Bk = -1,\n  Ck = 0;\nfunction L() {\n  return 0 !== (K & 6) ? B() : -1 !== Bk ? Bk : Bk = B();\n}\nfunction lh(a) {\n  if (0 === (a.mode & 1)) return 1;\n  if (0 !== (K & 2) && 0 !== Z) return Z & -Z;\n  if (null !== Kg.transition) return 0 === Ck && (Ck = yc()), Ck;\n  a = C;\n  if (0 !== a) return a;\n  a = window.event;\n  a = void 0 === a ? 16 : jd(a.type);\n  return a;\n}\nfunction mh(a, b, c, d) {\n  if (50 < zk) throw zk = 0, Ak = null, Error(p(185));\n  Ac(a, c, d);\n  if (0 === (K & 2) || a !== R) a === R && (0 === (K & 2) && (rk |= c), 4 === T && Dk(a, Z)), Ek(a, d), 1 === c && 0 === K && 0 === (b.mode & 1) && (Hj = B() + 500, fg && jg());\n}\nfunction Ek(a, b) {\n  var c = a.callbackNode;\n  wc(a, b);\n  var d = uc(a, a === R ? Z : 0);\n  if (0 === d) null !== c && bc(c), a.callbackNode = null, a.callbackPriority = 0;else if (b = d & -d, a.callbackPriority !== b) {\n    null != c && bc(c);\n    if (1 === b) 0 === a.tag ? ig(Fk.bind(null, a)) : hg(Fk.bind(null, a)), Jf(function () {\n      0 === (K & 6) && jg();\n    }), c = null;else {\n      switch (Dc(d)) {\n        case 1:\n          c = fc;\n          break;\n        case 4:\n          c = gc;\n          break;\n        case 16:\n          c = hc;\n          break;\n        case 536870912:\n          c = jc;\n          break;\n        default:\n          c = hc;\n      }\n      c = Gk(c, Hk.bind(null, a));\n    }\n    a.callbackPriority = b;\n    a.callbackNode = c;\n  }\n}\nfunction Hk(a, b) {\n  Bk = -1;\n  Ck = 0;\n  if (0 !== (K & 6)) throw Error(p(327));\n  var c = a.callbackNode;\n  if (Ik() && a.callbackNode !== c) return null;\n  var d = uc(a, a === R ? Z : 0);\n  if (0 === d) return null;\n  if (0 !== (d & 30) || 0 !== (d & a.expiredLanes) || b) b = Jk(a, d);else {\n    b = d;\n    var e = K;\n    K |= 2;\n    var f = Kk();\n    if (R !== a || Z !== b) vk = null, Hj = B() + 500, Lk(a, b);\n    do try {\n      Mk();\n      break;\n    } catch (h) {\n      Nk(a, h);\n    } while (1);\n    Qg();\n    nk.current = f;\n    K = e;\n    null !== Y ? b = 0 : (R = null, Z = 0, b = T);\n  }\n  if (0 !== b) {\n    2 === b && (e = xc(a), 0 !== e && (d = e, b = Ok(a, e)));\n    if (1 === b) throw c = qk, Lk(a, 0), Dk(a, d), Ek(a, B()), c;\n    if (6 === b) Dk(a, d);else {\n      e = a.current.alternate;\n      if (0 === (d & 30) && !Pk(e) && (b = Jk(a, d), 2 === b && (f = xc(a), 0 !== f && (d = f, b = Ok(a, f))), 1 === b)) throw c = qk, Lk(a, 0), Dk(a, d), Ek(a, B()), c;\n      a.finishedWork = e;\n      a.finishedLanes = d;\n      switch (b) {\n        case 0:\n        case 1:\n          throw Error(p(345));\n        case 2:\n          Qk(a, uk, vk);\n          break;\n        case 3:\n          Dk(a, d);\n          if ((d & 130023424) === d && (b = gk + 500 - B(), 10 < b)) {\n            if (0 !== uc(a, 0)) break;\n            e = a.suspendedLanes;\n            if ((e & d) !== d) {\n              L();\n              a.pingedLanes |= a.suspendedLanes & e;\n              break;\n            }\n            a.timeoutHandle = Ff(Qk.bind(null, a, uk, vk), b);\n            break;\n          }\n          Qk(a, uk, vk);\n          break;\n        case 4:\n          Dk(a, d);\n          if ((d & 4194240) === d) break;\n          b = a.eventTimes;\n          for (e = -1; 0 < d;) {\n            var g = 31 - oc(d);\n            f = 1 << g;\n            g = b[g];\n            g > e && (e = g);\n            d &= ~f;\n          }\n          d = e;\n          d = B() - d;\n          d = (120 > d ? 120 : 480 > d ? 480 : 1080 > d ? 1080 : 1920 > d ? 1920 : 3E3 > d ? 3E3 : 4320 > d ? 4320 : 1960 * mk(d / 1960)) - d;\n          if (10 < d) {\n            a.timeoutHandle = Ff(Qk.bind(null, a, uk, vk), d);\n            break;\n          }\n          Qk(a, uk, vk);\n          break;\n        case 5:\n          Qk(a, uk, vk);\n          break;\n        default:\n          throw Error(p(329));\n      }\n    }\n  }\n  Ek(a, B());\n  return a.callbackNode === c ? Hk.bind(null, a) : null;\n}\nfunction Ok(a, b) {\n  var c = tk;\n  a.current.memoizedState.isDehydrated && (Lk(a, b).flags |= 256);\n  a = Jk(a, b);\n  2 !== a && (b = uk, uk = c, null !== b && Gj(b));\n  return a;\n}\nfunction Gj(a) {\n  null === uk ? uk = a : uk.push.apply(uk, a);\n}\nfunction Pk(a) {\n  for (var b = a;;) {\n    if (b.flags & 16384) {\n      var c = b.updateQueue;\n      if (null !== c && (c = c.stores, null !== c)) for (var d = 0; d < c.length; d++) {\n        var e = c[d],\n          f = e.getSnapshot;\n        e = e.value;\n        try {\n          if (!He(f(), e)) return !1;\n        } catch (g) {\n          return !1;\n        }\n      }\n    }\n    c = b.child;\n    if (b.subtreeFlags & 16384 && null !== c) c.return = b, b = c;else {\n      if (b === a) break;\n      for (; null === b.sibling;) {\n        if (null === b.return || b.return === a) return !0;\n        b = b.return;\n      }\n      b.sibling.return = b.return;\n      b = b.sibling;\n    }\n  }\n  return !0;\n}\nfunction Dk(a, b) {\n  b &= ~sk;\n  b &= ~rk;\n  a.suspendedLanes |= b;\n  a.pingedLanes &= ~b;\n  for (a = a.expirationTimes; 0 < b;) {\n    var c = 31 - oc(b),\n      d = 1 << c;\n    a[c] = -1;\n    b &= ~d;\n  }\n}\nfunction Fk(a) {\n  if (0 !== (K & 6)) throw Error(p(327));\n  Ik();\n  var b = uc(a, 0);\n  if (0 === (b & 1)) return Ek(a, B()), null;\n  var c = Jk(a, b);\n  if (0 !== a.tag && 2 === c) {\n    var d = xc(a);\n    0 !== d && (b = d, c = Ok(a, d));\n  }\n  if (1 === c) throw c = qk, Lk(a, 0), Dk(a, b), Ek(a, B()), c;\n  if (6 === c) throw Error(p(345));\n  a.finishedWork = a.current.alternate;\n  a.finishedLanes = b;\n  Qk(a, uk, vk);\n  Ek(a, B());\n  return null;\n}\nfunction Rk(a, b) {\n  var c = K;\n  K |= 1;\n  try {\n    return a(b);\n  } finally {\n    K = c, 0 === K && (Hj = B() + 500, fg && jg());\n  }\n}\nfunction Sk(a) {\n  null !== xk && 0 === xk.tag && 0 === (K & 6) && Ik();\n  var b = K;\n  K |= 1;\n  var c = pk.transition,\n    d = C;\n  try {\n    if (pk.transition = null, C = 1, a) return a();\n  } finally {\n    C = d, pk.transition = c, K = b, 0 === (K & 6) && jg();\n  }\n}\nfunction Ij() {\n  gj = fj.current;\n  E(fj);\n}\nfunction Lk(a, b) {\n  a.finishedWork = null;\n  a.finishedLanes = 0;\n  var c = a.timeoutHandle;\n  -1 !== c && (a.timeoutHandle = -1, Gf(c));\n  if (null !== Y) for (c = Y.return; null !== c;) {\n    var d = c;\n    wg(d);\n    switch (d.tag) {\n      case 1:\n        d = d.type.childContextTypes;\n        null !== d && void 0 !== d && $f();\n        break;\n      case 3:\n        Jh();\n        E(Wf);\n        E(H);\n        Oh();\n        break;\n      case 5:\n        Lh(d);\n        break;\n      case 4:\n        Jh();\n        break;\n      case 13:\n        E(M);\n        break;\n      case 19:\n        E(M);\n        break;\n      case 10:\n        Rg(d.type._context);\n        break;\n      case 22:\n      case 23:\n        Ij();\n    }\n    c = c.return;\n  }\n  R = a;\n  Y = a = wh(a.current, null);\n  Z = gj = b;\n  T = 0;\n  qk = null;\n  sk = rk = hh = 0;\n  uk = tk = null;\n  if (null !== Wg) {\n    for (b = 0; b < Wg.length; b++) if (c = Wg[b], d = c.interleaved, null !== d) {\n      c.interleaved = null;\n      var e = d.next,\n        f = c.pending;\n      if (null !== f) {\n        var g = f.next;\n        f.next = e;\n        d.next = g;\n      }\n      c.pending = d;\n    }\n    Wg = null;\n  }\n  return a;\n}\nfunction Nk(a, b) {\n  do {\n    var c = Y;\n    try {\n      Qg();\n      Ph.current = ai;\n      if (Sh) {\n        for (var d = N.memoizedState; null !== d;) {\n          var e = d.queue;\n          null !== e && (e.pending = null);\n          d = d.next;\n        }\n        Sh = !1;\n      }\n      Rh = 0;\n      P = O = N = null;\n      Th = !1;\n      Uh = 0;\n      ok.current = null;\n      if (null === c || null === c.return) {\n        T = 1;\n        qk = b;\n        Y = null;\n        break;\n      }\n      a: {\n        var f = a,\n          g = c.return,\n          h = c,\n          k = b;\n        b = Z;\n        h.flags |= 32768;\n        if (null !== k && "object" === typeof k && "function" === typeof k.then) {\n          var l = k,\n            m = h,\n            q = m.tag;\n          if (0 === (m.mode & 1) && (0 === q || 11 === q || 15 === q)) {\n            var r = m.alternate;\n            r ? (m.updateQueue = r.updateQueue, m.memoizedState = r.memoizedState, m.lanes = r.lanes) : (m.updateQueue = null, m.memoizedState = null);\n          }\n          var y = Vi(g);\n          if (null !== y) {\n            y.flags &= -257;\n            Wi(y, g, h, f, b);\n            y.mode & 1 && Ti(f, l, b);\n            b = y;\n            k = l;\n            var n = b.updateQueue;\n            if (null === n) {\n              var t = new Set();\n              t.add(k);\n              b.updateQueue = t;\n            } else n.add(k);\n            break a;\n          } else {\n            if (0 === (b & 1)) {\n              Ti(f, l, b);\n              uj();\n              break a;\n            }\n            k = Error(p(426));\n          }\n        } else if (I && h.mode & 1) {\n          var J = Vi(g);\n          if (null !== J) {\n            0 === (J.flags & 65536) && (J.flags |= 256);\n            Wi(J, g, h, f, b);\n            Jg(Ki(k, h));\n            break a;\n          }\n        }\n        f = k = Ki(k, h);\n        4 !== T && (T = 2);\n        null === tk ? tk = [f] : tk.push(f);\n        f = g;\n        do {\n          switch (f.tag) {\n            case 3:\n              f.flags |= 65536;\n              b &= -b;\n              f.lanes |= b;\n              var x = Oi(f, k, b);\n              fh(f, x);\n              break a;\n            case 1:\n              h = k;\n              var w = f.type,\n                u = f.stateNode;\n              if (0 === (f.flags & 128) && ("function" === typeof w.getDerivedStateFromError || null !== u && "function" === typeof u.componentDidCatch && (null === Si || !Si.has(u)))) {\n                f.flags |= 65536;\n                b &= -b;\n                f.lanes |= b;\n                var F = Ri(f, h, b);\n                fh(f, F);\n                break a;\n              }\n          }\n          f = f.return;\n        } while (null !== f);\n      }\n      Tk(c);\n    } catch (na) {\n      b = na;\n      Y === c && null !== c && (Y = c = c.return);\n      continue;\n    }\n    break;\n  } while (1);\n}\nfunction Kk() {\n  var a = nk.current;\n  nk.current = ai;\n  return null === a ? ai : a;\n}\nfunction uj() {\n  if (0 === T || 3 === T || 2 === T) T = 4;\n  null === R || 0 === (hh & 268435455) && 0 === (rk & 268435455) || Dk(R, Z);\n}\nfunction Jk(a, b) {\n  var c = K;\n  K |= 2;\n  var d = Kk();\n  if (R !== a || Z !== b) vk = null, Lk(a, b);\n  do try {\n    Uk();\n    break;\n  } catch (e) {\n    Nk(a, e);\n  } while (1);\n  Qg();\n  K = c;\n  nk.current = d;\n  if (null !== Y) throw Error(p(261));\n  R = null;\n  Z = 0;\n  return T;\n}\nfunction Uk() {\n  for (; null !== Y;) Vk(Y);\n}\nfunction Mk() {\n  for (; null !== Y && !cc();) Vk(Y);\n}\nfunction Vk(a) {\n  var b = Wk(a.alternate, a, gj);\n  a.memoizedProps = a.pendingProps;\n  null === b ? Tk(a) : Y = b;\n  ok.current = null;\n}\nfunction Tk(a) {\n  var b = a;\n  do {\n    var c = b.alternate;\n    a = b.return;\n    if (0 === (b.flags & 32768)) {\n      if (c = Fj(c, b, gj), null !== c) {\n        Y = c;\n        return;\n      }\n    } else {\n      c = Jj(c, b);\n      if (null !== c) {\n        c.flags &= 32767;\n        Y = c;\n        return;\n      }\n      if (null !== a) a.flags |= 32768, a.subtreeFlags = 0, a.deletions = null;else {\n        T = 6;\n        Y = null;\n        return;\n      }\n    }\n    b = b.sibling;\n    if (null !== b) {\n      Y = b;\n      return;\n    }\n    Y = b = a;\n  } while (null !== b);\n  0 === T && (T = 5);\n}\nfunction Qk(a, b, c) {\n  var d = C,\n    e = pk.transition;\n  try {\n    pk.transition = null, C = 1, Xk(a, b, c, d);\n  } finally {\n    pk.transition = e, C = d;\n  }\n  return null;\n}\nfunction Xk(a, b, c, d) {\n  do Ik(); while (null !== xk);\n  if (0 !== (K & 6)) throw Error(p(327));\n  c = a.finishedWork;\n  var e = a.finishedLanes;\n  if (null === c) return null;\n  a.finishedWork = null;\n  a.finishedLanes = 0;\n  if (c === a.current) throw Error(p(177));\n  a.callbackNode = null;\n  a.callbackPriority = 0;\n  var f = c.lanes | c.childLanes;\n  Bc(a, f);\n  a === R && (Y = R = null, Z = 0);\n  0 === (c.subtreeFlags & 2064) && 0 === (c.flags & 2064) || wk || (wk = !0, Gk(hc, function () {\n    Ik();\n    return null;\n  }));\n  f = 0 !== (c.flags & 15990);\n  if (0 !== (c.subtreeFlags & 15990) || f) {\n    f = pk.transition;\n    pk.transition = null;\n    var g = C;\n    C = 1;\n    var h = K;\n    K |= 4;\n    ok.current = null;\n    Pj(a, c);\n    ek(c, a);\n    Oe(Df);\n    dd = !!Cf;\n    Df = Cf = null;\n    a.current = c;\n    ik(c, a, e);\n    dc();\n    K = h;\n    C = g;\n    pk.transition = f;\n  } else a.current = c;\n  wk && (wk = !1, xk = a, yk = e);\n  f = a.pendingLanes;\n  0 === f && (Si = null);\n  mc(c.stateNode, d);\n  Ek(a, B());\n  if (null !== b) for (d = a.onRecoverableError, c = 0; c < b.length; c++) e = b[c], d(e.value, {\n    componentStack: e.stack,\n    digest: e.digest\n  });\n  if (Pi) throw Pi = !1, a = Qi, Qi = null, a;\n  0 !== (yk & 1) && 0 !== a.tag && Ik();\n  f = a.pendingLanes;\n  0 !== (f & 1) ? a === Ak ? zk++ : (zk = 0, Ak = a) : zk = 0;\n  jg();\n  return null;\n}\nfunction Ik() {\n  if (null !== xk) {\n    var a = Dc(yk),\n      b = pk.transition,\n      c = C;\n    try {\n      pk.transition = null;\n      C = 16 > a ? 16 : a;\n      if (null === xk) var d = !1;else {\n        a = xk;\n        xk = null;\n        yk = 0;\n        if (0 !== (K & 6)) throw Error(p(331));\n        var e = K;\n        K |= 4;\n        for (V = a.current; null !== V;) {\n          var f = V,\n            g = f.child;\n          if (0 !== (V.flags & 16)) {\n            var h = f.deletions;\n            if (null !== h) {\n              for (var k = 0; k < h.length; k++) {\n                var l = h[k];\n                for (V = l; null !== V;) {\n                  var m = V;\n                  switch (m.tag) {\n                    case 0:\n                    case 11:\n                    case 15:\n                      Qj(8, m, f);\n                  }\n                  var q = m.child;\n                  if (null !== q) q.return = m, V = q;else for (; null !== V;) {\n                    m = V;\n                    var r = m.sibling,\n                      y = m.return;\n                    Tj(m);\n                    if (m === l) {\n                      V = null;\n                      break;\n                    }\n                    if (null !== r) {\n                      r.return = y;\n                      V = r;\n                      break;\n                    }\n                    V = y;\n                  }\n                }\n              }\n              var n = f.alternate;\n              if (null !== n) {\n                var t = n.child;\n                if (null !== t) {\n                  n.child = null;\n                  do {\n                    var J = t.sibling;\n                    t.sibling = null;\n                    t = J;\n                  } while (null !== t);\n                }\n              }\n              V = f;\n            }\n          }\n          if (0 !== (f.subtreeFlags & 2064) && null !== g) g.return = f, V = g;else b: for (; null !== V;) {\n            f = V;\n            if (0 !== (f.flags & 2048)) switch (f.tag) {\n              case 0:\n              case 11:\n              case 15:\n                Qj(9, f, f.return);\n            }\n            var x = f.sibling;\n            if (null !== x) {\n              x.return = f.return;\n              V = x;\n              break b;\n            }\n            V = f.return;\n          }\n        }\n        var w = a.current;\n        for (V = w; null !== V;) {\n          g = V;\n          var u = g.child;\n          if (0 !== (g.subtreeFlags & 2064) && null !== u) u.return = g, V = u;else b: for (g = w; null !== V;) {\n            h = V;\n            if (0 !== (h.flags & 2048)) try {\n              switch (h.tag) {\n                case 0:\n                case 11:\n                case 15:\n                  Rj(9, h);\n              }\n            } catch (na) {\n              W(h, h.return, na);\n            }\n            if (h === g) {\n              V = null;\n              break b;\n            }\n            var F = h.sibling;\n            if (null !== F) {\n              F.return = h.return;\n              V = F;\n              break b;\n            }\n            V = h.return;\n          }\n        }\n        K = e;\n        jg();\n        if (lc && "function" === typeof lc.onPostCommitFiberRoot) try {\n          lc.onPostCommitFiberRoot(kc, a);\n        } catch (na) {}\n        d = !0;\n      }\n      return d;\n    } finally {\n      C = c, pk.transition = b;\n    }\n  }\n  return !1;\n}\nfunction Yk(a, b, c) {\n  b = Ki(c, b);\n  b = Oi(a, b, 1);\n  a = dh(a, b, 1);\n  b = L();\n  null !== a && (Ac(a, 1, b), Ek(a, b));\n}\nfunction W(a, b, c) {\n  if (3 === a.tag) Yk(a, a, c);else for (; null !== b;) {\n    if (3 === b.tag) {\n      Yk(b, a, c);\n      break;\n    } else if (1 === b.tag) {\n      var d = b.stateNode;\n      if ("function" === typeof b.type.getDerivedStateFromError || "function" === typeof d.componentDidCatch && (null === Si || !Si.has(d))) {\n        a = Ki(c, a);\n        a = Ri(b, a, 1);\n        b = dh(b, a, 1);\n        a = L();\n        null !== b && (Ac(b, 1, a), Ek(b, a));\n        break;\n      }\n    }\n    b = b.return;\n  }\n}\nfunction Ui(a, b, c) {\n  var d = a.pingCache;\n  null !== d && d.delete(b);\n  b = L();\n  a.pingedLanes |= a.suspendedLanes & c;\n  R === a && (Z & c) === c && (4 === T || 3 === T && (Z & 130023424) === Z && 500 > B() - gk ? Lk(a, 0) : sk |= c);\n  Ek(a, b);\n}\nfunction Zk(a, b) {\n  0 === b && (0 === (a.mode & 1) ? b = 1 : (b = sc, sc <<= 1, 0 === (sc & 130023424) && (sc = 4194304)));\n  var c = L();\n  a = Zg(a, b);\n  null !== a && (Ac(a, b, c), Ek(a, c));\n}\nfunction vj(a) {\n  var b = a.memoizedState,\n    c = 0;\n  null !== b && (c = b.retryLane);\n  Zk(a, c);\n}\nfunction ck(a, b) {\n  var c = 0;\n  switch (a.tag) {\n    case 13:\n      var d = a.stateNode;\n      var e = a.memoizedState;\n      null !== e && (c = e.retryLane);\n      break;\n    case 19:\n      d = a.stateNode;\n      break;\n    default:\n      throw Error(p(314));\n  }\n  null !== d && d.delete(b);\n  Zk(a, c);\n}\nvar Wk;\nWk = function (a, b, c) {\n  if (null !== a) {\n    if (a.memoizedProps !== b.pendingProps || Wf.current) Ug = !0;else {\n      if (0 === (a.lanes & c) && 0 === (b.flags & 128)) return Ug = !1, zj(a, b, c);\n      Ug = 0 !== (a.flags & 131072) ? !0 : !1;\n    }\n  } else Ug = !1, I && 0 !== (b.flags & 1048576) && ug(b, ng, b.index);\n  b.lanes = 0;\n  switch (b.tag) {\n    case 2:\n      var d = b.type;\n      jj(a, b);\n      a = b.pendingProps;\n      var e = Yf(b, H.current);\n      Tg(b, c);\n      e = Xh(null, b, d, a, e, c);\n      var f = bi();\n      b.flags |= 1;\n      "object" === typeof e && null !== e && "function" === typeof e.render && void 0 === e.$$typeof ? (b.tag = 1, b.memoizedState = null, b.updateQueue = null, Zf(d) ? (f = !0, cg(b)) : f = !1, b.memoizedState = null !== e.state && void 0 !== e.state ? e.state : null, ah(b), e.updater = nh, b.stateNode = e, e._reactInternals = b, rh(b, d, a, c), b = kj(null, b, d, !0, f, c)) : (b.tag = 0, I && f && vg(b), Yi(null, b, e, c), b = b.child);\n      return b;\n    case 16:\n      d = b.elementType;\n      a: {\n        jj(a, b);\n        a = b.pendingProps;\n        e = d._init;\n        d = e(d._payload);\n        b.type = d;\n        e = b.tag = $k(d);\n        a = Lg(d, a);\n        switch (e) {\n          case 0:\n            b = dj(null, b, d, a, c);\n            break a;\n          case 1:\n            b = ij(null, b, d, a, c);\n            break a;\n          case 11:\n            b = Zi(null, b, d, a, c);\n            break a;\n          case 14:\n            b = aj(null, b, d, Lg(d.type, a), c);\n            break a;\n        }\n        throw Error(p(306, d, ""));\n      }\n      return b;\n    case 0:\n      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : Lg(d, e), dj(a, b, d, e, c);\n    case 1:\n      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : Lg(d, e), ij(a, b, d, e, c);\n    case 3:\n      a: {\n        lj(b);\n        if (null === a) throw Error(p(387));\n        d = b.pendingProps;\n        f = b.memoizedState;\n        e = f.element;\n        bh(a, b);\n        gh(b, d, null, c);\n        var g = b.memoizedState;\n        d = g.element;\n        if (f.isDehydrated) {\n          if (f = {\n            element: d,\n            isDehydrated: !1,\n            cache: g.cache,\n            pendingSuspenseBoundaries: g.pendingSuspenseBoundaries,\n            transitions: g.transitions\n          }, b.updateQueue.baseState = f, b.memoizedState = f, b.flags & 256) {\n            e = Ki(Error(p(423)), b);\n            b = mj(a, b, d, c, e);\n            break a;\n          } else if (d !== e) {\n            e = Ki(Error(p(424)), b);\n            b = mj(a, b, d, c, e);\n            break a;\n          } else for (yg = Lf(b.stateNode.containerInfo.firstChild), xg = b, I = !0, zg = null, c = Ch(b, null, d, c), b.child = c; c;) c.flags = c.flags & -3 | 4096, c = c.sibling;\n        } else {\n          Ig();\n          if (d === e) {\n            b = $i(a, b, c);\n            break a;\n          }\n          Yi(a, b, d, c);\n        }\n        b = b.child;\n      }\n      return b;\n    case 5:\n      return Kh(b), null === a && Eg(b), d = b.type, e = b.pendingProps, f = null !== a ? a.memoizedProps : null, g = e.children, Ef(d, e) ? g = null : null !== f && Ef(d, f) && (b.flags |= 32), hj(a, b), Yi(a, b, g, c), b.child;\n    case 6:\n      return null === a && Eg(b), null;\n    case 13:\n      return pj(a, b, c);\n    case 4:\n      return Ih(b, b.stateNode.containerInfo), d = b.pendingProps, null === a ? b.child = Bh(b, null, d, c) : Yi(a, b, d, c), b.child;\n    case 11:\n      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : Lg(d, e), Zi(a, b, d, e, c);\n    case 7:\n      return Yi(a, b, b.pendingProps, c), b.child;\n    case 8:\n      return Yi(a, b, b.pendingProps.children, c), b.child;\n    case 12:\n      return Yi(a, b, b.pendingProps.children, c), b.child;\n    case 10:\n      a: {\n        d = b.type._context;\n        e = b.pendingProps;\n        f = b.memoizedProps;\n        g = e.value;\n        G(Mg, d._currentValue);\n        d._currentValue = g;\n        if (null !== f) if (He(f.value, g)) {\n          if (f.children === e.children && !Wf.current) {\n            b = $i(a, b, c);\n            break a;\n          }\n        } else for (f = b.child, null !== f && (f.return = b); null !== f;) {\n          var h = f.dependencies;\n          if (null !== h) {\n            g = f.child;\n            for (var k = h.firstContext; null !== k;) {\n              if (k.context === d) {\n                if (1 === f.tag) {\n                  k = ch(-1, c & -c);\n                  k.tag = 2;\n                  var l = f.updateQueue;\n                  if (null !== l) {\n                    l = l.shared;\n                    var m = l.pending;\n                    null === m ? k.next = k : (k.next = m.next, m.next = k);\n                    l.pending = k;\n                  }\n                }\n                f.lanes |= c;\n                k = f.alternate;\n                null !== k && (k.lanes |= c);\n                Sg(f.return, c, b);\n                h.lanes |= c;\n                break;\n              }\n              k = k.next;\n            }\n          } else if (10 === f.tag) g = f.type === b.type ? null : f.child;else if (18 === f.tag) {\n            g = f.return;\n            if (null === g) throw Error(p(341));\n            g.lanes |= c;\n            h = g.alternate;\n            null !== h && (h.lanes |= c);\n            Sg(g, c, b);\n            g = f.sibling;\n          } else g = f.child;\n          if (null !== g) g.return = f;else for (g = f; null !== g;) {\n            if (g === b) {\n              g = null;\n              break;\n            }\n            f = g.sibling;\n            if (null !== f) {\n              f.return = g.return;\n              g = f;\n              break;\n            }\n            g = g.return;\n          }\n          f = g;\n        }\n        Yi(a, b, e.children, c);\n        b = b.child;\n      }\n      return b;\n    case 9:\n      return e = b.type, d = b.pendingProps.children, Tg(b, c), e = Vg(e), d = d(e), b.flags |= 1, Yi(a, b, d, c), b.child;\n    case 14:\n      return d = b.type, e = Lg(d, b.pendingProps), e = Lg(d.type, e), aj(a, b, d, e, c);\n    case 15:\n      return cj(a, b, b.type, b.pendingProps, c);\n    case 17:\n      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : Lg(d, e), jj(a, b), b.tag = 1, Zf(d) ? (a = !0, cg(b)) : a = !1, Tg(b, c), ph(b, d, e), rh(b, d, e, c), kj(null, b, d, !0, a, c);\n    case 19:\n      return yj(a, b, c);\n    case 22:\n      return ej(a, b, c);\n  }\n  throw Error(p(156, b.tag));\n};\nfunction Gk(a, b) {\n  return ac(a, b);\n}\nfunction al(a, b, c, d) {\n  this.tag = a;\n  this.key = c;\n  this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;\n  this.index = 0;\n  this.ref = null;\n  this.pendingProps = b;\n  this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;\n  this.mode = d;\n  this.subtreeFlags = this.flags = 0;\n  this.deletions = null;\n  this.childLanes = this.lanes = 0;\n  this.alternate = null;\n}\nfunction Bg(a, b, c, d) {\n  return new al(a, b, c, d);\n}\nfunction bj(a) {\n  a = a.prototype;\n  return !(!a || !a.isReactComponent);\n}\nfunction $k(a) {\n  if ("function" === typeof a) return bj(a) ? 1 : 0;\n  if (void 0 !== a && null !== a) {\n    a = a.$$typeof;\n    if (a === Da) return 11;\n    if (a === Ga) return 14;\n  }\n  return 2;\n}\nfunction wh(a, b) {\n  var c = a.alternate;\n  null === c ? (c = Bg(a.tag, b, a.key, a.mode), c.elementType = a.elementType, c.type = a.type, c.stateNode = a.stateNode, c.alternate = a, a.alternate = c) : (c.pendingProps = b, c.type = a.type, c.flags = 0, c.subtreeFlags = 0, c.deletions = null);\n  c.flags = a.flags & 14680064;\n  c.childLanes = a.childLanes;\n  c.lanes = a.lanes;\n  c.child = a.child;\n  c.memoizedProps = a.memoizedProps;\n  c.memoizedState = a.memoizedState;\n  c.updateQueue = a.updateQueue;\n  b = a.dependencies;\n  c.dependencies = null === b ? null : {\n    lanes: b.lanes,\n    firstContext: b.firstContext\n  };\n  c.sibling = a.sibling;\n  c.index = a.index;\n  c.ref = a.ref;\n  return c;\n}\nfunction yh(a, b, c, d, e, f) {\n  var g = 2;\n  d = a;\n  if ("function" === typeof a) bj(a) && (g = 1);else if ("string" === typeof a) g = 5;else a: switch (a) {\n    case ya:\n      return Ah(c.children, e, f, b);\n    case za:\n      g = 8;\n      e |= 8;\n      break;\n    case Aa:\n      return a = Bg(12, c, b, e | 2), a.elementType = Aa, a.lanes = f, a;\n    case Ea:\n      return a = Bg(13, c, b, e), a.elementType = Ea, a.lanes = f, a;\n    case Fa:\n      return a = Bg(19, c, b, e), a.elementType = Fa, a.lanes = f, a;\n    case Ia:\n      return qj(c, e, f, b);\n    default:\n      if ("object" === typeof a && null !== a) switch (a.$$typeof) {\n        case Ba:\n          g = 10;\n          break a;\n        case Ca:\n          g = 9;\n          break a;\n        case Da:\n          g = 11;\n          break a;\n        case Ga:\n          g = 14;\n          break a;\n        case Ha:\n          g = 16;\n          d = null;\n          break a;\n      }\n      throw Error(p(130, null == a ? a : typeof a, ""));\n  }\n  b = Bg(g, c, b, e);\n  b.elementType = a;\n  b.type = d;\n  b.lanes = f;\n  return b;\n}\nfunction Ah(a, b, c, d) {\n  a = Bg(7, a, d, b);\n  a.lanes = c;\n  return a;\n}\nfunction qj(a, b, c, d) {\n  a = Bg(22, a, d, b);\n  a.elementType = Ia;\n  a.lanes = c;\n  a.stateNode = {\n    isHidden: !1\n  };\n  return a;\n}\nfunction xh(a, b, c) {\n  a = Bg(6, a, null, b);\n  a.lanes = c;\n  return a;\n}\nfunction zh(a, b, c) {\n  b = Bg(4, null !== a.children ? a.children : [], a.key, b);\n  b.lanes = c;\n  b.stateNode = {\n    containerInfo: a.containerInfo,\n    pendingChildren: null,\n    implementation: a.implementation\n  };\n  return b;\n}\nfunction bl(a, b, c, d, e) {\n  this.tag = b;\n  this.containerInfo = a;\n  this.finishedWork = this.pingCache = this.current = this.pendingChildren = null;\n  this.timeoutHandle = -1;\n  this.callbackNode = this.pendingContext = this.context = null;\n  this.callbackPriority = 0;\n  this.eventTimes = zc(0);\n  this.expirationTimes = zc(-1);\n  this.entangledLanes = this.finishedLanes = this.mutableReadLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0;\n  this.entanglements = zc(0);\n  this.identifierPrefix = d;\n  this.onRecoverableError = e;\n  this.mutableSourceEagerHydrationData = null;\n}\nfunction cl(a, b, c, d, e, f, g, h, k) {\n  a = new bl(a, b, c, h, k);\n  1 === b ? (b = 1, !0 === f && (b |= 8)) : b = 0;\n  f = Bg(3, null, null, b);\n  a.current = f;\n  f.stateNode = a;\n  f.memoizedState = {\n    element: d,\n    isDehydrated: c,\n    cache: null,\n    transitions: null,\n    pendingSuspenseBoundaries: null\n  };\n  ah(f);\n  return a;\n}\nfunction dl(a, b, c) {\n  var d = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;\n  return {\n    $$typeof: wa,\n    key: null == d ? null : "" + d,\n    children: a,\n    containerInfo: b,\n    implementation: c\n  };\n}\nfunction el(a) {\n  if (!a) return Vf;\n  a = a._reactInternals;\n  a: {\n    if (Vb(a) !== a || 1 !== a.tag) throw Error(p(170));\n    var b = a;\n    do {\n      switch (b.tag) {\n        case 3:\n          b = b.stateNode.context;\n          break a;\n        case 1:\n          if (Zf(b.type)) {\n            b = b.stateNode.__reactInternalMemoizedMergedChildContext;\n            break a;\n          }\n      }\n      b = b.return;\n    } while (null !== b);\n    throw Error(p(171));\n  }\n  if (1 === a.tag) {\n    var c = a.type;\n    if (Zf(c)) return bg(a, c, b);\n  }\n  return b;\n}\nfunction fl(a, b, c, d, e, f, g, h, k) {\n  a = cl(c, d, !0, a, e, f, g, h, k);\n  a.context = el(null);\n  c = a.current;\n  d = L();\n  e = lh(c);\n  f = ch(d, e);\n  f.callback = void 0 !== b && null !== b ? b : null;\n  dh(c, f, e);\n  a.current.lanes = e;\n  Ac(a, e, d);\n  Ek(a, d);\n  return a;\n}\nfunction gl(a, b, c, d) {\n  var e = b.current,\n    f = L(),\n    g = lh(e);\n  c = el(c);\n  null === b.context ? b.context = c : b.pendingContext = c;\n  b = ch(f, g);\n  b.payload = {\n    element: a\n  };\n  d = void 0 === d ? null : d;\n  null !== d && (b.callback = d);\n  a = dh(e, b, g);\n  null !== a && (mh(a, e, g, f), eh(a, e, g));\n  return g;\n}\nfunction hl(a) {\n  a = a.current;\n  if (!a.child) return null;\n  switch (a.child.tag) {\n    case 5:\n      return a.child.stateNode;\n    default:\n      return a.child.stateNode;\n  }\n}\nfunction il(a, b) {\n  a = a.memoizedState;\n  if (null !== a && null !== a.dehydrated) {\n    var c = a.retryLane;\n    a.retryLane = 0 !== c && c < b ? c : b;\n  }\n}\nfunction jl(a, b) {\n  il(a, b);\n  (a = a.alternate) && il(a, b);\n}\nfunction kl() {\n  return null;\n}\nvar ll = "function" === typeof reportError ? reportError : function (a) {\n  console.error(a);\n};\nfunction ml(a) {\n  this._internalRoot = a;\n}\nnl.prototype.render = ml.prototype.render = function (a) {\n  var b = this._internalRoot;\n  if (null === b) throw Error(p(409));\n  gl(a, b, null, null);\n};\nnl.prototype.unmount = ml.prototype.unmount = function () {\n  var a = this._internalRoot;\n  if (null !== a) {\n    this._internalRoot = null;\n    var b = a.containerInfo;\n    Sk(function () {\n      gl(null, a, null, null);\n    });\n    b[uf] = null;\n  }\n};\nfunction nl(a) {\n  this._internalRoot = a;\n}\nnl.prototype.unstable_scheduleHydration = function (a) {\n  if (a) {\n    var b = Hc();\n    a = {\n      blockedOn: null,\n      target: a,\n      priority: b\n    };\n    for (var c = 0; c < Qc.length && 0 !== b && b < Qc[c].priority; c++);\n    Qc.splice(c, 0, a);\n    0 === c && Vc(a);\n  }\n};\nfunction ol(a) {\n  return !(!a || 1 !== a.nodeType && 9 !== a.nodeType && 11 !== a.nodeType);\n}\nfunction pl(a) {\n  return !(!a || 1 !== a.nodeType && 9 !== a.nodeType && 11 !== a.nodeType && (8 !== a.nodeType || " react-mount-point-unstable " !== a.nodeValue));\n}\nfunction ql() {}\nfunction rl(a, b, c, d, e) {\n  if (e) {\n    if ("function" === typeof d) {\n      var f = d;\n      d = function () {\n        var a = hl(g);\n        f.call(a);\n      };\n    }\n    var g = fl(b, d, a, 0, null, !1, !1, "", ql);\n    a._reactRootContainer = g;\n    a[uf] = g.current;\n    sf(8 === a.nodeType ? a.parentNode : a);\n    Sk();\n    return g;\n  }\n  for (; e = a.lastChild;) a.removeChild(e);\n  if ("function" === typeof d) {\n    var h = d;\n    d = function () {\n      var a = hl(k);\n      h.call(a);\n    };\n  }\n  var k = cl(a, 0, !1, null, null, !1, !1, "", ql);\n  a._reactRootContainer = k;\n  a[uf] = k.current;\n  sf(8 === a.nodeType ? a.parentNode : a);\n  Sk(function () {\n    gl(b, k, c, d);\n  });\n  return k;\n}\nfunction sl(a, b, c, d, e) {\n  var f = c._reactRootContainer;\n  if (f) {\n    var g = f;\n    if ("function" === typeof e) {\n      var h = e;\n      e = function () {\n        var a = hl(g);\n        h.call(a);\n      };\n    }\n    gl(b, g, a, e);\n  } else g = rl(c, b, a, e, d);\n  return hl(g);\n}\nEc = function (a) {\n  switch (a.tag) {\n    case 3:\n      var b = a.stateNode;\n      if (b.current.memoizedState.isDehydrated) {\n        var c = tc(b.pendingLanes);\n        0 !== c && (Cc(b, c | 1), Ek(b, B()), 0 === (K & 6) && (Hj = B() + 500, jg()));\n      }\n      break;\n    case 13:\n      Sk(function () {\n        var b = Zg(a, 1);\n        if (null !== b) {\n          var c = L();\n          mh(b, a, 1, c);\n        }\n      }), jl(a, 1);\n  }\n};\nFc = function (a) {\n  if (13 === a.tag) {\n    var b = Zg(a, 134217728);\n    if (null !== b) {\n      var c = L();\n      mh(b, a, 134217728, c);\n    }\n    jl(a, 134217728);\n  }\n};\nGc = function (a) {\n  if (13 === a.tag) {\n    var b = lh(a),\n      c = Zg(a, b);\n    if (null !== c) {\n      var d = L();\n      mh(c, a, b, d);\n    }\n    jl(a, b);\n  }\n};\nHc = function () {\n  return C;\n};\nIc = function (a, b) {\n  var c = C;\n  try {\n    return C = a, b();\n  } finally {\n    C = c;\n  }\n};\nyb = function (a, b, c) {\n  switch (b) {\n    case "input":\n      bb(a, c);\n      b = c.name;\n      if ("radio" === c.type && null != b) {\n        for (c = a; c.parentNode;) c = c.parentNode;\n        c = c.querySelectorAll("input[name=" + JSON.stringify("" + b) + \'][type="radio"]\');\n        for (b = 0; b < c.length; b++) {\n          var d = c[b];\n          if (d !== a && d.form === a.form) {\n            var e = Db(d);\n            if (!e) throw Error(p(90));\n            Wa(d);\n            bb(d, e);\n          }\n        }\n      }\n      break;\n    case "textarea":\n      ib(a, c);\n      break;\n    case "select":\n      b = c.value, null != b && fb(a, !!c.multiple, b, !1);\n  }\n};\nGb = Rk;\nHb = Sk;\nvar tl = {\n    usingClientEntryPoint: !1,\n    Events: [Cb, ue, Db, Eb, Fb, Rk]\n  },\n  ul = {\n    findFiberByHostInstance: Wc,\n    bundleType: 0,\n    version: "18.2.0",\n    rendererPackageName: "react-dom"\n  };\nvar vl = {\n  bundleType: ul.bundleType,\n  version: ul.version,\n  rendererPackageName: ul.rendererPackageName,\n  rendererConfig: ul.rendererConfig,\n  overrideHookState: null,\n  overrideHookStateDeletePath: null,\n  overrideHookStateRenamePath: null,\n  overrideProps: null,\n  overridePropsDeletePath: null,\n  overridePropsRenamePath: null,\n  setErrorHandler: null,\n  setSuspenseHandler: null,\n  scheduleUpdate: null,\n  currentDispatcherRef: ua.ReactCurrentDispatcher,\n  findHostInstanceByFiber: function (a) {\n    a = Zb(a);\n    return null === a ? null : a.stateNode;\n  },\n  findFiberByHostInstance: ul.findFiberByHostInstance || kl,\n  findHostInstancesForRefresh: null,\n  scheduleRefresh: null,\n  scheduleRoot: null,\n  setRefreshHandler: null,\n  getCurrentFiber: null,\n  reconcilerVersion: "18.2.0-next-9e3b772b8-20220608"\n};\nif ("undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {\n  var wl = __REACT_DEVTOOLS_GLOBAL_HOOK__;\n  if (!wl.isDisabled && wl.supportsFiber) try {\n    kc = wl.inject(vl), lc = wl;\n  } catch (a) {}\n}\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = tl;\nexports.createPortal = function (a, b) {\n  var c = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;\n  if (!ol(b)) throw Error(p(200));\n  return dl(a, b, null, c);\n};\nexports.createRoot = function (a, b) {\n  if (!ol(a)) throw Error(p(299));\n  var c = !1,\n    d = "",\n    e = ll;\n  null !== b && void 0 !== b && (!0 === b.unstable_strictMode && (c = !0), void 0 !== b.identifierPrefix && (d = b.identifierPrefix), void 0 !== b.onRecoverableError && (e = b.onRecoverableError));\n  b = cl(a, 1, !1, null, null, c, !1, d, e);\n  a[uf] = b.current;\n  sf(8 === a.nodeType ? a.parentNode : a);\n  return new ml(b);\n};\nexports.findDOMNode = function (a) {\n  if (null == a) return null;\n  if (1 === a.nodeType) return a;\n  var b = a._reactInternals;\n  if (void 0 === b) {\n    if ("function" === typeof a.render) throw Error(p(188));\n    a = Object.keys(a).join(",");\n    throw Error(p(268, a));\n  }\n  a = Zb(b);\n  a = null === a ? null : a.stateNode;\n  return a;\n};\nexports.flushSync = function (a) {\n  return Sk(a);\n};\nexports.hydrate = function (a, b, c) {\n  if (!pl(b)) throw Error(p(200));\n  return sl(null, a, b, !0, c);\n};\nexports.hydrateRoot = function (a, b, c) {\n  if (!ol(a)) throw Error(p(405));\n  var d = null != c && c.hydratedSources || null,\n    e = !1,\n    f = "",\n    g = ll;\n  null !== c && void 0 !== c && (!0 === c.unstable_strictMode && (e = !0), void 0 !== c.identifierPrefix && (f = c.identifierPrefix), void 0 !== c.onRecoverableError && (g = c.onRecoverableError));\n  b = fl(b, null, a, 1, null != c ? c : null, e, !1, f, g);\n  a[uf] = b.current;\n  sf(a);\n  if (d) for (a = 0; a < d.length; a++) c = d[a], e = c._getVersion, e = e(c._source), null == b.mutableSourceEagerHydrationData ? b.mutableSourceEagerHydrationData = [c, e] : b.mutableSourceEagerHydrationData.push(c, e);\n  return new nl(b);\n};\nexports.render = function (a, b, c) {\n  if (!pl(b)) throw Error(p(200));\n  return sl(null, a, b, !1, c);\n};\nexports.unmountComponentAtNode = function (a) {\n  if (!pl(a)) throw Error(p(40));\n  return a._reactRootContainer ? (Sk(function () {\n    sl(null, null, a, !1, function () {\n      a._reactRootContainer = null;\n      a[uf] = null;\n    });\n  }), !0) : !1;\n};\nexports.unstable_batchedUpdates = Rk;\nexports.unstable_renderSubtreeIntoContainer = function (a, b, c, d) {\n  if (!pl(c)) throw Error(p(200));\n  if (null == a || void 0 === a._reactInternals) throw Error(p(38));\n  return sl(a, b, c, !1, d);\n};\nexports.version = "18.2.0-next-9e3b772b8-20220608";\n\n//# sourceURL=webpack:///./node_modules/react-dom/cjs/react-dom.production.min.js?')},116:(module,__unused_webpack_exports,__webpack_require__)=>{eval("\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function') {\n    return;\n  }\n  if (false) {}\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\nif (true) {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = __webpack_require__(748);\n} else {}\n\n//# sourceURL=webpack:///./node_modules/react-dom/index.js?")},751:(__unused_webpack_module,exports)=>{eval('/**\n * @license React\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nvar l = Symbol.for("react.element"),\n  n = Symbol.for("react.portal"),\n  p = Symbol.for("react.fragment"),\n  q = Symbol.for("react.strict_mode"),\n  r = Symbol.for("react.profiler"),\n  t = Symbol.for("react.provider"),\n  u = Symbol.for("react.context"),\n  v = Symbol.for("react.forward_ref"),\n  w = Symbol.for("react.suspense"),\n  x = Symbol.for("react.memo"),\n  y = Symbol.for("react.lazy"),\n  z = Symbol.iterator;\nfunction A(a) {\n  if (null === a || "object" !== typeof a) return null;\n  a = z && a[z] || a["@@iterator"];\n  return "function" === typeof a ? a : null;\n}\nvar B = {\n    isMounted: function () {\n      return !1;\n    },\n    enqueueForceUpdate: function () {},\n    enqueueReplaceState: function () {},\n    enqueueSetState: function () {}\n  },\n  C = Object.assign,\n  D = {};\nfunction E(a, b, e) {\n  this.props = a;\n  this.context = b;\n  this.refs = D;\n  this.updater = e || B;\n}\nE.prototype.isReactComponent = {};\nE.prototype.setState = function (a, b) {\n  if ("object" !== typeof a && "function" !== typeof a && null != a) throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");\n  this.updater.enqueueSetState(this, a, b, "setState");\n};\nE.prototype.forceUpdate = function (a) {\n  this.updater.enqueueForceUpdate(this, a, "forceUpdate");\n};\nfunction F() {}\nF.prototype = E.prototype;\nfunction G(a, b, e) {\n  this.props = a;\n  this.context = b;\n  this.refs = D;\n  this.updater = e || B;\n}\nvar H = G.prototype = new F();\nH.constructor = G;\nC(H, E.prototype);\nH.isPureReactComponent = !0;\nvar I = Array.isArray,\n  J = Object.prototype.hasOwnProperty,\n  K = {\n    current: null\n  },\n  L = {\n    key: !0,\n    ref: !0,\n    __self: !0,\n    __source: !0\n  };\nfunction M(a, b, e) {\n  var d,\n    c = {},\n    k = null,\n    h = null;\n  if (null != b) for (d in void 0 !== b.ref && (h = b.ref), void 0 !== b.key && (k = "" + b.key), b) J.call(b, d) && !L.hasOwnProperty(d) && (c[d] = b[d]);\n  var g = arguments.length - 2;\n  if (1 === g) c.children = e;else if (1 < g) {\n    for (var f = Array(g), m = 0; m < g; m++) f[m] = arguments[m + 2];\n    c.children = f;\n  }\n  if (a && a.defaultProps) for (d in g = a.defaultProps, g) void 0 === c[d] && (c[d] = g[d]);\n  return {\n    $$typeof: l,\n    type: a,\n    key: k,\n    ref: h,\n    props: c,\n    _owner: K.current\n  };\n}\nfunction N(a, b) {\n  return {\n    $$typeof: l,\n    type: a.type,\n    key: b,\n    ref: a.ref,\n    props: a.props,\n    _owner: a._owner\n  };\n}\nfunction O(a) {\n  return "object" === typeof a && null !== a && a.$$typeof === l;\n}\nfunction escape(a) {\n  var b = {\n    "=": "=0",\n    ":": "=2"\n  };\n  return "$" + a.replace(/[=:]/g, function (a) {\n    return b[a];\n  });\n}\nvar P = /\\/+/g;\nfunction Q(a, b) {\n  return "object" === typeof a && null !== a && null != a.key ? escape("" + a.key) : b.toString(36);\n}\nfunction R(a, b, e, d, c) {\n  var k = typeof a;\n  if ("undefined" === k || "boolean" === k) a = null;\n  var h = !1;\n  if (null === a) h = !0;else switch (k) {\n    case "string":\n    case "number":\n      h = !0;\n      break;\n    case "object":\n      switch (a.$$typeof) {\n        case l:\n        case n:\n          h = !0;\n      }\n  }\n  if (h) return h = a, c = c(h), a = "" === d ? "." + Q(h, 0) : d, I(c) ? (e = "", null != a && (e = a.replace(P, "$&/") + "/"), R(c, b, e, "", function (a) {\n    return a;\n  })) : null != c && (O(c) && (c = N(c, e + (!c.key || h && h.key === c.key ? "" : ("" + c.key).replace(P, "$&/") + "/") + a)), b.push(c)), 1;\n  h = 0;\n  d = "" === d ? "." : d + ":";\n  if (I(a)) for (var g = 0; g < a.length; g++) {\n    k = a[g];\n    var f = d + Q(k, g);\n    h += R(k, b, e, f, c);\n  } else if (f = A(a), "function" === typeof f) for (a = f.call(a), g = 0; !(k = a.next()).done;) k = k.value, f = d + Q(k, g++), h += R(k, b, e, f, c);else if ("object" === k) throw b = String(a), Error("Objects are not valid as a React child (found: " + ("[object Object]" === b ? "object with keys {" + Object.keys(a).join(", ") + "}" : b) + "). If you meant to render a collection of children, use an array instead.");\n  return h;\n}\nfunction S(a, b, e) {\n  if (null == a) return a;\n  var d = [],\n    c = 0;\n  R(a, d, "", "", function (a) {\n    return b.call(e, a, c++);\n  });\n  return d;\n}\nfunction T(a) {\n  if (-1 === a._status) {\n    var b = a._result;\n    b = b();\n    b.then(function (b) {\n      if (0 === a._status || -1 === a._status) a._status = 1, a._result = b;\n    }, function (b) {\n      if (0 === a._status || -1 === a._status) a._status = 2, a._result = b;\n    });\n    -1 === a._status && (a._status = 0, a._result = b);\n  }\n  if (1 === a._status) return a._result.default;\n  throw a._result;\n}\nvar U = {\n    current: null\n  },\n  V = {\n    transition: null\n  },\n  W = {\n    ReactCurrentDispatcher: U,\n    ReactCurrentBatchConfig: V,\n    ReactCurrentOwner: K\n  };\nexports.Children = {\n  map: S,\n  forEach: function (a, b, e) {\n    S(a, function () {\n      b.apply(this, arguments);\n    }, e);\n  },\n  count: function (a) {\n    var b = 0;\n    S(a, function () {\n      b++;\n    });\n    return b;\n  },\n  toArray: function (a) {\n    return S(a, function (a) {\n      return a;\n    }) || [];\n  },\n  only: function (a) {\n    if (!O(a)) throw Error("React.Children.only expected to receive a single React element child.");\n    return a;\n  }\n};\nexports.Component = E;\nexports.Fragment = p;\nexports.Profiler = r;\nexports.PureComponent = G;\nexports.StrictMode = q;\nexports.Suspense = w;\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = W;\nexports.cloneElement = function (a, b, e) {\n  if (null === a || void 0 === a) throw Error("React.cloneElement(...): The argument must be a React element, but you passed " + a + ".");\n  var d = C({}, a.props),\n    c = a.key,\n    k = a.ref,\n    h = a._owner;\n  if (null != b) {\n    void 0 !== b.ref && (k = b.ref, h = K.current);\n    void 0 !== b.key && (c = "" + b.key);\n    if (a.type && a.type.defaultProps) var g = a.type.defaultProps;\n    for (f in b) J.call(b, f) && !L.hasOwnProperty(f) && (d[f] = void 0 === b[f] && void 0 !== g ? g[f] : b[f]);\n  }\n  var f = arguments.length - 2;\n  if (1 === f) d.children = e;else if (1 < f) {\n    g = Array(f);\n    for (var m = 0; m < f; m++) g[m] = arguments[m + 2];\n    d.children = g;\n  }\n  return {\n    $$typeof: l,\n    type: a.type,\n    key: c,\n    ref: k,\n    props: d,\n    _owner: h\n  };\n};\nexports.createContext = function (a) {\n  a = {\n    $$typeof: u,\n    _currentValue: a,\n    _currentValue2: a,\n    _threadCount: 0,\n    Provider: null,\n    Consumer: null,\n    _defaultValue: null,\n    _globalName: null\n  };\n  a.Provider = {\n    $$typeof: t,\n    _context: a\n  };\n  return a.Consumer = a;\n};\nexports.createElement = M;\nexports.createFactory = function (a) {\n  var b = M.bind(null, a);\n  b.type = a;\n  return b;\n};\nexports.createRef = function () {\n  return {\n    current: null\n  };\n};\nexports.forwardRef = function (a) {\n  return {\n    $$typeof: v,\n    render: a\n  };\n};\nexports.isValidElement = O;\nexports.lazy = function (a) {\n  return {\n    $$typeof: y,\n    _payload: {\n      _status: -1,\n      _result: a\n    },\n    _init: T\n  };\n};\nexports.memo = function (a, b) {\n  return {\n    $$typeof: x,\n    type: a,\n    compare: void 0 === b ? null : b\n  };\n};\nexports.startTransition = function (a) {\n  var b = V.transition;\n  V.transition = {};\n  try {\n    a();\n  } finally {\n    V.transition = b;\n  }\n};\nexports.unstable_act = function () {\n  throw Error("act(...) is not supported in production builds of React.");\n};\nexports.useCallback = function (a, b) {\n  return U.current.useCallback(a, b);\n};\nexports.useContext = function (a) {\n  return U.current.useContext(a);\n};\nexports.useDebugValue = function () {};\nexports.useDeferredValue = function (a) {\n  return U.current.useDeferredValue(a);\n};\nexports.useEffect = function (a, b) {\n  return U.current.useEffect(a, b);\n};\nexports.useId = function () {\n  return U.current.useId();\n};\nexports.useImperativeHandle = function (a, b, e) {\n  return U.current.useImperativeHandle(a, b, e);\n};\nexports.useInsertionEffect = function (a, b) {\n  return U.current.useInsertionEffect(a, b);\n};\nexports.useLayoutEffect = function (a, b) {\n  return U.current.useLayoutEffect(a, b);\n};\nexports.useMemo = function (a, b) {\n  return U.current.useMemo(a, b);\n};\nexports.useReducer = function (a, b, e) {\n  return U.current.useReducer(a, b, e);\n};\nexports.useRef = function (a) {\n  return U.current.useRef(a);\n};\nexports.useState = function (a) {\n  return U.current.useState(a);\n};\nexports.useSyncExternalStore = function (a, b, e) {\n  return U.current.useSyncExternalStore(a, b, e);\n};\nexports.useTransition = function () {\n  return U.current.useTransition();\n};\nexports.version = "18.2.0";\n\n//# sourceURL=webpack:///./node_modules/react/cjs/react.production.min.js?')},466:(module,__unused_webpack_exports,__webpack_require__)=>{eval("\n\nif (true) {\n  module.exports = __webpack_require__(751);\n} else {}\n\n//# sourceURL=webpack:///./node_modules/react/index.js?")},794:(__unused_webpack_module,exports)=>{eval('/**\n * @license React\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nfunction f(a, b) {\n  var c = a.length;\n  a.push(b);\n  a: for (; 0 < c;) {\n    var d = c - 1 >>> 1,\n      e = a[d];\n    if (0 < g(e, b)) a[d] = b, a[c] = e, c = d;else break a;\n  }\n}\nfunction h(a) {\n  return 0 === a.length ? null : a[0];\n}\nfunction k(a) {\n  if (0 === a.length) return null;\n  var b = a[0],\n    c = a.pop();\n  if (c !== b) {\n    a[0] = c;\n    a: for (var d = 0, e = a.length, w = e >>> 1; d < w;) {\n      var m = 2 * (d + 1) - 1,\n        C = a[m],\n        n = m + 1,\n        x = a[n];\n      if (0 > g(C, c)) n < e && 0 > g(x, C) ? (a[d] = x, a[n] = c, d = n) : (a[d] = C, a[m] = c, d = m);else if (n < e && 0 > g(x, c)) a[d] = x, a[n] = c, d = n;else break a;\n    }\n  }\n  return b;\n}\nfunction g(a, b) {\n  var c = a.sortIndex - b.sortIndex;\n  return 0 !== c ? c : a.id - b.id;\n}\nif ("object" === typeof performance && "function" === typeof performance.now) {\n  var l = performance;\n  exports.unstable_now = function () {\n    return l.now();\n  };\n} else {\n  var p = Date,\n    q = p.now();\n  exports.unstable_now = function () {\n    return p.now() - q;\n  };\n}\nvar r = [],\n  t = [],\n  u = 1,\n  v = null,\n  y = 3,\n  z = !1,\n  A = !1,\n  B = !1,\n  D = "function" === typeof setTimeout ? setTimeout : null,\n  E = "function" === typeof clearTimeout ? clearTimeout : null,\n  F = "undefined" !== typeof setImmediate ? setImmediate : null;\n"undefined" !== typeof navigator && void 0 !== navigator.scheduling && void 0 !== navigator.scheduling.isInputPending && navigator.scheduling.isInputPending.bind(navigator.scheduling);\nfunction G(a) {\n  for (var b = h(t); null !== b;) {\n    if (null === b.callback) k(t);else if (b.startTime <= a) k(t), b.sortIndex = b.expirationTime, f(r, b);else break;\n    b = h(t);\n  }\n}\nfunction H(a) {\n  B = !1;\n  G(a);\n  if (!A) if (null !== h(r)) A = !0, I(J);else {\n    var b = h(t);\n    null !== b && K(H, b.startTime - a);\n  }\n}\nfunction J(a, b) {\n  A = !1;\n  B && (B = !1, E(L), L = -1);\n  z = !0;\n  var c = y;\n  try {\n    G(b);\n    for (v = h(r); null !== v && (!(v.expirationTime > b) || a && !M());) {\n      var d = v.callback;\n      if ("function" === typeof d) {\n        v.callback = null;\n        y = v.priorityLevel;\n        var e = d(v.expirationTime <= b);\n        b = exports.unstable_now();\n        "function" === typeof e ? v.callback = e : v === h(r) && k(r);\n        G(b);\n      } else k(r);\n      v = h(r);\n    }\n    if (null !== v) var w = !0;else {\n      var m = h(t);\n      null !== m && K(H, m.startTime - b);\n      w = !1;\n    }\n    return w;\n  } finally {\n    v = null, y = c, z = !1;\n  }\n}\nvar N = !1,\n  O = null,\n  L = -1,\n  P = 5,\n  Q = -1;\nfunction M() {\n  return exports.unstable_now() - Q < P ? !1 : !0;\n}\nfunction R() {\n  if (null !== O) {\n    var a = exports.unstable_now();\n    Q = a;\n    var b = !0;\n    try {\n      b = O(!0, a);\n    } finally {\n      b ? S() : (N = !1, O = null);\n    }\n  } else N = !1;\n}\nvar S;\nif ("function" === typeof F) S = function () {\n  F(R);\n};else if ("undefined" !== typeof MessageChannel) {\n  var T = new MessageChannel(),\n    U = T.port2;\n  T.port1.onmessage = R;\n  S = function () {\n    U.postMessage(null);\n  };\n} else S = function () {\n  D(R, 0);\n};\nfunction I(a) {\n  O = a;\n  N || (N = !0, S());\n}\nfunction K(a, b) {\n  L = D(function () {\n    a(exports.unstable_now());\n  }, b);\n}\nexports.unstable_IdlePriority = 5;\nexports.unstable_ImmediatePriority = 1;\nexports.unstable_LowPriority = 4;\nexports.unstable_NormalPriority = 3;\nexports.unstable_Profiling = null;\nexports.unstable_UserBlockingPriority = 2;\nexports.unstable_cancelCallback = function (a) {\n  a.callback = null;\n};\nexports.unstable_continueExecution = function () {\n  A || z || (A = !0, I(J));\n};\nexports.unstable_forceFrameRate = function (a) {\n  0 > a || 125 < a ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : P = 0 < a ? Math.floor(1E3 / a) : 5;\n};\nexports.unstable_getCurrentPriorityLevel = function () {\n  return y;\n};\nexports.unstable_getFirstCallbackNode = function () {\n  return h(r);\n};\nexports.unstable_next = function (a) {\n  switch (y) {\n    case 1:\n    case 2:\n    case 3:\n      var b = 3;\n      break;\n    default:\n      b = y;\n  }\n  var c = y;\n  y = b;\n  try {\n    return a();\n  } finally {\n    y = c;\n  }\n};\nexports.unstable_pauseExecution = function () {};\nexports.unstable_requestPaint = function () {};\nexports.unstable_runWithPriority = function (a, b) {\n  switch (a) {\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 5:\n      break;\n    default:\n      a = 3;\n  }\n  var c = y;\n  y = a;\n  try {\n    return b();\n  } finally {\n    y = c;\n  }\n};\nexports.unstable_scheduleCallback = function (a, b, c) {\n  var d = exports.unstable_now();\n  "object" === typeof c && null !== c ? (c = c.delay, c = "number" === typeof c && 0 < c ? d + c : d) : c = d;\n  switch (a) {\n    case 1:\n      var e = -1;\n      break;\n    case 2:\n      e = 250;\n      break;\n    case 5:\n      e = 1073741823;\n      break;\n    case 4:\n      e = 1E4;\n      break;\n    default:\n      e = 5E3;\n  }\n  e = c + e;\n  a = {\n    id: u++,\n    callback: b,\n    priorityLevel: a,\n    startTime: c,\n    expirationTime: e,\n    sortIndex: -1\n  };\n  c > d ? (a.sortIndex = c, f(t, a), null === h(r) && a === h(t) && (B ? (E(L), L = -1) : B = !0, K(H, c - d))) : (a.sortIndex = e, f(r, a), A || z || (A = !0, I(J)));\n  return a;\n};\nexports.unstable_shouldYield = M;\nexports.unstable_wrapCallback = function (a) {\n  var b = y;\n  return function () {\n    var c = y;\n    y = b;\n    try {\n      return a.apply(this, arguments);\n    } finally {\n      y = c;\n    }\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/scheduler/cjs/scheduler.production.min.js?')},767:(module,__unused_webpack_exports,__webpack_require__)=>{eval("\n\nif (true) {\n  module.exports = __webpack_require__(794);\n} else {}\n\n//# sourceURL=webpack:///./node_modules/scheduler/index.js?")},821:function(__unused_webpack_module,exports,__webpack_require__){eval("\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nvar utils_1 = __webpack_require__(571);\nvar data_translator_1 = __webpack_require__(492);\nvar react_1 = __importDefault(__webpack_require__(466));\nvar react_dom_1 = __importDefault(__webpack_require__(116));\nvar d3 = __importStar(__webpack_require__(37));\nvar Plot = __importStar(__webpack_require__(299));\nfunction RenderComponent(_ref) {\n  var chartConfig = _ref.chartConfig;\n  var headerRef = react_1[\"default\"].useRef();\n  var gridRef = react_1[\"default\"].useRef();\n  react_1[\"default\"].useEffect(function () {\n    var gridHeight = gridRef.current ? gridRef.current.clientHeight : 0;\n    var completedChartConfig = Object.assign(Object.assign({}, chartConfig), {\n      extra: Object.assign({}, chartConfig.extra),\n      height: chartConfig.height - gridHeight\n    });\n    var chart = buildChart(completedChartConfig);\n    headerRef.current.append(chart);\n    return function () {\n      chart.remove();\n    };\n  }, [chartConfig]);\n  return react_1[\"default\"].createElement(\"div\", null, react_1[\"default\"].createElement(\"header\", {\n    className: \"App-header\",\n    ref: headerRef\n  }));\n}\nfunction buildChart(_ref2) {\n  var translated_data = _ref2.translated_data,\n    params = _ref2.params,\n    extra = _ref2.extra,\n    height = _ref2.height,\n    width = _ref2.width;\n  // Incrementing data\n  var data_prefilter = translated_data.map(function (d, i) {\n    return Object.assign({}, d);\n  });\n  // Filtering data\n  var data = data_prefilter.filter(function (d) {\n    return !d.filter;\n  });\n  // Options\n  var charttype = params['charttype'];\n  var x_axis = [].concat(_toConsumableArray(extra.dimensions), _toConsumableArray(extra.pivots)).find(function (f) {\n    return f.name == params['x_axis'];\n  });\n  var color = [].concat(_toConsumableArray(extra.dimensions), _toConsumableArray(extra.pivots)).find(function (f) {\n    return f.name == params['color'];\n  });\n  var facet_x = [].concat(_toConsumableArray(extra.dimensions), _toConsumableArray(extra.pivots)).find(function (f) {\n    return f.name == params['facet_x'];\n  });\n  var facet_y = [].concat(_toConsumableArray(extra.dimensions), _toConsumableArray(extra.pivots)).find(function (f) {\n    return f.name == params['facet_y'];\n  });\n  var mark1 = extra.measures.find(function (f) {\n    return f.name == params['mark1'];\n  });\n  var mark1_high = extra.measures.find(function (f) {\n    return f.name == params['mark1_high'];\n  });\n  var mark1_low = extra.measures.find(function (f) {\n    return f.name == params['mark1_low'];\n  });\n  var mark2 = extra.measures.find(function (f) {\n    return f.name == params['mark2'];\n  });\n  var mark2_type = params['mark2_type'];\n  var main_mark = mark1 || mark2;\n  var fontSize = 12;\n  // Version release dates (if present)\n  var releasedates = extra.measures.find(function (f) {\n    return f.name == 'release_version';\n  });\n  // Marks for Line type\n  var line_marks = [].concat(_toConsumableArray(!mark1 ? [] : [Plot.line(data, Object.assign(Object.assign({\n    x: x_axis.name,\n    y: mark1.name\n  }, color && {\n    stroke: color.name\n  }), mark2 && {\n    strokeWidht: 1\n  }))]), _toConsumableArray(!(mark1_high && mark1_low) ? [] : [Plot.areaY(data, Object.assign({\n    x: x_axis.name,\n    y1: mark1_high.name,\n    y2: mark1_low.name,\n    opacity: 0.3\n  }, color && {\n    fill: color.name\n  }))]), _toConsumableArray(!mark2 ? [] : [].concat(_toConsumableArray(!(mark2_type == 'thick') ? [] : [Plot.line(data, Object.assign({\n    x: x_axis.name,\n    y: mark2.name,\n    strokeWidth: 3\n  }, color && {\n    stroke: color.name\n  }))]), _toConsumableArray(!(mark2_type == 'dot') ? [] : [Plot.dot(data, Object.assign(Object.assign({\n    x: x_axis.name,\n    y: mark2.name\n  }, color && {\n    fill: color.name\n  }), {\n    r: 4\n  }))]))), _toConsumableArray(!releasedates ? [] : [Plot.ruleX(data, Plot.groupX({\n    x: 'first'\n  }, {\n    filter: function filter(f) {\n      return f.release_version > '';\n    },\n    x: x_axis.name,\n    strokeOpacity: 0.3,\n    strokeDasharray: '5,5'\n  })), Plot.text(data, Plot.groupX({\n    text: 'first'\n  }, {\n    filter: function filter(f) {\n      return f.release_version > '';\n    },\n    x: x_axis.name,\n    text: 'release_version',\n    frameAnchor: 'top',\n    lineAnchor: 'bottom',\n    textAnchor: 'end',\n    opacity: 0.3,\n    rotate: -90,\n    dx: -3\n  }))]), [\n  // Tooltip marks\n  Plot.ruleX(data, Plot.pointerX({\n    x: x_axis.name,\n    strokeWidth: 0.5,\n    strokeDasharray: '3,3'\n  })), Plot.tip(data, Plot.pointerX(Object.assign(Object.assign({\n    x: x_axis.name,\n    y: main_mark.name\n  }, color && {\n    stroke: color.name\n  }), {\n    channels: Object.assign(Object.assign(Object.assign(Object.assign({}, mark1 && _defineProperty({}, mark1.label, function (d) {\n      return d3.format(main_mark.d3_value_format)(d[mark1.name]);\n    })), mark2 && _defineProperty({}, mark2.label, function (d) {\n      return d3.format(main_mark.d3_value_format)(d[mark2.name]);\n    })), mark1_high && _defineProperty({}, mark1_high.label, function (d) {\n      return d3.format(main_mark.d3_value_format)(d[mark1_high.name]);\n    })), mark1_low && _defineProperty({}, mark1_low.label, function (d) {\n      return d3.format(main_mark.d3_value_format)(d[mark1_low.name]);\n    }))\n  })))]);\n  var bar_marks_params = Object.assign({\n    // groups_domain: Array.from(d3.group(data, d => d.abgroup).keys())\n    backg_opacity: 0.3,\n    num_format: main_mark.d3_value_format,\n    label_hor_offset: 2,\n    label_ver_offset: 5,\n    label_fontsize: 10,\n    bar_rx: 2,\n    borderWidth: 1\n  }, color && {\n    unc_tick_color: color.name\n  });\n  var bar_marks = [].concat(_toConsumableArray(!mark1 ? [] : [Plot.barY(data, Object.assign({\n    x: x_axis.name,\n    y: mark1.name,\n    opacity: bar_marks_params.backg_opacity,\n    rx: bar_marks_params.bar_rx\n  }, color && {\n    fill: color.name\n  })), Plot.barY(data, Object.assign({\n    filter: function filter(f) {\n      return color;\n    },\n    x: x_axis.name,\n    y: mark1.name,\n    rx: bar_marks_params.bar_rx,\n    strokeWidth: bar_marks_params.borderWidth\n  }, color && {\n    stroke: color.name\n  })), Plot.text(data, Object.assign({\n    filter: function filter(d) {\n      return d[mark1.name] >= 0;\n    },\n    x: x_axis.name,\n    y: mark1.name,\n    text: function text(d) {\n      return \"\".concat(d3.format(bar_marks_params.num_format)(d[mark1.name]));\n    },\n    lineAnchor: 'bottom',\n    textAnchor: 'end',\n    fontWeight: 'bold',\n    fontSize: bar_marks_params.label_fontsize,\n    dx: -bar_marks_params.label_hor_offset,\n    dy: -bar_marks_params.label_ver_offset\n  }, color && {\n    fill: color.name\n  })), Plot.text(data, Object.assign({\n    filter: function filter(d) {\n      return d[mark1.name] < 0;\n    },\n    x: x_axis.name,\n    y: mark1.name,\n    text: function text(d) {\n      return \"\".concat(d3.format(bar_marks_params.num_format)(d[mark1.name]));\n    },\n    lineAnchor: 'bottom',\n    textAnchor: 'end',\n    fontWeight: 'bold',\n    fontSize: bar_marks_params.label_fontsize,\n    dx: -bar_marks_params.label_hor_offset,\n    dy: bar_marks_params.label_ver_offset\n  }, color && {\n    fill: color.name\n  }))]), _toConsumableArray(!mark1_high ? [] : [Plot.tickY(data, Object.assign({\n    x: x_axis.name,\n    y: mark1_high.name\n  }, color && {\n    stroke: bar_marks_params.unc_tick_color\n  })), Plot.text(data, Object.assign({\n    x: x_axis.name,\n    y: mark1_high.name,\n    text: function text(d) {\n      return \"\".concat(d3.format(bar_marks_params.num_format)(d[mark1_high.name]));\n    },\n    lineAnchor: 'bottom',\n    textAnchor: 'start',\n    fontSize: bar_marks_params.label_fontsize,\n    dx: bar_marks_params.label_hor_offset,\n    dy: -bar_marks_params.label_ver_offset\n  }, color && {\n    fill: bar_marks_params.unc_tick_color\n  }))]), _toConsumableArray(!mark1_low ? [] : [Plot.tickY(data, Object.assign({\n    x: x_axis.name,\n    y: mark1_low.name\n  }, color && {\n    stroke: bar_marks_params.unc_tick_color\n  })), Plot.text(data, Object.assign({\n    x: x_axis.name,\n    y: mark1_low.name,\n    text: function text(d) {\n      return \"\".concat(d3.format(bar_marks_params.num_format)(d[mark1_low.name]));\n    },\n    lineAnchor: 'top',\n    textAnchor: 'start',\n    fontSize: bar_marks_params.label_fontsize,\n    dx: bar_marks_params.label_hor_offset,\n    dy: bar_marks_params.label_ver_offset\n  }, color && {\n    fill: bar_marks_params.unc_tick_color\n  }))]), _toConsumableArray(!(mark1_high && mark1_low) ? [] : [Plot.ruleX(data, Object.assign({\n    x: x_axis.name,\n    y1: mark1_high.name,\n    y2: mark1_low.name,\n    opacity: 0.3\n  }, color && {\n    stroke: bar_marks_params.unc_tick_color\n  }))]), _toConsumableArray(!mark2 ? [] : [\n    // Not used\n  ]), [\n  // Complimentary marks (for visuals)\n  Plot.ruleY([1], {\n    y: 0,\n    strokeWidth: 1,\n    strokeDasharray: '2,2'\n  }),\n  // Tooltip marks\n  Plot.tip(data, Plot.pointerX(Object.assign(Object.assign({\n    x: x_axis.name,\n    y: main_mark.name\n  }, color && {\n    stroke: color.name\n  }), {\n    channels: Object.assign(Object.assign(Object.assign(Object.assign({}, mark1 && _defineProperty({}, mark1.label, function (d) {\n      return d3.format(main_mark.d3_value_format)(d[mark1.name]);\n    })), mark2 && _defineProperty({}, mark2.label, function (d) {\n      return d3.format(main_mark.d3_value_format)(d[mark2.name]);\n    })), mark1_high && _defineProperty({}, mark1_high.label, function (d) {\n      return d3.format(main_mark.d3_value_format)(d[mark1_high.name]);\n    })), mark1_low && _defineProperty({}, mark1_low.label, function (d) {\n      return d3.format(main_mark.d3_value_format)(d[mark1_low.name]);\n    }))\n  })))]);\n  // Plot object\n  var plot_arguments = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({\n    // Layout\n    height: height,\n    width: width,\n    inset: 10,\n    marginLeft: (0, utils_1.autoMargin)(data, function (d) {\n      return d3.format(main_mark.d3_value_format)(d[main_mark.name]);\n    }, 15, fontSize),\n    marginRight: facet_y && charttype == 'line' ? (0, utils_1.autoMargin)(data, function (d) {\n      return d[facet_y.name];\n    }, 10, fontSize) : 15,\n    marginBottom: facet_x && charttype == 'bar' ? 50 : 30,\n    marginTop: facet_x && charttype == 'line' || facet_x && charttype == 'bar' && x_axis && !color ? 50 : 30,\n    style: {\n      fontSize: fontSize + 'px'\n    },\n    // Axes\n    x: Object.assign(Object.assign({\n      label: x_axis.label,\n      labelOffset: 40\n    }, charttype == 'line' && Object.assign(Object.assign({}, x_axis.type.includes('_date') && {\n      type: 'utc',\n      ticks: 'week'\n    }), {\n      grid: true\n    })), charttype == 'bar' && Object.assign({}, color && {\n      axis: null\n    })),\n    y: {\n      tickFormat: main_mark.d3_value_format,\n      label: main_mark.label,\n      grid: true,\n      nice: true,\n      zero: true\n    }\n  }, color && {\n    color: {\n      legend: true,\n      type: 'categorical',\n      label: color.label,\n      className: 'plotColorLegend'\n    }\n  }), {\n    facet: Object.assign(Object.assign({\n      data: data\n    }, facet_x && {\n      x: facet_x.name\n    }), facet_y && {\n      y: facet_y.name\n    })\n  }), facet_x && {\n    fx: {\n      label: facet_x.label,\n      labelOffset: 35\n    }\n  }), facet_y && {\n    fy: {\n      label: facet_y.label,\n      labelOffset: 35\n    }\n  }), {\n    // Marks\n    marks: [].concat(_toConsumableArray(charttype == 'line' ? line_marks : []), _toConsumableArray(charttype == 'bar' ? bar_marks : []))\n  });\n  var chart = Plot.plot(plot_arguments);\n  // Adding the legend label\n  var legendLabel = color && d3.select(chart).select('.plotColorLegend-swatches').insert('span', \":first-child\").classed('plotColorLegend-swatch', true).text(color.label).style(\"font-size\", \"\".concat(fontSize, \"px\"));\n  // Attaching the visuals\n  return chart;\n}\nvar get_options = function get_options() {\n  var vizOptions = {};\n  var n_config = 4;\n  // Main configs\n  n_config++;\n  vizOptions['charttype'] = {\n    type: \"string\",\n    section: \"Main\",\n    label: \"Type\",\n    display: \"select\",\n    values: [{\n      'Line': 'line'\n    }, {\n      'Bar': 'bar'\n    }\n    // {'Area':'area'},\n    ],\n\n    display_size: 'normal',\n    \"default\": 'line',\n    hidden: false,\n    order: n_config\n  };\n  n_config++;\n  vizOptions['breakdowns_label'] = {\n    type: \"string\",\n    section: \"Main\",\n    label: \"-- Breakdowns --\",\n    display: \"divider\",\n    display_size: 'normal',\n    hidden: false,\n    order: n_config\n  };\n  n_config++;\n  vizOptions['x_axis'] = {\n    type: \"string\",\n    section: \"Main\",\n    label: \"X Axis\",\n    display: \"select\",\n    values: [],\n    display_size: 'half',\n    \"default\": 'abs',\n    hidden: false,\n    order: n_config\n  };\n  n_config++;\n  vizOptions['color'] = {\n    type: \"string\",\n    section: \"Main\",\n    label: \"Color\",\n    display: \"select\",\n    values: [],\n    display_size: 'half',\n    \"default\": 'abs',\n    hidden: false,\n    order: n_config\n  };\n  n_config++;\n  vizOptions['marks_label'] = {\n    type: \"string\",\n    section: \"Main\",\n    label: \"-- Marks --\",\n    display: \"divider\",\n    display_size: 'normal',\n    hidden: false,\n    order: n_config\n  };\n  n_config++;\n  vizOptions['mark1'] = {\n    type: \"string\",\n    section: \"Main\",\n    label: \"Mark #1\",\n    display: \"select\",\n    values: [],\n    display_size: 'normal',\n    \"default\": 'abs',\n    hidden: false,\n    order: n_config\n  };\n  n_config++;\n  vizOptions['mark1_high'] = {\n    type: \"string\",\n    section: \"Main\",\n    label: \"Mark #1 - High\",\n    display: \"select\",\n    values: [],\n    display_size: 'half',\n    \"default\": 'abs',\n    hidden: false,\n    order: n_config\n  };\n  n_config++;\n  vizOptions['mark1_low'] = {\n    type: \"string\",\n    section: \"Main\",\n    label: \"Mark #1 - Low\",\n    display: \"select\",\n    values: [],\n    display_size: 'half',\n    \"default\": 'abs',\n    hidden: false,\n    order: n_config\n  };\n  n_config++;\n  vizOptions['mark2'] = {\n    type: \"string\",\n    section: \"Main\",\n    label: \"Mark #2\",\n    display: \"select\",\n    values: [],\n    display_size: 'half',\n    \"default\": '',\n    hidden: false,\n    order: n_config\n  };\n  n_config++;\n  vizOptions['mark2_type'] = {\n    type: \"string\",\n    section: \"Main\",\n    label: \"Type (Mark #2)\",\n    display: \"select\",\n    values: [{\n      'Thick Line': 'thick'\n    }, {\n      'Dots': 'dot'\n    }],\n    display_size: 'half',\n    \"default\": 'thick',\n    hidden: false,\n    order: n_config\n  };\n  n_config++;\n  vizOptions['facets_label'] = {\n    type: \"string\",\n    section: \"Main\",\n    label: \"-- Facets --\",\n    display: \"divider\",\n    display_size: 'normal',\n    hidden: false,\n    order: n_config\n  };\n  n_config++;\n  vizOptions['facet_x'] = {\n    type: \"string\",\n    section: \"Main\",\n    label: \"Horizontal\",\n    display: \"select\",\n    values: [],\n    display_size: 'half',\n    \"default\": '',\n    hidden: false,\n    order: n_config\n  };\n  n_config++;\n  vizOptions['facet_y'] = {\n    type: \"string\",\n    section: \"Main\",\n    label: \"Vertical\",\n    display: \"select\",\n    values: [],\n    display_size: 'half',\n    \"default\": '',\n    hidden: false,\n    order: n_config\n  };\n  n_config++;\n  return vizOptions;\n};\nvar vis = {\n  options: get_options(),\n  // Set up the initial state of the visualization\n  create: function create(element, config) {\n    // let root = element.appendChild(document.createElement(\"div\"));\n    // root.setAttribute(\"id\", \"root\");\n    // Create a container element to let us center the text.\n    var container = element.appendChild(document.createElement(\"div\"));\n    // container.className = \"hello-world-vis\";\n    // Create an element to contain the text.\n    this._textElement = container.appendChild(document.createElement(\"div\"));\n  },\n  // Render in response to the data or settings changing\n  updateAsync: function updateAsync(in_data, element, config, queryResponse, details, doneRendering) {\n    // console.log( 'data', data );\n    // console.log( 'element', element );\n    // console.log( 'config', config );\n    // console.log( 'queryResponse', queryResponse );\n    var errors = (0, utils_1.handleErrors)(this, queryResponse, {\n      // min_pivots: 0,\n      // max_pivots: 0,\n      // min_dimensions: 1,\n      // max_dimensions: 1,\n      // min_measures: 1,\n      // max_measures: 1\n    });\n    if (errors) {\n      // errors === true means no errors\n      // debugger;\n      var raw_data = (0, data_translator_1.lookerDataTranslator)(queryResponse, in_data);\n      var measures = raw_data.measures;\n      var dimensions = raw_data.dimensions;\n      var pivots = raw_data.pivots;\n      var translated_data = raw_data.data; //dataFulfiller(raw_data);\n      // Now updating the options based on data available\n      options_update(config, this, raw_data);\n      // Collecting all parameters configured to complement measures and pivot\n      var params = config; //config_to_parameters(config);\n      // Building the visuals\n      var width = element.getBoundingClientRect().width;\n      var height = element.getBoundingClientRect().height;\n      // Additional parameters\n      // This iteration is to allow variables to be reused in definitions\n      var extra = {\n        measures: measures,\n        dimensions: dimensions,\n        pivots: pivots,\n        width: width,\n        height: height\n      };\n      // SENDING TO CHART CONFIG\n      var chart_config = {\n        translated_data: translated_data,\n        params: params,\n        extra: extra,\n        width: width,\n        height: height\n      };\n      // graph_node.node().append(addTooltips(Plot.plot(plot_arguments),tooltip_options));// Finally update the state with our new data\n      this.chart = react_dom_1[\"default\"].render(react_1[\"default\"].createElement(RenderComponent, {\n        chartConfig: chart_config\n      }), this._textElement);\n      doneRendering();\n    }\n  }\n};\nvar options_update = function options_update(config, vizObject, raw_data) {\n  var myOptions = vizObject.options;\n  // How the options will be added\n  var list_as_option = function list_as_option(d) {\n    return _defineProperty({}, d.label, d.name);\n  };\n  var possible_dimensions = [].concat(_toConsumableArray(raw_data.dimensions.length == 0 ? [] : raw_data.dimensions.map(list_as_option)), _toConsumableArray(raw_data.pivots.length == 0 ? [] : raw_data.pivots.map(list_as_option)));\n  var possible_measures = [{\n    'None': ''\n  }].concat(_toConsumableArray(raw_data.measures.length == 0 ? [] : raw_data.measures.map(list_as_option))).filter(function (f) {\n    return !f['Released Versions'];\n  });\n  var dim_options = ['x_axis', 'color', 'facet_x', 'facet_y'];\n  dim_options.forEach(function (option) {\n    myOptions[option] = Object.assign(Object.assign({}, vizObject.options[option]), {\n      values: [].concat(_toConsumableArray(option == 'x_axis' ? [] : [{\n        'None': ''\n      }]), _toConsumableArray(possible_dimensions))\n    });\n  });\n  var measure_options = ['mark1', 'mark1_high', 'mark1_low', 'mark2'];\n  measure_options.forEach(function (option) {\n    myOptions[option] = Object.assign(Object.assign({}, vizObject.options[option]), {\n      values: possible_measures\n    });\n  });\n  // Deactivating unused options depending on type\n  var charttype = config['charttype'];\n  if (charttype == 'bar') {\n    myOptions['mark2']['hidden'] = true;\n    myOptions['mark2_type']['hidden'] = true;\n  } else {\n    myOptions['mark2']['hidden'] = false;\n    myOptions['mark2_type']['hidden'] = false;\n  }\n  vizObject.trigger('registerOptions', myOptions);\n  return myOptions;\n};\nlooker.plugins.visualizations.add(vis);\n\n//# sourceURL=webpack:///./src/visualizations/uncertainty-viz.tsx?")},492:(__unused_webpack_module,exports,__webpack_require__)=>{eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.lookerDataTranslator = void 0;\nconst utils_1 = __webpack_require__(571);\n// Function\nfunction lookerDataTranslator(query_response, in_data) {\n    const data = in_data;\n    const acessor_function = (d) => d.model ? d.model + '.' + d.name : d.name;\n    const dimensions = query_response.fields.dimensions.map((dim) => ({\n        name: dim.name.includes('.') ? dim.name.split('.')[1] : dim.name,\n        model: dim.name.includes('.') ? dim.name.split('.')[0] : null,\n        label: dim.label_short,\n        type: dim.type,\n        info: 'dimension',\n        keys: [...new Set(in_data.map((d) => ['date_month', 'date_quarter'].includes(dim.type) ? d[dim.name].value + \"-01\" : d[dim.name].value))],\n    }));\n    const pivots = query_response.fields.pivots.map((piv, i) => ({\n        name: piv.name.includes('.') ? piv.name.split('.')[1] : piv.name,\n        model: piv.name.includes('.') ? piv.name.split('.')[0] : null,\n        label: piv.label_short,\n        type: piv.type,\n        info: 'pivot',\n        keys: []\n    })).map((piv, i) => (Object.assign(Object.assign({}, piv), { keys: [...new Set(query_response.pivots.map((d) => d.data[acessor_function(piv)]))] })));\n    const measures = query_response.fields.measure_like.map((mes) => ({\n        name: mes.name.includes('.') ? mes.name.split('.')[1] : mes.name,\n        model: mes.name.includes('.') ? mes.name.split('.')[0] : null,\n        label: mes.name.includes('.') ? mes.label_short : mes.label,\n        type: mes.name.includes('.') ? mes.type : 'sum',\n        info: 'measure',\n        is_table_calculation: mes.is_table_calculation,\n        looker_value_format: mes.value_format,\n        d3_value_format: (0, utils_1.d3formatType)(mes.value_format),\n    }));\n    const all_props = [...dimensions, ...pivots];\n    let prepared_dataset = data; //[];\n    if (pivots.length == 0) {\n        const c_accessors = [...dimensions, ...measures];\n        prepared_dataset = data.map(row => (Object.assign({}, ...c_accessors.map((d) => ({ [d.name]: (row[acessor_function(d)]).value })))));\n    }\n    else {\n        // Auxiliary functions\n        const equals = (a, b) => JSON.stringify(a) === JSON.stringify(b);\n        const cartesian = (...a) => a.reduce((a, b) => a.flatMap(d => b.map(e => [d, e].flat())));\n        // Adjustments to Looker's weird inclusion of a last undetected value after the last '|FIELD\\'\n        const max_pivot_index = pivots.length;\n        const fix_pivot_key = (pivot_key) => pivot_key.split('|FIELD|').slice(0, max_pivot_index).join('|FIELD|');\n        // Function to get the data values of the built dim x pivots combination\n        const value_acessor = function (mes, row) {\n            const filtered_obj_before_pivots = data.find(d_row => equals(dimensions.map(dim => d_row[acessor_function(dim)].value), dimensions.map(dim => row[dim.name])));\n            if (typeof filtered_obj_before_pivots == 'undefined') {\n                return null;\n            }\n            const filtered_before_pivots = filtered_obj_before_pivots[acessor_function(mes)];\n            const adjusted_pivot_key = Object.keys(filtered_before_pivots).find(key => fix_pivot_key(key) == row.pivots_key);\n            const filtered_data = filtered_before_pivots[adjusted_pivot_key];\n            return filtered_data ? filtered_data.value : filtered_data;\n        };\n        // Making the cartesian product of all props and turning them into nice objects\n        const rows_props = cartesian(...all_props.map(prop => prop.keys)).map((row) => Object.assign({}, ...row.map((prop, i) => ({ [all_props[i].name]: prop }))));\n        // Function to get the pivots keys based on a data row\n        function get_pivots_key(row) {\n            return pivots.map(pivot => row[pivot.name]).join('|FIELD|');\n        }\n        // Calculating the pivots_key to make it easier to access multi-pivots later\n        const row_props_piv = rows_props.map(row => (Object.assign(Object.assign({}, row), { pivots_key: get_pivots_key(row) })));\n        // Finally populating with the actual measure values\n        const row_values_raw = row_props_piv.map(row => (Object.assign(Object.assign({}, row), Object.assign({}, ...measures.map(mes => ({ [mes.name]: value_acessor(mes, row) }))))));\n        // Filtering all 'unassigned' from the cartesian product\n        const row_values = row_values_raw; //.filter(d => d[measures[0].name]);\n        prepared_dataset = row_values;\n    }\n    // Fixing dates in month and quarter\n    dimensions.filter(d => ['date_month', 'date_quarter'].includes(d.type)).forEach(function (dim) {\n        prepared_dataset = prepared_dataset.map(d => (Object.assign(Object.assign({}, d), { [dim.name]: d[dim.name] + '-01' })));\n    });\n    return { data: prepared_dataset, dimensions: dimensions, measures: measures, pivots: pivots };\n}\nexports.lookerDataTranslator = lookerDataTranslator;\n;\n\n\n//# sourceURL=webpack:///./src/common/data_translator.ts?")},571:function(__unused_webpack_module,exports,__webpack_require__){eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.autoMargin = exports.handleErrors = exports.formatType = exports.d3formatType = void 0;\nconst d3 = __importStar(__webpack_require__(37));\nconst Plot = __importStar(__webpack_require__(299));\nconst d3formatType = (valueFormat) => {\n    if (!valueFormat)\n        return undefined;\n    let format = '';\n    switch (valueFormat.charAt(0)) {\n        case '$':\n            format += '$';\n            break;\n        case '£':\n            format += '£';\n            break;\n        case '€':\n            format += '€';\n            break;\n    }\n    if (valueFormat.indexOf(',') > -1) {\n        format += ',';\n    }\n    const splitValueFormat = valueFormat.split('.');\n    format += '.';\n    format += splitValueFormat.length > 1 ? splitValueFormat[1].length : 0;\n    switch (valueFormat.slice(-1)) {\n        case '%':\n            format = format.slice(0, -1) + `${Number(format.slice(-1)) - 1}%`;\n            break;\n        case '0':\n            format += 'f';\n            break;\n    }\n    // console.log({valueFormat, format});\n    return format;\n};\nexports.d3formatType = d3formatType;\nconst formatType = (valueFormat) => {\n    return d3.format((0, exports.d3formatType)(valueFormat));\n};\nexports.formatType = formatType;\nconst handleErrors = (vis, res, options) => {\n    const check = (group, noun, count, min, max) => {\n        if (!vis.addError || !vis.clearErrors)\n            return false;\n        if (count < min) {\n            vis.addError({\n                title: `Not Enough ${noun}s`,\n                message: `This visualization requires ${min === max ? 'exactly' : 'at least'} ${min} ${noun.toLowerCase()}${min === 1 ? '' : 's'}.`,\n                group\n            });\n            return false;\n        }\n        if (count > max) {\n            vis.addError({\n                title: `Too Many ${noun}s`,\n                message: `This visualization requires ${min === max ? 'exactly' : 'no more than'} ${max} ${noun.toLowerCase()}${min === 1 ? '' : 's'}.`,\n                group\n            });\n            return false;\n        }\n        vis.clearErrors(group);\n        return true;\n    };\n    const { pivots, dimensions, measure_like: measures } = res.fields;\n    return (check('pivot-req', 'Pivot', pivots.length, options.min_pivots, options.max_pivots)\n        && check('dim-req', 'Dimension', dimensions.length, options.min_dimensions, options.max_dimensions)\n        && check('mes-req', 'Measure', measures.length, options.min_measures, options.max_measures));\n};\nexports.handleErrors = handleErrors;\nfunction autoMargin(data, accessor, tickLabelPadding = 12, fontSize = 10) {\n    // Adapted from https://observablehq.com/@tophtucker/autosize-margins-in-plot\n    const avg_char_size = 0.53;\n    // Text size estimator\n    const measureText = (str, fontSize) => d3.sum(str, (cur) => avg_char_size) * fontSize;\n    // Getting largest label from data\n    const largest_label = d3.max(Plot.valueof(data, accessor), (d) => measureText(d, fontSize));\n    return largest_label + tickLabelPadding;\n}\nexports.autoMargin = autoMargin;\n\n\n//# sourceURL=webpack:///./src/common/utils.ts?")},299:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "Area": () => (/* reexport */ Area),\n  "Arrow": () => (/* reexport */ Arrow),\n  "BarX": () => (/* reexport */ BarX),\n  "BarY": () => (/* reexport */ BarY),\n  "Cell": () => (/* reexport */ Cell),\n  "Contour": () => (/* reexport */ Contour),\n  "Density": () => (/* reexport */ Density),\n  "Dot": () => (/* reexport */ Dot),\n  "Frame": () => (/* reexport */ Frame),\n  "Geo": () => (/* reexport */ Geo),\n  "Hexgrid": () => (/* reexport */ Hexgrid),\n  "Image": () => (/* reexport */ Image),\n  "Line": () => (/* reexport */ Line),\n  "Link": () => (/* reexport */ Link),\n  "Mark": () => (/* reexport */ Mark),\n  "Raster": () => (/* reexport */ Raster),\n  "Rect": () => (/* reexport */ Rect),\n  "RuleX": () => (/* reexport */ RuleX),\n  "RuleY": () => (/* reexport */ RuleY),\n  "Text": () => (/* reexport */ Text),\n  "TickX": () => (/* reexport */ TickX),\n  "TickY": () => (/* reexport */ TickY),\n  "Tip": () => (/* reexport */ Tip),\n  "Vector": () => (/* reexport */ Vector),\n  "area": () => (/* reexport */ area_area),\n  "areaX": () => (/* reexport */ areaX),\n  "areaY": () => (/* reexport */ areaY),\n  "arrow": () => (/* reexport */ arrow),\n  "auto": () => (/* reexport */ auto),\n  "autoSpec": () => (/* reexport */ autoSpec),\n  "axisFx": () => (/* reexport */ axisFx),\n  "axisFy": () => (/* reexport */ axisFy),\n  "axisX": () => (/* reexport */ axisX),\n  "axisY": () => (/* reexport */ axisY),\n  "barX": () => (/* reexport */ barX),\n  "barY": () => (/* reexport */ barY),\n  "bin": () => (/* reexport */ bin),\n  "binX": () => (/* reexport */ binX),\n  "binY": () => (/* reexport */ binY),\n  "bollinger": () => (/* reexport */ bollinger),\n  "bollingerX": () => (/* reexport */ bollingerX),\n  "bollingerY": () => (/* reexport */ bollingerY),\n  "boxX": () => (/* reexport */ boxX),\n  "boxY": () => (/* reexport */ boxY),\n  "cell": () => (/* reexport */ cell),\n  "cellX": () => (/* reexport */ cellX),\n  "cellY": () => (/* reexport */ cellY),\n  "centroid": () => (/* reexport */ centroid),\n  "circle": () => (/* reexport */ circle),\n  "cluster": () => (/* reexport */ cluster),\n  "column": () => (/* reexport */ column),\n  "contour": () => (/* reexport */ contour),\n  "crosshair": () => (/* reexport */ crosshair),\n  "crosshairX": () => (/* reexport */ crosshairX),\n  "crosshairY": () => (/* reexport */ crosshairY),\n  "delaunayLink": () => (/* reexport */ delaunayLink),\n  "delaunayMesh": () => (/* reexport */ delaunayMesh),\n  "density": () => (/* reexport */ density),\n  "dodgeX": () => (/* reexport */ dodgeX),\n  "dodgeY": () => (/* reexport */ dodgeY),\n  "dot": () => (/* reexport */ dot),\n  "dotX": () => (/* reexport */ dotX),\n  "dotY": () => (/* reexport */ dotY),\n  "filter": () => (/* reexport */ filter),\n  "formatIsoDate": () => (/* reexport */ formatIsoDate),\n  "formatMonth": () => (/* reexport */ formatMonth),\n  "formatWeekday": () => (/* reexport */ formatWeekday),\n  "frame": () => (/* reexport */ frame_frame),\n  "geo": () => (/* reexport */ geo),\n  "geoCentroid": () => (/* reexport */ geoCentroid),\n  "graticule": () => (/* reexport */ graticule),\n  "gridFx": () => (/* reexport */ gridFx),\n  "gridFy": () => (/* reexport */ gridFy),\n  "gridX": () => (/* reexport */ gridX),\n  "gridY": () => (/* reexport */ gridY),\n  "group": () => (/* reexport */ group),\n  "groupX": () => (/* reexport */ groupX),\n  "groupY": () => (/* reexport */ groupY),\n  "groupZ": () => (/* reexport */ groupZ),\n  "hexagon": () => (/* reexport */ hexagon),\n  "hexbin": () => (/* reexport */ hexbin),\n  "hexgrid": () => (/* reexport */ hexgrid),\n  "hull": () => (/* reexport */ hull),\n  "identity": () => (/* reexport */ identity),\n  "image": () => (/* reexport */ image_image),\n  "indexOf": () => (/* reexport */ indexOf),\n  "initializer": () => (/* reexport */ initializer),\n  "interpolateNearest": () => (/* reexport */ interpolateNearest),\n  "interpolateNone": () => (/* reexport */ interpolateNone),\n  "interpolatorBarycentric": () => (/* reexport */ interpolatorBarycentric),\n  "interpolatorRandomWalk": () => (/* reexport */ interpolatorRandomWalk),\n  "legend": () => (/* reexport */ legend),\n  "line": () => (/* reexport */ line),\n  "lineX": () => (/* reexport */ lineX),\n  "lineY": () => (/* reexport */ lineY),\n  "linearRegressionX": () => (/* reexport */ linearRegressionX),\n  "linearRegressionY": () => (/* reexport */ linearRegressionY),\n  "link": () => (/* reexport */ link_link),\n  "map": () => (/* reexport */ map_map),\n  "mapX": () => (/* reexport */ mapX),\n  "mapY": () => (/* reexport */ mapY),\n  "marks": () => (/* reexport */ marks),\n  "normalize": () => (/* reexport */ normalize),\n  "normalizeX": () => (/* reexport */ normalizeX),\n  "normalizeY": () => (/* reexport */ normalizeY),\n  "plot": () => (/* reexport */ plot),\n  "pointer": () => (/* reexport */ pointer),\n  "pointerX": () => (/* reexport */ pointerX),\n  "pointerY": () => (/* reexport */ pointerY),\n  "raster": () => (/* reexport */ raster),\n  "rect": () => (/* reexport */ rect),\n  "rectX": () => (/* reexport */ rectX),\n  "rectY": () => (/* reexport */ rectY),\n  "reverse": () => (/* reexport */ reverse),\n  "ruleX": () => (/* reexport */ ruleX),\n  "ruleY": () => (/* reexport */ ruleY),\n  "scale": () => (/* reexport */ scale),\n  "select": () => (/* reexport */ select_select),\n  "selectFirst": () => (/* reexport */ selectFirst),\n  "selectLast": () => (/* reexport */ selectLast),\n  "selectMaxX": () => (/* reexport */ selectMaxX),\n  "selectMaxY": () => (/* reexport */ selectMaxY),\n  "selectMinX": () => (/* reexport */ selectMinX),\n  "selectMinY": () => (/* reexport */ selectMinY),\n  "shuffle": () => (/* reexport */ shuffle),\n  "sort": () => (/* reexport */ sort),\n  "sphere": () => (/* reexport */ sphere),\n  "spike": () => (/* reexport */ spike),\n  "stackX": () => (/* reexport */ stackX),\n  "stackX1": () => (/* reexport */ stackX1),\n  "stackX2": () => (/* reexport */ stackX2),\n  "stackY": () => (/* reexport */ stackY),\n  "stackY1": () => (/* reexport */ stackY1),\n  "stackY2": () => (/* reexport */ stackY2),\n  "text": () => (/* reexport */ text_text),\n  "textX": () => (/* reexport */ textX),\n  "textY": () => (/* reexport */ textY),\n  "tickX": () => (/* reexport */ tickX),\n  "tickY": () => (/* reexport */ tickY),\n  "tip": () => (/* reexport */ tip),\n  "transform": () => (/* reexport */ basic),\n  "tree": () => (/* reexport */ tree),\n  "treeLink": () => (/* reexport */ treeLink),\n  "treeNode": () => (/* reexport */ treeNode),\n  "valueof": () => (/* reexport */ valueof),\n  "vector": () => (/* reexport */ vector),\n  "vectorX": () => (/* reexport */ vectorX),\n  "vectorY": () => (/* reexport */ vectorY),\n  "voronoi": () => (/* reexport */ voronoi),\n  "voronoiMesh": () => (/* reexport */ voronoiMesh),\n  "window": () => (/* reexport */ window_window),\n  "windowX": () => (/* reexport */ windowX),\n  "windowY": () => (/* reexport */ windowY)\n});\n\n// EXTERNAL MODULE: ./node_modules/d3/src/index.js + 564 modules\nvar src = __webpack_require__(37);\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/defined.js\n\nfunction defined(x) {\n  return x != null && !Number.isNaN(x);\n}\nfunction ascendingDefined(a, b) {\n  return +defined(b) - +defined(a) || (0,src.ascending)(a, b);\n}\nfunction descendingDefined(a, b) {\n  return +defined(b) - +defined(a) || (0,src.descending)(a, b);\n}\nfunction nonempty(x) {\n  return x != null && `${x}` !== "";\n}\nfunction finite(x) {\n  return isFinite(x) ? x : NaN;\n}\nfunction positive(x) {\n  return x > 0 && isFinite(x) ? x : NaN;\n}\nfunction negative(x) {\n  return x < 0 && isFinite(x) ? x : NaN;\n}\n;// CONCATENATED MODULE: ./node_modules/isoformat/src/parse.js\nconst re = /^(?:[-+]\\d{2})?\\d{4}(?:-\\d{2}(?:-\\d{2})?)?(?:T\\d{2}:\\d{2}(?::\\d{2}(?:\\.\\d{3})?)?(?:Z|[-+]\\d{2}:?\\d{2})?)?$/;\nfunction parse(string, fallback) {\n  if (!re.test(string += "")) return typeof fallback === "function" ? fallback(string) : fallback;\n  return new Date(string);\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/time.js\n\n\n\n\n\n\nconst durationSecond = 1000;\nconst durationMinute = durationSecond * 60;\nconst durationHour = durationMinute * 60;\nconst durationDay = durationHour * 24;\nconst durationWeek = durationDay * 7;\nconst durationMonth = durationDay * 30;\nconst durationYear = durationDay * 365;\n\n// See https://github.com/d3/d3-time/blob/9e8dc940f38f78d7588aad68a54a25b1f0c2d97b/src/ticks.js#L14-L33\nconst formats = [["millisecond", 0.5 * durationSecond], ["second", durationSecond], ["second", 30 * durationSecond], ["minute", durationMinute], ["minute", 30 * durationMinute], ["hour", durationHour], ["hour", 12 * durationHour], ["day", durationDay], ["day", 2 * durationDay], ["week", durationWeek], ["month", durationMonth], ["month", 3 * durationMonth], ["year", durationYear]];\nconst timeIntervals = new Map([["second", src.timeSecond], ["minute", src.timeMinute], ["hour", src.timeHour], ["day", src.timeDay],\n// TODO local time equivalent of unixDay?\n["week", src.timeWeek], ["month", src.timeMonth], ["year", src.timeYear], ["monday", src.timeMonday], ["tuesday", src.timeTuesday], ["wednesday", src.timeWednesday], ["thursday", src.timeThursday], ["friday", src.timeFriday], ["saturday", src.timeSaturday], ["sunday", src.timeSunday]]);\nconst utcIntervals = new Map([["second", src.utcSecond], ["minute", src.utcMinute], ["hour", src.utcHour], ["day", src.unixDay], ["week", src.utcWeek], ["month", src.utcMonth], ["year", src.utcYear], ["monday", src.utcMonday], ["tuesday", src.utcTuesday], ["wednesday", src.utcWednesday], ["thursday", src.utcThursday], ["friday", src.utcFriday], ["saturday", src.utcSaturday], ["sunday", src.utcSunday]]);\nfunction parseInterval(input, intervals) {\n  let name = `${input}`.toLowerCase();\n  if (name.endsWith("s")) name = name.slice(0, -1); // drop plural\n  let period = 1;\n  const match = /^(?:(\\d+)\\s+)/.exec(name);\n  if (match) {\n    name = name.slice(match[0].length);\n    period = +match[1];\n  }\n  switch (name) {\n    case "quarter":\n      name = "month";\n      period *= 3;\n      break;\n    case "half":\n      name = "month";\n      period *= 6;\n      break;\n  }\n  let interval = intervals.get(name);\n  if (!interval) throw new Error(`unknown interval: ${input}`);\n  if (!(period > 1)) return interval;\n  if (!interval.every) throw new Error(`non-periodic interval: ${name}`);\n  return interval.every(period);\n}\nfunction maybeTimeInterval(interval) {\n  return parseInterval(interval, timeIntervals);\n}\nfunction maybeUtcInterval(interval) {\n  return parseInterval(interval, utcIntervals);\n}\nfunction isUtcYear(i) {\n  if (!i) return false;\n  const date = i.floor(new Date(Date.UTC(2000, 11, 31)));\n  return (0,src.utcYear)(date) >= date; // coercing equality\n}\n\nfunction isTimeYear(i) {\n  if (!i) return false;\n  const date = i.floor(new Date(2000, 11, 31));\n  return (0,src.timeYear)(date) >= date; // coercing equality\n}\n\nfunction formatTimeTicks(scale, data, ticks, anchor) {\n  const format = scale.type === "time" ? src.timeFormat : src.utcFormat;\n  const template = anchor === "left" || anchor === "right" ? (f1, f2) => `\\n${f1}\\n${f2}` // extra newline to keep f1 centered\n  : anchor === "top" ? (f1, f2) => `${f2}\\n${f1}` : (f1, f2) => `${f1}\\n${f2}`;\n  switch (getTimeTicksInterval(scale, data, ticks)) {\n    case "millisecond":\n      return formatConditional(format(".%L"), format(":%M:%S"), template);\n    case "second":\n      return formatConditional(format(":%S"), format("%-I:%M"), template);\n    case "minute":\n      return formatConditional(format("%-I:%M"), format("%p"), template);\n    case "hour":\n      return formatConditional(format("%-I %p"), format("%b %-d"), template);\n    case "day":\n      return formatConditional(format("%-d"), format("%b"), template);\n    case "week":\n      return formatConditional(format("%-d"), format("%b"), template);\n    case "month":\n      return formatConditional(format("%b"), format("%Y"), template);\n    case "year":\n      return format("%Y");\n  }\n  throw new Error("unable to format time ticks");\n}\n\n// Compute the median difference between adjacent ticks, ignoring repeated\n// ticks; this implies an effective time interval, assuming that ticks are\n// regularly spaced; choose the largest format less than this interval so that\n// the ticks show the field that is changing. If the ticks are not available,\n// fallback to an approximation based on the desired number of ticks.\nfunction getTimeTicksInterval(scale, data, ticks) {\n  const medianStep = (0,src.median)((0,src.pairs)(data, (a, b) => Math.abs(b - a) || NaN));\n  if (medianStep > 0) return formats[(0,src.bisector)(([, step]) => step).right(formats, medianStep, 1, formats.length) - 1][0];\n  const [start, stop] = (0,src.extent)(scale.domain());\n  const count = typeof ticks === "number" ? ticks : 10;\n  const step = Math.abs(stop - start) / count;\n  return formats[(0,src.bisector)(([, step]) => Math.log(step)).center(formats, Math.log(step))][0];\n}\nfunction formatConditional(format1, format2, template) {\n  return (x, i, X) => {\n    const f1 = format1(x, i); // always shown\n    const f2 = format2(x, i); // only shown if different\n    const j = i - orderof(X); // detect reversed domains\n    return i !== j && X[j] !== undefined && f2 === format2(X[j], j) ? f1 : template(f1, f2);\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/options.js\n\n\n\n\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\nconst TypedArray = Object.getPrototypeOf(Uint8Array);\nconst objectToString = Object.prototype.toString;\nfunction valueof(data, value, type) {\n  const valueType = typeof value;\n  return valueType === "string" ? maybeTypedMap(data, field(value), type) : valueType === "function" ? maybeTypedMap(data, value, type) : valueType === "number" || value instanceof Date || valueType === "boolean" ? map(data, constant(value), type) : typeof value?.transform === "function" ? maybeTypedArrayify(value.transform(data), type) : maybeTypedArrayify(value, type);\n}\nfunction maybeTypedMap(data, f, type) {\n  return map(data, type?.prototype instanceof TypedArray ? floater(f) : f, type);\n}\nfunction maybeTypedArrayify(data, type) {\n  return type === undefined ? arrayify(data) // preserve undefined type\n  : data instanceof type ? data : type.prototype instanceof TypedArray && !(data instanceof TypedArray) ? type.from(data, coerceNumber) : type.from(data);\n}\nfunction floater(f) {\n  return (d, i) => coerceNumber(f(d, i));\n}\nconst singleton = [null]; // for data-less decoration marks, e.g. frame\nconst field = name => d => d[name];\nconst indexOf = {\n  transform: range\n};\nconst identity = {\n  transform: d => d\n};\nconst zero = () => 0;\nconst one = () => 1;\nconst yes = () => true;\nconst string = x => x == null ? x : `${x}`;\nconst number = x => x == null ? x : +x;\nconst options_boolean = x => x == null ? x : !!x;\nconst first = x => x ? x[0] : undefined;\nconst second = x => x ? x[1] : undefined;\nconst third = x => x ? x[2] : undefined;\nconst constant = x => () => x;\n\n// Converts a string like “p25” into a function that takes an index I and an\n// accessor function f, returning the corresponding percentile value.\nfunction percentile(reduce) {\n  const p = +`${reduce}`.slice(1) / 100;\n  return (I, f) => (0,src.quantile)(I, p, f);\n}\n\n// If the values are specified as a typed array, no coercion is required.\nfunction coerceNumbers(values) {\n  return values instanceof TypedArray ? values : map(values, coerceNumber, Float64Array);\n}\n\n// Unlike Mark’s number, here we want to convert null and undefined to NaN since\n// the result will be stored in a Float64Array and we don’t want null to be\n// coerced to zero. We use Number instead of unary + to allow BigInt coercion.\nfunction coerceNumber(x) {\n  return x == null ? NaN : Number(x);\n}\nfunction coerceDates(values) {\n  return map(values, coerceDate);\n}\n\n// When coercing strings to dates, we only want to allow the ISO 8601 format\n// since the built-in string parsing of the Date constructor varies across\n// browsers. (In the future, this could be made more liberal if desired, though\n// it is still generally preferable to do date parsing yourself explicitly,\n// rather than rely on Plot.) Any non-string values are coerced to number first\n// and treated as milliseconds since UNIX epoch.\nfunction coerceDate(x) {\n  return x instanceof Date && !isNaN(x) ? x : typeof x === "string" ? parse(x) : x == null || isNaN(x = +x) ? undefined : new Date(x);\n}\n\n// Some channels may allow a string constant to be specified; to differentiate\n// string constants (e.g., "red") from named fields (e.g., "date"), this\n// function tests whether the given value is a CSS color string and returns a\n// tuple [channel, constant] where one of the two is undefined, and the other is\n// the given value. If you wish to reference a named field that is also a valid\n// CSS color, use an accessor (d => d.red) instead.\nfunction maybeColorChannel(value, defaultValue) {\n  if (value === undefined) value = defaultValue;\n  return value === null ? [undefined, "none"] : isColor(value) ? [undefined, value] : [value, undefined];\n}\n\n// Similar to maybeColorChannel, this tests whether the given value is a number\n// indicating a constant, and otherwise assumes that it’s a channel value.\nfunction maybeNumberChannel(value, defaultValue) {\n  if (value === undefined) value = defaultValue;\n  return value === null || typeof value === "number" ? [undefined, value] : [value, undefined];\n}\n\n// Validates the specified optional string against the allowed list of keywords.\nfunction maybeKeyword(input, name, allowed) {\n  if (input != null) return keyword(input, name, allowed);\n}\n\n// Validates the specified required string against the allowed list of keywords.\nfunction keyword(input, name, allowed) {\n  const i = `${input}`.toLowerCase();\n  if (!allowed.includes(i)) throw new Error(`invalid ${name}: ${input}`);\n  return i;\n}\n\n// Promotes the specified data to an array as needed.\nfunction arrayify(data) {\n  return data == null || data instanceof Array || data instanceof TypedArray ? data : Array.from(data);\n}\n\n// An optimization of type.from(values, f): if the given values are already an\n// instanceof the desired array type, the faster values.map method is used.\nfunction map(values, f, type = Array) {\n  return values == null ? values : values instanceof type ? values.map(f) : type.from(values, f);\n}\n\n// An optimization of type.from(values): if the given values are already an\n// instanceof the desired array type, the faster values.slice method is used.\nfunction slice(values, type = Array) {\n  return values instanceof type ? values.slice() : type.from(values);\n}\n\n// Returns true if any of x, x1, or x2 is not (strictly) undefined.\nfunction hasX({\n  x,\n  x1,\n  x2\n}) {\n  return x !== undefined || x1 !== undefined || x2 !== undefined;\n}\n\n// Returns true if any of y, y1, or y2 is not (strictly) undefined.\nfunction hasY({\n  y,\n  y1,\n  y2\n}) {\n  return y !== undefined || y1 !== undefined || y2 !== undefined;\n}\n\n// Returns true if has x or y, or if interval is not (strictly) undefined.\nfunction hasXY(options) {\n  return hasX(options) || hasY(options) || options.interval !== undefined;\n}\n\n// Disambiguates an options object (e.g., {y: "x2"}) from a primitive value.\nfunction isObject(option) {\n  return option?.toString === objectToString;\n}\n\n// Disambiguates a scale options object (e.g., {color: {type: "linear"}}) from\n// some other option (e.g., {color: "red"}). When creating standalone legends,\n// this is used to test whether a scale is defined; this should be consistent\n// with inferScaleType when there are no channels associated with the scale, and\n// if this returns true, then normalizeScale must return non-null.\nfunction isScaleOptions(option) {\n  return isObject(option) && (option.type !== undefined || option.domain !== undefined);\n}\n\n// Disambiguates an options object (e.g., {y: "x2"}) from a channel value\n// definition expressed as a channel transform (e.g., {transform: …}).\nfunction isOptions(option) {\n  return isObject(option) && typeof option.transform !== "function";\n}\n\n// Disambiguates a sort transform (e.g., {sort: "date"}) from a channel domain\n// sort definition (e.g., {sort: {y: "x"}}).\nfunction isDomainSort(sort) {\n  return isOptions(sort) && sort.value === undefined && sort.channel === undefined;\n}\n\n// For marks specified either as [0, x] or [x1, x2], such as areas and bars.\nfunction maybeZero(x, x1, x2, x3 = identity) {\n  if (x1 === undefined && x2 === undefined) {\n    // {x} or {}\n    x1 = 0, x2 = x === undefined ? x3 : x;\n  } else if (x1 === undefined) {\n    // {x, x2} or {x2}\n    x1 = x === undefined ? 0 : x;\n  } else if (x2 === undefined) {\n    // {x, x1} or {x1}\n    x2 = x === undefined ? 0 : x;\n  }\n  return [x1, x2];\n}\n\n// For marks that have x and y channels (e.g., cell, dot, line, text).\nfunction maybeTuple(x, y) {\n  return x === undefined && y === undefined ? [first, second] : [x, y];\n}\n\n// A helper for extracting the z channel, if it is variable. Used by transforms\n// that require series, such as moving average and normalize.\nfunction maybeZ({\n  z,\n  fill,\n  stroke\n} = {}) {\n  if (z === undefined) [z] = maybeColorChannel(fill);\n  if (z === undefined) [z] = maybeColorChannel(stroke);\n  return z;\n}\n\n// Returns a Uint32Array with elements [0, 1, 2, … data.length - 1].\nfunction range(data) {\n  const n = data.length;\n  const r = new Uint32Array(n);\n  for (let i = 0; i < n; ++i) r[i] = i;\n  return r;\n}\n\n// Returns a filtered range of data given the test function.\nfunction where(data, test) {\n  return range(data).filter(i => test(data[i], i, data));\n}\n\n// Returns an array [values[index[0]], values[index[1]], …].\nfunction take(values, index) {\n  return map(index, i => values[i]);\n}\n\n// If f does not take exactly one argument, wraps it in a function that uses take.\nfunction taker(f) {\n  return f.length === 1 ? (index, values) => f(take(values, index)) : f;\n}\n\n// Uses subarray if available, and otherwise slice.\nfunction subarray(I, i, j) {\n  return I.subarray ? I.subarray(i, j) : I.slice(i, j);\n}\n\n// Based on InternMap (d3.group).\nfunction keyof(value) {\n  return value !== null && typeof value === "object" ? value.valueOf() : value;\n}\nfunction maybeInput(key, options) {\n  if (options[key] !== undefined) return options[key];\n  switch (key) {\n    case "x1":\n    case "x2":\n      key = "x";\n      break;\n    case "y1":\n    case "y2":\n      key = "y";\n      break;\n  }\n  return options[key];\n}\nfunction column(source) {\n  // Defines a column whose values are lazily populated by calling the returned\n  // setter. If the given source is labeled, the label is propagated to the\n  // returned column definition.\n  let value;\n  return [{\n    transform: () => value,\n    label: labelof(source)\n  }, v => value = v];\n}\n\n// Like column, but allows the source to be null.\nfunction maybeColumn(source) {\n  return source == null ? [source] : column(source);\n}\nfunction labelof(value, defaultValue) {\n  return typeof value === "string" ? value : value && value.label !== undefined ? value.label : defaultValue;\n}\n\n// Assuming that both x1 and x2 and lazy columns (per above), this derives a new\n// a column that’s the average of the two, and which inherits the column label\n// (if any). Both input columns are assumed to be quantitative. If either column\n// is temporal, the returned column is also temporal.\nfunction mid(x1, x2) {\n  return {\n    transform(data) {\n      const X1 = x1.transform(data);\n      const X2 = x2.transform(data);\n      return isTemporal(X1) || isTemporal(X2) ? map(X1, (_, i) => new Date((+X1[i] + +X2[i]) / 2)) : map(X1, (_, i) => (+X1[i] + +X2[i]) / 2, Float64Array);\n    },\n    label: x1.label\n  };\n}\n\n// If the scale options declare an interval, applies it to the values V.\nfunction maybeApplyInterval(V, scale) {\n  const t = maybeIntervalTransform(scale?.interval, scale?.type);\n  return t ? map(V, t) : V;\n}\n\n// Returns the equivalent scale transform for the specified interval option.\nfunction maybeIntervalTransform(interval, type) {\n  const i = maybeInterval(interval, type);\n  return i && (v => defined(v) ? i.floor(v) : v);\n}\n\n// If interval is not nullish, converts interval shorthand such as a number (for\n// multiples) or a time interval name (such as “day”) to a {floor, offset,\n// range} object similar to a D3 time interval.\nfunction maybeInterval(interval, type) {\n  if (interval == null) return;\n  if (typeof interval === "number") {\n    if (0 < interval && interval < 1 && Number.isInteger(1 / interval)) interval = -1 / interval;\n    const n = Math.abs(interval);\n    return interval < 0 ? {\n      floor: d => Math.floor(d * n) / n,\n      offset: d => (d * n + 1) / n,\n      // note: no optional step for simplicity\n      range: (lo, hi) => (0,src.range)(Math.ceil(lo * n), hi * n).map(x => x / n)\n    } : {\n      floor: d => Math.floor(d / n) * n,\n      offset: d => d + n,\n      // note: no optional step for simplicity\n      range: (lo, hi) => (0,src.range)(Math.ceil(lo / n), hi / n).map(x => x * n)\n    };\n  }\n  if (typeof interval === "string") return (type === "time" ? maybeTimeInterval : maybeUtcInterval)(interval);\n  if (typeof interval.floor !== "function") throw new Error("invalid interval; missing floor method");\n  if (typeof interval.offset !== "function") throw new Error("invalid interval; missing offset method");\n  return interval;\n}\n\n// Like maybeInterval, but requires a range method too.\nfunction maybeRangeInterval(interval, type) {\n  interval = maybeInterval(interval, type);\n  if (interval && typeof interval.range !== "function") throw new Error("invalid interval: missing range method");\n  return interval;\n}\n\n// Like maybeRangeInterval, but requires a ceil method too.\nfunction maybeNiceInterval(interval, type) {\n  interval = maybeRangeInterval(interval, type);\n  if (interval && typeof interval.ceil !== "function") throw new Error("invalid interval: missing ceil method");\n  return interval;\n}\n\n// This distinguishes between per-dimension options and a standalone value.\nfunction maybeValue(value) {\n  return value === undefined || isOptions(value) ? value : {\n    value\n  };\n}\n\n// Coerces the given channel values (if any) to numbers. This is useful when\n// values will be interpolated into other code, such as an SVG transform, and\n// where we don’t wish to allow unexpected behavior for weird input.\nfunction numberChannel(source) {\n  return source == null ? null : {\n    transform: data => valueof(data, source, Float64Array),\n    label: labelof(source)\n  };\n}\nfunction isTuples(data) {\n  if (!isIterable(data)) return false;\n  for (const d of data) {\n    if (d == null) continue;\n    return typeof d === "object" && "0" in d && "1" in d;\n  }\n}\nfunction isIterable(value) {\n  return value && typeof value[Symbol.iterator] === "function";\n}\nfunction isTextual(values) {\n  for (const value of values) {\n    if (value == null) continue;\n    return typeof value !== "object" || value instanceof Date;\n  }\n}\nfunction isOrdinal(values) {\n  for (const value of values) {\n    if (value == null) continue;\n    const type = typeof value;\n    return type === "string" || type === "boolean";\n  }\n}\nfunction isTemporal(values) {\n  for (const value of values) {\n    if (value == null) continue;\n    return value instanceof Date;\n  }\n}\n\n// Are these strings that might represent dates? This is stricter than ISO 8601\n// because we want to ignore false positives on numbers; for example, the string\n// "1192" is more likely to represent a number than a date even though it is\n// valid ISO 8601 representing 1192-01-01.\nfunction isTemporalString(values) {\n  for (const value of values) {\n    if (value == null) continue;\n    return typeof value === "string" && isNaN(value) && parse(value);\n  }\n}\n\n// Are these strings that might represent numbers? This is stricter than\n// coercion because we want to ignore false positives on e.g. empty strings.\nfunction isNumericString(values) {\n  for (const value of values) {\n    if (value == null) continue;\n    if (typeof value !== "string") return false;\n    if (!value.trim()) continue;\n    return !isNaN(value);\n  }\n}\nfunction isNumeric(values) {\n  for (const value of values) {\n    if (value == null) continue;\n    return typeof value === "number";\n  }\n}\n\n// Returns true if every non-null value in the specified iterable of values\n// passes the specified predicate, and there is at least one non-null value;\n// returns false if at least one non-null value does not pass the specified\n// predicate; otherwise returns undefined (as if all values are null).\nfunction isEvery(values, is) {\n  let every;\n  for (const value of values) {\n    if (value == null) continue;\n    if (!is(value)) return false;\n    every = true;\n  }\n  return every;\n}\n\n// Mostly relies on d3-color, with a few extra color keywords. Currently this\n// strictly requires that the value be a string; we might want to apply string\n// coercion here, though note that d3-color instances would need to support\n// valueOf to work correctly with InternMap.\n// https://www.w3.org/TR/SVG11/painting.html#SpecifyingPaint\nfunction isColor(value) {\n  if (typeof value !== "string") return false;\n  value = value.toLowerCase().trim();\n  return value === "none" || value === "currentcolor" || value.startsWith("url(") && value.endsWith(")") ||\n  // <funciri>, e.g. pattern or gradient\n  value.startsWith("var(") && value.endsWith(")") ||\n  // CSS variable\n  (0,src.color)(value) !== null;\n}\nfunction isOpacity(value) {\n  return typeof value === "number" && (0 <= value && value <= 1 || isNaN(value));\n}\nfunction isNoneish(value) {\n  return value == null || isNone(value);\n}\nfunction isNone(value) {\n  return /^\\s*none\\s*$/i.test(value);\n}\nfunction isRound(value) {\n  return /^\\s*round\\s*$/i.test(value);\n}\nfunction maybeAnchor(value, name) {\n  return maybeKeyword(value, name, ["middle", "top-left", "top", "top-right", "right", "bottom-right", "bottom", "bottom-left", "left"]);\n}\nfunction maybeFrameAnchor(value = "middle") {\n  return maybeAnchor(value, "frameAnchor");\n}\n\n// Like a sort comparator, returns a positive value if the given array of values\n// is in ascending order, a negative value if the values are in descending\n// order. Assumes monotonicity; only tests the first and last values.\nfunction orderof(values) {\n  if (values == null) return;\n  const first = values[0];\n  const last = values[values.length - 1];\n  return (0,src.descending)(first, last);\n}\n\n// Unlike {...defaults, ...options}, this ensures that any undefined (but\n// present) properties in options inherit the given default value.\nfunction inherit(options = {}, ...rest) {\n  let o = options;\n  for (const defaults of rest) {\n    for (const key in defaults) {\n      if (o[key] === undefined) {\n        const value = defaults[key];\n        if (o === options) o = {\n          ...o,\n          [key]: value\n        };else o[key] = value;\n      }\n    }\n  }\n  return o;\n}\n\n// Given an iterable of named things (objects with a name property), returns a\n// corresponding object with properties associated with the given name.\nfunction named(things) {\n  console.warn("named iterables are deprecated; please use an object instead");\n  const names = new Set();\n  return Object.fromEntries(Array.from(things, thing => {\n    const {\n      name\n    } = thing;\n    if (name == null) throw new Error("missing name");\n    const key = `${name}`;\n    if (key === "__proto__") throw new Error(`illegal name: ${key}`);\n    if (names.has(key)) throw new Error(`duplicate name: ${key}`);\n    names.add(key);\n    return [name, thing];\n  }));\n}\nfunction maybeNamed(things) {\n  return isIterable(things) ? named(things) : things;\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/scales/index.js\n// Positional scales have associated axes, and for ordinal data, a point or band\n// scale is used instead of an ordinal scale.\nconst position = Symbol("position");\n\n// Color scales default to the turbo interpolator for quantitative data, and to\n// the Tableau10 scheme for ordinal data. Color scales may also have an\n// associated legend.\nconst color = Symbol("color");\n\n// Radius scales default to the sqrt type, have a default range of [0, 3], and a\n// default domain from 0 to the median first quartile of associated channels.\nconst radius = Symbol("radius");\n\n// Length scales default to the linear type, have a default range of [0, 12],\n// and a default domain from 0 to the median median of associated channels.\nconst scales_length = Symbol("length");\n\n// Opacity scales have a default range of [0, 1], and a default domain from 0 to\n// the maximum value of associated channels.\nconst opacity = Symbol("opacity");\n\n// Symbol scales have a default range of categorical symbols.\nconst symbol = Symbol("symbol");\n\n// There isn’t really a projection scale; this represents x and y for geometry.\n// This is used to denote channels that should be projected.\nconst projection = Symbol("projection");\n\n// TODO Rather than hard-coding the list of known scale names, collect the names\n// and categories for each plot specification, so that custom marks can register\n// custom scales.\nconst registry = new Map([["x", position], ["y", position], ["fx", position], ["fy", position], ["r", radius], ["color", color], ["opacity", opacity], ["symbol", symbol], ["length", scales_length], ["projection", projection]]);\nfunction isPosition(kind) {\n  return kind === position || kind === projection;\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/symbol.js\n\n\nconst sqrt3 = Math.sqrt(3);\nconst sqrt4_3 = 2 / sqrt3;\nconst symbolHexagon = {\n  draw(context, size) {\n    const rx = Math.sqrt(size / Math.PI),\n      ry = rx * sqrt4_3,\n      hy = ry / 2;\n    context.moveTo(0, ry);\n    context.lineTo(rx, hy);\n    context.lineTo(rx, -hy);\n    context.lineTo(0, -ry);\n    context.lineTo(-rx, -hy);\n    context.lineTo(-rx, hy);\n    context.closePath();\n  }\n};\nconst symbols = new Map([["asterisk", src.symbolAsterisk], ["circle", src.symbolCircle], ["cross", src.symbolCross], ["diamond", src.symbolDiamond], ["diamond2", src.symbolDiamond2], ["hexagon", symbolHexagon], ["plus", src.symbolPlus], ["square", src.symbolSquare], ["square2", src.symbolSquare2], ["star", src.symbolStar], ["times", src.symbolTimes], ["triangle", src.symbolTriangle], ["triangle2", src.symbolTriangle2], ["wye", src.symbolWye]]);\nfunction isSymbolObject(value) {\n  return value && typeof value.draw === "function";\n}\nfunction isSymbol(value) {\n  if (isSymbolObject(value)) return true;\n  if (typeof value !== "string") return false;\n  return symbols.has(value.toLowerCase());\n}\nfunction maybeSymbol(symbol) {\n  if (symbol == null || isSymbolObject(symbol)) return symbol;\n  const value = symbols.get(`${symbol}`.toLowerCase());\n  if (value) return value;\n  throw new Error(`invalid symbol: ${symbol}`);\n}\nfunction maybeSymbolChannel(symbol) {\n  if (symbol == null || isSymbolObject(symbol)) return [undefined, symbol];\n  if (typeof symbol === "string") {\n    const value = symbols.get(`${symbol}`.toLowerCase());\n    if (value) return [undefined, value];\n  }\n  return [symbol, undefined];\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/transforms/basic.js\n\n\n\nfunction basic({\n  filter: f1,\n  sort: s1,\n  reverse: r1,\n  transform: t1,\n  initializer: i1,\n  ...options\n} = {}, transform) {\n  // If both t1 and t2 are defined, returns a composite transform that first\n  // applies t1 and then applies t2.\n  if (t1 === undefined) {\n    // explicit transform overrides filter, sort, and reverse\n    if (f1 != null) t1 = filterTransform(f1);\n    if (s1 != null && !isDomainSort(s1)) t1 = composeTransform(t1, sortTransform(s1));\n    if (r1) t1 = composeTransform(t1, reverseTransform);\n  }\n  if (transform != null && i1 != null) throw new Error("transforms cannot be applied after initializers");\n  return {\n    ...options,\n    ...((s1 === null || isDomainSort(s1)) && {\n      sort: s1\n    }),\n    transform: composeTransform(t1, transform)\n  };\n}\nfunction initializer({\n  filter: f1,\n  sort: s1,\n  reverse: r1,\n  initializer: i1,\n  ...options\n} = {}, initializer) {\n  // If both i1 and i2 are defined, returns a composite initializer that first\n  // applies i1 and then applies i2.\n  if (i1 === undefined) {\n    // explicit initializer overrides filter, sort, and reverse\n    if (f1 != null) i1 = filterTransform(f1);\n    if (s1 != null && !isDomainSort(s1)) i1 = composeInitializer(i1, sortTransform(s1));\n    if (r1) i1 = composeInitializer(i1, reverseTransform);\n  }\n  return {\n    ...options,\n    ...((s1 === null || isDomainSort(s1)) && {\n      sort: s1\n    }),\n    initializer: composeInitializer(i1, initializer)\n  };\n}\nfunction composeTransform(t1, t2) {\n  if (t1 == null) return t2 === null ? undefined : t2;\n  if (t2 == null) return t1 === null ? undefined : t1;\n  return function (data, facets, plotOptions) {\n    ({\n      data,\n      facets\n    } = t1.call(this, data, facets, plotOptions));\n    return t2.call(this, arrayify(data), facets, plotOptions);\n  };\n}\nfunction composeInitializer(i1, i2) {\n  if (i1 == null) return i2 === null ? undefined : i2;\n  if (i2 == null) return i1 === null ? undefined : i1;\n  return function (data, facets, channels, ...args) {\n    let c1, d1, f1, c2, d2, f2;\n    ({\n      data: d1 = data,\n      facets: f1 = facets,\n      channels: c1\n    } = i1.call(this, data, facets, channels, ...args));\n    ({\n      data: d2 = d1,\n      facets: f2 = f1,\n      channels: c2\n    } = i2.call(this, d1, f1, {\n      ...channels,\n      ...c1\n    }, ...args));\n    return {\n      data: d2,\n      facets: f2,\n      channels: {\n        ...c1,\n        ...c2\n      }\n    };\n  };\n}\nfunction apply(options, t) {\n  return (options.initializer != null ? initializer : basic)(options, t);\n}\nfunction filter(test, options) {\n  return apply(options, filterTransform(test));\n}\nfunction filterTransform(value) {\n  return (data, facets) => {\n    const V = valueof(data, value);\n    return {\n      data,\n      facets: facets.map(I => I.filter(i => V[i]))\n    };\n  };\n}\nfunction reverse({\n  sort,\n  ...options\n} = {}) {\n  return {\n    ...apply(options, reverseTransform),\n    sort: isDomainSort(sort) ? sort : null\n  };\n}\nfunction reverseTransform(data, facets) {\n  return {\n    data,\n    facets: facets.map(I => I.slice().reverse())\n  };\n}\nfunction shuffle({\n  seed,\n  sort,\n  ...options\n} = {}) {\n  return {\n    ...apply(options, sortValue(seed == null ? Math.random : (0,src.randomLcg)(seed))),\n    sort: isDomainSort(sort) ? sort : null\n  };\n}\nfunction sort(order, {\n  sort,\n  ...options\n} = {}) {\n  return {\n    ...(isOptions(order) && order.channel !== undefined ? initializer : apply)(options, sortTransform(order)),\n    sort: isDomainSort(sort) ? sort : null\n  };\n}\nfunction sortTransform(value) {\n  return (typeof value === "function" && value.length !== 1 ? sortData : sortValue)(value);\n}\nfunction sortData(compare) {\n  return (data, facets) => {\n    const compareData = (i, j) => compare(data[i], data[j]);\n    return {\n      data,\n      facets: facets.map(I => I.slice().sort(compareData))\n    };\n  };\n}\nfunction sortValue(value) {\n  let channel, order;\n  ({\n    channel,\n    value,\n    order\n  } = {\n    ...maybeValue(value)\n  });\n  const negate = channel?.startsWith("-");\n  if (negate) channel = channel.slice(1);\n  if (order === undefined) order = negate ? descendingDefined : ascendingDefined;\n  if (typeof order !== "function") {\n    switch (`${order}`.toLowerCase()) {\n      case "ascending":\n        order = ascendingDefined;\n        break;\n      case "descending":\n        order = descendingDefined;\n        break;\n      default:\n        throw new Error(`invalid order: ${order}`);\n    }\n  }\n  return (data, facets, channels) => {\n    let V;\n    if (channel === undefined) {\n      V = valueof(data, value);\n    } else {\n      if (channels === undefined) throw new Error("channel sort requires an initializer");\n      V = channels[channel];\n      if (!V) return {}; // ignore missing channel\n      V = V.value;\n    }\n    const compareValue = (i, j) => order(V[i], V[j]);\n    return {\n      data,\n      facets: facets.map(I => I.slice().sort(compareValue))\n    };\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/transforms/group.js\n\n\n\n\n\n// Group on {z, fill, stroke}.\nfunction groupZ(outputs, options) {\n  return groupn(null, null, outputs, options);\n}\n\n// Group on {z, fill, stroke}, then on x.\nfunction groupX(outputs = {\n  y: "count"\n}, options = {}) {\n  const {\n    x = identity\n  } = options;\n  if (x == null) throw new Error("missing channel: x");\n  return groupn(x, null, outputs, options);\n}\n\n// Group on {z, fill, stroke}, then on y.\nfunction groupY(outputs = {\n  x: "count"\n}, options = {}) {\n  const {\n    y = identity\n  } = options;\n  if (y == null) throw new Error("missing channel: y");\n  return groupn(null, y, outputs, options);\n}\n\n// Group on {z, fill, stroke}, then on x and y.\nfunction group(outputs = {\n  fill: "count"\n}, options = {}) {\n  let {\n    x,\n    y\n  } = options;\n  [x, y] = maybeTuple(x, y);\n  if (x == null) throw new Error("missing channel: x");\n  if (y == null) throw new Error("missing channel: y");\n  return groupn(x, y, outputs, options);\n}\nfunction groupn(x,\n// optionally group on x\ny,\n// optionally group on y\n{\n  data: reduceData = reduceIdentity,\n  filter,\n  sort,\n  reverse,\n  ...outputs // output channel definitions\n} = {}, inputs = {} // input channels and options\n) {\n  // Compute the outputs.\n  outputs = maybeOutputs(outputs, inputs);\n  reduceData = maybeReduce(reduceData, identity);\n  sort = sort == null ? undefined : maybeOutput("sort", sort, inputs);\n  filter = filter == null ? undefined : maybeEvaluator("filter", filter, inputs);\n\n  // Produce x and y output channels as appropriate.\n  const [GX, setGX] = maybeColumn(x);\n  const [GY, setGY] = maybeColumn(y);\n\n  // Greedily materialize the z, fill, and stroke channels (if channels and not\n  // constants) so that we can reference them for subdividing groups without\n  // computing them more than once.\n  const {\n    z,\n    fill,\n    stroke,\n    x1,\n    x2,\n    // consumed if x is an output\n    y1,\n    y2,\n    // consumed if y is an output\n    ...options\n  } = inputs;\n  const [GZ, setGZ] = maybeColumn(z);\n  const [vfill] = maybeColorChannel(fill);\n  const [vstroke] = maybeColorChannel(stroke);\n  const [GF, setGF] = maybeColumn(vfill);\n  const [GS, setGS] = maybeColumn(vstroke);\n  return {\n    ...("z" in inputs && {\n      z: GZ || z\n    }),\n    ...("fill" in inputs && {\n      fill: GF || fill\n    }),\n    ...("stroke" in inputs && {\n      stroke: GS || stroke\n    }),\n    ...basic(options, (data, facets, plotOptions) => {\n      const X = maybeApplyInterval(valueof(data, x), plotOptions?.x);\n      const Y = maybeApplyInterval(valueof(data, y), plotOptions?.y);\n      const Z = valueof(data, z);\n      const F = valueof(data, vfill);\n      const S = valueof(data, vstroke);\n      const G = maybeSubgroup(outputs, {\n        z: Z,\n        fill: F,\n        stroke: S\n      });\n      const groupFacets = [];\n      const groupData = [];\n      const GX = X && setGX([]);\n      const GY = Y && setGY([]);\n      const GZ = Z && setGZ([]);\n      const GF = F && setGF([]);\n      const GS = S && setGS([]);\n      let i = 0;\n      for (const o of outputs) o.initialize(data);\n      if (sort) sort.initialize(data);\n      if (filter) filter.initialize(data);\n      for (const facet of facets) {\n        const groupFacet = [];\n        for (const o of outputs) o.scope("facet", facet);\n        if (sort) sort.scope("facet", facet);\n        if (filter) filter.scope("facet", facet);\n        for (const [f, I] of maybeGroup(facet, G)) {\n          for (const [y, gg] of maybeGroup(I, Y)) {\n            for (const [x, g] of maybeGroup(gg, X)) {\n              if (filter && !filter.reduce(g)) continue;\n              groupFacet.push(i++);\n              groupData.push(reduceData.reduceIndex(g, data));\n              if (X) GX.push(x);\n              if (Y) GY.push(y);\n              if (Z) GZ.push(G === Z ? f : Z[g[0]]);\n              if (F) GF.push(G === F ? f : F[g[0]]);\n              if (S) GS.push(G === S ? f : S[g[0]]);\n              for (const o of outputs) o.reduce(g);\n              if (sort) sort.reduce(g);\n            }\n          }\n        }\n        groupFacets.push(groupFacet);\n      }\n      maybeSort(groupFacets, sort, reverse);\n      return {\n        data: groupData,\n        facets: groupFacets\n      };\n    }),\n    ...(!hasOutput(outputs, "x") && (GX ? {\n      x: GX\n    } : {\n      x1,\n      x2\n    })),\n    ...(!hasOutput(outputs, "y") && (GY ? {\n      y: GY\n    } : {\n      y1,\n      y2\n    })),\n    ...Object.fromEntries(outputs.map(({\n      name,\n      output\n    }) => [name, output]))\n  };\n}\nfunction hasOutput(outputs, ...names) {\n  for (const {\n    name\n  } of outputs) {\n    if (names.includes(name)) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction maybeOutputs(outputs, inputs, asOutput = maybeOutput) {\n  const entries = Object.entries(outputs);\n  // Propagate standard mark channels by default.\n  if (inputs.title != null && outputs.title === undefined) entries.push(["title", reduceTitle]);\n  if (inputs.href != null && outputs.href === undefined) entries.push(["href", reduceFirst]);\n  return entries.filter(([, reduce]) => reduce !== undefined).map(([name, reduce]) => reduce === null ? nullOutput(name) : asOutput(name, reduce, inputs));\n}\nfunction maybeOutput(name, reduce, inputs, asEvaluator = maybeEvaluator) {\n  let scale; // optional per-channel scale override\n  if (isObject(reduce) && "reduce" in reduce) scale = reduce.scale, reduce = reduce.reduce; // N.B. array.reduce\n  const evaluator = asEvaluator(name, reduce, inputs);\n  const [output, setOutput] = column(evaluator.label);\n  let O;\n  return {\n    name,\n    output: scale === undefined ? output : {\n      value: output,\n      scale\n    },\n    initialize(data) {\n      evaluator.initialize(data);\n      O = setOutput([]);\n    },\n    scope(scope, I) {\n      evaluator.scope(scope, I);\n    },\n    reduce(I, extent) {\n      O.push(evaluator.reduce(I, extent));\n    }\n  };\n}\nfunction nullOutput(name) {\n  return {\n    name,\n    initialize() {},\n    scope() {},\n    reduce() {}\n  };\n}\nfunction maybeEvaluator(name, reduce, inputs, asReduce = maybeReduce) {\n  const input = maybeInput(name, inputs);\n  const reducer = asReduce(reduce, input);\n  let V, context;\n  return {\n    label: labelof(reducer === reduceCount ? null : input, reducer.label),\n    initialize(data) {\n      V = input === undefined ? data : valueof(data, input);\n      if (reducer.scope === "data") {\n        context = reducer.reduceIndex(range(data), V);\n      }\n    },\n    scope(scope, I) {\n      if (reducer.scope === scope) {\n        context = reducer.reduceIndex(I, V);\n      }\n    },\n    reduce(I, extent) {\n      return reducer.scope == null ? reducer.reduceIndex(I, V, extent) : reducer.reduceIndex(I, V, context, extent);\n    }\n  };\n}\nfunction maybeGroup(I, X) {\n  return X ? (0,src.sort)((0,src.group)(I, i => X[i]), first) : [[, I]];\n}\nfunction maybeReduce(reduce, value, fallback = invalidReduce) {\n  if (reduce == null) return fallback(reduce);\n  if (typeof reduce.reduceIndex === "function") return reduce;\n  if (typeof reduce.reduce === "function" && isObject(reduce)) return reduceReduce(reduce); // N.B. array.reduce\n  if (typeof reduce === "function") return reduceFunction(reduce);\n  if (/^p\\d{2}$/i.test(reduce)) return reduceAccessor(percentile(reduce));\n  switch (`${reduce}`.toLowerCase()) {\n    case "first":\n      return reduceFirst;\n    case "last":\n      return reduceLast;\n    case "identity":\n      return reduceIdentity;\n    case "count":\n      return reduceCount;\n    case "distinct":\n      return reduceDistinct;\n    case "sum":\n      return value == null ? reduceCount : reduceSum;\n    case "proportion":\n      return reduceProportion(value, "data");\n    case "proportion-facet":\n      return reduceProportion(value, "facet");\n    case "deviation":\n      return reduceAccessor(src.deviation);\n    case "min":\n      return reduceAccessor(src.min);\n    case "min-index":\n      return reduceAccessor(src.minIndex);\n    case "max":\n      return reduceAccessor(src.max);\n    case "max-index":\n      return reduceAccessor(src.maxIndex);\n    case "mean":\n      return reduceMaybeTemporalAccessor(src.mean);\n    case "median":\n      return reduceMaybeTemporalAccessor(src.median);\n    case "variance":\n      return reduceAccessor(src.variance);\n    case "mode":\n      return reduceAccessor(src.mode);\n  }\n  return fallback(reduce);\n}\nfunction invalidReduce(reduce) {\n  throw new Error(`invalid reduce: ${reduce}`);\n}\nfunction maybeSubgroup(outputs, inputs) {\n  for (const name in inputs) {\n    const value = inputs[name];\n    if (value !== undefined && !outputs.some(o => o.name === name)) {\n      return value;\n    }\n  }\n}\nfunction maybeSort(facets, sort, reverse) {\n  if (sort) {\n    const S = sort.output.transform();\n    const compare = (i, j) => ascendingDefined(S[i], S[j]);\n    facets.forEach(f => f.sort(compare));\n  }\n  if (reverse) {\n    facets.forEach(f => f.reverse());\n  }\n}\nfunction reduceReduce(reduce) {\n  console.warn("deprecated reduce interface; implement reduceIndex instead.");\n  return {\n    ...reduce,\n    reduceIndex: reduce.reduce.bind(reduce)\n  };\n}\nfunction reduceFunction(f) {\n  return {\n    reduceIndex(I, X, extent) {\n      return f(take(X, I), extent);\n    }\n  };\n}\nfunction reduceAccessor(f) {\n  return {\n    reduceIndex(I, X) {\n      return f(I, i => X[i]);\n    }\n  };\n}\nfunction reduceMaybeTemporalAccessor(f) {\n  return {\n    reduceIndex(I, X) {\n      const x = f(I, i => X[i]);\n      return isTemporal(X) ? new Date(x) : x;\n    }\n  };\n}\nconst reduceIdentity = {\n  reduceIndex(I, X) {\n    return take(X, I);\n  }\n};\nconst reduceFirst = {\n  reduceIndex(I, X) {\n    return X[I[0]];\n  }\n};\nconst reduceTitle = {\n  reduceIndex(I, X) {\n    const n = 5;\n    const groups = (0,src.sort)((0,src.rollup)(I, V => V.length, i => X[i]), second);\n    const top = groups.slice(-n).reverse();\n    if (top.length < groups.length) {\n      const bottom = groups.slice(0, 1 - n);\n      top[n - 1] = [`… ${bottom.length.toLocaleString("en-US")} more`, (0,src.sum)(bottom, second)];\n    }\n    return top.map(([key, value]) => `${key} (${value.toLocaleString("en-US")})`).join("\\n");\n  }\n};\nconst reduceLast = {\n  reduceIndex(I, X) {\n    return X[I[I.length - 1]];\n  }\n};\nconst reduceCount = {\n  label: "Frequency",\n  reduceIndex(I) {\n    return I.length;\n  }\n};\nconst reduceDistinct = {\n  label: "Distinct",\n  reduceIndex(I, X) {\n    const s = new src.InternSet();\n    for (const i of I) s.add(X[i]);\n    return s.size;\n  }\n};\nconst reduceSum = reduceAccessor(src.sum);\nfunction reduceProportion(value, scope) {\n  return value == null ? {\n    scope,\n    label: "Frequency",\n    reduceIndex: (I, V, basis = 1) => I.length / basis\n  } : {\n    scope,\n    reduceIndex: (I, V, basis = 1) => (0,src.sum)(I, i => V[i]) / basis\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/channel.js\n\n\n\n\n\n\nfunction createChannel(data, {\n  scale,\n  type,\n  value,\n  filter,\n  hint\n}, name) {\n  if (hint === undefined && typeof value?.transform === "function") hint = value.hint;\n  return inferChannelScale(name, {\n    scale,\n    type,\n    value: valueof(data, value),\n    label: labelof(value),\n    filter,\n    hint\n  });\n}\nfunction createChannels(channels, data) {\n  return Object.fromEntries(Object.entries(channels).map(([name, channel]) => [name, createChannel(data, channel, name)]));\n}\n\n// TODO Use Float64Array for scales with numeric ranges, e.g. position?\nfunction valueObject(channels, scales) {\n  const values = Object.fromEntries(Object.entries(channels).map(([name, {\n    scale: scaleName,\n    value\n  }]) => {\n    const scale = scaleName == null ? null : scales[scaleName];\n    return [name, scale == null ? value : map(value, scale)];\n  }));\n  values.channels = channels; // expose channel state for advanced usage\n  return values;\n}\n\n// If the channel uses the "auto" scale (or equivalently true), infer the scale\n// from the channel name and the provided values. For color and symbol channels,\n// no scale is applied if the values are literal; however for symbols, we must\n// promote symbol names (e.g., "plus") to symbol implementations (symbolPlus).\n// Note: mutates channel!\nfunction inferChannelScale(name, channel) {\n  const {\n    scale,\n    value\n  } = channel;\n  if (scale === true || scale === "auto") {\n    switch (name) {\n      case "fill":\n      case "stroke":\n      case "color":\n        channel.scale = scale !== true && isEvery(value, isColor) ? null : "color";\n        break;\n      case "fillOpacity":\n      case "strokeOpacity":\n      case "opacity":\n        channel.scale = scale !== true && isEvery(value, isOpacity) ? null : "opacity";\n        break;\n      case "symbol":\n        if (scale !== true && isEvery(value, isSymbol)) {\n          channel.scale = null;\n          channel.value = map(value, maybeSymbol);\n        } else {\n          channel.scale = "symbol";\n        }\n        break;\n      default:\n        channel.scale = registry.has(name) ? name : null;\n        break;\n    }\n  } else if (scale === false) {\n    channel.scale = null;\n  } else if (scale != null && !registry.has(scale)) {\n    throw new Error(`unknown scale: ${scale}`);\n  }\n  return channel;\n}\n\n// Note: mutates channel.domain! This is set to a function so that it is lazily\n// computed; i.e., if the scale’s domain is set explicitly, that takes priority\n// over the sort option, and we don’t need to do additional work.\nfunction channelDomain(data, facets, channels, facetChannels, options) {\n  const {\n    order: defaultOrder,\n    reverse: defaultReverse,\n    reduce: defaultReduce = true,\n    limit: defaultLimit\n  } = options;\n  for (const x in options) {\n    if (!registry.has(x)) continue; // ignore unknown scale keys (including generic options)\n    let {\n      value: y,\n      order = defaultOrder,\n      reverse = defaultReverse,\n      reduce = defaultReduce,\n      limit = defaultLimit\n    } = maybeValue(options[x]); // prettier-ignore\n    const negate = y?.startsWith("-");\n    if (negate) y = y.slice(1);\n    order = order === undefined ? negate !== (y === "width" || y === "height") ? descendingGroup : ascendingGroup : maybeOrder(order); // prettier-ignore\n    if (reduce == null || reduce === false) continue; // disabled reducer\n    const X = x === "fx" || x === "fy" ? reindexFacetChannel(facets, facetChannels[x]) : findScaleChannel(channels, x);\n    if (!X) throw new Error(`missing channel for scale: ${x}`);\n    const XV = X.value;\n    const [lo = 0, hi = Infinity] = isIterable(limit) ? limit : limit < 0 ? [limit] : [0, limit];\n    if (y == null) {\n      X.domain = () => {\n        let domain = Array.from(new src.InternSet(XV)); // remove any duplicates\n        if (reverse) domain = domain.reverse();\n        if (lo !== 0 || hi !== Infinity) domain = domain.slice(lo, hi);\n        return domain;\n      };\n    } else {\n      const YV = y === "data" ? data : y === "height" ? difference(channels, "y1", "y2") : y === "width" ? difference(channels, "x1", "x2") : values(channels, y, y === "y" ? "y2" : y === "x" ? "x2" : undefined);\n      const reducer = maybeReduce(reduce === true ? "max" : reduce, YV);\n      X.domain = () => {\n        let domain = (0,src.rollups)(range(XV), I => reducer.reduceIndex(I, YV), i => XV[i]);\n        if (order) domain.sort(order);\n        if (reverse) domain.reverse();\n        if (lo !== 0 || hi !== Infinity) domain = domain.slice(lo, hi);\n        return domain.map(first);\n      };\n    }\n  }\n}\nfunction findScaleChannel(channels, scale) {\n  for (const name in channels) {\n    const channel = channels[name];\n    if (channel.scale === scale) return channel;\n  }\n}\n\n// Facet channels are not affected by transforms; so, to compute the domain of a\n// facet scale, we must first re-index the facet channel according to the\n// transformed mark index. Note: mutates channel, but that should be safe here?\nfunction reindexFacetChannel(facets, channel) {\n  const originalFacets = facets.original;\n  if (originalFacets === facets) return channel; // not transformed\n  const V1 = channel.value;\n  const V2 = channel.value = []; // mutates channel!\n  for (let i = 0; i < originalFacets.length; ++i) {\n    const vi = V1[originalFacets[i][0]];\n    for (const j of facets[i]) V2[j] = vi;\n  }\n  return channel;\n}\nfunction difference(channels, k1, k2) {\n  const X1 = values(channels, k1);\n  const X2 = values(channels, k2);\n  return map(X2, (x2, i) => Math.abs(x2 - X1[i]), Float64Array);\n}\nfunction values(channels, name, alias) {\n  let channel = channels[name];\n  if (!channel && alias !== undefined) channel = channels[alias];\n  if (channel) return channel.value;\n  throw new Error(`missing channel: ${name}`);\n}\nfunction maybeOrder(order) {\n  if (order == null || typeof order === "function") return order;\n  switch (`${order}`.toLowerCase()) {\n    case "ascending":\n      return ascendingGroup;\n    case "descending":\n      return descendingGroup;\n  }\n  throw new Error(`invalid order: ${order}`);\n}\nfunction ascendingGroup([ak, av], [bk, bv]) {\n  return ascendingDefined(av, bv) || ascendingDefined(ak, bk);\n}\nfunction descendingGroup([ak, av], [bk, bv]) {\n  return descendingDefined(av, bv) || ascendingDefined(ak, bk);\n}\nfunction getSource(channels, key) {\n  let channel = channels[key];\n  if (!channel) return;\n  while (channel.source) channel = channel.source;\n  return channel.source === null ? null : channel;\n}\n;// CONCATENATED MODULE: ./node_modules/isoformat/src/format.js\nfunction format(date, fallback) {\n  if (!(date instanceof Date)) date = new Date(+date);\n  if (isNaN(date)) return typeof fallback === "function" ? fallback(date) : fallback;\n  const hours = date.getUTCHours();\n  const minutes = date.getUTCMinutes();\n  const seconds = date.getUTCSeconds();\n  const milliseconds = date.getUTCMilliseconds();\n  return `${formatYear(date.getUTCFullYear(), 4)}-${pad(date.getUTCMonth() + 1, 2)}-${pad(date.getUTCDate(), 2)}${hours || minutes || seconds || milliseconds ? `T${pad(hours, 2)}:${pad(minutes, 2)}${seconds || milliseconds ? `:${pad(seconds, 2)}${milliseconds ? `.${pad(milliseconds, 3)}` : ``}` : ``}Z` : ``}`;\n}\nfunction formatYear(year) {\n  return year < 0 ? `-${pad(-year, 6)}` : year > 9999 ? `+${pad(year, 6)}` : pad(year, 4);\n}\nfunction pad(value, width) {\n  return `${value}`.padStart(width, "0");\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/memoize.js\nfunction memoize1(compute) {\n  let cacheValue, cacheKeys;\n  return (...keys) => {\n    if (cacheKeys?.length !== keys.length || cacheKeys.some((k, i) => k !== keys[i])) {\n      cacheKeys = keys;\n      cacheValue = compute(...keys);\n    }\n    return cacheValue;\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/format.js\n\n\n\nconst numberFormat = memoize1(locale => {\n  return new Intl.NumberFormat(locale);\n});\nconst monthFormat = memoize1((locale, month) => {\n  return new Intl.DateTimeFormat(locale, {\n    timeZone: "UTC",\n    ...(month && {\n      month\n    })\n  });\n});\nconst weekdayFormat = memoize1((locale, weekday) => {\n  return new Intl.DateTimeFormat(locale, {\n    timeZone: "UTC",\n    ...(weekday && {\n      weekday\n    })\n  });\n});\nfunction formatNumber(locale = "en-US") {\n  const format = numberFormat(locale);\n  return i => i != null && !isNaN(i) ? format.format(i) : undefined;\n}\nfunction formatMonth(locale = "en-US", format = "short") {\n  const fmt = monthFormat(locale, format);\n  return i => i != null && !isNaN(i = +new Date(Date.UTC(2000, +i))) ? fmt.format(i) : undefined;\n}\nfunction formatWeekday(locale = "en-US", format = "short") {\n  const fmt = weekdayFormat(locale, format);\n  return i => i != null && !isNaN(i = +new Date(Date.UTC(2001, 0, +i))) ? fmt.format(i) : undefined;\n}\nfunction formatIsoDate(date) {\n  return format(date, "Invalid Date");\n}\nfunction formatAuto(locale = "en-US") {\n  const number = formatNumber(locale);\n  return v => (v instanceof Date ? formatIsoDate : typeof v === "number" ? number : string)(v);\n}\n\n// TODO When Plot supports a top-level locale option, this should be removed\n// because it lacks context to know which locale to use; formatAuto should be\n// used instead whenever possible.\nconst formatDefault = formatAuto();\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/warnings.js\nlet warnings = 0;\nfunction consumeWarnings() {\n  const w = warnings;\n  warnings = 0;\n  return w;\n}\nfunction warn(message) {\n  console.warn(message);\n  ++warnings;\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/style.js\n\n\n\n\n\n\n\nconst offset = (typeof window !== "undefined" ? window.devicePixelRatio > 1 : typeof it === "undefined") ? 0 : 0.5; // prettier-ignore\n\nlet nextClipId = 0;\nfunction getClipId() {\n  return `plot-clip-${++nextClipId}`;\n}\nfunction styles(mark, {\n  title,\n  href,\n  ariaLabel: variaLabel,\n  ariaDescription,\n  ariaHidden,\n  target,\n  fill,\n  fillOpacity,\n  stroke,\n  strokeWidth,\n  strokeOpacity,\n  strokeLinejoin,\n  strokeLinecap,\n  strokeMiterlimit,\n  strokeDasharray,\n  strokeDashoffset,\n  opacity,\n  mixBlendMode,\n  imageFilter,\n  paintOrder,\n  pointerEvents,\n  shapeRendering,\n  channels\n}, {\n  ariaLabel: cariaLabel,\n  fill: defaultFill = "currentColor",\n  fillOpacity: defaultFillOpacity,\n  stroke: defaultStroke = "none",\n  strokeOpacity: defaultStrokeOpacity,\n  strokeWidth: defaultStrokeWidth,\n  strokeLinecap: defaultStrokeLinecap,\n  strokeLinejoin: defaultStrokeLinejoin,\n  strokeMiterlimit: defaultStrokeMiterlimit,\n  paintOrder: defaultPaintOrder\n}) {\n  // Some marks don’t support fill (e.g., tick and rule).\n  if (defaultFill === null) {\n    fill = null;\n    fillOpacity = null;\n  }\n\n  // Some marks don’t support stroke (e.g., image).\n  if (defaultStroke === null) {\n    stroke = null;\n    strokeOpacity = null;\n  }\n\n  // Some marks default to fill with no stroke, while others default to stroke\n  // with no fill. For example, bar and area default to fill, while dot and line\n  // default to stroke. For marks that fill by default, the default fill only\n  // applies if the stroke is (constant) none; if you set a stroke, then the\n  // default fill becomes none. Similarly for marks that stroke by stroke, the\n  // default stroke only applies if the fill is (constant) none.\n  if (isNoneish(defaultFill)) {\n    if (!isNoneish(defaultStroke) && (!isNoneish(fill) || channels?.fill)) defaultStroke = "none";\n  } else {\n    if (isNoneish(defaultStroke) && (!isNoneish(stroke) || channels?.stroke)) defaultFill = "none";\n  }\n  const [vfill, cfill] = maybeColorChannel(fill, defaultFill);\n  const [vfillOpacity, cfillOpacity] = maybeNumberChannel(fillOpacity, defaultFillOpacity);\n  const [vstroke, cstroke] = maybeColorChannel(stroke, defaultStroke);\n  const [vstrokeOpacity, cstrokeOpacity] = maybeNumberChannel(strokeOpacity, defaultStrokeOpacity);\n  const [vopacity, copacity] = maybeNumberChannel(opacity);\n\n  // For styles that have no effect if there is no stroke, only apply the\n  // defaults if the stroke is not the constant none. (If stroke is a channel,\n  // then cstroke will be undefined, but there’s still a stroke; hence we don’t\n  // use isNoneish here.)\n  if (!isNone(cstroke)) {\n    if (strokeWidth === undefined) strokeWidth = defaultStrokeWidth;\n    if (strokeLinecap === undefined) strokeLinecap = defaultStrokeLinecap;\n    if (strokeLinejoin === undefined) strokeLinejoin = defaultStrokeLinejoin;\n\n    // The default stroke miterlimit need not be applied if the current stroke\n    // is the constant round; this only has effect on miter joins.\n    if (strokeMiterlimit === undefined && !isRound(strokeLinejoin)) strokeMiterlimit = defaultStrokeMiterlimit;\n\n    // The paint order only takes effect if there is both a fill and a stroke\n    // (at least if we ignore markers, which no built-in marks currently use).\n    if (!isNone(cfill) && paintOrder === undefined) paintOrder = defaultPaintOrder;\n  }\n  const [vstrokeWidth, cstrokeWidth] = maybeNumberChannel(strokeWidth);\n\n  // Some marks don’t support fill (e.g., tick and rule).\n  if (defaultFill !== null) {\n    mark.fill = impliedString(cfill, "currentColor");\n    mark.fillOpacity = impliedNumber(cfillOpacity, 1);\n  }\n\n  // Some marks don’t support stroke (e.g., image).\n  if (defaultStroke !== null) {\n    mark.stroke = impliedString(cstroke, "none");\n    mark.strokeWidth = impliedNumber(cstrokeWidth, 1);\n    mark.strokeOpacity = impliedNumber(cstrokeOpacity, 1);\n    mark.strokeLinejoin = impliedString(strokeLinejoin, "miter");\n    mark.strokeLinecap = impliedString(strokeLinecap, "butt");\n    mark.strokeMiterlimit = impliedNumber(strokeMiterlimit, 4);\n    mark.strokeDasharray = impliedString(strokeDasharray, "none");\n    mark.strokeDashoffset = impliedString(strokeDashoffset, "0");\n  }\n  mark.target = string(target);\n  mark.ariaLabel = string(cariaLabel);\n  mark.ariaDescription = string(ariaDescription);\n  mark.ariaHidden = string(ariaHidden);\n  mark.opacity = impliedNumber(copacity, 1);\n  mark.mixBlendMode = impliedString(mixBlendMode, "normal");\n  mark.imageFilter = impliedString(imageFilter, "none");\n  mark.paintOrder = impliedString(paintOrder, "normal");\n  mark.pointerEvents = impliedString(pointerEvents, "auto");\n  mark.shapeRendering = impliedString(shapeRendering, "auto");\n  return {\n    title: {\n      value: title,\n      optional: true,\n      filter: null\n    },\n    href: {\n      value: href,\n      optional: true,\n      filter: null\n    },\n    ariaLabel: {\n      value: variaLabel,\n      optional: true,\n      filter: null\n    },\n    fill: {\n      value: vfill,\n      scale: "auto",\n      optional: true\n    },\n    fillOpacity: {\n      value: vfillOpacity,\n      scale: "auto",\n      optional: true\n    },\n    stroke: {\n      value: vstroke,\n      scale: "auto",\n      optional: true\n    },\n    strokeOpacity: {\n      value: vstrokeOpacity,\n      scale: "auto",\n      optional: true\n    },\n    strokeWidth: {\n      value: vstrokeWidth,\n      optional: true\n    },\n    opacity: {\n      value: vopacity,\n      scale: "auto",\n      optional: true\n    }\n  };\n}\n\n// Applies the specified titles via selection.call.\nfunction applyTitle(selection, L) {\n  if (L) selection.filter(i => nonempty(L[i])).append("title").call(applyText, L);\n}\n\n// Like applyTitle, but for grouped data (lines, areas).\nfunction applyTitleGroup(selection, L) {\n  if (L) selection.filter(([i]) => nonempty(L[i])).append("title").call(applyTextGroup, L);\n}\nfunction applyText(selection, T) {\n  if (T) selection.text(i => formatDefault(T[i]));\n}\nfunction applyTextGroup(selection, T) {\n  if (T) selection.text(([i]) => formatDefault(T[i]));\n}\nfunction applyChannelStyles(selection, {\n  target,\n  tip\n}, {\n  ariaLabel: AL,\n  title: T,\n  fill: F,\n  fillOpacity: FO,\n  stroke: S,\n  strokeOpacity: SO,\n  strokeWidth: SW,\n  opacity: O,\n  href: H\n}) {\n  if (AL) applyAttr(selection, "aria-label", i => AL[i]);\n  if (F) applyAttr(selection, "fill", i => F[i]);\n  if (FO) applyAttr(selection, "fill-opacity", i => FO[i]);\n  if (S) applyAttr(selection, "stroke", i => S[i]);\n  if (SO) applyAttr(selection, "stroke-opacity", i => SO[i]);\n  if (SW) applyAttr(selection, "stroke-width", i => SW[i]);\n  if (O) applyAttr(selection, "opacity", i => O[i]);\n  if (H) applyHref(selection, i => H[i], target);\n  if (!tip) applyTitle(selection, T);\n}\nfunction applyGroupedChannelStyles(selection, {\n  target,\n  tip\n}, {\n  ariaLabel: AL,\n  title: T,\n  fill: F,\n  fillOpacity: FO,\n  stroke: S,\n  strokeOpacity: SO,\n  strokeWidth: SW,\n  opacity: O,\n  href: H\n}) {\n  if (AL) applyAttr(selection, "aria-label", ([i]) => AL[i]);\n  if (F) applyAttr(selection, "fill", ([i]) => F[i]);\n  if (FO) applyAttr(selection, "fill-opacity", ([i]) => FO[i]);\n  if (S) applyAttr(selection, "stroke", ([i]) => S[i]);\n  if (SO) applyAttr(selection, "stroke-opacity", ([i]) => SO[i]);\n  if (SW) applyAttr(selection, "stroke-width", ([i]) => SW[i]);\n  if (O) applyAttr(selection, "opacity", ([i]) => O[i]);\n  if (H) applyHref(selection, ([i]) => H[i], target);\n  if (!tip) applyTitleGroup(selection, T);\n}\nfunction groupAesthetics({\n  ariaLabel: AL,\n  title: T,\n  fill: F,\n  fillOpacity: FO,\n  stroke: S,\n  strokeOpacity: SO,\n  strokeWidth: SW,\n  opacity: O,\n  href: H\n}, {\n  tip\n}) {\n  return [AL, tip ? undefined : T, F, FO, S, SO, SW, O, H].filter(c => c !== undefined);\n}\nfunction style_groupZ(I, Z, z) {\n  const G = (0,src.group)(I, i => Z[i]);\n  if (z === undefined && G.size > 1 + I.length >> 1) {\n    warn(`Warning: the implicit z channel has high cardinality. This may occur when the fill or stroke channel is associated with quantitative data rather than ordinal or categorical data. You can suppress this warning by setting the z option explicitly; if this data represents a single series, set z to null.`);\n  }\n  return G.values();\n}\nfunction* groupIndex(I, position, mark, channels) {\n  const {\n    z\n  } = mark;\n  const {\n    z: Z\n  } = channels; // group channel\n  const A = groupAesthetics(channels, mark); // aesthetic channels\n  const C = [...position, ...A]; // all channels\n\n  // Group the current index by Z (if any).\n  for (const G of Z ? style_groupZ(I, Z, z) : [I]) {\n    let Ag; // the A-values (aesthetics) of the current group, if any\n    let Gg; // the current group index (a subset of G, and I), if any\n    out: for (const i of G) {\n      // If any channel has an undefined value for this index, skip it.\n      for (const c of C) {\n        if (!defined(c[i])) {\n          if (Gg) Gg.push(-1);\n          continue out;\n        }\n      }\n\n      // Otherwise, if this is a new group, record the aesthetics for this\n      // group. Yield the current group and start a new one.\n      if (Ag === undefined) {\n        if (Gg) yield Gg;\n        Ag = A.map(c => keyof(c[i])), Gg = [i];\n        continue;\n      }\n\n      // Otherwise, add the current index to the current group. Then, if any of\n      // the aesthetics don’t match the current group, yield the current group\n      // and start a new group of the current index.\n      Gg.push(i);\n      for (let j = 0; j < A.length; ++j) {\n        const k = keyof(A[j][i]);\n        if (k !== Ag[j]) {\n          yield Gg;\n          Ag = A.map(c => keyof(c[i])), Gg = [i];\n          continue out;\n        }\n      }\n    }\n\n    // Yield the current group, if any.\n    if (Gg) yield Gg;\n  }\n}\n\n// TODO Accept other types of clips (paths, urls, x, y, other marks…)?\n// https://github.com/observablehq/plot/issues/181\nfunction maybeClip(clip) {\n  if (clip === true) clip = "frame";else if (clip === false) clip = null;else if (clip != null) clip = keyword(clip, "clip", ["frame", "sphere"]);\n  return clip;\n}\n\n// Note: may mutate selection.node!\nfunction applyClip(selection, mark, dimensions, context) {\n  let clipUrl;\n  const {\n    clip = context.clip\n  } = mark;\n  switch (clip) {\n    case "frame":\n      {\n        const {\n          width,\n          height,\n          marginLeft,\n          marginRight,\n          marginTop,\n          marginBottom\n        } = dimensions;\n        const id = getClipId();\n        clipUrl = `url(#${id})`;\n        selection = create("svg:g", context).call(g => g.append("svg:clipPath").attr("id", id).append("rect").attr("x", marginLeft).attr("y", marginTop).attr("width", width - marginRight - marginLeft).attr("height", height - marginTop - marginBottom)).each(function () {\n          this.appendChild(selection.node());\n          selection.node = () => this; // Note: mutation!\n        });\n\n        break;\n      }\n    case "sphere":\n      {\n        const {\n          projection\n        } = context;\n        if (!projection) throw new Error(`the "sphere" clip option requires a projection`);\n        const id = getClipId();\n        clipUrl = `url(#${id})`;\n        selection.append("clipPath").attr("id", id).append("path").attr("d", (0,src.geoPath)(projection)({\n          type: "Sphere"\n        }));\n        break;\n      }\n  }\n  // Here we’re careful to apply the ARIA attributes to the outer G element when\n  // clipping is applied, and to apply the ARIA attributes before any other\n  // attributes (for readability).\n  applyAttr(selection, "aria-label", mark.ariaLabel);\n  applyAttr(selection, "aria-description", mark.ariaDescription);\n  applyAttr(selection, "aria-hidden", mark.ariaHidden);\n  applyAttr(selection, "clip-path", clipUrl);\n}\n\n// Note: may mutate selection.node!\nfunction applyIndirectStyles(selection, mark, dimensions, context) {\n  applyClip(selection, mark, dimensions, context);\n  applyAttr(selection, "fill", mark.fill);\n  applyAttr(selection, "fill-opacity", mark.fillOpacity);\n  applyAttr(selection, "stroke", mark.stroke);\n  applyAttr(selection, "stroke-width", mark.strokeWidth);\n  applyAttr(selection, "stroke-opacity", mark.strokeOpacity);\n  applyAttr(selection, "stroke-linejoin", mark.strokeLinejoin);\n  applyAttr(selection, "stroke-linecap", mark.strokeLinecap);\n  applyAttr(selection, "stroke-miterlimit", mark.strokeMiterlimit);\n  applyAttr(selection, "stroke-dasharray", mark.strokeDasharray);\n  applyAttr(selection, "stroke-dashoffset", mark.strokeDashoffset);\n  applyAttr(selection, "shape-rendering", mark.shapeRendering);\n  applyAttr(selection, "filter", mark.imageFilter);\n  applyAttr(selection, "paint-order", mark.paintOrder);\n  const {\n    pointerEvents = context.pointerSticky === false ? "none" : undefined\n  } = mark;\n  applyAttr(selection, "pointer-events", pointerEvents);\n}\nfunction applyDirectStyles(selection, mark) {\n  applyStyle(selection, "mix-blend-mode", mark.mixBlendMode);\n  applyAttr(selection, "opacity", mark.opacity);\n}\nfunction applyHref(selection, href, target) {\n  selection.each(function (i) {\n    const h = href(i);\n    if (h != null) {\n      const a = this.ownerDocument.createElementNS(src.namespaces.svg, "a");\n      a.setAttribute("fill", "inherit");\n      a.setAttributeNS(src.namespaces.xlink, "href", h);\n      if (target != null) a.setAttribute("target", target);\n      this.parentNode.insertBefore(a, this).appendChild(this);\n    }\n  });\n}\nfunction applyAttr(selection, name, value) {\n  if (value != null) selection.attr(name, value);\n}\nfunction applyStyle(selection, name, value) {\n  if (value != null) selection.style(name, value);\n}\nfunction applyTransform(selection, mark, {\n  x,\n  y\n}, tx = offset, ty = offset) {\n  tx += mark.dx;\n  ty += mark.dy;\n  if (x?.bandwidth) tx += x.bandwidth() / 2;\n  if (y?.bandwidth) ty += y.bandwidth() / 2;\n  if (tx || ty) selection.attr("transform", `translate(${tx},${ty})`);\n}\nfunction impliedString(value, impliedValue) {\n  if ((value = string(value)) !== impliedValue) return value;\n}\nfunction impliedNumber(value, impliedValue) {\n  if ((value = number(value)) !== impliedValue) return value;\n}\n\n// https://www.w3.org/TR/CSS21/grammar.html\nconst validClassName = /^-?([_a-z]|[\\240-\\377]|\\\\[0-9a-f]{1,6}(\\r\\n|[ \\t\\r\\n\\f])?|\\\\[^\\r\\n\\f0-9a-f])([_a-z0-9-]|[\\240-\\377]|\\\\[0-9a-f]{1,6}(\\r\\n|[ \\t\\r\\n\\f])?|\\\\[^\\r\\n\\f0-9a-f])*$/i;\nfunction maybeClassName(name) {\n  // The default should be changed whenever the default styles are changed, so\n  // as to avoid conflict when multiple versions of Plot are on the page.\n  if (name === undefined) return "plot-d6a7b5";\n  name = `${name}`;\n  if (!validClassName.test(name)) throw new Error(`invalid class name: ${name}`);\n  return name;\n}\nfunction applyInlineStyles(selection, style) {\n  if (typeof style === "string") {\n    selection.property("style", style);\n  } else if (style != null) {\n    for (const element of selection) {\n      Object.assign(element.style, style);\n    }\n  }\n}\nfunction applyFrameAnchor({\n  frameAnchor\n}, {\n  width,\n  height,\n  marginTop,\n  marginRight,\n  marginBottom,\n  marginLeft\n}) {\n  return [/left$/.test(frameAnchor) ? marginLeft : /right$/.test(frameAnchor) ? width - marginRight : (marginLeft + width - marginRight) / 2, /^top/.test(frameAnchor) ? marginTop : /^bottom/.test(frameAnchor) ? height - marginBottom : (marginTop + height - marginBottom) / 2];\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/context.js\n\n\nfunction createContext(options = {}) {\n  const {\n    document = typeof window !== "undefined" ? window.document : undefined,\n    clip\n  } = options;\n  return {\n    document,\n    clip: maybeClip(clip)\n  };\n}\nfunction create(name, {\n  document\n}) {\n  return (0,src.select)((0,src.creator)(name).call(document.documentElement));\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/projection.js\n\n\n\n\nconst pi = Math.PI;\nconst tau = 2 * pi;\nconst defaultAspectRatio = 0.618;\nfunction createProjection({\n  projection,\n  inset: globalInset = 0,\n  insetTop = globalInset,\n  insetRight = globalInset,\n  insetBottom = globalInset,\n  insetLeft = globalInset\n} = {}, dimensions) {\n  if (projection == null) return;\n  if (typeof projection.stream === "function") return projection; // d3 projection\n  let options;\n  let domain;\n  let clip = "frame";\n\n  // If the projection was specified as an object with additional options,\n  // extract those. The order of precedence for insetTop (and other insets) is:\n  // projection.insetTop, projection.inset, (global) insetTop, (global) inset.\n  // Any other options on this object will be passed through to the initializer.\n  if (isObject(projection)) {\n    let inset;\n    ({\n      type: projection,\n      domain,\n      inset,\n      insetTop = inset !== undefined ? inset : insetTop,\n      insetRight = inset !== undefined ? inset : insetRight,\n      insetBottom = inset !== undefined ? inset : insetBottom,\n      insetLeft = inset !== undefined ? inset : insetLeft,\n      clip = clip,\n      ...options\n    } = projection);\n    if (projection == null) return;\n  }\n\n  // For named projections, retrieve the corresponding projection initializer.\n  if (typeof projection !== "function") ({\n    type: projection\n  } = namedProjection(projection));\n\n  // Compute the frame dimensions and invoke the projection initializer.\n  const {\n    width,\n    height,\n    marginLeft,\n    marginRight,\n    marginTop,\n    marginBottom\n  } = dimensions;\n  const dx = width - marginLeft - marginRight - insetLeft - insetRight;\n  const dy = height - marginTop - marginBottom - insetTop - insetBottom;\n  projection = projection?.({\n    width: dx,\n    height: dy,\n    clip,\n    ...options\n  });\n\n  // The projection initializer might decide to not use a projection.\n  if (projection == null) return;\n  clip = maybePostClip(clip, marginLeft, marginTop, width - marginRight, height - marginBottom);\n\n  // Translate the origin to the top-left corner, respecting margins and insets.\n  let tx = marginLeft + insetLeft;\n  let ty = marginTop + insetTop;\n  let transform;\n\n  // If a domain is specified, fit the projection to the frame.\n  if (domain != null) {\n    const [[x0, y0], [x1, y1]] = (0,src.geoPath)(projection).bounds(domain);\n    const k = Math.min(dx / (x1 - x0), dy / (y1 - y0));\n    if (k > 0) {\n      tx -= (k * (x0 + x1) - dx) / 2;\n      ty -= (k * (y0 + y1) - dy) / 2;\n      transform = (0,src.geoTransform)({\n        point(x, y) {\n          this.stream.point(x * k + tx, y * k + ty);\n        }\n      });\n    } else {\n      warn(`Warning: the projection could not be fit to the specified domain; using the default scale.`);\n    }\n  }\n  transform ??= tx === 0 && ty === 0 ? projection_identity() : (0,src.geoTransform)({\n    point(x, y) {\n      this.stream.point(x + tx, y + ty);\n    }\n  });\n  return {\n    stream: s => projection.stream(transform.stream(clip(s)))\n  };\n}\nfunction namedProjection(projection) {\n  switch (`${projection}`.toLowerCase()) {\n    case "albers-usa":\n      return scaleProjection(src.geoAlbersUsa, 0.7463, 0.4673);\n    case "albers":\n      return conicProjection(src.geoAlbers, 0.7463, 0.4673);\n    case "azimuthal-equal-area":\n      return scaleProjection(src.geoAzimuthalEqualArea, 4, 4);\n    case "azimuthal-equidistant":\n      return scaleProjection(src.geoAzimuthalEquidistant, tau, tau);\n    case "conic-conformal":\n      return conicProjection(src.geoConicConformal, tau, tau);\n    case "conic-equal-area":\n      return conicProjection(src.geoConicEqualArea, 6.1702, 2.9781);\n    case "conic-equidistant":\n      return conicProjection(src.geoConicEquidistant, 7.312, 3.6282);\n    case "equal-earth":\n      return scaleProjection(src.geoEqualEarth, 5.4133, 2.6347);\n    case "equirectangular":\n      return scaleProjection(src.geoEquirectangular, tau, pi);\n    case "gnomonic":\n      return scaleProjection(src.geoGnomonic, 3.4641, 3.4641);\n    case "identity":\n      return {\n        type: projection_identity\n      };\n    case "reflect-y":\n      return {\n        type: reflectY\n      };\n    case "mercator":\n      return scaleProjection(src.geoMercator, tau, tau);\n    case "orthographic":\n      return scaleProjection(src.geoOrthographic, 2, 2);\n    case "stereographic":\n      return scaleProjection(src.geoStereographic, 2, 2);\n    case "transverse-mercator":\n      return scaleProjection(src.geoTransverseMercator, tau, tau);\n    default:\n      throw new Error(`unknown projection type: ${projection}`);\n  }\n}\nfunction maybePostClip(clip, x1, y1, x2, y2) {\n  if (clip === false || clip == null || typeof clip === "number") return s => s;\n  if (clip === true) clip = "frame";\n  switch (`${clip}`.toLowerCase()) {\n    case "frame":\n      return (0,src.geoClipRectangle)(x1, y1, x2, y2);\n    default:\n      throw new Error(`unknown projection clip type: ${clip}`);\n  }\n}\nfunction scaleProjection(createProjection, kx, ky) {\n  return {\n    type: ({\n      width,\n      height,\n      rotate,\n      precision = 0.15,\n      clip\n    }) => {\n      const projection = createProjection();\n      if (precision != null) projection.precision?.(precision);\n      if (rotate != null) projection.rotate?.(rotate);\n      if (typeof clip === "number") projection.clipAngle?.(clip);\n      projection.scale(Math.min(width / kx, height / ky));\n      projection.translate([width / 2, height / 2]);\n      return projection;\n    },\n    aspectRatio: ky / kx\n  };\n}\nfunction conicProjection(createProjection, kx, ky) {\n  const {\n    type,\n    aspectRatio\n  } = scaleProjection(createProjection, kx, ky);\n  return {\n    type: options => {\n      const {\n        parallels,\n        domain,\n        width,\n        height\n      } = options;\n      const projection = type(options);\n      if (parallels != null) {\n        projection.parallels(parallels);\n        if (domain === undefined) {\n          projection.fitSize([width, height], {\n            type: "Sphere"\n          });\n        }\n      }\n      return projection;\n    },\n    aspectRatio\n  };\n}\nconst projection_identity = constant({\n  stream: stream => stream\n});\nconst reflectY = constant((0,src.geoTransform)({\n  point(x, y) {\n    this.stream.point(x, -y);\n  }\n}));\n\n// Applies a point-wise projection to the given paired x and y channels.\n// Note: mutates values!\nfunction project(cx, cy, values, projection) {\n  const x = values[cx];\n  const y = values[cy];\n  const n = x.length;\n  const X = values[cx] = new Float64Array(n).fill(NaN);\n  const Y = values[cy] = new Float64Array(n).fill(NaN);\n  let i;\n  const stream = projection.stream({\n    point(x, y) {\n      X[i] = x;\n      Y[i] = y;\n    }\n  });\n  for (i = 0; i < n; ++i) {\n    stream.point(x[i], y[i]);\n  }\n}\n\n// Returns true if a projection was specified. This should match the logic of\n// createProjection above, and is called before we construct the projection.\n// (Though note that we ignore the edge case where the projection initializer\n// may return null.)\nfunction hasProjection({\n  projection\n} = {}) {\n  if (projection == null) return false;\n  if (typeof projection.stream === "function") return true;\n  if (isObject(projection)) projection = projection.type;\n  return projection != null;\n}\n\n// When a named projection is specified, we can use its natural aspect ratio to\n// determine a good value for the projection’s height based on the desired\n// width. When we don’t have a way to know, the golden ratio is our best guess.\n// Due to a circular dependency (we need to know the height before we can\n// construct the projection), we have to test the raw projection option rather\n// than the materialized projection; therefore we must be extremely careful that\n// the logic of this function exactly matches createProjection above!\nfunction projectionAspectRatio(projection) {\n  if (typeof projection?.stream === "function") return defaultAspectRatio;\n  if (isObject(projection)) projection = projection.type;\n  if (projection == null) return;\n  if (typeof projection !== "function") {\n    const {\n      aspectRatio\n    } = namedProjection(projection);\n    if (aspectRatio) return aspectRatio;\n  }\n  return defaultAspectRatio;\n}\n\n// Extract the (possibly) scaled values for the x and y channels, and apply the\n// projection if any.\nfunction applyPosition(channels, scales, {\n  projection\n}) {\n  const {\n    x,\n    y\n  } = channels;\n  let position = {};\n  if (x) position.x = x;\n  if (y) position.y = y;\n  position = valueObject(position, scales);\n  if (projection && x?.scale === "x" && y?.scale === "y") project("x", "y", position, projection);\n  if (x) position.x = coerceNumbers(position.x);\n  if (y) position.y = coerceNumbers(position.y);\n  return position;\n}\nfunction getGeometryChannels(channel) {\n  const X = [];\n  const Y = [];\n  const x = {\n    scale: "x",\n    value: X\n  };\n  const y = {\n    scale: "y",\n    value: Y\n  };\n  const sink = {\n    point(x, y) {\n      X.push(x);\n      Y.push(y);\n    },\n    lineStart() {},\n    lineEnd() {},\n    polygonStart() {},\n    polygonEnd() {},\n    sphere() {}\n  };\n  for (const object of channel.value) (0,src.geoStream)(object, sink);\n  return [x, y];\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/scales/schemes.js\n\nconst categoricalSchemes = new Map([["accent", src.schemeAccent], ["category10", src.schemeCategory10], ["dark2", src.schemeDark2], ["paired", src.schemePaired], ["pastel1", src.schemePastel1], ["pastel2", src.schemePastel2], ["set1", src.schemeSet1], ["set2", src.schemeSet2], ["set3", src.schemeSet3], ["tableau10", src.schemeTableau10]]);\nfunction isCategoricalScheme(scheme) {\n  return scheme != null && categoricalSchemes.has(`${scheme}`.toLowerCase());\n}\nconst ordinalSchemes = new Map([...categoricalSchemes,\n// diverging\n["brbg", scheme11(src.schemeBrBG, src.interpolateBrBG)], ["prgn", scheme11(src.schemePRGn, src.interpolatePRGn)], ["piyg", scheme11(src.schemePiYG, src.interpolatePiYG)], ["puor", scheme11(src.schemePuOr, src.interpolatePuOr)], ["rdbu", scheme11(src.schemeRdBu, src.interpolateRdBu)], ["rdgy", scheme11(src.schemeRdGy, src.interpolateRdGy)], ["rdylbu", scheme11(src.schemeRdYlBu, src.interpolateRdYlBu)], ["rdylgn", scheme11(src.schemeRdYlGn, src.interpolateRdYlGn)], ["spectral", scheme11(src.schemeSpectral, src.interpolateSpectral)],\n// reversed diverging (for temperature data)\n["burd", scheme11r(src.schemeRdBu, src.interpolateRdBu)], ["buylrd", scheme11r(src.schemeRdYlBu, src.interpolateRdYlBu)],\n// sequential (single-hue)\n["blues", scheme9(src.schemeBlues, src.interpolateBlues)], ["greens", scheme9(src.schemeGreens, src.interpolateGreens)], ["greys", scheme9(src.schemeGreys, src.interpolateGreys)], ["oranges", scheme9(src.schemeOranges, src.interpolateOranges)], ["purples", scheme9(src.schemePurples, src.interpolatePurples)], ["reds", scheme9(src.schemeReds, src.interpolateReds)],\n// sequential (multi-hue)\n["turbo", schemei(src.interpolateTurbo)], ["viridis", schemei(src.interpolateViridis)], ["magma", schemei(src.interpolateMagma)], ["inferno", schemei(src.interpolateInferno)], ["plasma", schemei(src.interpolatePlasma)], ["cividis", schemei(src.interpolateCividis)], ["cubehelix", schemei(src.interpolateCubehelixDefault)], ["warm", schemei(src.interpolateWarm)], ["cool", schemei(src.interpolateCool)], ["bugn", scheme9(src.schemeBuGn, src.interpolateBuGn)], ["bupu", scheme9(src.schemeBuPu, src.interpolateBuPu)], ["gnbu", scheme9(src.schemeGnBu, src.interpolateGnBu)], ["orrd", scheme9(src.schemeOrRd, src.interpolateOrRd)], ["pubu", scheme9(src.schemePuBu, src.interpolatePuBu)], ["pubugn", scheme9(src.schemePuBuGn, src.interpolatePuBuGn)], ["purd", scheme9(src.schemePuRd, src.interpolatePuRd)], ["rdpu", scheme9(src.schemeRdPu, src.interpolateRdPu)], ["ylgn", scheme9(src.schemeYlGn, src.interpolateYlGn)], ["ylgnbu", scheme9(src.schemeYlGnBu, src.interpolateYlGnBu)], ["ylorbr", scheme9(src.schemeYlOrBr, src.interpolateYlOrBr)], ["ylorrd", scheme9(src.schemeYlOrRd, src.interpolateYlOrRd)],\n// cyclical\n["rainbow", schemeicyclical(src.interpolateRainbow)], ["sinebow", schemeicyclical(src.interpolateSinebow)]]);\nfunction scheme9(scheme, interpolate) {\n  return ({\n    length: n\n  }) => {\n    if (n === 1) return [scheme[3][1]]; // favor midpoint\n    if (n === 2) return [scheme[3][1], scheme[3][2]]; // favor darker\n    n = Math.max(3, Math.floor(n));\n    return n > 9 ? (0,src.quantize)(interpolate, n) : scheme[n];\n  };\n}\nfunction scheme11(scheme, interpolate) {\n  return ({\n    length: n\n  }) => {\n    if (n === 2) return [scheme[3][0], scheme[3][2]]; // favor diverging extrema\n    n = Math.max(3, Math.floor(n));\n    return n > 11 ? (0,src.quantize)(interpolate, n) : scheme[n];\n  };\n}\nfunction scheme11r(scheme, interpolate) {\n  return ({\n    length: n\n  }) => {\n    if (n === 2) return [scheme[3][2], scheme[3][0]]; // favor diverging extrema\n    n = Math.max(3, Math.floor(n));\n    return n > 11 ? (0,src.quantize)(t => interpolate(1 - t), n) : scheme[n].slice().reverse();\n  };\n}\nfunction schemei(interpolate) {\n  return ({\n    length: n\n  }) => (0,src.quantize)(interpolate, Math.max(2, Math.floor(n)));\n}\nfunction schemeicyclical(interpolate) {\n  return ({\n    length: n\n  }) => (0,src.quantize)(interpolate, Math.floor(n) + 1).slice(0, -1);\n}\nfunction ordinalScheme(scheme) {\n  const s = `${scheme}`.toLowerCase();\n  if (!ordinalSchemes.has(s)) throw new Error(`unknown ordinal scheme: ${s}`);\n  return ordinalSchemes.get(s);\n}\nfunction ordinalRange(scheme, length) {\n  const s = ordinalScheme(scheme);\n  const r = typeof s === "function" ? s({\n    length\n  }) : s;\n  return r.length !== length ? r.slice(0, length) : r;\n}\n\n// If the specified domain contains only booleans (ignoring null and undefined),\n// returns a corresponding range where false is mapped to the low color and true\n// is mapped to the high color of the specified scheme.\nfunction maybeBooleanRange(domain, scheme = "greys") {\n  const range = new Set();\n  const [f, t] = ordinalRange(scheme, 2);\n  for (const value of domain) {\n    if (value == null) continue;\n    if (value === true) range.add(t);else if (value === false) range.add(f);else return;\n  }\n  return [...range];\n}\nconst quantitativeSchemes = new Map([\n// diverging\n["brbg", src.interpolateBrBG], ["prgn", src.interpolatePRGn], ["piyg", src.interpolatePiYG], ["puor", src.interpolatePuOr], ["rdbu", src.interpolateRdBu], ["rdgy", src.interpolateRdGy], ["rdylbu", src.interpolateRdYlBu], ["rdylgn", src.interpolateRdYlGn], ["spectral", src.interpolateSpectral],\n// reversed diverging (for temperature data)\n["burd", t => (0,src.interpolateRdBu)(1 - t)], ["buylrd", t => (0,src.interpolateRdYlBu)(1 - t)],\n// sequential (single-hue)\n["blues", src.interpolateBlues], ["greens", src.interpolateGreens], ["greys", src.interpolateGreys], ["purples", src.interpolatePurples], ["reds", src.interpolateReds], ["oranges", src.interpolateOranges],\n// sequential (multi-hue)\n["turbo", src.interpolateTurbo], ["viridis", src.interpolateViridis], ["magma", src.interpolateMagma], ["inferno", src.interpolateInferno], ["plasma", src.interpolatePlasma], ["cividis", src.interpolateCividis], ["cubehelix", src.interpolateCubehelixDefault], ["warm", src.interpolateWarm], ["cool", src.interpolateCool], ["bugn", src.interpolateBuGn], ["bupu", src.interpolateBuPu], ["gnbu", src.interpolateGnBu], ["orrd", src.interpolateOrRd], ["pubugn", src.interpolatePuBuGn], ["pubu", src.interpolatePuBu], ["purd", src.interpolatePuRd], ["rdpu", src.interpolateRdPu], ["ylgnbu", src.interpolateYlGnBu], ["ylgn", src.interpolateYlGn], ["ylorbr", src.interpolateYlOrBr], ["ylorrd", src.interpolateYlOrRd],\n// cyclical\n["rainbow", src.interpolateRainbow], ["sinebow", src.interpolateSinebow]]);\nfunction quantitativeScheme(scheme) {\n  const s = `${scheme}`.toLowerCase();\n  if (!quantitativeSchemes.has(s)) throw new Error(`unknown quantitative scheme: ${s}`);\n  return quantitativeSchemes.get(s);\n}\nconst divergingSchemes = new Set(["brbg", "prgn", "piyg", "puor", "rdbu", "rdgy", "rdylbu", "rdylgn", "spectral", "burd", "buylrd"]);\nfunction isDivergingScheme(scheme) {\n  return scheme != null && divergingSchemes.has(`${scheme}`.toLowerCase());\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/scales/quantitative.js\n\n\n\n\n\nconst flip = i => t => i(1 - t);\nconst unit = [0, 1];\nconst interpolators = new Map([\n// numbers\n["number", src.interpolateNumber],\n// color spaces\n["rgb", src.interpolateRgb], ["hsl", src.interpolateHsl], ["hcl", src.interpolateHcl], ["lab", src.interpolateLab]]);\nfunction maybeInterpolator(interpolate) {\n  const i = `${interpolate}`.toLowerCase();\n  if (!interpolators.has(i)) throw new Error(`unknown interpolator: ${i}`);\n  return interpolators.get(i);\n}\nfunction createScaleQ(key, scale, channels, {\n  type,\n  nice,\n  clamp,\n  zero,\n  domain = inferAutoDomain(key, channels),\n  unknown,\n  round,\n  scheme,\n  interval,\n  range = registry.get(key) === radius ? inferRadialRange(channels, domain) : registry.get(key) === scales_length ? inferLengthRange(channels, domain) : registry.get(key) === opacity ? unit : undefined,\n  interpolate = registry.get(key) === color ? scheme == null && range !== undefined ? src.interpolateRgb : quantitativeScheme(scheme !== undefined ? scheme : type === "cyclical" ? "rainbow" : "turbo") : round ? src.interpolateRound : src.interpolateNumber,\n  reverse\n}) {\n  interval = maybeRangeInterval(interval, type);\n  if (type === "cyclical" || type === "sequential") type = "linear"; // shorthand for color schemes\n  if (typeof interpolate !== "function") interpolate = maybeInterpolator(interpolate); // named interpolator\n  reverse = !!reverse;\n\n  // If an explicit range is specified, and it has a different length than the\n  // domain, then redistribute the range using a piecewise interpolator.\n  if (range !== undefined) {\n    const n = (domain = arrayify(domain)).length;\n    const m = (range = arrayify(range)).length;\n    if (n !== m) {\n      if (interpolate.length === 1) throw new Error("invalid piecewise interpolator"); // e.g., turbo\n      interpolate = (0,src.piecewise)(interpolate, range);\n      range = undefined;\n    }\n  }\n\n  // Disambiguate between a two-argument interpolator that is used in\n  // conjunction with the range, and a one-argument “fixed” interpolator on the\n  // [0, 1] interval as with the RdBu color scheme.\n  if (interpolate.length === 1) {\n    if (reverse) {\n      interpolate = flip(interpolate);\n      reverse = false;\n    }\n    if (range === undefined) {\n      range = Float64Array.from(domain, (_, i) => i / (domain.length - 1));\n      if (range.length === 2) range = unit; // optimize common case of [0, 1]\n    }\n\n    scale.interpolate((range === unit ? constant : interpolatePiecewise)(interpolate));\n  } else {\n    scale.interpolate(interpolate);\n  }\n\n  // If a zero option is specified, we assume that the domain is numeric, and we\n  // want to ensure that the domain crosses zero. However, note that the domain\n  // may be reversed (descending) so we shouldn’t assume that the first value is\n  // smaller than the last; and also it’s possible that the domain has more than\n  // two values for a “poly” scale. And lastly be careful not to mutate input!\n  if (zero) {\n    const [min, max] = (0,src.extent)(domain);\n    if (min > 0 || max < 0) {\n      domain = slice(domain);\n      if (orderof(domain) !== Math.sign(min)) domain[domain.length - 1] = 0; // [2, 1] or [-2, -1]\n      else domain[0] = 0; // [1, 2] or [-1, -2]\n    }\n  }\n\n  if (reverse) domain = (0,src.reverse)(domain);\n  scale.domain(domain).unknown(unknown);\n  if (nice) scale.nice(maybeNice(nice, type)), domain = scale.domain();\n  if (range !== undefined) scale.range(range);\n  if (clamp) scale.clamp(clamp);\n  return {\n    type,\n    domain,\n    range,\n    scale,\n    interpolate,\n    interval\n  };\n}\nfunction maybeNice(nice, type) {\n  return nice === true ? undefined : typeof nice === "number" ? nice : maybeNiceInterval(nice, type);\n}\nfunction createScaleLinear(key, channels, options) {\n  return createScaleQ(key, (0,src.scaleLinear)(), channels, options);\n}\nfunction createScaleSqrt(key, channels, options) {\n  return createScalePow(key, channels, {\n    ...options,\n    exponent: 0.5\n  });\n}\nfunction createScalePow(key, channels, {\n  exponent = 1,\n  ...options\n}) {\n  return createScaleQ(key, (0,src.scalePow)().exponent(exponent), channels, {\n    ...options,\n    type: "pow"\n  });\n}\nfunction createScaleLog(key, channels, {\n  base = 10,\n  domain = inferLogDomain(channels),\n  ...options\n}) {\n  return createScaleQ(key, (0,src.scaleLog)().base(base), channels, {\n    ...options,\n    domain\n  });\n}\nfunction createScaleSymlog(key, channels, {\n  constant = 1,\n  ...options\n}) {\n  return createScaleQ(key, (0,src.scaleSymlog)().constant(constant), channels, options);\n}\nfunction createScaleQuantile(key, channels, {\n  range,\n  quantiles = range === undefined ? 5 : (range = [...range]).length,\n  // deprecated; use n instead\n  n = quantiles,\n  scheme = "rdylbu",\n  domain = inferQuantileDomain(channels),\n  unknown,\n  interpolate,\n  reverse\n}) {\n  if (range === undefined) {\n    range = interpolate !== undefined ? (0,src.quantize)(interpolate, n) : registry.get(key) === color ? ordinalRange(scheme, n) : undefined;\n  }\n  if (domain.length > 0) {\n    domain = (0,src.scaleQuantile)(domain, range === undefined ? {\n      length: n\n    } : range).quantiles();\n  }\n  return createScaleThreshold(key, channels, {\n    domain,\n    range,\n    reverse,\n    unknown\n  });\n}\nfunction createScaleQuantize(key, channels, {\n  range,\n  n = range === undefined ? 5 : (range = [...range]).length,\n  scheme = "rdylbu",\n  domain = inferAutoDomain(key, channels),\n  unknown,\n  interpolate,\n  reverse\n}) {\n  const [min, max] = (0,src.extent)(domain);\n  let thresholds;\n  if (range === undefined) {\n    thresholds = (0,src.ticks)(min, max, n); // approximate number of nice, round thresholds\n    if (thresholds[0] <= min) thresholds.splice(0, 1); // drop exact lower bound\n    if (thresholds[thresholds.length - 1] >= max) thresholds.pop(); // drop exact upper bound\n    n = thresholds.length + 1;\n    range = interpolate !== undefined ? (0,src.quantize)(interpolate, n) : registry.get(key) === color ? ordinalRange(scheme, n) : undefined;\n  } else {\n    thresholds = (0,src.quantize)((0,src.interpolateNumber)(min, max), n + 1).slice(1, -1); // exactly n - 1 thresholds to match range\n    if (min instanceof Date) thresholds = thresholds.map(x => new Date(x)); // preserve date types\n  }\n\n  if (orderof(arrayify(domain)) < 0) thresholds.reverse(); // preserve descending domain\n  return createScaleThreshold(key, channels, {\n    domain: thresholds,\n    range,\n    reverse,\n    unknown\n  });\n}\nfunction createScaleThreshold(key, channels, {\n  domain = [0],\n  // explicit thresholds in ascending order\n  unknown,\n  scheme = "rdylbu",\n  interpolate,\n  range = interpolate !== undefined ? (0,src.quantize)(interpolate, domain.length + 1) : registry.get(key) === color ? ordinalRange(scheme, domain.length + 1) : undefined,\n  reverse\n}) {\n  domain = arrayify(domain);\n  const sign = orderof(domain); // preserve descending domain\n  if (!isNaN(sign) && !isOrdered(domain, sign)) throw new Error(`the ${key} scale has a non-monotonic domain`);\n  if (reverse) range = (0,src.reverse)(range); // domain ascending, so reverse range\n  return {\n    type: "threshold",\n    scale: (0,src.scaleThreshold)(sign < 0 ? (0,src.reverse)(domain) : domain, range === undefined ? [] : range).unknown(unknown),\n    domain,\n    range\n  };\n}\nfunction isOrdered(domain, sign) {\n  for (let i = 1, n = domain.length, d = domain[0]; i < n; ++i) {\n    const s = (0,src.descending)(d, d = domain[i]);\n    if (s !== 0 && s !== sign) return false;\n  }\n  return true;\n}\nfunction createScaleIdentity() {\n  return {\n    type: "identity",\n    scale: (0,src.scaleIdentity)()\n  };\n}\nfunction inferDomain(channels, f = finite) {\n  return channels.length ? [(0,src.min)(channels, ({\n    value\n  }) => value === undefined ? value : (0,src.min)(value, f)), (0,src.max)(channels, ({\n    value\n  }) => value === undefined ? value : (0,src.max)(value, f))] : [0, 1];\n}\nfunction inferAutoDomain(key, channels) {\n  const type = registry.get(key);\n  return (type === radius || type === opacity || type === scales_length ? inferZeroDomain : inferDomain)(channels);\n}\nfunction inferZeroDomain(channels) {\n  return [0, channels.length ? (0,src.max)(channels, ({\n    value\n  }) => value === undefined ? value : (0,src.max)(value, finite)) : 1];\n}\n\n// We don’t want the upper bound of the radial domain to be zero, as this would\n// be degenerate, so we ignore nonpositive values. We also don’t want the\n// maximum default radius to exceed 30px.\nfunction inferRadialRange(channels, domain) {\n  const hint = channels.find(({\n    radius\n  }) => radius !== undefined);\n  if (hint !== undefined) return [0, hint.radius]; // a natural maximum radius, e.g. hexbins\n  const h25 = (0,src.quantile)(channels, 0.5, ({\n    value\n  }) => value === undefined ? NaN : (0,src.quantile)(value, 0.25, positive));\n  const range = domain.map(d => 3 * Math.sqrt(d / h25));\n  const k = 30 / (0,src.max)(range);\n  return k < 1 ? range.map(r => r * k) : range;\n}\n\n// We want a length scale’s domain to go from zero to a positive value, and to\n// treat negative lengths if any as inverted vectors of equivalent magnitude. We\n// also don’t want the maximum default length to exceed 60px.\nfunction inferLengthRange(channels, domain) {\n  const h50 = (0,src.median)(channels, ({\n    value\n  }) => value === undefined ? NaN : (0,src.median)(value, Math.abs));\n  const range = domain.map(d => 12 * d / h50);\n  const k = 60 / (0,src.max)(range);\n  return k < 1 ? range.map(r => r * k) : range;\n}\nfunction inferLogDomain(channels) {\n  for (const {\n    value\n  } of channels) {\n    if (value !== undefined) {\n      for (let v of value) {\n        if (v > 0) return inferDomain(channels, positive);\n        if (v < 0) return inferDomain(channels, negative);\n      }\n    }\n  }\n  return [1, 10];\n}\nfunction inferQuantileDomain(channels) {\n  const domain = [];\n  for (const {\n    value\n  } of channels) {\n    if (value === undefined) continue;\n    for (const v of value) domain.push(v);\n  }\n  return domain;\n}\nfunction interpolatePiecewise(interpolate) {\n  return (i, j) => t => interpolate(i + t * (j - i));\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/scales/diverging.js\n\n\n\n\n\n\n\nfunction createScaleD(key, scale, transform, channels, {\n  type,\n  nice,\n  clamp,\n  domain = inferDomain(channels),\n  unknown,\n  pivot = 0,\n  scheme,\n  range,\n  symmetric = true,\n  interpolate = registry.get(key) === color ? scheme == null && range !== undefined ? src.interpolateRgb : quantitativeScheme(scheme !== undefined ? scheme : "rdbu") : src.interpolateNumber,\n  reverse\n}) {\n  pivot = +pivot;\n  domain = arrayify(domain);\n  let [min, max] = domain;\n  if (domain.length > 2) warn(`Warning: the diverging ${key} scale domain contains extra elements.`);\n  if ((0,src.descending)(min, max) < 0) [min, max] = [max, min], reverse = !reverse;\n  min = Math.min(min, pivot);\n  max = Math.max(max, pivot);\n\n  // Sometimes interpolate is a named interpolator, such as "lab" for Lab color\n  // space. Other times interpolate is a function that takes two arguments and\n  // is used in conjunction with the range. And other times the interpolate\n  // function is a “fixed” interpolator on the [0, 1] interval, as when a\n  // color scheme such as interpolateRdBu is used.\n  if (typeof interpolate !== "function") {\n    interpolate = maybeInterpolator(interpolate);\n  }\n\n  // If an explicit range is specified, promote it to a piecewise interpolator.\n  if (range !== undefined) {\n    interpolate = interpolate.length === 1 ? interpolatePiecewise(interpolate)(...range) : (0,src.piecewise)(interpolate, range);\n  }\n\n  // Reverse before normalization.\n  if (reverse) interpolate = flip(interpolate);\n\n  // Normalize the interpolator for symmetric difference around the pivot.\n  if (symmetric) {\n    const mid = transform.apply(pivot);\n    const mindelta = mid - transform.apply(min);\n    const maxdelta = transform.apply(max) - mid;\n    if (mindelta < maxdelta) min = transform.invert(mid - maxdelta);else if (mindelta > maxdelta) max = transform.invert(mid + mindelta);\n  }\n  scale.domain([min, pivot, max]).unknown(unknown).interpolator(interpolate);\n  if (clamp) scale.clamp(clamp);\n  if (nice) scale.nice(nice);\n  return {\n    type,\n    domain: [min, max],\n    pivot,\n    interpolate,\n    scale\n  };\n}\nfunction createScaleDiverging(key, channels, options) {\n  return createScaleD(key, (0,src.scaleDiverging)(), transformIdentity, channels, options);\n}\nfunction createScaleDivergingSqrt(key, channels, options) {\n  return createScaleDivergingPow(key, channels, {\n    ...options,\n    exponent: 0.5\n  });\n}\nfunction createScaleDivergingPow(key, channels, {\n  exponent = 1,\n  ...options\n}) {\n  return createScaleD(key, (0,src.scaleDivergingPow)().exponent(exponent = +exponent), transformPow(exponent), channels, {\n    ...options,\n    type: "diverging-pow"\n  });\n}\nfunction createScaleDivergingLog(key, channels, {\n  base = 10,\n  pivot = 1,\n  domain = inferDomain(channels, pivot < 0 ? negative : positive),\n  ...options\n}) {\n  return createScaleD(key, (0,src.scaleDivergingLog)().base(base = +base), transformLog, channels, {\n    domain,\n    pivot,\n    ...options\n  });\n}\nfunction createScaleDivergingSymlog(key, channels, {\n  constant = 1,\n  ...options\n}) {\n  return createScaleD(key, (0,src.scaleDivergingSymlog)().constant(constant = +constant), transformSymlog(constant), channels, options);\n}\nconst transformIdentity = {\n  apply(x) {\n    return x;\n  },\n  invert(x) {\n    return x;\n  }\n};\nconst transformLog = {\n  apply: Math.log,\n  invert: Math.exp\n};\nconst transformSqrt = {\n  apply(x) {\n    return Math.sign(x) * Math.sqrt(Math.abs(x));\n  },\n  invert(x) {\n    return Math.sign(x) * (x * x);\n  }\n};\nfunction transformPow(exponent) {\n  return exponent === 0.5 ? transformSqrt : {\n    apply(x) {\n      return Math.sign(x) * Math.pow(Math.abs(x), exponent);\n    },\n    invert(x) {\n      return Math.sign(x) * Math.pow(Math.abs(x), 1 / exponent);\n    }\n  };\n}\nfunction transformSymlog(constant) {\n  return {\n    apply(x) {\n      return Math.sign(x) * Math.log1p(Math.abs(x / constant));\n    },\n    invert(x) {\n      return Math.sign(x) * Math.expm1(Math.abs(x)) * constant;\n    }\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/scales/temporal.js\n\n\nfunction createScaleT(key, scale, channels, options) {\n  return createScaleQ(key, scale, channels, options);\n}\nfunction createScaleTime(key, channels, options) {\n  return createScaleT(key, (0,src.scaleTime)(), channels, options);\n}\nfunction createScaleUtc(key, channels, options) {\n  return createScaleT(key, (0,src.scaleUtc)(), channels, options);\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/scales/ordinal.js\n\n\n\n\n\n\n\n\n// This denotes an implicitly ordinal color scale: the scale type was not set,\n// but the associated values are strings or booleans. If the associated defined\n// values are entirely boolean, the range will default to greys. You can opt out\n// of this by setting the type explicitly.\nconst ordinalImplicit = Symbol("ordinal");\nfunction createScaleO(key, scale, channels, {\n  type,\n  interval,\n  domain,\n  range,\n  reverse,\n  hint\n}) {\n  interval = maybeRangeInterval(interval, type);\n  if (domain === undefined) domain = ordinal_inferDomain(channels, interval, key);\n  if (type === "categorical" || type === ordinalImplicit) type = "ordinal"; // shorthand for color schemes\n  if (reverse) domain = (0,src.reverse)(domain);\n  scale.domain(domain);\n  if (range !== undefined) {\n    // If the range is specified as a function, pass it the domain.\n    if (typeof range === "function") range = range(domain);\n    scale.range(range);\n  }\n  return {\n    type,\n    domain,\n    range,\n    scale,\n    hint,\n    interval\n  };\n}\nfunction createScaleOrdinal(key, channels, {\n  type,\n  interval,\n  domain,\n  range,\n  scheme,\n  unknown,\n  ...options\n}) {\n  interval = maybeRangeInterval(interval, type);\n  if (domain === undefined) domain = ordinal_inferDomain(channels, interval, key);\n  let hint;\n  if (registry.get(key) === symbol) {\n    hint = inferSymbolHint(channels);\n    range = range === undefined ? inferSymbolRange(hint) : map(range, maybeSymbol);\n  } else if (registry.get(key) === color) {\n    if (range === undefined && (type === "ordinal" || type === ordinalImplicit)) {\n      range = maybeBooleanRange(domain, scheme);\n      if (range !== undefined) scheme = undefined; // Don’t re-apply scheme.\n    }\n\n    if (scheme === undefined && range === undefined) {\n      scheme = type === "ordinal" ? "turbo" : "tableau10";\n    }\n    if (scheme !== undefined) {\n      if (range !== undefined) {\n        const interpolate = quantitativeScheme(scheme);\n        const t0 = range[0],\n          d = range[1] - range[0];\n        range = ({\n          length: n\n        }) => (0,src.quantize)(t => interpolate(t0 + d * t), n);\n      } else {\n        range = ordinalScheme(scheme);\n      }\n    }\n  }\n  if (unknown === src.scaleImplicit) {\n    throw new Error(`implicit unknown on ${key} scale is not supported`);\n  }\n  return createScaleO(key, (0,src.scaleOrdinal)().unknown(unknown), channels, {\n    ...options,\n    type,\n    domain,\n    range,\n    hint\n  });\n}\nfunction createScalePoint(key, channels, {\n  align = 0.5,\n  padding = 0.5,\n  ...options\n}) {\n  return maybeRound((0,src.scalePoint)().align(align).padding(padding), channels, options, key);\n}\nfunction createScaleBand(key, channels, {\n  align = 0.5,\n  padding = 0.1,\n  paddingInner = padding,\n  paddingOuter = key === "fx" || key === "fy" ? 0 : padding,\n  ...options\n}) {\n  return maybeRound((0,src.scaleBand)().align(align).paddingInner(paddingInner).paddingOuter(paddingOuter), channels, options, key);\n}\nfunction maybeRound(scale, channels, options, key) {\n  let {\n    round\n  } = options;\n  if (round !== undefined) scale.round(round = !!round);\n  scale = createScaleO(key, scale, channels, options);\n  scale.round = round; // preserve for autoScaleRound\n  return scale;\n}\nfunction ordinal_inferDomain(channels, interval, key) {\n  const values = new src.InternSet();\n  for (const {\n    value,\n    domain\n  } of channels) {\n    if (domain !== undefined) return domain(); // see channelDomain\n    if (value === undefined) continue;\n    for (const v of value) values.add(v);\n  }\n  if (interval !== undefined) {\n    const [min, max] = (0,src.extent)(values).map(interval.floor, interval);\n    return interval.range(min, interval.offset(max));\n  }\n  if (values.size > 10e3 && registry.get(key) === position) {\n    throw new Error(`implicit ordinal domain of ${key} scale has more than 10,000 values`);\n  }\n  return (0,src.sort)(values, ascendingDefined);\n}\n\n// If all channels provide a consistent hint, propagate it to the scale.\nfunction inferHint(channels, key) {\n  let value;\n  for (const {\n    hint\n  } of channels) {\n    const candidate = hint?.[key];\n    if (candidate === undefined) continue; // no hint here\n    if (value === undefined) value = candidate;\n    // first hint\n    else if (value !== candidate) return; // inconsistent hint\n  }\n\n  return value;\n}\nfunction inferSymbolHint(channels) {\n  return {\n    fill: inferHint(channels, "fill"),\n    stroke: inferHint(channels, "stroke")\n  };\n}\nfunction inferSymbolRange(hint) {\n  return isNoneish(hint.fill) ? src.symbolsStroke : src.symbolsFill;\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/scales.js\n\n\n\n\n\n\n\n\n\nfunction createScales(channelsByScale, {\n  label: globalLabel,\n  inset: globalInset = 0,\n  insetTop: globalInsetTop = globalInset,\n  insetRight: globalInsetRight = globalInset,\n  insetBottom: globalInsetBottom = globalInset,\n  insetLeft: globalInsetLeft = globalInset,\n  round,\n  nice,\n  clamp,\n  zero,\n  align,\n  padding,\n  projection,\n  facet: {\n    label: facetLabel = globalLabel\n  } = {},\n  ...options\n} = {}) {\n  const scales = {};\n  for (const [key, channels] of channelsByScale) {\n    const scaleOptions = options[key];\n    const scale = createScale(key, channels, {\n      round: registry.get(key) === position ? round : undefined,\n      // only for position\n      nice,\n      clamp,\n      zero,\n      align,\n      padding,\n      projection,\n      ...scaleOptions\n    });\n    if (scale) {\n      // populate generic scale options (percent, transform, insets)\n      let {\n        label = key === "fx" || key === "fy" ? facetLabel : globalLabel,\n        percent,\n        transform,\n        inset,\n        insetTop = inset !== undefined ? inset : key === "y" ? globalInsetTop : 0,\n        // not fy\n        insetRight = inset !== undefined ? inset : key === "x" ? globalInsetRight : 0,\n        // not fx\n        insetBottom = inset !== undefined ? inset : key === "y" ? globalInsetBottom : 0,\n        // not fy\n        insetLeft = inset !== undefined ? inset : key === "x" ? globalInsetLeft : 0 // not fx\n      } = scaleOptions || {};\n      if (transform == null) transform = undefined;else if (typeof transform !== "function") throw new Error("invalid scale transform; not a function");\n      scale.percent = !!percent;\n      scale.label = label === undefined ? inferScaleLabel(channels, scale) : label;\n      scale.transform = transform;\n      if (key === "x" || key === "fx") {\n        scale.insetLeft = +insetLeft;\n        scale.insetRight = +insetRight;\n      } else if (key === "y" || key === "fy") {\n        scale.insetTop = +insetTop;\n        scale.insetBottom = +insetBottom;\n      }\n      scales[key] = scale;\n    }\n  }\n  return scales;\n}\nfunction createScaleFunctions(scales) {\n  return Object.fromEntries(Object.entries(scales).filter(([, {\n    scale\n  }]) => scale) // drop identity scales\n  .map(([name, {\n    scale,\n    type,\n    interval,\n    label\n  }]) => {\n    scale.type = type; // for axis\n    if (interval != null) scale.interval = interval; // for axis\n    if (label != null) scale.label = label; // for axis\n    return [name, scale];\n  }));\n}\n\n// Mutates scale.range!\nfunction autoScaleRange(scales, dimensions) {\n  const {\n    x,\n    y,\n    fx,\n    fy\n  } = scales;\n  const superdimensions = fx || fy ? outerDimensions(dimensions) : dimensions;\n  if (fx) autoScaleRangeX(fx, superdimensions);\n  if (fy) autoScaleRangeY(fy, superdimensions);\n  const subdimensions = fx || fy ? innerDimensions(scales, dimensions) : dimensions;\n  if (x) autoScaleRangeX(x, subdimensions);\n  if (y) autoScaleRangeY(y, subdimensions);\n}\n\n// Channels can have labels; if all the channels for a given scale are\n// consistently labeled (i.e., have the same value if not undefined), and the\n// corresponding scale doesn’t already have an explicit label, then the\n// channels’ label is promoted to the scale. This inferred label should have an\n// orientation-appropriate arrow added when used as an axis, but we don’t want\n// to add the arrow when the label is set explicitly as an option; so, the\n// inferred label is distinguished as an object with an “inferred” property.\nfunction inferScaleLabel(channels = [], scale) {\n  let label;\n  for (const {\n    label: l\n  } of channels) {\n    if (l === undefined) continue;\n    if (label === undefined) label = l;else if (label !== l) return;\n  }\n  if (label === undefined) return;\n  if (!isOrdinalScale(scale) && scale.percent) label = `${label} (%)`;\n  return {\n    inferred: true,\n    toString: () => label\n  };\n}\n\n// Returns the dimensions of the outer frame; this is subdivided into facets\n// with the margins of each facet collapsing into the outer margins.\nfunction outerDimensions(dimensions) {\n  const {\n    marginTop,\n    marginRight,\n    marginBottom,\n    marginLeft,\n    width,\n    height,\n    facet: {\n      marginTop: facetMarginTop,\n      marginRight: facetMarginRight,\n      marginBottom: facetMarginBottom,\n      marginLeft: facetMarginLeft\n    }\n  } = dimensions;\n  return {\n    marginTop: Math.max(marginTop, facetMarginTop),\n    marginRight: Math.max(marginRight, facetMarginRight),\n    marginBottom: Math.max(marginBottom, facetMarginBottom),\n    marginLeft: Math.max(marginLeft, facetMarginLeft),\n    width,\n    height\n  };\n}\n\n// Returns the dimensions of each facet.\nfunction innerDimensions({\n  fx,\n  fy\n}, dimensions) {\n  const {\n    marginTop,\n    marginRight,\n    marginBottom,\n    marginLeft,\n    width,\n    height\n  } = outerDimensions(dimensions);\n  return {\n    marginTop,\n    marginRight,\n    marginBottom,\n    marginLeft,\n    width: fx ? fx.scale.bandwidth() + marginLeft + marginRight : width,\n    height: fy ? fy.scale.bandwidth() + marginTop + marginBottom : height,\n    facet: {\n      width,\n      height\n    }\n  };\n}\nfunction autoScaleRangeX(scale, dimensions) {\n  if (scale.range === undefined) {\n    const {\n      insetLeft,\n      insetRight\n    } = scale;\n    const {\n      width,\n      marginLeft = 0,\n      marginRight = 0\n    } = dimensions;\n    const left = marginLeft + insetLeft;\n    const right = width - marginRight - insetRight;\n    scale.range = [left, Math.max(left, right)];\n    if (!isOrdinalScale(scale)) scale.range = piecewiseRange(scale);\n    scale.scale.range(scale.range);\n  }\n  autoScaleRound(scale);\n}\nfunction autoScaleRangeY(scale, dimensions) {\n  if (scale.range === undefined) {\n    const {\n      insetTop,\n      insetBottom\n    } = scale;\n    const {\n      height,\n      marginTop = 0,\n      marginBottom = 0\n    } = dimensions;\n    const top = marginTop + insetTop;\n    const bottom = height - marginBottom - insetBottom;\n    scale.range = [Math.max(top, bottom), top];\n    if (!isOrdinalScale(scale)) scale.range = piecewiseRange(scale);else scale.range.reverse();\n    scale.scale.range(scale.range);\n  }\n  autoScaleRound(scale);\n}\nfunction autoScaleRound(scale) {\n  if (scale.round === undefined && isBandScale(scale) && roundError(scale) <= 30) {\n    scale.scale.round(true);\n  }\n}\n\n// If we were to turn on rounding for this band or point scale, how much wasted\n// space would it introduce (on both ends of the range)? This must match\n// d3.scaleBand’s rounding behavior:\n// https://github.com/d3/d3-scale/blob/83555bd759c7314420bd4240642beda5e258db9e/src/band.js#L20-L32\nfunction roundError({\n  scale\n}) {\n  const n = scale.domain().length;\n  const [start, stop] = scale.range();\n  const paddingInner = scale.paddingInner ? scale.paddingInner() : 1;\n  const paddingOuter = scale.paddingOuter ? scale.paddingOuter() : scale.padding();\n  const m = n - paddingInner;\n  const step = Math.abs(stop - start) / Math.max(1, m + paddingOuter * 2);\n  return (step - Math.floor(step)) * m;\n}\nfunction piecewiseRange(scale) {\n  const length = scale.scale.domain().length + isThresholdScale(scale);\n  if (!(length > 2)) return scale.range;\n  const [start, end] = scale.range;\n  return Array.from({\n    length\n  }, (_, i) => start + i / (length - 1) * (end - start));\n}\nfunction normalizeScale(key, scale, hint) {\n  return createScale(key, hint === undefined ? undefined : [{\n    hint\n  }], {\n    ...scale\n  });\n}\nfunction createScale(key, channels = [], options = {}) {\n  const type = inferScaleType(key, channels, options);\n\n  // Warn for common misuses of implicit ordinal scales. We disable this test if\n  // you specify a scale interval or if you set the domain or range explicitly,\n  // since setting the domain or range (typically with a cardinality of more than\n  // two) is another indication that you intended for the scale to be ordinal; we\n  // also disable it for facet scales since these are always band scales.\n  if (options.type === undefined && options.domain === undefined && options.range === undefined && options.interval == null && key !== "fx" && key !== "fy" && isOrdinalScale({\n    type\n  })) {\n    const values = channels.map(({\n      value\n    }) => value).filter(value => value !== undefined);\n    if (values.some(isTemporal)) warn(`Warning: some data associated with the ${key} scale are dates. Dates are typically associated with a "utc" or "time" scale rather than a "${formatScaleType(type)}" scale. If you are using a bar mark, you probably want a rect mark with the interval option instead; if you are using a group transform, you probably want a bin transform instead. If you want to treat this data as ordinal, you can specify the interval of the ${key} scale (e.g., d3.utcDay), or you can suppress this warning by setting the type of the ${key} scale to "${formatScaleType(type)}".`);else if (values.some(isTemporalString)) warn(`Warning: some data associated with the ${key} scale are strings that appear to be dates (e.g., YYYY-MM-DD). If these strings represent dates, you should parse them to Date objects. Dates are typically associated with a "utc" or "time" scale rather than a "${formatScaleType(type)}" scale. If you are using a bar mark, you probably want a rect mark with the interval option instead; if you are using a group transform, you probably want a bin transform instead. If you want to treat this data as ordinal, you can suppress this warning by setting the type of the ${key} scale to "${formatScaleType(type)}".`);else if (values.some(isNumericString)) warn(`Warning: some data associated with the ${key} scale are strings that appear to be numbers. If these strings represent numbers, you should parse or coerce them to numbers. Numbers are typically associated with a "linear" scale rather than a "${formatScaleType(type)}" scale. If you want to treat this data as ordinal, you can specify the interval of the ${key} scale (e.g., 1 for integers), or you can suppress this warning by setting the type of the ${key} scale to "${formatScaleType(type)}".`);\n  }\n  options.type = type; // Mutates input!\n\n  // Once the scale type is known, coerce the associated channel values and any\n  // explicitly-specified domain to the expected type.\n  switch (type) {\n    case "diverging":\n    case "diverging-sqrt":\n    case "diverging-pow":\n    case "diverging-log":\n    case "diverging-symlog":\n    case "cyclical":\n    case "sequential":\n    case "linear":\n    case "sqrt":\n    case "threshold":\n    case "quantile":\n    case "pow":\n    case "log":\n    case "symlog":\n      options = coerceType(channels, options, coerceNumbers);\n      break;\n    case "identity":\n      switch (registry.get(key)) {\n        case position:\n          options = coerceType(channels, options, coerceNumbers);\n          break;\n        case symbol:\n          options = coerceType(channels, options, coerceSymbols);\n          break;\n      }\n      break;\n    case "utc":\n    case "time":\n      options = coerceType(channels, options, coerceDates);\n      break;\n  }\n  switch (type) {\n    case "diverging":\n      return createScaleDiverging(key, channels, options);\n    case "diverging-sqrt":\n      return createScaleDivergingSqrt(key, channels, options);\n    case "diverging-pow":\n      return createScaleDivergingPow(key, channels, options);\n    case "diverging-log":\n      return createScaleDivergingLog(key, channels, options);\n    case "diverging-symlog":\n      return createScaleDivergingSymlog(key, channels, options);\n    case "categorical":\n    case "ordinal":\n    case ordinalImplicit:\n      return createScaleOrdinal(key, channels, options);\n    case "cyclical":\n    case "sequential":\n    case "linear":\n      return createScaleLinear(key, channels, options);\n    case "sqrt":\n      return createScaleSqrt(key, channels, options);\n    case "threshold":\n      return createScaleThreshold(key, channels, options);\n    case "quantile":\n      return createScaleQuantile(key, channels, options);\n    case "quantize":\n      return createScaleQuantize(key, channels, options);\n    case "pow":\n      return createScalePow(key, channels, options);\n    case "log":\n      return createScaleLog(key, channels, options);\n    case "symlog":\n      return createScaleSymlog(key, channels, options);\n    case "utc":\n      return createScaleUtc(key, channels, options);\n    case "time":\n      return createScaleTime(key, channels, options);\n    case "point":\n      return createScalePoint(key, channels, options);\n    case "band":\n      return createScaleBand(key, channels, options);\n    case "identity":\n      return registry.get(key) === position ? createScaleIdentity() : {\n        type: "identity"\n      };\n    case undefined:\n      return;\n    default:\n      throw new Error(`unknown scale type: ${type}`);\n  }\n}\nfunction formatScaleType(type) {\n  return typeof type === "symbol" ? type.description : type;\n}\n\n// A special type symbol when the x and y scales are replaced with a projection.\nconst typeProjection = {\n  toString: () => "projection"\n};\nfunction inferScaleType(key, channels, {\n  type,\n  domain,\n  range,\n  scheme,\n  pivot,\n  projection\n}) {\n  // The facet scales are always band scales; this cannot be changed.\n  if (key === "fx" || key === "fy") return "band";\n\n  // If a projection is specified, the x- and y-scales are disabled; these\n  // channels will be projected rather than scaled. (But still check that none\n  // of the associated channels are incompatible with a projection.)\n  if ((key === "x" || key === "y") && projection != null) type = typeProjection;\n\n  // If a channel dictates a scale type, make sure that it is consistent with\n  // the user-specified scale type (if any) and all other channels. For example,\n  // barY requires x to be a band scale and disallows any other scale type.\n  for (const {\n    type: t\n  } of channels) {\n    if (t === undefined) continue;else if (type === undefined) type = t;else if (type !== t) throw new Error(`scale incompatible with channel: ${type} !== ${t}`);\n  }\n\n  // If the scale, a channel, or user specified a (consistent) type, return it.\n  if (type === typeProjection) return;\n  if (type !== undefined) return type;\n\n  // If there’s no data (and no type) associated with this scale, don’t create a scale.\n  if (domain === undefined && !channels.some(({\n    value\n  }) => value !== undefined)) return;\n\n  // Some scales have default types.\n  const kind = registry.get(key);\n  if (kind === radius) return "sqrt";\n  if (kind === opacity || kind === scales_length) return "linear";\n  if (kind === symbol) return "ordinal";\n\n  // If the domain or range has more than two values, assume it’s ordinal. You\n  // can still use a “piecewise” (or “polylinear”) scale, but you must set the\n  // type explicitly.\n  if ((domain || range || []).length > 2) return asOrdinalType(kind);\n\n  // Otherwise, infer the scale type from the data! Prefer the domain, if\n  // present, over channels. (The domain and channels should be consistently\n  // typed, and the domain is more explicit and typically much smaller.) We only\n  // check the first defined value for expedience and simplicity; we expect\n  // that the types are consistent.\n  if (domain !== undefined) {\n    if (isOrdinal(domain)) return asOrdinalType(kind);\n    if (isTemporal(domain)) return "utc";\n  } else {\n    const values = channels.map(({\n      value\n    }) => value).filter(value => value !== undefined);\n    if (values.some(isOrdinal)) return asOrdinalType(kind);\n    if (values.some(isTemporal)) return "utc";\n  }\n\n  // For color scales, take a hint from the color scheme and pivot option.\n  if (kind === color) {\n    if (pivot != null || isDivergingScheme(scheme)) return "diverging";\n    if (isCategoricalScheme(scheme)) return "categorical";\n  }\n  return "linear";\n}\n\n// Positional scales default to a point scale instead of an ordinal scale.\nfunction asOrdinalType(kind) {\n  switch (kind) {\n    case position:\n      return "point";\n    case color:\n      return ordinalImplicit;\n    default:\n      return "ordinal";\n  }\n}\nfunction isTemporalScale({\n  type\n}) {\n  return type === "time" || type === "utc";\n}\nfunction isOrdinalScale({\n  type\n}) {\n  return type === "ordinal" || type === "point" || type === "band" || type === ordinalImplicit;\n}\nfunction isThresholdScale({\n  type\n}) {\n  return type === "threshold";\n}\nfunction isBandScale({\n  type\n}) {\n  return type === "point" || type === "band";\n}\nfunction isDivergingScale({\n  type\n}) {\n  return /^diverging($|-)/.test(type);\n}\n\n// Certain marks have special behavior if a scale is collapsed, i.e. if the\n// domain is degenerate and represents only a single value such as [3, 3]; for\n// example, a rect will span the full extent of the chart along a collapsed\n// dimension (whereas a dot will simply be drawn in the center).\nfunction isCollapsed(scale) {\n  if (scale === undefined) return true; // treat missing scale as collapsed\n  const domain = scale.domain();\n  const value = scale(domain[0]);\n  for (let i = 1, n = domain.length; i < n; ++i) {\n    if (scale(domain[i]) - value) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Mutates channel.value!\nfunction coerceType(channels, {\n  domain,\n  ...options\n}, coerceValues) {\n  for (const c of channels) {\n    if (c.value !== undefined) {\n      c.value = coerceValues(c.value);\n    }\n  }\n  return {\n    domain: domain === undefined ? domain : coerceValues(domain),\n    ...options\n  };\n}\nfunction coerceSymbols(values) {\n  return map(values, maybeSymbol);\n}\nfunction scale(options = {}) {\n  let scale;\n  for (const key in options) {\n    if (!registry.has(key)) continue; // ignore unknown properties\n    if (!isScaleOptions(options[key])) continue; // e.g., ignore {color: "red"}\n    if (scale !== undefined) throw new Error("ambiguous scale definition; multiple scales found");\n    scale = exposeScale(normalizeScale(key, options[key]));\n  }\n  if (scale === undefined) throw new Error("invalid scale definition; no scale found");\n  return scale;\n}\nfunction exposeScales(scaleDescriptors) {\n  return key => {\n    if (!registry.has(key = `${key}`)) throw new Error(`unknown scale: ${key}`);\n    return key in scaleDescriptors ? exposeScale(scaleDescriptors[key]) : undefined;\n  };\n}\n\n// Note: axis- and legend-related properties (such as label, ticks and\n// tickFormat) are not included here as they do not affect the scale’s behavior.\nfunction exposeScale({\n  scale,\n  type,\n  domain,\n  range,\n  interpolate,\n  interval,\n  transform,\n  percent,\n  pivot\n}) {\n  if (type === "identity") return {\n    type: "identity",\n    apply: d => d,\n    invert: d => d\n  };\n  const unknown = scale.unknown ? scale.unknown() : undefined;\n  return {\n    type,\n    domain: slice(domain),\n    // defensive copy\n    ...(range !== undefined && {\n      range: slice(range)\n    }),\n    // defensive copy\n    ...(transform !== undefined && {\n      transform\n    }),\n    ...(percent && {\n      percent\n    }),\n    // only exposed if truthy\n    ...(unknown !== undefined && {\n      unknown\n    }),\n    ...(interval !== undefined && {\n      interval\n    }),\n    // quantitative\n    ...(interpolate !== undefined && {\n      interpolate\n    }),\n    ...(scale.clamp && {\n      clamp: scale.clamp()\n    }),\n    // diverging (always asymmetric; we never want to apply the symmetric transform twice)\n    ...(pivot !== undefined && {\n      pivot,\n      symmetric: false\n    }),\n    // log, diverging-log\n    ...(scale.base && {\n      base: scale.base()\n    }),\n    // pow, diverging-pow\n    ...(scale.exponent && {\n      exponent: scale.exponent()\n    }),\n    // symlog, diverging-symlog\n    ...(scale.constant && {\n      constant: scale.constant()\n    }),\n    // band, point\n    ...(scale.align && {\n      align: scale.align(),\n      round: scale.round()\n    }),\n    ...(scale.padding && (scale.paddingInner ? {\n      paddingInner: scale.paddingInner(),\n      paddingOuter: scale.paddingOuter()\n    } : {\n      padding: scale.padding()\n    })),\n    ...(scale.bandwidth && {\n      bandwidth: scale.bandwidth(),\n      step: scale.step()\n    }),\n    // utilities\n    apply: t => scale(t),\n    ...(scale.invert && {\n      invert: t => scale.invert(t)\n    })\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/dimensions.js\n\n\n\n\nfunction createDimensions(scales, marks, options = {}) {\n  // Compute the default margins: the maximum of the marks’ margins. While not\n  // always used, they may be needed to compute the default height of the plot.\n  let marginTopDefault = 0.5 - offset,\n    marginRightDefault = 0.5 + offset,\n    marginBottomDefault = 0.5 + offset,\n    marginLeftDefault = 0.5 - offset;\n  for (const {\n    marginTop,\n    marginRight,\n    marginBottom,\n    marginLeft\n  } of marks) {\n    if (marginTop > marginTopDefault) marginTopDefault = marginTop;\n    if (marginRight > marginRightDefault) marginRightDefault = marginRight;\n    if (marginBottom > marginBottomDefault) marginBottomDefault = marginBottom;\n    if (marginLeft > marginLeftDefault) marginLeftDefault = marginLeft;\n  }\n\n  // Compute the actual margins. The order of precedence is: the side-specific\n  // margin options, then the global margin option, then the defaults.\n  let {\n    margin,\n    marginTop = margin !== undefined ? margin : marginTopDefault,\n    marginRight = margin !== undefined ? margin : marginRightDefault,\n    marginBottom = margin !== undefined ? margin : marginBottomDefault,\n    marginLeft = margin !== undefined ? margin : marginLeftDefault\n  } = options;\n\n  // Coerce the margin options to numbers.\n  marginTop = +marginTop;\n  marginRight = +marginRight;\n  marginBottom = +marginBottom;\n  marginLeft = +marginLeft;\n\n  // Compute the outer dimensions of the plot. If the top and bottom margins are\n  // specified explicitly, adjust the automatic height accordingly.\n  let {\n    width = 640,\n    height = autoHeight(scales, options, {\n      width,\n      marginTopDefault,\n      marginRightDefault,\n      marginBottomDefault,\n      marginLeftDefault\n    }) + Math.max(0, marginTop - marginTopDefault + marginBottom - marginBottomDefault)\n  } = options;\n\n  // Coerce the width and height.\n  width = +width;\n  height = +height;\n  const dimensions = {\n    width,\n    height,\n    marginTop,\n    marginRight,\n    marginBottom,\n    marginLeft\n  };\n\n  // Compute the facet margins.\n  if (scales.fx || scales.fy) {\n    let {\n      margin: facetMargin,\n      marginTop: facetMarginTop = facetMargin !== undefined ? facetMargin : marginTop,\n      marginRight: facetMarginRight = facetMargin !== undefined ? facetMargin : marginRight,\n      marginBottom: facetMarginBottom = facetMargin !== undefined ? facetMargin : marginBottom,\n      marginLeft: facetMarginLeft = facetMargin !== undefined ? facetMargin : marginLeft\n    } = options.facet ?? {};\n\n    // Coerce the facet margin options to numbers.\n    facetMarginTop = +facetMarginTop;\n    facetMarginRight = +facetMarginRight;\n    facetMarginBottom = +facetMarginBottom;\n    facetMarginLeft = +facetMarginLeft;\n    dimensions.facet = {\n      marginTop: facetMarginTop,\n      marginRight: facetMarginRight,\n      marginBottom: facetMarginBottom,\n      marginLeft: facetMarginLeft\n    };\n  }\n  return dimensions;\n}\nfunction autoHeight({\n  x,\n  y,\n  fy,\n  fx\n}, {\n  projection,\n  aspectRatio\n}, {\n  width,\n  marginTopDefault,\n  marginRightDefault,\n  marginBottomDefault,\n  marginLeftDefault\n}) {\n  const nfy = fy ? fy.scale.domain().length : 1;\n\n  // If a projection is specified, use its natural aspect ratio (if known).\n  const ar = projectionAspectRatio(projection);\n  if (ar) {\n    const nfx = fx ? fx.scale.domain().length : 1;\n    const far = (1.1 * nfy - 0.1) / (1.1 * nfx - 0.1) * ar; // 0.1 is default facet padding\n    const lar = Math.max(0.1, Math.min(10, far)); // clamp the aspect ratio to a “reasonable” value\n    return Math.round((width - marginLeftDefault - marginRightDefault) * lar + marginTopDefault + marginBottomDefault);\n  }\n  const ny = y ? isOrdinalScale(y) ? y.scale.domain().length : Math.max(7, 17 / nfy) : 1;\n\n  // If a desired aspect ratio is given, compute a default height to match.\n  if (aspectRatio != null) {\n    aspectRatio = +aspectRatio;\n    if (!(isFinite(aspectRatio) && aspectRatio > 0)) throw new Error(`invalid aspectRatio: ${aspectRatio}`);\n    const ratio = aspectRatioLength("y", y) / (aspectRatioLength("x", x) * aspectRatio);\n    const fxb = fx ? fx.scale.bandwidth() : 1;\n    const fyb = fy ? fy.scale.bandwidth() : 1;\n    const w = fxb * (width - marginLeftDefault - marginRightDefault) - x.insetLeft - x.insetRight;\n    return (ratio * w + y.insetTop + y.insetBottom) / fyb + marginTopDefault + marginBottomDefault;\n  }\n  return !!(y || fy) * Math.max(1, Math.min(60, ny * nfy)) * 20 + !!fx * 30 + 60;\n}\nfunction aspectRatioLength(k, scale) {\n  if (!scale) throw new Error(`aspectRatio requires ${k} scale`);\n  const {\n    type,\n    domain\n  } = scale;\n  let transform;\n  switch (type) {\n    case "linear":\n    case "utc":\n    case "time":\n      transform = Number;\n      break;\n    case "pow":\n      {\n        const exponent = scale.scale.exponent();\n        transform = x => Math.pow(x, exponent);\n        break;\n      }\n    case "log":\n      transform = Math.log;\n      break;\n    case "point":\n    case "band":\n      return domain.length;\n    default:\n      throw new Error(`unsupported ${k} scale for aspectRatio: ${type}`);\n  }\n  const [min, max] = (0,src.extent)(domain);\n  return Math.abs(transform(max) - transform(min));\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/facet.js\n\n\n\n\n// Returns an array of {x?, y?, i} objects representing the facet domain.\nfunction createFacets(channelsByScale, options) {\n  const {\n    fx,\n    fy\n  } = createScales(channelsByScale, options);\n  const fxDomain = fx?.scale.domain();\n  const fyDomain = fy?.scale.domain();\n  return fxDomain && fyDomain ? (0,src.cross)(fxDomain, fyDomain).map(([x, y], i) => ({\n    x,\n    y,\n    i\n  })) : fxDomain ? fxDomain.map((x, i) => ({\n    x,\n    i\n  })) : fyDomain ? fyDomain.map((y, i) => ({\n    y,\n    i\n  })) : undefined;\n}\nfunction recreateFacets(facets, {\n  x: X,\n  y: Y\n}) {\n  X &&= facetIndex(X);\n  Y &&= facetIndex(Y);\n  return facets.filter(X && Y // remove any facets no longer present in the domain\n  ? f => X.has(f.x) && Y.has(f.y) : X ? f => X.has(f.x) : f => Y.has(f.y)).sort(X && Y // reorder facets to match the new scale domains\n  ? (a, b) => X.get(a.x) - X.get(b.x) || Y.get(a.y) - Y.get(b.y) : X ? (a, b) => X.get(a.x) - X.get(b.x) : (a, b) => Y.get(a.y) - Y.get(b.y));\n}\n\n// Returns a (possibly nested) Map of [[key1, index1], [key2, index2], …]\n// representing the data indexes associated with each facet.\nfunction facetGroups(data, {\n  fx,\n  fy\n}) {\n  const I = range(data);\n  const FX = fx?.value;\n  const FY = fy?.value;\n  return fx && fy ? (0,src.rollup)(I, G => (G.fx = FX[G[0]], G.fy = FY[G[0]], G), i => FX[i], i => FY[i]) : fx ? (0,src.rollup)(I, G => (G.fx = FX[G[0]], G), i => FX[i]) : (0,src.rollup)(I, G => (G.fy = FY[G[0]], G), i => FY[i]);\n}\nfunction facetTranslator(fx, fy, {\n  marginTop,\n  marginLeft\n}) {\n  return fx && fy ? ({\n    x,\n    y\n  }) => `translate(${fx(x) - marginLeft},${fy(y) - marginTop})` : fx ? ({\n    x\n  }) => `translate(${fx(x) - marginLeft},0)` : ({\n    y\n  }) => `translate(0,${fy(y) - marginTop})`;\n}\n\n// Returns an index that for each facet lists all the elements present in other\n// facets in the original index. TODO Memoize to avoid repeated work?\nfunction facetExclude(index) {\n  const ex = [];\n  const e = new Uint32Array((0,src.sum)(index, d => d.length));\n  for (const i of index) {\n    let n = 0;\n    for (const j of index) {\n      if (i === j) continue;\n      e.set(j, n);\n      n += j.length;\n    }\n    ex.push(e.slice(0, n));\n  }\n  return ex;\n}\nconst facetAnchors = new Map([["top", facetAnchorTop], ["right", facetAnchorRight], ["bottom", facetAnchorBottom], ["left", facetAnchorLeft], ["top-left", and(facetAnchorTop, facetAnchorLeft)], ["top-right", and(facetAnchorTop, facetAnchorRight)], ["bottom-left", and(facetAnchorBottom, facetAnchorLeft)], ["bottom-right", and(facetAnchorBottom, facetAnchorRight)], ["top-empty", facetAnchorTopEmpty], ["right-empty", facetAnchorRightEmpty], ["bottom-empty", facetAnchorBottomEmpty], ["left-empty", facetAnchorLeftEmpty], ["empty", facetAnchorEmpty]]);\nfunction maybeFacetAnchor(facetAnchor) {\n  if (facetAnchor == null) return null;\n  const anchor = facetAnchors.get(`${facetAnchor}`.toLowerCase());\n  if (anchor) return anchor;\n  throw new Error(`invalid facet anchor: ${facetAnchor}`);\n}\nconst indexCache = new WeakMap();\nfunction facetIndex(V) {\n  let I = indexCache.get(V);\n  if (!I) indexCache.set(V, I = new src.InternMap(map(V, (v, i) => [v, i])));\n  return I;\n}\n\n// Like V.indexOf(v), but with the same semantics as InternMap.\nfunction facetIndexOf(V, v) {\n  return facetIndex(V).get(v);\n}\n\n// Like facets.find, but with the same semantics as InternMap.\nfunction facetFind(facets, x, y) {\n  x = keyof(x);\n  y = keyof(y);\n  return facets.find(f => Object.is(keyof(f.x), x) && Object.is(keyof(f.y), y));\n}\nfunction facetEmpty(facets, x, y) {\n  return facetFind(facets, x, y)?.empty;\n}\nfunction facetAnchorTop(facets, {\n  y: Y\n}, {\n  y\n}) {\n  return Y ? facetIndexOf(Y, y) === 0 : true;\n}\nfunction facetAnchorBottom(facets, {\n  y: Y\n}, {\n  y\n}) {\n  return Y ? facetIndexOf(Y, y) === Y.length - 1 : true;\n}\nfunction facetAnchorLeft(facets, {\n  x: X\n}, {\n  x\n}) {\n  return X ? facetIndexOf(X, x) === 0 : true;\n}\nfunction facetAnchorRight(facets, {\n  x: X\n}, {\n  x\n}) {\n  return X ? facetIndexOf(X, x) === X.length - 1 : true;\n}\nfunction facetAnchorTopEmpty(facets, {\n  y: Y\n}, {\n  x,\n  y,\n  empty\n}) {\n  if (empty) return false;\n  if (!Y) return;\n  const i = facetIndexOf(Y, y);\n  if (i > 0) return facetEmpty(facets, x, Y[i - 1]);\n}\nfunction facetAnchorBottomEmpty(facets, {\n  y: Y\n}, {\n  x,\n  y,\n  empty\n}) {\n  if (empty) return false;\n  if (!Y) return;\n  const i = facetIndexOf(Y, y);\n  if (i < Y.length - 1) return facetEmpty(facets, x, Y[i + 1]);\n}\nfunction facetAnchorLeftEmpty(facets, {\n  x: X\n}, {\n  x,\n  y,\n  empty\n}) {\n  if (empty) return false;\n  if (!X) return;\n  const i = facetIndexOf(X, x);\n  if (i > 0) return facetEmpty(facets, X[i - 1], y);\n}\nfunction facetAnchorRightEmpty(facets, {\n  x: X\n}, {\n  x,\n  y,\n  empty\n}) {\n  if (empty) return false;\n  if (!X) return;\n  const i = facetIndexOf(X, x);\n  if (i < X.length - 1) return facetEmpty(facets, X[i + 1], y);\n}\nfunction facetAnchorEmpty(facets, channels, {\n  empty\n}) {\n  return empty;\n}\nfunction and(a, b) {\n  return function () {\n    return a.apply(null, arguments) && b.apply(null, arguments);\n  };\n}\n\n// Facet filter, by mark; for now only the "eq" filter is provided.\nfunction facetFilter(facets, {\n  channels: {\n    fx,\n    fy\n  },\n  groups\n}) {\n  return fx && fy ? facets.map(({\n    x,\n    y\n  }) => groups.get(x)?.get(y) ?? []) : fx ? facets.map(({\n    x\n  }) => groups.get(x) ?? []) : facets.map(({\n    y\n  }) => groups.get(y) ?? []);\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/mark.js\n\n\n\n\n\n\n\n\nclass Mark {\n  constructor(data, channels = {}, options = {}, defaults) {\n    const {\n      facet = "auto",\n      facetAnchor,\n      fx,\n      fy,\n      sort,\n      dx = 0,\n      dy = 0,\n      margin = 0,\n      marginTop = margin,\n      marginRight = margin,\n      marginBottom = margin,\n      marginLeft = margin,\n      clip = defaults?.clip,\n      channels: extraChannels,\n      tip,\n      render\n    } = options;\n    this.data = data;\n    this.sort = isDomainSort(sort) ? sort : null;\n    this.initializer = initializer(options).initializer;\n    this.transform = this.initializer ? options.transform : basic(options).transform;\n    if (facet === null || facet === false) {\n      this.facet = null;\n    } else {\n      this.facet = keyword(facet === true ? "include" : facet, "facet", ["auto", "include", "exclude", "super"]);\n      this.fx = data === singleton && typeof fx === "string" ? [fx] : fx;\n      this.fy = data === singleton && typeof fy === "string" ? [fy] : fy;\n    }\n    this.facetAnchor = maybeFacetAnchor(facetAnchor);\n    channels = maybeNamed(channels);\n    if (extraChannels !== undefined) channels = {\n      ...maybeChannels(extraChannels),\n      ...channels\n    };\n    if (defaults !== undefined) channels = {\n      ...styles(this, options, defaults),\n      ...channels\n    };\n    this.channels = Object.fromEntries(Object.entries(channels).map(([name, channel]) => {\n      if (isOptions(channel.value)) {\n        // apply scale overrides\n        const {\n          value,\n          scale = channel.scale\n        } = channel.value;\n        channel = {\n          ...channel,\n          scale,\n          value\n        };\n      }\n      if (data === singleton && typeof channel.value === "string") {\n        // convert field names to singleton values for decoration marks (e.g., frame)\n        const {\n          value\n        } = channel;\n        channel = {\n          ...channel,\n          value: [value]\n        };\n      }\n      return [name, channel];\n    }).filter(([name, {\n      value,\n      optional\n    }]) => {\n      if (value != null) return true;\n      if (optional) return false;\n      throw new Error(`missing channel value: ${name}`);\n    }));\n    this.dx = +dx;\n    this.dy = +dy;\n    this.marginTop = +marginTop;\n    this.marginRight = +marginRight;\n    this.marginBottom = +marginBottom;\n    this.marginLeft = +marginLeft;\n    this.clip = maybeClip(clip);\n    this.tip = maybeTip(tip);\n    // Super-faceting currently disallow position channels; in the future, we\n    // could allow position to be specified in fx and fy in addition to (or\n    // instead of) x and y.\n    if (this.facet === "super") {\n      if (fx || fy) throw new Error(`super-faceting cannot use fx or fy`);\n      for (const name in this.channels) {\n        const {\n          scale\n        } = channels[name];\n        if (scale !== "x" && scale !== "y") continue;\n        throw new Error(`super-faceting cannot use x or y`);\n      }\n    }\n    if (render != null) {\n      this.render = composeRender(render, this.render);\n    }\n  }\n  initialize(facets, facetChannels, plotOptions) {\n    let data = arrayify(this.data);\n    if (facets === undefined && data != null) facets = [range(data)];\n    const originalFacets = facets;\n    if (this.transform != null) ({\n      facets,\n      data\n    } = this.transform(data, facets, plotOptions)), data = arrayify(data);\n    if (facets !== undefined) facets.original = originalFacets; // needed to read facetChannels\n    const channels = createChannels(this.channels, data);\n    if (this.sort != null) channelDomain(data, facets, channels, facetChannels, this.sort); // mutates facetChannels!\n    return {\n      data,\n      facets,\n      channels\n    };\n  }\n  filter(index, channels, values) {\n    for (const name in channels) {\n      const {\n        filter = defined\n      } = channels[name];\n      if (filter !== null) {\n        const value = values[name];\n        index = index.filter(i => filter(value[i]));\n      }\n    }\n    return index;\n  }\n  // If there is a projection, and there are paired x and y channels associated\n  // with the x and y scale respectively (and not already in screen coordinates\n  // as with an initializer), then apply the projection, replacing the x and y\n  // values. Note that the x and y scales themselves don’t exist if there is a\n  // projection, but whether the channels are associated with scales still\n  // determines whether the projection should apply; think of the projection as\n  // a combination xy-scale.\n  project(channels, values, context) {\n    for (const cx in channels) {\n      if (channels[cx].scale === "x" && /^x|x$/.test(cx)) {\n        const cy = cx.replace(/^x|x$/, "y");\n        if (cy in channels && channels[cy].scale === "y") {\n          project(cx, cy, values, context.projection);\n        }\n      }\n    }\n  }\n  scale(channels, scales, context) {\n    const values = valueObject(channels, scales);\n    if (context.projection) this.project(channels, values, context);\n    return values;\n  }\n}\nfunction marks(...marks) {\n  marks.plot = Mark.prototype.plot; // Note: depends on side-effect in plot!\n  return marks;\n}\nfunction composeRender(r1, r2) {\n  if (r1 == null) return r2 === null ? undefined : r2;\n  if (r2 == null) return r1 === null ? undefined : r1;\n  if (typeof r1 !== "function") throw new TypeError(`invalid render transform: ${r1}`);\n  if (typeof r2 !== "function") throw new TypeError(`invalid render transform: ${r2}`);\n  return function (i, s, v, d, c, next) {\n    return r1.call(this, i, s, v, d, c, (i, s, v, d, c) => {\n      return r2.call(this, i, s, v, d, c, next); // preserve this\n    });\n  };\n}\n\nfunction maybeChannels(channels) {\n  return Object.fromEntries(Object.entries(maybeNamed(channels)).map(([name, channel]) => {\n    channel = maybeValue(channel);\n    if (channel.filter === undefined && channel.scale == null) channel = {\n      ...channel,\n      filter: null\n    };\n    return [name, channel];\n  }));\n}\nfunction maybeTip(tip) {\n  return tip === true ? "xy" : tip === false ? null : maybeKeyword(tip, "tip", ["x", "y", "xy"]);\n}\nfunction withTip(options, tip) {\n  return options?.tip === true ? {\n    ...options,\n    tip\n  } : options;\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/interactions/pointer.js\n\n\n\nconst states = new WeakMap();\nfunction pointerK(kx, ky, {\n  x,\n  y,\n  px,\n  py,\n  maxRadius = 40,\n  channels,\n  render,\n  ...options\n} = {}) {\n  maxRadius = +maxRadius;\n  // When px or py is used, register an extra channel that the pointer\n  // interaction can use to control which point is focused; this allows pointing\n  // to function independently of where the downstream mark (e.g., a tip) is\n  // displayed. Also default x or y to null to disable maybeTuple etc.\n  if (px != null) x ??= null, channels = {\n    ...channels,\n    px: {\n      value: px,\n      scale: "x"\n    }\n  };\n  if (py != null) y ??= null, channels = {\n    ...channels,\n    py: {\n      value: py,\n      scale: "y"\n    }\n  };\n  return {\n    x,\n    y,\n    channels,\n    ...options,\n    // Unlike other composed transforms, the render transform must be the\n    // outermost render function because it will re-render dynamically in\n    // response to pointer events.\n    render: composeRender(function (index, scales, values, dimensions, context, next) {\n      context = {\n        ...context,\n        pointerSticky: false\n      };\n      const svg = context.ownerSVGElement;\n      const {\n        data\n      } = context.getMarkState(this);\n\n      // Isolate state per-pointer, per-plot; if the pointer is reused by\n      // multiple marks, they will share the same state (e.g., sticky modality).\n      let state = states.get(svg);\n      if (!state) states.set(svg, state = {\n        sticky: false,\n        roots: [],\n        renders: []\n      });\n\n      // This serves as a unique identifier of the rendered mark per-plot; it is\n      // used to record the currently-rendered elements (state.roots) so that we\n      // can tell when a rendered element is clicked on.\n      let renderIndex = state.renders.push(render) - 1;\n\n      // For faceting, we want to compute the local coordinates of each point,\n      // which means subtracting out the facet translation, if any. (It’s\n      // tempting to do this using the local coordinates in SVG, but that’s\n      // complicated by mark-specific transforms such as dx and dy.) Also, since\n      // band scales return the upper bound of the band, we have to offset by\n      // half the bandwidth.\n      const {\n        x,\n        y,\n        fx,\n        fy\n      } = scales;\n      let tx = fx ? fx(index.fx) - dimensions.marginLeft : 0;\n      let ty = fy ? fy(index.fy) - dimensions.marginTop : 0;\n      if (x?.bandwidth) tx += x.bandwidth() / 2;\n      if (y?.bandwidth) ty += y.bandwidth() / 2;\n\n      // For faceting, we also need to record the closest point per facet per\n      // mark (!), since each facet has its own pointer event listeners; we only\n      // want the closest point across facets to be visible.\n      const faceted = index.fi != null;\n      let facetState;\n      if (faceted) {\n        let facetStates = state.facetStates;\n        if (!facetStates) state.facetStates = facetStates = new Map();\n        facetState = facetStates.get(this);\n        if (!facetState) facetStates.set(this, facetState = new Map());\n      }\n\n      // The order of precedence for the pointer position is: px & py; the\n      // middle of x1 & y1 and x2 & y2; or x1 & y1 (e.g., area); or lastly x &\n      // y. If a dimension is unspecified, the frame anchor is used.\n      const [cx, cy] = applyFrameAnchor(this, dimensions);\n      const {\n        px: PX,\n        py: PY\n      } = values;\n      const px = PX ? i => PX[i] : anchorX(values, cx);\n      const py = PY ? i => PY[i] : anchorY(values, cy);\n      let i; // currently focused index\n      let g; // currently rendered mark\n      let s; // currently rendered stickiness\n      let f; // current animation frame\n\n      // When faceting, if more than one pointer would be visible, only show\n      // this one if it is the closest. We defer rendering using an animation\n      // frame to allow all pointer events to be received before deciding which\n      // mark to render; although when hiding, we render immediately.\n      function update(ii, ri) {\n        if (faceted) {\n          if (f) f = cancelAnimationFrame(f);\n          if (ii == null) facetState.delete(index.fi);else {\n            facetState.set(index.fi, ri);\n            f = requestAnimationFrame(() => {\n              f = null;\n              for (const [fi, r] of facetState) {\n                if (r < ri || r === ri && fi < index.fi) {\n                  ii = null;\n                  break;\n                }\n              }\n              render(ii);\n            });\n            return;\n          }\n        }\n        render(ii);\n      }\n      function render(ii) {\n        if (i === ii && s === state.sticky) return; // the tooltip hasn’t moved\n        i = ii;\n        s = context.pointerSticky = state.sticky;\n        const I = i == null ? [] : [i];\n        if (faceted) I.fx = index.fx, I.fy = index.fy, I.fi = index.fi;\n        const r = next(I, scales, values, dimensions, context);\n        if (g) {\n          // When faceting, preserve swapped mark and facet transforms; also\n          // remove ARIA attributes since these are promoted to the parent. This\n          // is perhaps brittle in that it depends on how Plot renders facets,\n          // but it produces a cleaner and more accessible SVG structure.\n          if (faceted) {\n            const p = g.parentNode;\n            const ft = g.getAttribute("transform");\n            const mt = r.getAttribute("transform");\n            ft ? r.setAttribute("transform", ft) : r.removeAttribute("transform");\n            mt ? p.setAttribute("transform", mt) : p.removeAttribute("transform");\n            r.removeAttribute("aria-label");\n            r.removeAttribute("aria-description");\n            r.removeAttribute("aria-hidden");\n          }\n          g.replaceWith(r);\n        }\n        state.roots[renderIndex] = g = r;\n\n        // Dispatch the value. When simultaneously exiting this facet and\n        // entering a new one, prioritize the entering facet.\n        if (!(i == null && facetState?.size > 1)) context.dispatchValue(i == null ? null : data[i]);\n        return r;\n      }\n\n      // Select the closest point to the mouse in the current facet; for\n      // pointerX or pointerY, the orthogonal component of the distance is\n      // squashed, selecting primarily on the dominant dimension. Across facets,\n      // use unsquashed distance to determine the winner.\n      function pointermove(event) {\n        if (state.sticky || event.pointerType === "mouse" && event.buttons === 1) return; // dragging\n        let [xp, yp] = (0,src.pointer)(event);\n        xp -= tx, yp -= ty; // correct for facets and band scales\n        const kpx = xp < dimensions.marginLeft || xp > dimensions.width - dimensions.marginRight ? 1 : kx;\n        const kpy = yp < dimensions.marginTop || yp > dimensions.height - dimensions.marginBottom ? 1 : ky;\n        let ii = null;\n        let ri = maxRadius * maxRadius;\n        for (const j of index) {\n          const dx = kpx * (px(j) - xp);\n          const dy = kpy * (py(j) - yp);\n          const rj = dx * dx + dy * dy;\n          if (rj <= ri) ii = j, ri = rj;\n        }\n        if (ii != null && (kx !== 1 || ky !== 1)) {\n          const dx = px(ii) - xp;\n          const dy = py(ii) - yp;\n          ri = dx * dx + dy * dy;\n        }\n        update(ii, ri);\n      }\n      function pointerdown(event) {\n        if (event.pointerType !== "mouse") return;\n        if (i == null) return; // not pointing\n        if (state.sticky && state.roots.some(r => r?.contains(event.target))) return; // stay sticky\n        if (state.sticky) state.sticky = false, state.renders.forEach(r => r(null)); // clear all pointers\n        else state.sticky = true, render(i);\n        event.stopImmediatePropagation(); // suppress other pointers\n      }\n\n      function pointerleave(event) {\n        if (event.pointerType !== "mouse") return;\n        if (!state.sticky) update(null);\n      }\n\n      // We listen to the svg element; listening to the window instead would let\n      // us receive pointer events from farther away, but would also make it\n      // hard to know when to remove the listeners. (Using a mutation observer\n      // to watch the entire document is likely too expensive.)\n      svg.addEventListener("pointerenter", pointermove);\n      svg.addEventListener("pointermove", pointermove);\n      svg.addEventListener("pointerdown", pointerdown);\n      svg.addEventListener("pointerleave", pointerleave);\n      return render(null);\n    }, render)\n  };\n}\nfunction pointer(options) {\n  return pointerK(1, 1, options);\n}\nfunction pointerX(options) {\n  return pointerK(1, 0.01, options);\n}\nfunction pointerY(options) {\n  return pointerK(0.01, 1, options);\n}\nfunction anchorX({\n  x1: X1,\n  x2: X2,\n  x: X = X1\n}, cx) {\n  return X1 && X2 ? i => (X1[i] + X2[i]) / 2 : X ? i => X[i] : () => cx;\n}\nfunction anchorY({\n  y1: Y1,\n  y2: Y2,\n  y: Y = Y1\n}, cy) {\n  return Y1 && Y2 ? i => (Y1[i] + Y2[i]) / 2 : Y ? i => Y[i] : () => cy;\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/axes.js\n\nfunction inferFontVariant(scale) {\n  return isOrdinalScale(scale) && scale.interval === undefined ? undefined : "tabular-nums";\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/legends/ramp.js\n\n\n\n\n\n\nfunction legendRamp(color, options) {\n  let {\n    label = color.label,\n    tickSize = 6,\n    width = 240,\n    height = 44 + tickSize,\n    marginTop = 18,\n    marginRight = 0,\n    marginBottom = 16 + tickSize,\n    marginLeft = 0,\n    style,\n    ticks = (width - marginLeft - marginRight) / 64,\n    tickFormat,\n    fontVariant = inferFontVariant(color),\n    round = true,\n    opacity,\n    className\n  } = options;\n  const context = createContext(options);\n  className = maybeClassName(className);\n  opacity = maybeNumberChannel(opacity)[1];\n  if (tickFormat === null) tickFormat = () => null;\n  const svg = create("svg", context).attr("class", `${className}-ramp`).attr("font-family", "system-ui, sans-serif").attr("font-size", 10).attr("width", width).attr("height", height).attr("viewBox", `0 0 ${width} ${height}`).call(svg =>\n  // Warning: if you edit this, change defaultClassName.\n  svg.append("style").text(`.${className}-ramp {\n  display: block;\n  background: white;\n  height: auto;\n  height: intrinsic;\n  max-width: 100%;\n  overflow: visible;\n}\n.${className}-ramp text {\n  white-space: pre;\n}`)).call(applyInlineStyles, style);\n  let tickAdjust = g => g.selectAll(".tick line").attr("y1", marginTop + marginBottom - height);\n  let x;\n\n  // Some D3 scales use scale.interpolate, some scale.interpolator, and some\n  // scale.round; this normalizes the API so it works with all scale types.\n  const applyRange = round ? (x, range) => x.rangeRound(range) : (x, range) => x.range(range);\n  const {\n    type,\n    domain,\n    range,\n    interpolate,\n    scale,\n    pivot\n  } = color;\n\n  // Continuous\n  if (interpolate) {\n    // Often interpolate is a “fixed” interpolator on the [0, 1] interval, as\n    // with a built-in color scheme, but sometimes it is a function that takes\n    // two arguments and is used in conjunction with the range.\n    const interpolator = range === undefined ? interpolate : (0,src.piecewise)(interpolate.length === 1 ? interpolatePiecewise(interpolate) : interpolate, range);\n\n    // Construct a D3 scale of the same type, but with a range that evenly\n    // divides the horizontal extent of the legend. (In the common case, the\n    // domain.length is two, and so the range is simply the extent.) For a\n    // diverging scale, we need an extra point in the range for the pivot such\n    // that the pivot is always drawn in the middle.\n    x = applyRange(scale.copy(), (0,src.quantize)((0,src.interpolateNumber)(marginLeft, width - marginRight), Math.min(domain.length + (pivot !== undefined), range === undefined ? Infinity : range.length)));\n\n    // Construct a 256×1 canvas, filling each pixel using the interpolator.\n    const n = 256;\n    const canvas = context.document.createElement("canvas");\n    canvas.width = n;\n    canvas.height = 1;\n    const context2 = canvas.getContext("2d");\n    for (let i = 0, j = n - 1; i < n; ++i) {\n      context2.fillStyle = interpolator(i / j);\n      context2.fillRect(i, 0, 1, 1);\n    }\n    svg.append("image").attr("opacity", opacity).attr("x", marginLeft).attr("y", marginTop).attr("width", width - marginLeft - marginRight).attr("height", height - marginTop - marginBottom).attr("preserveAspectRatio", "none").attr("xlink:href", canvas.toDataURL());\n  }\n\n  // Threshold\n  else if (type === "threshold") {\n    const thresholds = domain;\n    const thresholdFormat = tickFormat === undefined ? d => d : typeof tickFormat === "string" ? (0,src.format)(tickFormat) : tickFormat;\n\n    // Construct a linear scale with evenly-spaced ticks for each of the\n    // thresholds; the domain extends one beyond the threshold extent.\n    x = applyRange((0,src.scaleLinear)().domain([-1, range.length - 1]), [marginLeft, width - marginRight]);\n    svg.append("g").attr("fill-opacity", opacity).selectAll().data(range).enter().append("rect").attr("x", (d, i) => x(i - 1)).attr("y", marginTop).attr("width", (d, i) => x(i) - x(i - 1)).attr("height", height - marginTop - marginBottom).attr("fill", d => d);\n    ticks = map(thresholds, (_, i) => i);\n    tickFormat = i => thresholdFormat(thresholds[i], i);\n  }\n\n  // Ordinal (hopefully!)\n  else {\n    x = applyRange((0,src.scaleBand)().domain(domain), [marginLeft, width - marginRight]);\n    svg.append("g").attr("fill-opacity", opacity).selectAll().data(domain).enter().append("rect").attr("x", x).attr("y", marginTop).attr("width", Math.max(0, x.bandwidth() - 1)).attr("height", height - marginTop - marginBottom).attr("fill", scale);\n    tickAdjust = () => {};\n  }\n  svg.append("g").attr("transform", `translate(0,${height - marginBottom})`).call((0,src.axisBottom)(x).ticks(Array.isArray(ticks) ? null : ticks, typeof tickFormat === "string" ? tickFormat : undefined).tickFormat(typeof tickFormat === "function" ? tickFormat : undefined).tickSize(tickSize).tickValues(Array.isArray(ticks) ? ticks : null)).attr("font-size", null).attr("font-family", null).attr("font-variant", impliedString(fontVariant, "normal")).call(tickAdjust).call(g => g.select(".domain").remove());\n  if (label !== undefined) {\n    svg.append("text").attr("x", marginLeft).attr("y", marginTop - 6).attr("fill", "currentColor") // TODO move to stylesheet?\n    .attr("font-weight", "bold").text(label);\n  }\n  return svg.node();\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/math.js\nconst radians = Math.PI / 180;\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/marker.js\n\nfunction markers(mark, {\n  marker,\n  markerStart = marker,\n  markerMid = marker,\n  markerEnd = marker\n} = {}) {\n  mark.markerStart = maybeMarker(markerStart);\n  mark.markerMid = maybeMarker(markerMid);\n  mark.markerEnd = maybeMarker(markerEnd);\n}\nfunction maybeMarker(marker) {\n  if (marker == null || marker === false) return null;\n  if (marker === true) return markerCircleFill;\n  if (typeof marker === "function") return marker;\n  switch (`${marker}`.toLowerCase()) {\n    case "none":\n      return null;\n    case "arrow":\n      return markerArrow("auto");\n    case "arrow-reverse":\n      return markerArrow("auto-start-reverse");\n    case "dot":\n      return markerDot;\n    case "circle":\n    case "circle-fill":\n      return markerCircleFill;\n    case "circle-stroke":\n      return markerCircleStroke;\n  }\n  throw new Error(`invalid marker: ${marker}`);\n}\nfunction markerArrow(orient) {\n  return (color, context) => create("svg:marker", context).attr("viewBox", "-5 -5 10 10").attr("markerWidth", 6.67).attr("markerHeight", 6.67).attr("orient", orient).attr("fill", "none").attr("stroke", color).attr("stroke-width", 1.5).attr("stroke-linecap", "round").attr("stroke-linejoin", "round").call(marker => marker.append("path").attr("d", "M-1.5,-3l3,3l-3,3")).node();\n}\nfunction markerDot(color, context) {\n  return create("svg:marker", context).attr("viewBox", "-5 -5 10 10").attr("markerWidth", 6.67).attr("markerHeight", 6.67).attr("fill", color).attr("stroke", "none").call(marker => marker.append("circle").attr("r", 2.5)).node();\n}\nfunction markerCircleFill(color, context) {\n  return create("svg:marker", context).attr("viewBox", "-5 -5 10 10").attr("markerWidth", 6.67).attr("markerHeight", 6.67).attr("fill", color).attr("stroke", "white").attr("stroke-width", 1.5).call(marker => marker.append("circle").attr("r", 3)).node();\n}\nfunction markerCircleStroke(color, context) {\n  return create("svg:marker", context).attr("viewBox", "-5 -5 10 10").attr("markerWidth", 6.67).attr("markerHeight", 6.67).attr("fill", "white").attr("stroke", color).attr("stroke-width", 1.5).call(marker => marker.append("circle").attr("r", 3)).node();\n}\nlet nextMarkerId = 0;\nfunction applyMarkers(path, mark, {\n  stroke: S\n}, context) {\n  return applyMarkersColor(path, mark, S && (i => S[i]), context);\n}\nfunction applyGroupedMarkers(path, mark, {\n  stroke: S\n}, context) {\n  return applyMarkersColor(path, mark, S && (([i]) => S[i]), context);\n}\nfunction applyMarkersColor(path, {\n  markerStart,\n  markerMid,\n  markerEnd,\n  stroke\n}, strokeof = () => stroke, context) {\n  const iriByMarkerColor = new Map();\n  function applyMarker(marker) {\n    return function (i) {\n      const color = strokeof(i);\n      let iriByColor = iriByMarkerColor.get(marker);\n      if (!iriByColor) iriByMarkerColor.set(marker, iriByColor = new Map());\n      let iri = iriByColor.get(color);\n      if (!iri) {\n        const node = this.parentNode.insertBefore(marker(color, context), this);\n        const id = `plot-marker-${++nextMarkerId}`;\n        node.setAttribute("id", id);\n        iriByColor.set(color, iri = `url(#${id})`);\n      }\n      return iri;\n    };\n  }\n  if (markerStart) path.attr("marker-start", applyMarker(markerStart));\n  if (markerMid) path.attr("marker-mid", applyMarker(markerMid));\n  if (markerEnd) path.attr("marker-end", applyMarker(markerEnd));\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/transforms/inset.js\n\nfunction maybeInsetX({\n  inset,\n  insetLeft,\n  insetRight,\n  ...options\n} = {}) {\n  [insetLeft, insetRight] = maybeInset(inset, insetLeft, insetRight);\n  return {\n    inset,\n    insetLeft,\n    insetRight,\n    ...options\n  };\n}\nfunction maybeInsetY({\n  inset,\n  insetTop,\n  insetBottom,\n  ...options\n} = {}) {\n  [insetTop, insetBottom] = maybeInset(inset, insetTop, insetBottom);\n  return {\n    inset,\n    insetTop,\n    insetBottom,\n    ...options\n  };\n}\nfunction maybeInset(inset, inset1, inset2) {\n  return inset === undefined && inset1 === undefined && inset2 === undefined ? offset ? [1, 0] : [0.5, 0.5] : [inset1, inset2];\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/transforms/interval.js\n\n\n\n// The interval may be specified either as x: {value, interval} or as {x,\n// interval}. The former can be used to specify separate intervals for x and y,\n// for example with Plot.rect.\nfunction maybeIntervalValue(value, {\n  interval\n}) {\n  value = {\n    ...maybeValue(value)\n  };\n  value.interval = maybeInterval(value.interval === undefined ? interval : value.interval);\n  return value;\n}\nfunction maybeIntervalK(k, maybeInsetK, options, trivial) {\n  const {\n    [k]: v,\n    [`${k}1`]: v1,\n    [`${k}2`]: v2\n  } = options;\n  const {\n    value,\n    interval\n  } = maybeIntervalValue(v, options);\n  if (value == null || interval == null && !trivial) return options;\n  const label = labelof(v);\n  if (interval == null) {\n    let V;\n    const kv = {\n      transform: data => V || (V = valueof(data, value)),\n      label\n    };\n    return {\n      ...options,\n      [k]: undefined,\n      [`${k}1`]: v1 === undefined ? kv : v1,\n      [`${k}2`]: v2 === undefined ? kv : v2\n    };\n  }\n  let D1, V1;\n  function transform(data) {\n    if (V1 !== undefined && data === D1) return V1; // memoize\n    return V1 = map(valueof(D1 = data, value), v => interval.floor(v));\n  }\n  return maybeInsetK({\n    ...options,\n    [k]: undefined,\n    [`${k}1`]: v1 === undefined ? {\n      transform,\n      label\n    } : v1,\n    [`${k}2`]: v2 === undefined ? {\n      transform: data => transform(data).map(v => interval.offset(v)),\n      label\n    } : v2\n  });\n}\nfunction maybeIntervalMidK(k, maybeInsetK, options) {\n  const {\n    [k]: v\n  } = options;\n  const {\n    value,\n    interval\n  } = maybeIntervalValue(v, options);\n  if (value == null || interval == null) return options;\n  return maybeInsetK({\n    ...options,\n    [k]: {\n      label: labelof(v),\n      transform: data => {\n        const V1 = map(valueof(data, value), v => interval.floor(v));\n        const V2 = V1.map(v => interval.offset(v));\n        return V1.map(isTemporal(V1) ? (v1, v2) => v1 == null || isNaN(v1 = +v1) || (v2 = V2[v2], v2 == null) || isNaN(v2 = +v2) ? undefined : new Date((v1 + v2) / 2) : (v1, v2) => v1 == null || (v2 = V2[v2], v2 == null) ? NaN : (+v1 + +v2) / 2);\n      }\n    }\n  });\n}\nfunction maybeTrivialIntervalX(options = {}) {\n  return maybeIntervalK("x", maybeInsetX, options, true);\n}\nfunction maybeTrivialIntervalY(options = {}) {\n  return maybeIntervalK("y", maybeInsetY, options, true);\n}\nfunction maybeIntervalX(options = {}) {\n  return maybeIntervalK("x", maybeInsetX, options);\n}\nfunction maybeIntervalY(options = {}) {\n  return maybeIntervalK("y", maybeInsetY, options);\n}\nfunction maybeIntervalMidX(options = {}) {\n  return maybeIntervalMidK("x", maybeInsetX, options);\n}\nfunction maybeIntervalMidY(options = {}) {\n  return maybeIntervalMidK("y", maybeInsetY, options);\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/marks/rule.js\n\n\n\n\n\n\n\nconst defaults = {\n  ariaLabel: "rule",\n  fill: null,\n  stroke: "currentColor"\n};\nclass RuleX extends Mark {\n  constructor(data, options = {}) {\n    const {\n      x,\n      y1,\n      y2,\n      inset = 0,\n      insetTop = inset,\n      insetBottom = inset\n    } = options;\n    super(data, {\n      x: {\n        value: x,\n        scale: "x",\n        optional: true\n      },\n      y1: {\n        value: y1,\n        scale: "y",\n        optional: true\n      },\n      y2: {\n        value: y2,\n        scale: "y",\n        optional: true\n      }\n    }, withTip(options, "x"), defaults);\n    this.insetTop = number(insetTop);\n    this.insetBottom = number(insetBottom);\n    markers(this, options);\n  }\n  render(index, scales, channels, dimensions, context) {\n    const {\n      x,\n      y\n    } = scales;\n    const {\n      x: X,\n      y1: Y1,\n      y2: Y2\n    } = channels;\n    const {\n      width,\n      height,\n      marginTop,\n      marginRight,\n      marginLeft,\n      marginBottom\n    } = dimensions;\n    const {\n      insetTop,\n      insetBottom\n    } = this;\n    return create("svg:g", context).call(applyIndirectStyles, this, dimensions, context).call(applyTransform, this, {\n      x: X && x\n    }, offset, 0).call(g => g.selectAll().data(index).enter().append("line").call(applyDirectStyles, this).attr("x1", X ? i => X[i] : (marginLeft + width - marginRight) / 2).attr("x2", X ? i => X[i] : (marginLeft + width - marginRight) / 2).attr("y1", Y1 && !isCollapsed(y) ? i => Y1[i] + insetTop : marginTop + insetTop).attr("y2", Y2 && !isCollapsed(y) ? y.bandwidth ? i => Y2[i] + y.bandwidth() - insetBottom : i => Y2[i] - insetBottom : height - marginBottom - insetBottom).call(applyChannelStyles, this, channels).call(applyMarkers, this, channels, context)).node();\n  }\n}\nclass RuleY extends Mark {\n  constructor(data, options = {}) {\n    const {\n      x1,\n      x2,\n      y,\n      inset = 0,\n      insetRight = inset,\n      insetLeft = inset\n    } = options;\n    super(data, {\n      y: {\n        value: y,\n        scale: "y",\n        optional: true\n      },\n      x1: {\n        value: x1,\n        scale: "x",\n        optional: true\n      },\n      x2: {\n        value: x2,\n        scale: "x",\n        optional: true\n      }\n    }, withTip(options, "y"), defaults);\n    this.insetRight = number(insetRight);\n    this.insetLeft = number(insetLeft);\n    markers(this, options);\n  }\n  render(index, scales, channels, dimensions, context) {\n    const {\n      x,\n      y\n    } = scales;\n    const {\n      y: Y,\n      x1: X1,\n      x2: X2\n    } = channels;\n    const {\n      width,\n      height,\n      marginTop,\n      marginRight,\n      marginLeft,\n      marginBottom\n    } = dimensions;\n    const {\n      insetLeft,\n      insetRight\n    } = this;\n    return create("svg:g", context).call(applyIndirectStyles, this, dimensions, context).call(applyTransform, this, {\n      y: Y && y\n    }, 0, offset).call(g => g.selectAll().data(index).enter().append("line").call(applyDirectStyles, this).attr("x1", X1 && !isCollapsed(x) ? i => X1[i] + insetLeft : marginLeft + insetLeft).attr("x2", X2 && !isCollapsed(x) ? x.bandwidth ? i => X2[i] + x.bandwidth() - insetRight : i => X2[i] - insetRight : width - marginRight - insetRight).attr("y1", Y ? i => Y[i] : (marginTop + height - marginBottom) / 2).attr("y2", Y ? i => Y[i] : (marginTop + height - marginBottom) / 2).call(applyChannelStyles, this, channels).call(applyMarkers, this, channels, context)).node();\n  }\n}\nfunction ruleX(data, options) {\n  let {\n    x = identity,\n    y,\n    y1,\n    y2,\n    ...rest\n  } = maybeIntervalY(options);\n  [y1, y2] = maybeOptionalZero(y, y1, y2);\n  return new RuleX(data, {\n    ...rest,\n    x,\n    y1,\n    y2\n  });\n}\nfunction ruleY(data, options) {\n  let {\n    y = identity,\n    x,\n    x1,\n    x2,\n    ...rest\n  } = maybeIntervalX(options);\n  [x1, x2] = maybeOptionalZero(x, x1, x2);\n  return new RuleY(data, {\n    ...rest,\n    y,\n    x1,\n    x2\n  });\n}\n\n// For marks specified either as [0, x] or [x1, x2], or nothing.\nfunction maybeOptionalZero(x, x1, x2) {\n  if (x == null) {\n    if (x1 === undefined) {\n      if (x2 !== undefined) return [0, x2];\n    } else {\n      if (x2 === undefined) return [0, x1];\n    }\n  } else if (x1 === undefined) {\n    return x2 === undefined ? [0, x] : [x, x2];\n  } else if (x2 === undefined) {\n    return [x, x1];\n  }\n  return [x1, x2];\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/template.js\nfunction template(strings, ...parts) {\n  let n = parts.length;\n\n  // If any of the interpolated parameters are strings rather than functions,\n  // bake them into the template to optimize performance during render.\n  for (let j = 0, copy = true; j < n; ++j) {\n    if (typeof parts[j] !== "function") {\n      if (copy) {\n        strings = strings.slice(); // copy before mutate\n        copy = false;\n      }\n      strings.splice(j, 2, strings[j] + parts[j] + strings[j + 1]);\n      parts.splice(j, 1);\n      --j, --n;\n    }\n  }\n  return i => {\n    let s = strings[0];\n    for (let j = 0; j < n; ++j) {\n      s += parts[j](i) + strings[j + 1];\n    }\n    return s;\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/marks/text.js\n\n\n\n\n\n\n\n\n\nconst text_defaults = {\n  ariaLabel: "text",\n  strokeLinejoin: "round",\n  strokeWidth: 3,\n  paintOrder: "stroke"\n};\nconst softHyphen = "\\u00ad";\nclass Text extends Mark {\n  constructor(data, options = {}) {\n    const {\n      x,\n      y,\n      text = isIterable(data) && isTextual(data) ? identity : indexOf,\n      frameAnchor,\n      textAnchor = /right$/i.test(frameAnchor) ? "end" : /left$/i.test(frameAnchor) ? "start" : "middle",\n      lineAnchor = /^top/i.test(frameAnchor) ? "top" : /^bottom/i.test(frameAnchor) ? "bottom" : "middle",\n      lineHeight = 1,\n      lineWidth = Infinity,\n      textOverflow,\n      monospace,\n      fontFamily = monospace ? "ui-monospace, monospace" : undefined,\n      fontSize,\n      fontStyle,\n      fontVariant,\n      fontWeight,\n      rotate\n    } = options;\n    const [vrotate, crotate] = maybeNumberChannel(rotate, 0);\n    const [vfontSize, cfontSize] = maybeFontSizeChannel(fontSize);\n    super(data, {\n      x: {\n        value: x,\n        scale: "x",\n        optional: true\n      },\n      y: {\n        value: y,\n        scale: "y",\n        optional: true\n      },\n      fontSize: {\n        value: vfontSize,\n        optional: true\n      },\n      rotate: {\n        value: numberChannel(vrotate),\n        optional: true\n      },\n      text: {\n        value: text,\n        filter: nonempty,\n        optional: true\n      }\n    }, options, text_defaults);\n    this.rotate = crotate;\n    this.textAnchor = impliedString(textAnchor, "middle");\n    this.lineAnchor = keyword(lineAnchor, "lineAnchor", ["top", "middle", "bottom"]);\n    this.lineHeight = +lineHeight;\n    this.lineWidth = +lineWidth;\n    this.textOverflow = maybeTextOverflow(textOverflow);\n    this.monospace = !!monospace;\n    this.fontFamily = string(fontFamily);\n    this.fontSize = cfontSize;\n    this.fontStyle = string(fontStyle);\n    this.fontVariant = string(fontVariant);\n    this.fontWeight = string(fontWeight);\n    this.frameAnchor = maybeFrameAnchor(frameAnchor);\n    if (!(this.lineWidth >= 0)) throw new Error(`invalid lineWidth: ${lineWidth}`);\n    this.splitLines = splitter(this);\n    this.clipLine = clipper(this);\n  }\n  render(index, scales, channels, dimensions, context) {\n    const {\n      x,\n      y\n    } = scales;\n    const {\n      x: X,\n      y: Y,\n      rotate: R,\n      text: T,\n      title: TL,\n      fontSize: FS\n    } = channels;\n    const {\n      rotate\n    } = this;\n    const [cx, cy] = applyFrameAnchor(this, dimensions);\n    return create("svg:g", context).call(applyIndirectStyles, this, dimensions, context).call(applyIndirectTextStyles, this, T, dimensions).call(applyTransform, this, {\n      x: X && x,\n      y: Y && y\n    }).call(g => g.selectAll().data(index).enter().append("text").call(applyDirectStyles, this).call(applyMultilineText, this, T, TL).attr("transform", template`translate(${X ? i => X[i] : cx},${Y ? i => Y[i] : cy})${R ? i => ` rotate(${R[i]})` : rotate ? ` rotate(${rotate})` : ``}`).call(applyAttr, "font-size", FS && (i => FS[i])).call(applyChannelStyles, this, channels)).node();\n  }\n}\nfunction maybeTextOverflow(textOverflow) {\n  return textOverflow == null ? null : keyword(textOverflow, "textOverflow", ["clip",\n  // shorthand for clip-end\n  "ellipsis",\n  // … ellipsis-end\n  "clip-start", "clip-end", "ellipsis-start", "ellipsis-middle", "ellipsis-end"]).replace(/^(clip|ellipsis)$/, "$1-end");\n}\nfunction applyMultilineText(selection, mark, T, TL) {\n  if (!T) return;\n  const {\n    lineAnchor,\n    lineHeight,\n    textOverflow,\n    splitLines,\n    clipLine\n  } = mark;\n  selection.each(function (i) {\n    const lines = splitLines(formatDefault(T[i]) ?? "").map(clipLine);\n    const n = lines.length;\n    const y = lineAnchor === "top" ? 0.71 : lineAnchor === "bottom" ? 1 - n : (164 - n * 100) / 200;\n    if (n > 1) {\n      let m = 0;\n      for (let i = 0; i < n; ++i) {\n        ++m;\n        if (!lines[i]) continue;\n        const tspan = this.ownerDocument.createElementNS(src.namespaces.svg, "tspan");\n        tspan.setAttribute("x", 0);\n        if (i === m - 1) tspan.setAttribute("y", `${(y + i) * lineHeight}em`);else tspan.setAttribute("dy", `${m * lineHeight}em`);\n        tspan.textContent = lines[i];\n        this.appendChild(tspan);\n        m = 0;\n      }\n    } else {\n      if (y) this.setAttribute("y", `${y * lineHeight}em`);\n      this.textContent = lines[0];\n    }\n    if (textOverflow && !TL && lines[0] !== T[i]) {\n      const title = this.ownerDocument.createElementNS(src.namespaces.svg, "title");\n      title.textContent = T[i];\n      this.appendChild(title);\n    }\n  });\n}\nfunction text_text(data, {\n  x,\n  y,\n  ...options\n} = {}) {\n  if (options.frameAnchor === undefined) [x, y] = maybeTuple(x, y);\n  return new Text(data, {\n    ...options,\n    x,\n    y\n  });\n}\nfunction textX(data, {\n  x = identity,\n  ...options\n} = {}) {\n  return new Text(data, maybeIntervalMidY({\n    ...options,\n    x\n  }));\n}\nfunction textY(data, {\n  y = identity,\n  ...options\n} = {}) {\n  return new Text(data, maybeIntervalMidX({\n    ...options,\n    y\n  }));\n}\nfunction applyIndirectTextStyles(selection, mark, T) {\n  applyAttr(selection, "text-anchor", mark.textAnchor);\n  applyAttr(selection, "font-family", mark.fontFamily);\n  applyAttr(selection, "font-size", mark.fontSize);\n  applyAttr(selection, "font-style", mark.fontStyle);\n  applyAttr(selection, "font-variant", mark.fontVariant === undefined ? text_inferFontVariant(T) : mark.fontVariant);\n  applyAttr(selection, "font-weight", mark.fontWeight);\n}\nfunction text_inferFontVariant(T) {\n  return T && (isNumeric(T) || isTemporal(T)) ? "tabular-nums" : undefined;\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/CSS/font-size\nconst fontSizes = new Set([\n// global keywords\n"inherit", "initial", "revert", "unset",\n// absolute keywords\n"xx-small", "x-small", "small", "medium", "large", "x-large", "xx-large", "xxx-large",\n// relative keywords\n"larger", "smaller"]);\n\n// The font size may be expressed as a constant in the following forms:\n// - number in pixels\n// - string keyword: see above\n// - string <length>: e.g., "12px"\n// - string <percentage>: e.g., "80%"\n// Anything else is assumed to be a channel definition.\nfunction maybeFontSizeChannel(fontSize) {\n  if (fontSize == null || typeof fontSize === "number") return [undefined, fontSize];\n  if (typeof fontSize !== "string") return [fontSize, undefined];\n  fontSize = fontSize.trim().toLowerCase();\n  return fontSizes.has(fontSize) || /^[+-]?\\d*\\.?\\d+(e[+-]?\\d+)?(\\w*|%)$/.test(fontSize) ? [undefined, fontSize] : [fontSize, undefined];\n}\n\n// This is a greedy algorithm for line wrapping. It would be better to use the\n// Knuth–Plass line breaking algorithm (but that would be much more complex).\n// https://en.wikipedia.org/wiki/Line_wrap_and_word_wrap\nfunction lineWrap(input, maxWidth, widthof) {\n  const lines = [];\n  let lineStart,\n    lineEnd = 0;\n  for (const [wordStart, wordEnd, required] of lineBreaks(input)) {\n    // Record the start of a line. This isn’t the same as the previous line’s\n    // end because we often skip spaces between lines.\n    if (lineStart === undefined) lineStart = wordStart;\n\n    // If the current line is not empty, and if adding the current word would\n    // make the line longer than the allowed width, then break the line at the\n    // previous word end.\n    if (lineEnd > lineStart && widthof(input, lineStart, wordEnd) > maxWidth) {\n      lines.push(input.slice(lineStart, lineEnd) + (input[lineEnd - 1] === softHyphen ? "-" : ""));\n      lineStart = wordStart;\n    }\n\n    // If this is a required break (a newline), emit the line and reset.\n    if (required) {\n      lines.push(input.slice(lineStart, wordEnd));\n      lineStart = undefined;\n      continue;\n    }\n\n    // Extend the current line to include the new word.\n    lineEnd = wordEnd;\n  }\n  return lines;\n}\n\n// This is a rudimentary (and U.S.-centric) algorithm for finding opportunities\n// to break lines between words. A better and far more comprehensive approach\n// would be to use the official Unicode Line Breaking Algorithm.\n// https://unicode.org/reports/tr14/\nfunction* lineBreaks(input) {\n  let i = 0,\n    j = 0;\n  const n = input.length;\n  while (j < n) {\n    let k = 1;\n    switch (input[j]) {\n      case softHyphen:\n      case "-":\n        // hyphen\n        ++j;\n        yield [i, j, false];\n        i = j;\n        break;\n      case " ":\n        yield [i, j, false];\n        while (input[++j] === " "); // skip multiple spaces\n        i = j;\n        break;\n      case "\\r":\n        if (input[j + 1] === "\\n") ++k;\n      // falls through\n      case "\\n":\n        yield [i, j, true];\n        j += k;\n        i = j;\n        break;\n      default:\n        ++j;\n        break;\n    }\n  }\n  yield [i, j, true];\n}\n\n// Computed as round(measureText(text).width * 10) at 10px system-ui. For\n// characters that are not represented in this map, we’d ideally want to use a\n// weighted average of what we expect to see. But since we don’t really know\n// what that is, using “e” seems reasonable.\nconst defaultWidthMap = {\n  a: 56,\n  b: 63,\n  c: 57,\n  d: 63,\n  e: 58,\n  f: 37,\n  g: 62,\n  h: 60,\n  i: 26,\n  j: 26,\n  k: 55,\n  l: 26,\n  m: 88,\n  n: 60,\n  o: 60,\n  p: 62,\n  q: 62,\n  r: 39,\n  s: 54,\n  t: 38,\n  u: 60,\n  v: 55,\n  w: 79,\n  x: 54,\n  y: 55,\n  z: 55,\n  A: 69,\n  B: 67,\n  C: 73,\n  D: 74,\n  E: 61,\n  F: 58,\n  G: 76,\n  H: 75,\n  I: 28,\n  J: 55,\n  K: 67,\n  L: 58,\n  M: 89,\n  N: 75,\n  O: 78,\n  P: 65,\n  Q: 78,\n  R: 67,\n  S: 65,\n  T: 65,\n  U: 75,\n  V: 69,\n  W: 98,\n  X: 69,\n  Y: 67,\n  Z: 67,\n  0: 64,\n  1: 48,\n  2: 62,\n  3: 64,\n  4: 66,\n  5: 63,\n  6: 65,\n  7: 58,\n  8: 65,\n  9: 65,\n  " ": 29,\n  "!": 32,\n  \'"\': 49,\n  "\'": 31,\n  "(": 39,\n  ")": 39,\n  ",": 31,\n  "-": 48,\n  ".": 31,\n  "/": 32,\n  ":": 31,\n  ";": 31,\n  "?": 52,\n  "‘": 31,\n  "’": 31,\n  "“": 47,\n  "”": 47,\n  "…": 82\n};\n\n// This is a rudimentary (and U.S.-centric) algorithm for measuring the width of\n// a string based on a technique of Gregor Aisch; it assumes that individual\n// characters are laid out independently and does not implement the Unicode\n// grapheme cluster breaking algorithm. It does understand code points, though,\n// and so treats things like emoji as having the width of a lowercase e (and\n// should be equivalent to using for-of to iterate over code points, while also\n// being fast). TODO Optimize this by noting that we often re-measure characters\n// that were previously measured?\n// http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundaries\n// https://exploringjs.com/impatient-js/ch_strings.html#atoms-of-text\nfunction defaultWidth(text, start = 0, end = text.length) {\n  let sum = 0;\n  for (let i = start; i < end; i = readCharacter(text, i)) {\n    sum += defaultWidthMap[text[i]] ?? (isPictographic(text, i) ? 120 : defaultWidthMap.e);\n  }\n  return sum;\n}\n\n// Even for monospaced text, we can’t assume that the number of UTF-16 code\n// points (i.e., the length of a string) corresponds to the number of visible\n// characters; we still have to count graphemes. And note that pictographic\n// characters such as emojis are typically not monospaced!\nfunction monospaceWidth(text, start = 0, end = text.length) {\n  let sum = 0;\n  for (let i = start; i < end; i = readCharacter(text, i)) {\n    sum += isPictographic(text, i) ? 200 : 100;\n  }\n  return sum;\n}\nfunction splitter({\n  monospace,\n  lineWidth,\n  textOverflow\n}) {\n  if (textOverflow != null || lineWidth == Infinity) return text => text.split(/\\r\\n?|\\n/g);\n  const widthof = monospace ? monospaceWidth : defaultWidth;\n  const maxWidth = lineWidth * 100;\n  return text => lineWrap(text, maxWidth, widthof);\n}\nfunction clipper({\n  monospace,\n  lineWidth,\n  textOverflow\n}) {\n  if (textOverflow == null || lineWidth == Infinity) return text => text;\n  const widthof = monospace ? monospaceWidth : defaultWidth;\n  const maxWidth = lineWidth * 100;\n  switch (textOverflow) {\n    case "clip-start":\n      return text => clipStart(text, maxWidth, widthof, "");\n    case "clip-end":\n      return text => clipEnd(text, maxWidth, widthof, "");\n    case "ellipsis-start":\n      return text => clipStart(text, maxWidth, widthof, ellipsis);\n    case "ellipsis-middle":\n      return text => clipMiddle(text, maxWidth, widthof, ellipsis);\n    case "ellipsis-end":\n      return text => clipEnd(text, maxWidth, widthof, ellipsis);\n  }\n}\nconst ellipsis = "…";\n\n// Cuts the given text to the given width, using the specified widthof function;\n// the returned [index, error] guarantees text.slice(0, index) fits within the\n// specified width with the given error. If the text fits naturally within the\n// given width, returns [-1, 0]. If the text needs cutting, the given inset\n// specifies how much space (in the same units as width and widthof) to reserve\n// for a possible ellipsis character.\nfunction cut(text, width, widthof, inset) {\n  const I = []; // indexes of read character boundaries\n  let w = 0; // current line width\n  for (let i = 0, j = 0, n = text.length; i < n; i = j) {\n    j = readCharacter(text, i); // read the next character\n    const l = widthof(text, i, j); // current character width\n    if (w + l > width) {\n      w += inset;\n      while (w > width && i > 0) j = i, i = I.pop(), w -= widthof(text, i, j); // remove excess\n      return [i, width - w];\n    }\n    w += l;\n    I.push(i);\n  }\n  return [-1, 0];\n}\nfunction clipEnd(text, width, widthof, ellipsis) {\n  text = text.trim(); // ignore leading and trailing whitespace\n  const e = widthof(ellipsis);\n  const [i] = cut(text, width, widthof, e);\n  return i < 0 ? text : text.slice(0, i).trimEnd() + ellipsis;\n}\nfunction clipMiddle(text, width, widthof, ellipsis) {\n  text = text.trim(); // ignore leading and trailing whitespace\n  const w = widthof(text);\n  if (w <= width) return text;\n  const e = widthof(ellipsis) / 2;\n  const [i, ei] = cut(text, width / 2, widthof, e);\n  const [j] = cut(text, w - width / 2 - ei + e, widthof, -e); // TODO read spaces?\n  return j < 0 ? ellipsis : text.slice(0, i).trimEnd() + ellipsis + text.slice(readCharacter(text, j)).trimStart();\n}\nfunction clipStart(text, width, widthof, ellipsis) {\n  text = text.trim(); // ignore leading and trailing whitespace\n  const w = widthof(text);\n  if (w <= width) return text;\n  const e = widthof(ellipsis);\n  const [j] = cut(text, w - width + e, widthof, -e); // TODO read spaces?\n  return j < 0 ? ellipsis : ellipsis + text.slice(readCharacter(text, j)).trimStart();\n}\nconst reCombiner = /[\\p{Combining_Mark}\\p{Emoji_Modifier}]+/uy;\nconst rePictographic = /\\p{Extended_Pictographic}/uy;\n\n// Reads a single “character” element from the given text starting at the given\n// index, returning the index after the read character. Ideally, this implements\n// the Unicode text segmentation algorithm and understands grapheme cluster\n// boundaries, etc., but in practice this is only smart enough to detect UTF-16\n// surrogate pairs, combining marks, and zero-width joiner (zwj) sequences such\n// as emoji skin color modifiers. https://unicode.org/reports/tr29/\nfunction readCharacter(text, i) {\n  i += isSurrogatePair(text, i) ? 2 : 1;\n  if (isCombiner(text, i)) i = reCombiner.lastIndex;\n  if (isZeroWidthJoiner(text, i)) return readCharacter(text, i + 1);\n  return i;\n}\n\n// We avoid more expensive regex tests involving Unicode property classes by\n// first checking for the common case of 7-bit ASCII characters.\nfunction isAscii(text, i) {\n  return text.charCodeAt(i) < 0x80;\n}\nfunction isSurrogatePair(text, i) {\n  const hi = text.charCodeAt(i);\n  if (hi >= 0xd800 && hi < 0xdc00) {\n    const lo = text.charCodeAt(i + 1);\n    return lo >= 0xdc00 && lo < 0xe000;\n  }\n  return false;\n}\nfunction isZeroWidthJoiner(text, i) {\n  return text.charCodeAt(i) === 0x200d;\n}\nfunction isCombiner(text, i) {\n  return isAscii(text, i) ? false : (reCombiner.lastIndex = i, reCombiner.test(text));\n}\nfunction isPictographic(text, i) {\n  return isAscii(text, i) ? false : (rePictographic.lastIndex = i, rePictographic.test(text));\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/marks/vector.js\n\n\n\n\n\n\nconst vector_defaults = {\n  ariaLabel: "vector",\n  fill: "none",\n  stroke: "currentColor",\n  strokeWidth: 1.5,\n  strokeLinejoin: "round",\n  strokeLinecap: "round"\n};\nconst defaultRadius = 3.5;\n\n// The size of the arrowhead is proportional to its length, but we still allow\n// the relative size of the head to be controlled via the mark’s width option;\n// doubling the default radius will produce an arrowhead that is twice as big.\n// That said, we’ll probably want a arrow with a fixed head size, too.\nconst wingRatio = defaultRadius * 5;\nconst shapeArrow = {\n  draw(context, l, r) {\n    const wing = l * r / wingRatio;\n    context.moveTo(0, 0);\n    context.lineTo(0, -l);\n    context.moveTo(-wing, wing - l);\n    context.lineTo(0, -l);\n    context.lineTo(wing, wing - l);\n  }\n};\nconst shapeSpike = {\n  draw(context, l, r) {\n    context.moveTo(-r, 0);\n    context.lineTo(0, -l);\n    context.lineTo(r, 0);\n  }\n};\nconst shapes = new Map([["arrow", shapeArrow], ["spike", shapeSpike]]);\nfunction isShapeObject(value) {\n  return value && typeof value.draw === "function";\n}\nfunction maybeShape(shape) {\n  if (isShapeObject(shape)) return shape;\n  const value = shapes.get(`${shape}`.toLowerCase());\n  if (value) return value;\n  throw new Error(`invalid shape: ${shape}`);\n}\nclass Vector extends Mark {\n  constructor(data, options = {}) {\n    const {\n      x,\n      y,\n      r = defaultRadius,\n      length,\n      rotate,\n      shape = shapeArrow,\n      anchor = "middle",\n      frameAnchor\n    } = options;\n    const [vl, cl] = maybeNumberChannel(length, 12);\n    const [vr, cr] = maybeNumberChannel(rotate, 0);\n    super(data, {\n      x: {\n        value: x,\n        scale: "x",\n        optional: true\n      },\n      y: {\n        value: y,\n        scale: "y",\n        optional: true\n      },\n      length: {\n        value: vl,\n        scale: "length",\n        optional: true\n      },\n      rotate: {\n        value: vr,\n        optional: true\n      }\n    }, options, vector_defaults);\n    this.r = +r;\n    this.length = cl;\n    this.rotate = cr;\n    this.shape = maybeShape(shape);\n    this.anchor = keyword(anchor, "anchor", ["start", "middle", "end"]);\n    this.frameAnchor = maybeFrameAnchor(frameAnchor);\n  }\n  render(index, scales, channels, dimensions, context) {\n    const {\n      x,\n      y\n    } = scales;\n    const {\n      x: X,\n      y: Y,\n      length: L,\n      rotate: A\n    } = channels;\n    const {\n      length,\n      rotate,\n      anchor,\n      shape,\n      r\n    } = this;\n    const [cx, cy] = applyFrameAnchor(this, dimensions);\n    return create("svg:g", context).call(applyIndirectStyles, this, dimensions, context).call(applyTransform, this, {\n      x: X && x,\n      y: Y && y\n    }).call(g => g.selectAll().data(index).enter().append("path").call(applyDirectStyles, this).attr("transform", template`translate(${X ? i => X[i] : cx},${Y ? i => Y[i] : cy})${A ? i => ` rotate(${A[i]})` : rotate ? ` rotate(${rotate})` : ``}${anchor === "start" ? `` : anchor === "end" ? L ? i => ` translate(0,${L[i]})` : ` translate(0,${length})` : L ? i => ` translate(0,${L[i] / 2})` : ` translate(0,${length / 2})`}`).attr("d", L ? i => {\n      const p = (0,src.pathRound)();\n      shape.draw(p, L[i], r);\n      return p;\n    } : (() => {\n      const p = (0,src.pathRound)();\n      shape.draw(p, length, r);\n      return p;\n    })()).call(applyChannelStyles, this, channels)).node();\n  }\n}\nfunction vector(data, options = {}) {\n  let {\n    x,\n    y,\n    ...rest\n  } = options;\n  if (options.frameAnchor === undefined) [x, y] = maybeTuple(x, y);\n  return new Vector(data, {\n    ...rest,\n    x,\n    y\n  });\n}\nfunction vectorX(data, options = {}) {\n  const {\n    x = identity,\n    ...rest\n  } = options;\n  return new Vector(data, {\n    ...rest,\n    x\n  });\n}\nfunction vectorY(data, options = {}) {\n  const {\n    y = identity,\n    ...rest\n  } = options;\n  return new Vector(data, {\n    ...rest,\n    y\n  });\n}\nfunction spike(data, options = {}) {\n  const {\n    shape = shapeSpike,\n    stroke = vector_defaults.stroke,\n    strokeWidth = 1,\n    fill = stroke,\n    fillOpacity = 0.3,\n    anchor = "start",\n    ...rest\n  } = options;\n  return vector(data, {\n    ...rest,\n    shape,\n    stroke,\n    strokeWidth,\n    fill,\n    fillOpacity,\n    anchor\n  });\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/marks/axis.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction maybeData(data, options) {\n  if (arguments.length < 2 && !isIterable(data)) options = data, data = null;\n  if (options === undefined) options = {};\n  return [data, options];\n}\nfunction axis_maybeAnchor({\n  anchor\n} = {}, anchors) {\n  return anchor === undefined ? anchors[0] : keyword(anchor, "anchor", anchors);\n}\nfunction axis_anchorY(options) {\n  return axis_maybeAnchor(options, ["left", "right"]);\n}\nfunction anchorFy(options) {\n  return axis_maybeAnchor(options, ["right", "left"]);\n}\nfunction axis_anchorX(options) {\n  return axis_maybeAnchor(options, ["bottom", "top"]);\n}\nfunction anchorFx(options) {\n  return axis_maybeAnchor(options, ["top", "bottom"]);\n}\nfunction axisY() {\n  const [data, options] = maybeData(...arguments);\n  return axisKy("y", axis_anchorY(options), data, options);\n}\nfunction axisFy() {\n  const [data, options] = maybeData(...arguments);\n  return axisKy("fy", anchorFy(options), data, options);\n}\nfunction axisX() {\n  const [data, options] = maybeData(...arguments);\n  return axisKx("x", axis_anchorX(options), data, options);\n}\nfunction axisFx() {\n  const [data, options] = maybeData(...arguments);\n  return axisKx("fx", anchorFx(options), data, options);\n}\nfunction axisKy(k, anchor, data, {\n  color = "currentColor",\n  opacity = 1,\n  stroke = color,\n  strokeOpacity = opacity,\n  strokeWidth = 1,\n  fill = color,\n  fillOpacity = opacity,\n  textAnchor,\n  textStroke,\n  textStrokeOpacity,\n  textStrokeWidth,\n  tickSize = k === "y" ? 6 : 0,\n  tickPadding,\n  tickRotate,\n  x,\n  margin,\n  marginTop = margin === undefined ? 20 : margin,\n  marginRight = margin === undefined ? anchor === "right" ? 40 : 0 : margin,\n  marginBottom = margin === undefined ? 20 : margin,\n  marginLeft = margin === undefined ? anchor === "left" ? 40 : 0 : margin,\n  label,\n  labelAnchor,\n  labelArrow,\n  labelOffset,\n  ...options\n}) {\n  tickSize = number(tickSize);\n  tickPadding = number(tickPadding);\n  tickRotate = number(tickRotate);\n  if (labelAnchor !== undefined) labelAnchor = keyword(labelAnchor, "labelAnchor", ["center", "top", "bottom"]);\n  labelArrow = maybeLabelArrow(labelArrow);\n  return marks(tickSize && !isNoneish(stroke) ? axisTickKy(k, anchor, data, {\n    stroke,\n    strokeOpacity,\n    strokeWidth,\n    tickSize,\n    tickPadding,\n    tickRotate,\n    x,\n    ...options\n  }) : null, !isNoneish(fill) ? axisTextKy(k, anchor, data, {\n    fill,\n    fillOpacity,\n    stroke: textStroke,\n    strokeOpacity: textStrokeOpacity,\n    strokeWidth: textStrokeWidth,\n    textAnchor,\n    tickSize,\n    tickPadding,\n    tickRotate,\n    x,\n    marginTop,\n    marginRight,\n    marginBottom,\n    marginLeft,\n    ...options\n  }) : null, !isNoneish(fill) && label !== null ? text_text([], labelOptions({\n    fill,\n    fillOpacity,\n    ...options\n  }, function (data, facets, channels, scales, dimensions) {\n    const scale = scales[k];\n    const {\n      marginTop,\n      marginRight,\n      marginBottom,\n      marginLeft\n    } = k === "y" && dimensions.inset || dimensions;\n    const cla = labelAnchor ?? (scale.bandwidth ? "center" : "top");\n    const clo = labelOffset ?? (anchor === "right" ? marginRight : marginLeft) - 3;\n    if (cla === "center") {\n      this.textAnchor = undefined; // middle\n      this.lineAnchor = anchor === "right" ? "bottom" : "top";\n      this.frameAnchor = anchor;\n      this.rotate = -90;\n    } else {\n      this.textAnchor = anchor === "right" ? "end" : "start";\n      this.lineAnchor = cla;\n      this.frameAnchor = `${cla}-${anchor}`;\n      this.rotate = 0;\n    }\n    this.dy = cla === "top" ? 3 - marginTop : cla === "bottom" ? marginBottom - 3 : 0;\n    this.dx = anchor === "right" ? clo : -clo;\n    this.ariaLabel = `${k}-axis label`;\n    return {\n      facets: [[0]],\n      channels: {\n        text: {\n          value: [formatAxisLabel(k, scale, {\n            anchor,\n            label,\n            labelAnchor: cla,\n            labelArrow\n          })]\n        }\n      }\n    };\n  })) : null);\n}\nfunction axisKx(k, anchor, data, {\n  color = "currentColor",\n  opacity = 1,\n  stroke = color,\n  strokeOpacity = opacity,\n  strokeWidth = 1,\n  fill = color,\n  fillOpacity = opacity,\n  textAnchor,\n  textStroke,\n  textStrokeOpacity,\n  textStrokeWidth,\n  tickSize = k === "x" ? 6 : 0,\n  tickPadding,\n  tickRotate,\n  y,\n  margin,\n  marginTop = margin === undefined ? anchor === "top" ? 30 : 0 : margin,\n  marginRight = margin === undefined ? 20 : margin,\n  marginBottom = margin === undefined ? anchor === "bottom" ? 30 : 0 : margin,\n  marginLeft = margin === undefined ? 20 : margin,\n  label,\n  labelAnchor,\n  labelArrow,\n  labelOffset,\n  ...options\n}) {\n  tickSize = number(tickSize);\n  tickPadding = number(tickPadding);\n  tickRotate = number(tickRotate);\n  if (labelAnchor !== undefined) labelAnchor = keyword(labelAnchor, "labelAnchor", ["center", "left", "right"]);\n  labelArrow = maybeLabelArrow(labelArrow);\n  return marks(tickSize && !isNoneish(stroke) ? axisTickKx(k, anchor, data, {\n    stroke,\n    strokeOpacity,\n    strokeWidth,\n    tickSize,\n    tickPadding,\n    tickRotate,\n    y,\n    ...options\n  }) : null, !isNoneish(fill) ? axisTextKx(k, anchor, data, {\n    fill,\n    fillOpacity,\n    stroke: textStroke,\n    strokeOpacity: textStrokeOpacity,\n    strokeWidth: textStrokeWidth,\n    textAnchor,\n    tickSize,\n    tickPadding,\n    tickRotate,\n    y,\n    marginTop,\n    marginRight,\n    marginBottom,\n    marginLeft,\n    ...options\n  }) : null, !isNoneish(fill) && label !== null ? text_text([], labelOptions({\n    fill,\n    fillOpacity,\n    ...options\n  }, function (data, facets, channels, scales, dimensions) {\n    const scale = scales[k];\n    const {\n      marginTop,\n      marginRight,\n      marginBottom,\n      marginLeft\n    } = k === "x" && dimensions.inset || dimensions;\n    const cla = labelAnchor ?? (scale.bandwidth ? "center" : "right");\n    const clo = labelOffset ?? (anchor === "top" ? marginTop : marginBottom) - 3;\n    if (cla === "center") {\n      this.frameAnchor = anchor;\n      this.textAnchor = undefined; // middle\n    } else {\n      this.frameAnchor = `${anchor}-${cla}`;\n      this.textAnchor = cla === "right" ? "end" : "start";\n    }\n    this.lineAnchor = anchor;\n    this.dy = anchor === "top" ? -clo : clo;\n    this.dx = cla === "right" ? marginRight - 3 : cla === "left" ? 3 - marginLeft : 0;\n    this.ariaLabel = `${k}-axis label`;\n    return {\n      facets: [[0]],\n      channels: {\n        text: {\n          value: [formatAxisLabel(k, scale, {\n            anchor,\n            label,\n            labelAnchor: cla,\n            labelArrow\n          })]\n        }\n      }\n    };\n  })) : null);\n}\nfunction axisTickKy(k, anchor, data, {\n  strokeWidth = 1,\n  strokeLinecap = null,\n  strokeLinejoin = null,\n  facetAnchor = anchor + (k === "y" ? "-empty" : ""),\n  frameAnchor = anchor,\n  tickSize,\n  inset = 0,\n  insetLeft = inset,\n  insetRight = inset,\n  dx = 0,\n  y = k === "y" ? undefined : null,\n  ...options\n}) {\n  return axisMark(vectorY, k, `${k}-axis tick`, data, {\n    strokeWidth,\n    strokeLinecap,\n    strokeLinejoin,\n    facetAnchor,\n    frameAnchor,\n    y,\n    ...options,\n    dx: anchor === "left" ? +dx - offset + +insetLeft : +dx + offset - insetRight,\n    anchor: "start",\n    length: tickSize,\n    shape: anchor === "left" ? shapeTickLeft : shapeTickRight\n  });\n}\nfunction axisTickKx(k, anchor, data, {\n  strokeWidth = 1,\n  strokeLinecap = null,\n  strokeLinejoin = null,\n  facetAnchor = anchor + (k === "x" ? "-empty" : ""),\n  frameAnchor = anchor,\n  tickSize,\n  inset = 0,\n  insetTop = inset,\n  insetBottom = inset,\n  dy = 0,\n  x = k === "x" ? undefined : null,\n  ...options\n}) {\n  return axisMark(vectorX, k, `${k}-axis tick`, data, {\n    strokeWidth,\n    strokeLinejoin,\n    strokeLinecap,\n    facetAnchor,\n    frameAnchor,\n    x,\n    ...options,\n    dy: anchor === "bottom" ? +dy - offset - insetBottom : +dy + offset + +insetTop,\n    anchor: "start",\n    length: tickSize,\n    shape: anchor === "bottom" ? shapeTickBottom : shapeTickTop\n  });\n}\nfunction axisTextKy(k, anchor, data, {\n  facetAnchor = anchor + (k === "y" ? "-empty" : ""),\n  frameAnchor = anchor,\n  tickSize,\n  tickRotate = 0,\n  tickPadding = Math.max(3, 9 - tickSize) + (Math.abs(tickRotate) > 60 ? 4 * Math.cos(tickRotate * radians) : 0),\n  tickFormat,\n  text = typeof tickFormat === "function" ? tickFormat : undefined,\n  textAnchor = Math.abs(tickRotate) > 60 ? "middle" : anchor === "left" ? "end" : "start",\n  lineAnchor = tickRotate > 60 ? "top" : tickRotate < -60 ? "bottom" : "middle",\n  fontVariant,\n  inset = 0,\n  insetLeft = inset,\n  insetRight = inset,\n  dx = 0,\n  y = k === "y" ? undefined : null,\n  ...options\n}) {\n  return axisMark(textY, k, `${k}-axis tick label`, data, {\n    facetAnchor,\n    frameAnchor,\n    text: text === undefined ? null : text,\n    textAnchor,\n    lineAnchor,\n    fontVariant,\n    rotate: tickRotate,\n    y,\n    ...options,\n    dx: anchor === "left" ? +dx - tickSize - tickPadding + +insetLeft : +dx + +tickSize + +tickPadding - insetRight\n  }, function (scale, data, ticks, channels) {\n    if (fontVariant === undefined) this.fontVariant = axis_inferFontVariant(scale);\n    if (text === undefined) channels.text = inferTextChannel(scale, data, ticks, tickFormat, anchor);\n  });\n}\nfunction axisTextKx(k, anchor, data, {\n  facetAnchor = anchor + (k === "x" ? "-empty" : ""),\n  frameAnchor = anchor,\n  tickSize,\n  tickRotate = 0,\n  tickPadding = Math.max(3, 9 - tickSize) + (Math.abs(tickRotate) >= 10 ? 4 * Math.cos(tickRotate * radians) : 0),\n  tickFormat,\n  text = typeof tickFormat === "function" ? tickFormat : undefined,\n  textAnchor = Math.abs(tickRotate) >= 10 ? tickRotate < 0 ^ anchor === "bottom" ? "start" : "end" : "middle",\n  lineAnchor = Math.abs(tickRotate) >= 10 ? "middle" : anchor === "bottom" ? "top" : "bottom",\n  fontVariant,\n  inset = 0,\n  insetTop = inset,\n  insetBottom = inset,\n  dy = 0,\n  x = k === "x" ? undefined : null,\n  ...options\n}) {\n  return axisMark(textX, k, `${k}-axis tick label`, data, {\n    facetAnchor,\n    frameAnchor,\n    text: text === undefined ? null : text,\n    textAnchor,\n    lineAnchor,\n    fontVariant,\n    rotate: tickRotate,\n    x,\n    ...options,\n    dy: anchor === "bottom" ? +dy + +tickSize + +tickPadding - insetBottom : +dy - tickSize - tickPadding + +insetTop\n  }, function (scale, data, ticks, channels) {\n    if (fontVariant === undefined) this.fontVariant = axis_inferFontVariant(scale);\n    if (text === undefined) channels.text = inferTextChannel(scale, data, ticks, tickFormat, anchor);\n  });\n}\nfunction gridY() {\n  const [data, options] = maybeData(...arguments);\n  return gridKy("y", axis_anchorY(options), data, options);\n}\nfunction gridFy() {\n  const [data, options] = maybeData(...arguments);\n  return gridKy("fy", anchorFy(options), data, options);\n}\nfunction gridX() {\n  const [data, options] = maybeData(...arguments);\n  return gridKx("x", axis_anchorX(options), data, options);\n}\nfunction gridFx() {\n  const [data, options] = maybeData(...arguments);\n  return gridKx("fx", anchorFx(options), data, options);\n}\nfunction gridKy(k, anchor, data, {\n  y = k === "y" ? undefined : null,\n  x = null,\n  x1 = anchor === "left" ? x : null,\n  x2 = anchor === "right" ? x : null,\n  ...options\n}) {\n  return axisMark(ruleY, k, `${k}-grid`, data, {\n    y,\n    x1,\n    x2,\n    ...gridDefaults(options)\n  });\n}\nfunction gridKx(k, anchor, data, {\n  x = k === "x" ? undefined : null,\n  y = null,\n  y1 = anchor === "top" ? y : null,\n  y2 = anchor === "bottom" ? y : null,\n  ...options\n}) {\n  return axisMark(ruleX, k, `${k}-grid`, data, {\n    x,\n    y1,\n    y2,\n    ...gridDefaults(options)\n  });\n}\nfunction gridDefaults({\n  color = "currentColor",\n  opacity = 0.1,\n  stroke = color,\n  strokeOpacity = opacity,\n  strokeWidth = 1,\n  ...options\n}) {\n  return {\n    stroke,\n    strokeOpacity,\n    strokeWidth,\n    ...options\n  };\n}\nfunction labelOptions({\n  fill,\n  fillOpacity,\n  fontFamily,\n  fontSize,\n  fontStyle,\n  fontWeight,\n  monospace,\n  pointerEvents,\n  shapeRendering,\n  clip = false\n}, initializer) {\n  // Only propagate these options if constant.\n  [, fill] = maybeColorChannel(fill);\n  [, fillOpacity] = maybeNumberChannel(fillOpacity);\n  return {\n    facet: "super",\n    x: null,\n    y: null,\n    fill,\n    fillOpacity,\n    fontFamily,\n    fontSize,\n    fontStyle,\n    fontWeight,\n    monospace,\n    pointerEvents,\n    shapeRendering,\n    clip,\n    initializer\n  };\n}\nfunction axisMark(mark, k, ariaLabel, data, options, initialize) {\n  let channels;\n  function axisInitializer(data, facets, _channels, scales, dimensions, context) {\n    const initializeFacets = data == null && (k === "fx" || k === "fy");\n    const {\n      [k]: scale\n    } = scales;\n    if (!scale) throw new Error(`missing scale: ${k}`);\n    let {\n      ticks,\n      tickSpacing,\n      interval\n    } = options;\n    if (isTemporalScale(scale) && typeof ticks === "string") interval = ticks, ticks = undefined;\n    if (data == null) {\n      if (isIterable(ticks)) {\n        data = arrayify(ticks);\n      } else if (scale.ticks) {\n        if (ticks !== undefined) {\n          data = scale.ticks(ticks);\n        } else {\n          interval = maybeRangeInterval(interval === undefined ? scale.interval : interval, scale.type);\n          if (interval !== undefined) {\n            // For time scales, we could pass the interval directly to\n            // scale.ticks because it’s supported by d3.utcTicks; but\n            // quantitative scales and d3.ticks do not support numeric\n            // intervals for scale.ticks, so we compute them here.\n            const [min, max] = (0,src.extent)(scale.domain());\n            data = interval.range(min, interval.offset(interval.floor(max))); // inclusive max\n          } else {\n            const [min, max] = (0,src.extent)(scale.range());\n            ticks = (max - min) / (tickSpacing === undefined ? k === "x" ? 80 : 35 : tickSpacing);\n            data = scale.ticks(ticks);\n          }\n        }\n      } else {\n        data = scale.domain();\n      }\n      if (k === "y" || k === "x") {\n        facets = [range(data)];\n      } else {\n        channels[k] = {\n          scale: k,\n          value: identity\n        };\n      }\n    }\n    initialize?.call(this, scale, data, ticks, channels);\n    const initializedChannels = Object.fromEntries(Object.entries(channels).map(([name, channel]) => {\n      return [name, {\n        ...channel,\n        value: valueof(data, channel.value)\n      }];\n    }));\n    if (initializeFacets) facets = context.filterFacets(data, initializedChannels);\n    return {\n      data,\n      facets,\n      channels: initializedChannels\n    };\n  }\n\n  // Apply any basic initializers after the axis initializer computes the ticks.\n  const basicInitializer = initializer(options).initializer;\n  const m = mark(data, initializer({\n    ...options,\n    initializer: axisInitializer\n  }, basicInitializer));\n  if (data == null) {\n    channels = m.channels;\n    m.channels = {};\n  } else {\n    channels = {};\n  }\n  m.ariaLabel = ariaLabel;\n  if (m.clip === undefined) m.clip = false; // don’t clip axes by default\n  return m;\n}\nfunction inferTextChannel(scale, data, ticks, tickFormat, anchor) {\n  return {\n    value: inferTickFormat(scale, data, ticks, tickFormat, anchor)\n  };\n}\n\n// D3’s ordinal scales simply use toString by default, but if the ordinal scale\n// domain (or ticks) are numbers or dates (say because we’re applying a time\n// interval to the ordinal scale), we want Plot’s default formatter.\nfunction inferTickFormat(scale, data, ticks, tickFormat, anchor) {\n  return tickFormat === undefined && isTemporalScale(scale) ? formatTimeTicks(scale, data, ticks, anchor) : scale.tickFormat ? scale.tickFormat(isIterable(ticks) ? null : ticks, tickFormat) : tickFormat === undefined ? isUtcYear(scale.interval) ? (0,src.utcFormat)("%Y") : isTimeYear(scale.interval) ? (0,src.timeFormat)("%Y") : formatDefault : typeof tickFormat === "string" ? (isTemporal(scale.domain()) ? src.utcFormat : src.format)(tickFormat) : constant(tickFormat);\n}\nconst shapeTickBottom = {\n  draw(context, l) {\n    context.moveTo(0, 0);\n    context.lineTo(0, l);\n  }\n};\nconst shapeTickTop = {\n  draw(context, l) {\n    context.moveTo(0, 0);\n    context.lineTo(0, -l);\n  }\n};\nconst shapeTickLeft = {\n  draw(context, l) {\n    context.moveTo(0, 0);\n    context.lineTo(-l, 0);\n  }\n};\nconst shapeTickRight = {\n  draw(context, l) {\n    context.moveTo(0, 0);\n    context.lineTo(l, 0);\n  }\n};\n\n// TODO Unify this with the other inferFontVariant; here we only have a scale\n// function rather than a scale descriptor.\nfunction axis_inferFontVariant(scale) {\n  return scale.bandwidth && !scale.interval ? undefined : "tabular-nums";\n}\n\n// Determines whether the scale points in the “positive” (right or down) or\n// “negative” (left or up) direction; if the scale order cannot be determined,\n// returns NaN; used to assign an appropriate label arrow.\nfunction inferScaleOrder(scale) {\n  return Math.sign(orderof(scale.domain())) * Math.sign(orderof(scale.range()));\n}\n\n// Takes the scale label, and if this is not an ordinal scale and the label was\n// inferred from an associated channel, adds an orientation-appropriate arrow.\nfunction formatAxisLabel(k, scale, {\n  anchor,\n  label = scale.label,\n  labelAnchor,\n  labelArrow\n} = {}) {\n  if (label == null || label.inferred && isTemporalish(scale) && /^(date|time|year)$/i.test(label)) return;\n  label = String(label); // coerce to a string after checking if inferred\n  if (labelArrow === "auto") labelArrow = (!scale.bandwidth || scale.interval) && !/[↑↓→←]/.test(label);\n  if (!labelArrow) return label;\n  if (labelArrow === true) {\n    const order = inferScaleOrder(scale);\n    if (order) labelArrow = /x$/.test(k) || labelAnchor === "center" ? /x$/.test(k) === order < 0 ? "left" : "right" : order < 0 ? "up" : "down";\n  }\n  switch (labelArrow) {\n    case "left":\n      return `← ${label}`;\n    case "right":\n      return `${label} →`;\n    case "up":\n      return anchor === "right" ? `${label} ↑` : `↑ ${label}`;\n    case "down":\n      return anchor === "right" ? `${label} ↓` : `↓ ${label}`;\n  }\n  return label;\n}\nfunction maybeLabelArrow(labelArrow = "auto") {\n  return isNoneish(labelArrow) ? false : typeof labelArrow === "boolean" ? labelArrow : keyword(labelArrow, "labelArrow", ["auto", "up", "right", "down", "left"]);\n}\nfunction isTemporalish(scale) {\n  return isTemporalScale(scale) || scale.interval != null;\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/legends/swatches.js\n\n\n\n\n\n\n\nfunction maybeScale(scale, key) {\n  if (key == null) return key;\n  const s = scale(key);\n  if (!s) throw new Error(`scale not found: ${key}`);\n  return s;\n}\nfunction legendSwatches(color, {\n  opacity,\n  ...options\n} = {}) {\n  if (!isOrdinalScale(color) && !isThresholdScale(color)) throw new Error(`swatches legend requires ordinal or threshold color scale (not ${color.type})`);\n  return legendItems(color, options, (selection, scale, width, height) => selection.append("svg").attr("width", width).attr("height", height).attr("fill", scale.scale).attr("fill-opacity", maybeNumberChannel(opacity)[1]).append("rect").attr("width", "100%").attr("height", "100%"));\n}\nfunction legendSymbols(symbol, {\n  fill = symbol.hint?.fill !== undefined ? symbol.hint.fill : "none",\n  fillOpacity = 1,\n  stroke = symbol.hint?.stroke !== undefined ? symbol.hint.stroke : isNoneish(fill) ? "currentColor" : "none",\n  strokeOpacity = 1,\n  strokeWidth = 1.5,\n  r = 4.5,\n  ...options\n} = {}, scale) {\n  const [vf, cf] = maybeColorChannel(fill);\n  const [vs, cs] = maybeColorChannel(stroke);\n  const sf = maybeScale(scale, vf);\n  const ss = maybeScale(scale, vs);\n  const size = r * r * Math.PI;\n  fillOpacity = maybeNumberChannel(fillOpacity)[1];\n  strokeOpacity = maybeNumberChannel(strokeOpacity)[1];\n  strokeWidth = maybeNumberChannel(strokeWidth)[1];\n  return legendItems(symbol, options, (selection, scale, width, height) => selection.append("svg").attr("viewBox", "-8 -8 16 16").attr("width", width).attr("height", height).attr("fill", vf === "color" ? d => sf.scale(d) : cf).attr("fill-opacity", fillOpacity).attr("stroke", vs === "color" ? d => ss.scale(d) : cs).attr("stroke-opacity", strokeOpacity).attr("stroke-width", strokeWidth).append("path").attr("d", d => {\n    const p = (0,src.pathRound)();\n    symbol.scale(d).draw(p, size);\n    return p;\n  }));\n}\nfunction legendItems(scale, options = {}, swatch) {\n  let {\n    columns,\n    tickFormat,\n    fontVariant = inferFontVariant(scale),\n    // TODO label,\n    swatchSize = 15,\n    swatchWidth = swatchSize,\n    swatchHeight = swatchSize,\n    marginLeft = 0,\n    className,\n    style,\n    width\n  } = options;\n  const context = createContext(options);\n  className = maybeClassName(className);\n  if (typeof tickFormat !== "function") tickFormat = inferTickFormat(scale.scale, scale.domain, undefined, tickFormat);\n  const swatches = create("div", context).attr("class", `${className}-swatches ${className}-swatches-${columns != null ? "columns" : "wrap"}`);\n  let extraStyle;\n  if (columns != null) {\n    extraStyle = `.${className}-swatches-columns .${className}-swatch {\n  display: flex;\n  align-items: center;\n  break-inside: avoid;\n  padding-bottom: 1px;\n}\n.${className}-swatches-columns .${className}-swatch::before {\n  flex-shrink: 0;\n}\n.${className}-swatches-columns .${className}-swatch-label {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}`;\n    swatches.style("columns", columns).selectAll().data(scale.domain).enter().append("div").attr("class", `${className}-swatch`).call(swatch, scale, swatchWidth, swatchHeight).call(item => item.append("div").attr("class", `${className}-swatch-label`).attr("title", tickFormat).text(tickFormat));\n  } else {\n    extraStyle = `.${className}-swatches-wrap {\n  display: flex;\n  align-items: center;\n  min-height: 33px;\n  flex-wrap: wrap;\n}\n.${className}-swatches-wrap .${className}-swatch {\n  display: inline-flex;\n  align-items: center;\n  margin-right: 1em;\n}`;\n    swatches.selectAll().data(scale.domain).enter().append("span").attr("class", `${className}-swatch`).call(swatch, scale, swatchWidth, swatchHeight).append(function () {\n      return this.ownerDocument.createTextNode(tickFormat.apply(this, arguments));\n    });\n  }\n  return swatches.call(div => div.insert("style", "*").text(`.${className}-swatches {\n  font-family: system-ui, sans-serif;\n  font-size: 10px;\n  margin-bottom: 0.5em;\n}\n.${className}-swatch > svg {\n  margin-right: 0.5em;\n  overflow: visible;\n}\n${extraStyle}`)).style("margin-left", marginLeft ? `${+marginLeft}px` : null).style("width", width === undefined ? null : `${+width}px`).style("font-variant", impliedString(fontVariant, "normal")).call(applyInlineStyles, style).node();\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/legends.js\n\n\n\n\n\n\nconst legendRegistry = new Map([["symbol", legendSymbols], ["color", legendColor], ["opacity", legendOpacity]]);\nfunction legend(options = {}) {\n  for (const [key, value] of legendRegistry) {\n    const scale = options[key];\n    if (isScaleOptions(scale)) {\n      // e.g., ignore {color: "red"}\n      const context = createContext(options);\n      let hint;\n      // For symbol legends, pass a hint to the symbol scale.\n      if (key === "symbol") {\n        const {\n          fill,\n          stroke = fill === undefined && isScaleOptions(options.color) ? "color" : undefined\n        } = options;\n        hint = {\n          fill,\n          stroke\n        };\n      }\n      return value(normalizeScale(key, scale, hint), legendOptions(context, scale, options), key => isScaleOptions(options[key]) ? normalizeScale(key, options[key]) : null);\n    }\n  }\n  throw new Error("unknown legend type; no scale found");\n}\nfunction exposeLegends(scales, context, defaults = {}) {\n  return (key, options) => {\n    if (!legendRegistry.has(key)) throw new Error(`unknown legend type: ${key}`);\n    if (!(key in scales)) return;\n    return legendRegistry.get(key)(scales[key], legendOptions(context, defaults[key], options), key => scales[key]);\n  };\n}\nfunction legendOptions({\n  className,\n  ...context\n}, {\n  label,\n  ticks,\n  tickFormat\n} = {}, options) {\n  return inherit(options, {\n    className,\n    ...context\n  }, {\n    label,\n    ticks,\n    tickFormat\n  });\n}\nfunction legendColor(color, {\n  legend = true,\n  ...options\n}) {\n  if (legend === true) legend = color.type === "ordinal" ? "swatches" : "ramp";\n  if (color.domain === undefined) return;\n  switch (`${legend}`.toLowerCase()) {\n    case "swatches":\n      return legendSwatches(color, options);\n    case "ramp":\n      return legendRamp(color, options);\n    default:\n      throw new Error(`unknown legend type: ${legend}`);\n  }\n}\nfunction legendOpacity({\n  type,\n  interpolate,\n  ...scale\n}, {\n  legend = true,\n  color = (0,src.rgb)(0, 0, 0),\n  ...options\n}) {\n  if (!interpolate) throw new Error(`${type} opacity scales are not supported`);\n  if (legend === true) legend = "ramp";\n  if (`${legend}`.toLowerCase() !== "ramp") throw new Error(`${legend} opacity legends are not supported`);\n  return legendColor({\n    type,\n    ...scale,\n    interpolate: interpolateOpacity(color)\n  }, {\n    legend,\n    ...options\n  });\n}\nfunction interpolateOpacity(color) {\n  const {\n    r,\n    g,\n    b\n  } = (0,src.rgb)(color) || (0,src.rgb)(0, 0, 0); // treat invalid color as black\n  return t => `rgba(${r},${g},${b},${t})`;\n}\nfunction createLegends(scales, context, options) {\n  const legends = [];\n  for (const [key, value] of legendRegistry) {\n    const o = options[key];\n    if (o?.legend && key in scales) {\n      const legend = value(scales[key], legendOptions(context, scales[key], o), key => scales[key]);\n      if (legend != null) legends.push(legend);\n    }\n  }\n  return legends;\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/marks/frame.js\n\n\n\n\nconst frame_defaults = {\n  ariaLabel: "frame",\n  fill: "none",\n  stroke: "currentColor",\n  clip: false\n};\nconst lineDefaults = {\n  ariaLabel: "frame",\n  fill: null,\n  stroke: "currentColor",\n  strokeLinecap: "square",\n  clip: false\n};\nclass Frame extends Mark {\n  constructor(options = {}) {\n    const {\n      anchor = null,\n      inset = 0,\n      insetTop = inset,\n      insetRight = inset,\n      insetBottom = inset,\n      insetLeft = inset,\n      rx,\n      ry\n    } = options;\n    super(singleton, undefined, options, anchor == null ? frame_defaults : lineDefaults);\n    this.anchor = maybeKeyword(anchor, "anchor", ["top", "right", "bottom", "left"]);\n    this.insetTop = number(insetTop);\n    this.insetRight = number(insetRight);\n    this.insetBottom = number(insetBottom);\n    this.insetLeft = number(insetLeft);\n    this.rx = number(rx);\n    this.ry = number(ry);\n  }\n  render(index, scales, channels, dimensions, context) {\n    const {\n      marginTop,\n      marginRight,\n      marginBottom,\n      marginLeft,\n      width,\n      height\n    } = dimensions;\n    const {\n      anchor,\n      insetTop,\n      insetRight,\n      insetBottom,\n      insetLeft,\n      rx,\n      ry\n    } = this;\n    const x1 = marginLeft + insetLeft;\n    const x2 = width - marginRight - insetRight;\n    const y1 = marginTop + insetTop;\n    const y2 = height - marginBottom - insetBottom;\n    return create(anchor ? "svg:line" : "svg:rect", context).datum(0).call(applyIndirectStyles, this, dimensions, context).call(applyDirectStyles, this).call(applyChannelStyles, this, channels).call(applyTransform, this, {}).call(anchor === "left" ? line => line.attr("x1", x1).attr("x2", x1).attr("y1", y1).attr("y2", y2) : anchor === "right" ? line => line.attr("x1", x2).attr("x2", x2).attr("y1", y1).attr("y2", y2) : anchor === "top" ? line => line.attr("x1", x1).attr("x2", x2).attr("y1", y1).attr("y2", y1) : anchor === "bottom" ? line => line.attr("x1", x1).attr("x2", x2).attr("y1", y2).attr("y2", y2) : rect => rect.attr("x", x1).attr("y", y1).attr("width", x2 - x1).attr("height", y2 - y1).attr("rx", rx).attr("ry", ry)).node();\n  }\n}\nfunction frame_frame(options) {\n  return new Frame(options);\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/marks/tip.js\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst tip_defaults = {\n  ariaLabel: "tip",\n  fill: "white",\n  stroke: "currentColor"\n};\n\n// These channels are not displayed in the tip; TODO allow customization.\nconst ignoreChannels = new Set(["geometry", "href", "src", "ariaLabel"]);\nclass Tip extends Mark {\n  constructor(data, options = {}) {\n    if (options.tip) options = {\n      ...options,\n      tip: false\n    };\n    if (options.title === undefined && isIterable(data) && isTextual(data)) options = {\n      ...options,\n      title: identity\n    };\n    const {\n      x,\n      y,\n      x1,\n      x2,\n      y1,\n      y2,\n      anchor,\n      monospace,\n      fontFamily = monospace ? "ui-monospace, monospace" : undefined,\n      fontSize,\n      fontStyle,\n      fontVariant,\n      fontWeight,\n      lineHeight = 1,\n      lineWidth = 20,\n      frameAnchor,\n      textAnchor = "start",\n      textOverflow,\n      textPadding = 8,\n      title,\n      pointerSize = 12,\n      pathFilter = "drop-shadow(0 3px 4px rgba(0,0,0,0.2))"\n    } = options;\n    super(data, {\n      x: {\n        value: x1 != null && x2 != null ? null : x,\n        scale: "x",\n        optional: true\n      },\n      // ignore midpoint\n      y: {\n        value: y1 != null && y2 != null ? null : y,\n        scale: "y",\n        optional: true\n      },\n      // ignore midpoint\n      x1: {\n        value: x1,\n        scale: "x",\n        optional: x2 == null\n      },\n      y1: {\n        value: y1,\n        scale: "y",\n        optional: y2 == null\n      },\n      x2: {\n        value: x2,\n        scale: "x",\n        optional: x1 == null\n      },\n      y2: {\n        value: y2,\n        scale: "y",\n        optional: y1 == null\n      },\n      title: {\n        value: title,\n        optional: true\n      } // filter: defined\n    }, options, tip_defaults);\n    this.anchor = maybeAnchor(anchor, "anchor");\n    this.previousAnchor = this.anchor ?? "top-left";\n    this.frameAnchor = maybeFrameAnchor(frameAnchor);\n    this.textAnchor = impliedString(textAnchor, "middle");\n    this.textPadding = +textPadding;\n    this.pointerSize = +pointerSize;\n    this.pathFilter = string(pathFilter);\n    this.lineHeight = +lineHeight;\n    this.lineWidth = +lineWidth;\n    this.textOverflow = maybeTextOverflow(textOverflow);\n    this.monospace = !!monospace;\n    this.fontFamily = string(fontFamily);\n    this.fontSize = number(fontSize);\n    this.fontStyle = string(fontStyle);\n    this.fontVariant = string(fontVariant);\n    this.fontWeight = string(fontWeight);\n    for (const key in tip_defaults) if (key in this.channels) this[key] = tip_defaults[key]; // apply default even if channel\n    this.splitLines = splitter(this);\n    this.clipLine = clipper(this);\n  }\n  render(index, scales, values, dimensions, context) {\n    const mark = this;\n    const {\n      x,\n      y,\n      fx,\n      fy\n    } = scales;\n    const {\n      ownerSVGElement: svg,\n      document\n    } = context;\n    const {\n      anchor,\n      monospace,\n      lineHeight,\n      lineWidth\n    } = this;\n    const {\n      textPadding: r,\n      pointerSize: m,\n      pathFilter\n    } = this;\n    const {\n      marginTop,\n      marginLeft\n    } = dimensions;\n    const sources = getSources(values);\n\n    // The anchor position is the middle of x1 & y1 and x2 & y2, if available,\n    // or x & y; the former is considered more specific because it’s how we\n    // disable the implicit stack and interval transforms. If any dimension is\n    // unspecified, we fallback to the frame anchor. We also need to know the\n    // facet offsets to detect when the tip would draw outside the plot, and\n    // thus we need to change the orientation.\n    const {\n      x1: X1,\n      y1: Y1,\n      x2: X2,\n      y2: Y2,\n      x: X = X1 ?? X2,\n      y: Y = Y1 ?? Y2\n    } = values;\n    const ox = fx ? fx(index.fx) - marginLeft : 0;\n    const oy = fy ? fy(index.fy) - marginTop : 0;\n\n    // The order of precedence for the anchor position is: the middle of x1 & y1\n    // and x2 & y2; or x1 & y1 (e.g., area); or lastly x & y. If a dimension is\n    // unspecified, the frame anchor is used.\n    const [cx, cy] = applyFrameAnchor(this, dimensions);\n    const px = anchorX(values, cx);\n    const py = anchorY(values, cy);\n\n    // Resolve the text metric implementation. We may need an ellipsis for text\n    // truncation, so we optimistically compute the ellipsis width.\n    const widthof = monospace ? monospaceWidth : defaultWidth;\n    const ee = widthof(ellipsis);\n\n    // We borrow the scale’s tick format for facet channels; this is safe for\n    // ordinal scales (but not continuous scales where the display value may\n    // need higher precision), and generally better than the default format.\n    const formatFx = fx && inferTickFormat(fx);\n    const formatFy = fy && inferTickFormat(fy);\n    function* format(sources, i) {\n      if ("title" in sources) {\n        const text = sources.title.value[i];\n        for (const line of mark.splitLines(formatDefault(text))) {\n          yield {\n            name: "",\n            value: mark.clipLine(line)\n          };\n        }\n        return;\n      }\n      for (const key in sources) {\n        if (key === "x1" && "x2" in sources) continue;\n        if (key === "y1" && "y2" in sources) continue;\n        const channel = sources[key];\n        const value = channel.value[i];\n        if (!defined(value) && channel.scale == null) continue;\n        if (key === "x2" && "x1" in sources) {\n          yield {\n            name: formatPairLabel(scales, sources.x1, channel, "x"),\n            value: formatPair(sources.x1, channel, i)\n          };\n        } else if (key === "y2" && "y1" in sources) {\n          yield {\n            name: formatPairLabel(scales, sources.y1, channel, "y"),\n            value: formatPair(sources.y1, channel, i)\n          };\n        } else {\n          const scale = channel.scale;\n          const line = {\n            name: formatLabel(scales, channel, key),\n            value: formatDefault(value)\n          };\n          if (scale === "color" || scale === "opacity") line[scale] = values[key][i];\n          yield line;\n        }\n      }\n      if (index.fi != null && fx) yield {\n        name: String(fx.label ?? "fx"),\n        value: formatFx(index.fx)\n      };\n      if (index.fi != null && fy) yield {\n        name: String(fy.label ?? "fy"),\n        value: formatFy(index.fy)\n      };\n    }\n\n    // We don’t call applyChannelStyles because we only use the channels to\n    // derive the content of the tip, not its aesthetics.\n    const g = create("svg:g", context).call(applyIndirectStyles, this, dimensions, context).call(applyIndirectTextStyles, this).call(applyTransform, this, {\n      x: X && x,\n      y: Y && y\n    }).call(g => g.selectAll().data(index).enter().append("g").attr("transform", i => `translate(${Math.round(px(i))},${Math.round(py(i))})`) // crisp edges\n    .call(applyDirectStyles, this).call(g => g.append("path").attr("filter", pathFilter)).call(g => g.append("text").each(function (i) {\n      const that = (0,src.select)(this);\n      // prevent style inheritance (from path)\n      this.setAttribute("fill", "currentColor");\n      this.setAttribute("fill-opacity", 1);\n      this.setAttribute("stroke", "none");\n      // iteratively render each channel value\n      const names = new Set();\n      for (const line of format(sources, i)) {\n        const name = line.name;\n        if (name && names.has(name)) continue;else names.add(name);\n        renderLine(that, line);\n      }\n    })));\n\n    // Renders a single line (a name-value pair) to the tip, truncating the text\n    // as needed, and adding a title if the text is truncated. Note that this is\n    // just the initial layout of the text; in postrender we will compute the\n    // exact text metrics and translate the text as needed once we know the\n    // tip’s orientation (anchor).\n    function renderLine(selection, {\n      name,\n      value,\n      color,\n      opacity\n    }) {\n      const swatch = color != null || opacity != null;\n      let title;\n      let w = lineWidth * 100;\n      const [j] = cut(name, w, widthof, ee);\n      if (j >= 0) {\n        // name is truncated\n        name = name.slice(0, j).trimEnd() + ellipsis;\n        title = value.trim();\n        value = "";\n      } else {\n        if (name || !value && !swatch) value = " " + value;\n        const [k] = cut(value, w - widthof(name), widthof, ee);\n        if (k >= 0) {\n          // value is truncated\n          value = value.slice(0, k).trimEnd() + ellipsis;\n          title = value.trim();\n        }\n      }\n      const line = selection.append("tspan").attr("x", 0).attr("dy", `${lineHeight}em`).text("\\u200b"); // zwsp for double-click\n      if (name) line.append("tspan").attr("font-weight", "bold").text(name);\n      if (value) line.append(() => document.createTextNode(value));\n      if (swatch) line.append("tspan").text(" ■").attr("fill", color).attr("fill-opacity", opacity).style("user-select", "none"); // prettier-ignore\n      if (title) line.append("title").text(title);\n    }\n\n    // Only after the plot is attached to the page can we compute the exact text\n    // metrics needed to determine the tip size and orientation (anchor).\n    function postrender() {\n      const {\n        width,\n        height\n      } = dimensions.facet ?? dimensions;\n      g.selectChildren().each(function (i) {\n        let {\n          x: tx,\n          width: w,\n          height: h\n        } = this.getBBox();\n        w = Math.round(w), h = Math.round(h); // crisp edges\n        let a = anchor; // use the specified anchor, if any\n        if (a === undefined) {\n          a = mark.previousAnchor; // favor the previous anchor, if it fits\n          const x = px(i) + ox;\n          const y = py(i) + oy;\n          const fitLeft = x + w + r * 2 < width;\n          const fitRight = x - w - r * 2 > 0;\n          const fitTop = y + h + m + r * 2 + 7 < height;\n          const fitBottom = y - h - m - r * 2 > 0;\n          const ax = (/-left$/.test(a) ? fitLeft || !fitRight : fitLeft && !fitRight) ? "left" : "right";\n          const ay = (/^top-/.test(a) ? fitTop || !fitBottom : fitTop && !fitBottom) ? "top" : "bottom";\n          a = mark.previousAnchor = `${ay}-${ax}`;\n        }\n        const path = this.firstChild; // note: assumes exactly two children!\n        const text = this.lastChild; // note: assumes exactly two children!\n        path.setAttribute("d", getPath(a, m, r, w, h));\n        if (tx) for (const t of text.childNodes) t.setAttribute("x", -tx);\n        text.setAttribute("y", `${+getLineOffset(a, text.childNodes.length, lineHeight).toFixed(6)}em`);\n        text.setAttribute("transform", `translate(${getTextTranslate(a, m, r, w, h)})`);\n      });\n    }\n\n    // Wait until the plot is inserted into the page so that we can use getBBox\n    // to compute the exact text dimensions. If the SVG is already connected, as\n    // when the pointer interaction triggers the re-render, use a faster\n    // microtask instead of an animation frame; if this SSR (e.g., JSDOM), skip\n    // this step. Perhaps this could be done synchronously; getting the\n    // dimensions of the SVG is easy, and although accurate text metrics are\n    // hard, we could use approximate heuristics.\n    if (svg.isConnected) Promise.resolve().then(postrender);else if (typeof requestAnimationFrame !== "undefined") requestAnimationFrame(postrender);\n    return g.node();\n  }\n}\nfunction tip(data, {\n  x,\n  y,\n  ...options\n} = {}) {\n  if (options.frameAnchor === undefined) [x, y] = maybeTuple(x, y);\n  return new Tip(data, {\n    ...options,\n    x,\n    y\n  });\n}\nfunction getLineOffset(anchor, length, lineHeight) {\n  return /^top(?:-|$)/.test(anchor) ? 0.94 - lineHeight :  true ? -0.29 - length * lineHeight : 0;\n}\nfunction getTextTranslate(anchor, m, r, width, height) {\n  switch (anchor) {\n    case "middle":\n      return [-width / 2, height / 2];\n    case "top-left":\n      return [r, m + r];\n    case "top":\n      return [-width / 2, m / 2 + r];\n    case "top-right":\n      return [-width - r, m + r];\n    case "right":\n      return [-m / 2 - width - r, height / 2];\n    case "bottom-left":\n      return [r, -m - r];\n    case "bottom":\n      return [-width / 2, -m / 2 - r];\n    case "bottom-right":\n      return [-width - r, -m - r];\n    case "left":\n      return [r + m / 2, height / 2];\n  }\n}\nfunction getPath(anchor, m, r, width, height) {\n  const w = width + r * 2;\n  const h = height + r * 2;\n  switch (anchor) {\n    case "middle":\n      return `M${-w / 2},${-h / 2}h${w}v${h}h${-w}z`;\n    case "top-left":\n      return `M0,0l${m},${m}h${w - m}v${h}h${-w}z`;\n    case "top":\n      return `M0,0l${m / 2},${m / 2}h${(w - m) / 2}v${h}h${-w}v${-h}h${(w - m) / 2}z`;\n    case "top-right":\n      return `M0,0l${-m},${m}h${m - w}v${h}h${w}z`;\n    case "right":\n      return `M0,0l${-m / 2},${-m / 2}v${m / 2 - h / 2}h${-w}v${h}h${w}v${m / 2 - h / 2}z`;\n    case "bottom-left":\n      return `M0,0l${m},${-m}h${w - m}v${-h}h${-w}z`;\n    case "bottom":\n      return `M0,0l${m / 2},${-m / 2}h${(w - m) / 2}v${-h}h${-w}v${h}h${(w - m) / 2}z`;\n    case "bottom-right":\n      return `M0,0l${-m},${-m}h${m - w}v${-h}h${w}z`;\n    case "left":\n      return `M0,0l${m / 2},${-m / 2}v${m / 2 - h / 2}h${w}v${h}h${-w}v${m / 2 - h / 2}z`;\n  }\n}\nfunction getSources({\n  channels\n}) {\n  const sources = {};\n  for (const key in channels) {\n    if (ignoreChannels.has(key)) continue;\n    const source = getSource(channels, key);\n    if (source) sources[key] = source;\n  }\n  return sources;\n}\nfunction formatPair(c1, c2, i) {\n  return c2.hint?.length // e.g., stackY’s y1 and y2\n  ? `${formatDefault(c2.value[i] - c1.value[i])}` : `${formatDefault(c1.value[i])}–${formatDefault(c2.value[i])}`;\n}\nfunction formatPairLabel(scales, c1, c2, defaultLabel) {\n  const l1 = formatLabel(scales, c1, defaultLabel);\n  const l2 = formatLabel(scales, c2, defaultLabel);\n  return l1 === l2 ? l1 : `${l1}–${l2}`;\n}\nfunction formatLabel(scales, c, defaultLabel) {\n  return String(scales[c.scale]?.label ?? c?.label ?? defaultLabel);\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/plot.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction plot(options = {}) {\n  const {\n    facet,\n    style,\n    title,\n    subtitle,\n    caption,\n    ariaLabel,\n    ariaDescription\n  } = options;\n\n  // className for inline styles\n  const className = maybeClassName(options.className);\n\n  // Flatten any nested marks.\n  const marks = options.marks === undefined ? [] : flatMarks(options.marks);\n\n  // Add implicit tips.\n  marks.push(...inferTips(marks));\n\n  // Compute the top-level facet state. This has roughly the same structure as\n  // mark-specific facet state, except there isn’t a facetsIndex, and there’s a\n  // data and dataLength so we can warn the user if a different data of the same\n  // length is used in a mark.\n  const topFacetState = maybeTopFacet(facet, options);\n\n  // Construct a map from (faceted) Mark instance to facet state, including:\n  // channels - an {fx?, fy?} object to add to the fx and fy scale\n  // groups - a possibly-nested map from facet values to indexes in the data array\n  // facetsIndex - a sparse nested array of indices corresponding to the valid facets\n  const facetStateByMark = new Map();\n  for (const mark of marks) {\n    const facetState = maybeMarkFacet(mark, topFacetState, options);\n    if (facetState) facetStateByMark.set(mark, facetState);\n  }\n\n  // Compute a Map from scale name to an array of associated channels.\n  const channelsByScale = new Map();\n  if (topFacetState) addScaleChannels(channelsByScale, [topFacetState], options);\n  addScaleChannels(channelsByScale, facetStateByMark, options);\n\n  // Add implicit axis marks. Because this happens after faceting (because it\n  // depends on whether faceting is present), we must initialize the facet state\n  // of any implicit axes, too.\n  const axes = flatMarks(inferAxes(marks, channelsByScale, options));\n  for (const mark of axes) {\n    const facetState = maybeMarkFacet(mark, topFacetState, options);\n    if (facetState) facetStateByMark.set(mark, facetState);\n  }\n  marks.unshift(...axes);\n\n  // All the possible facets are given by the domains of the fx or fy scales, or\n  // the cross-product of these domains if we facet by both x and y. We sort\n  // them in order to apply the facet filters afterwards.\n  let facets = createFacets(channelsByScale, options);\n  if (facets !== undefined) {\n    const topFacetsIndex = topFacetState ? facetFilter(facets, topFacetState) : undefined;\n\n    // Compute a facet index for each mark, parallel to the facets array. For\n    // mark-level facets, compute an index for that mark’s data and options.\n    // Otherwise, use the top-level facet index.\n    for (const mark of marks) {\n      if (mark.facet === null || mark.facet === "super") continue;\n      const facetState = facetStateByMark.get(mark);\n      if (facetState === undefined) continue;\n      facetState.facetsIndex = mark.fx != null || mark.fy != null ? facetFilter(facets, facetState) : topFacetsIndex;\n    }\n\n    // The cross product of the domains of fx and fy can include fx-fy\n    // combinations for which no mark has an instance associated with that\n    // combination, and therefore we don’t want to render this facet (not even\n    // the frame). The same can occur if you specify the domain of fx and fy\n    // explicitly, but there is no mark instance associated with some values in\n    // the domain. Expunge empty facets, and clear the corresponding elements\n    // from the nested index in each mark.\n    const nonEmpty = new Set();\n    for (const {\n      facetsIndex\n    } of facetStateByMark.values()) {\n      facetsIndex?.forEach((index, i) => {\n        if (index?.length > 0) {\n          nonEmpty.add(i);\n        }\n      });\n    }\n\n    // If all the facets are empty (as when none of the marks are actually\n    // faceted), none of them are empty.\n    facets.forEach(0 < nonEmpty.size && nonEmpty.size < facets.length ? (f, i) => f.empty = !nonEmpty.has(i) : f => f.empty = false);\n\n    // For any mark using the “exclude” facet mode, invert the index.\n    for (const mark of marks) {\n      if (mark.facet === "exclude") {\n        const facetState = facetStateByMark.get(mark);\n        if (facetState !== undefined) facetState.facetsIndex = facetExclude(facetState.facetsIndex);\n      }\n    }\n  }\n\n  // If a scale is explicitly declared in options, initialize its associated\n  // channels to the empty array; this will guarantee that a corresponding scale\n  // will be created later (even if there are no other channels). Ignore facet\n  // scale declarations, which are handled above.\n  for (const key of registry.keys()) {\n    if (isScaleOptions(options[key]) && key !== "fx" && key !== "fy") {\n      channelsByScale.set(key, []);\n    }\n  }\n\n  // A Map from Mark instance to its render state, including:\n  // index - the data index e.g. [0, 1, 2, 3, …]\n  // channels - an array of materialized channels e.g. [["x", {value}], …]\n  // faceted - a boolean indicating whether this mark is faceted\n  // values - an object of scaled values e.g. {x: [40, 32, …], …}\n  const stateByMark = new Map();\n\n  // Initialize the marks’ state.\n  for (const mark of marks) {\n    if (stateByMark.has(mark)) throw new Error("duplicate mark; each mark must be unique");\n    const {\n      facetsIndex,\n      channels: facetChannels\n    } = facetStateByMark.get(mark) ?? {};\n    const {\n      data,\n      facets,\n      channels\n    } = mark.initialize(facetsIndex, facetChannels, options);\n    applyScaleTransforms(channels, options);\n    stateByMark.set(mark, {\n      data,\n      facets,\n      channels\n    });\n  }\n\n  // Initalize the scales and dimensions.\n  const scaleDescriptors = createScales(addScaleChannels(channelsByScale, stateByMark, options), options);\n  const scales = createScaleFunctions(scaleDescriptors);\n  const dimensions = createDimensions(scaleDescriptors, marks, options);\n  autoScaleRange(scaleDescriptors, dimensions);\n  const {\n    fx,\n    fy\n  } = scales;\n  const subdimensions = fx || fy ? innerDimensions(scaleDescriptors, dimensions) : dimensions;\n  const superdimensions = fx || fy ? actualDimensions(scales, dimensions) : dimensions;\n\n  // Initialize the context.\n  const context = createContext(options);\n  const document = context.document;\n  const svg = (0,src.creator)("svg").call(document.documentElement);\n  let figure = svg; // replaced with the figure element, if any\n  context.ownerSVGElement = svg;\n  context.className = className;\n  context.projection = createProjection(options, subdimensions);\n\n  // Allows e.g. the axis mark to determine faceting lazily.\n  context.filterFacets = (data, channels) => {\n    return facetFilter(facets, {\n      channels,\n      groups: facetGroups(data, channels)\n    });\n  };\n\n  // Allows e.g. the tip mark to reference channels and data on other marks.\n  context.getMarkState = mark => {\n    const state = stateByMark.get(mark);\n    const facetState = facetStateByMark.get(mark);\n    return {\n      ...state,\n      channels: {\n        ...state.channels,\n        ...facetState?.channels\n      }\n    };\n  };\n\n  // Allows e.g. the pointer transform to support viewof.\n  context.dispatchValue = value => {\n    if (figure.value === value) return;\n    figure.value = value;\n    figure.dispatchEvent(new Event("input", {\n      bubbles: true\n    }));\n  };\n\n  // Reinitialize; for deriving channels dependent on other channels.\n  const newByScale = new Set();\n  for (const [mark, state] of stateByMark) {\n    if (mark.initializer != null) {\n      const dimensions = mark.facet === "super" ? superdimensions : subdimensions;\n      const update = mark.initializer(state.data, state.facets, state.channels, scales, dimensions, context);\n      if (update.data !== undefined) {\n        state.data = update.data;\n      }\n      if (update.facets !== undefined) {\n        state.facets = update.facets;\n      }\n      if (update.channels !== undefined) {\n        const {\n          fx,\n          fy,\n          ...channels\n        } = update.channels; // separate facet channels\n        inferChannelScales(channels);\n        Object.assign(state.channels, channels);\n        for (const channel of Object.values(channels)) {\n          const {\n            scale\n          } = channel;\n          // Initializers aren’t allowed to redefine position scales as this\n          // would introduce a circular dependency; so simply scale these\n          // channels as-is rather than creating new scales, and assume that\n          // they already have the scale’s transform applied, if any (e.g., when\n          // generating ticks for the axis mark).\n          if (scale != null && !isPosition(registry.get(scale))) {\n            applyScaleTransform(channel, options);\n            newByScale.add(scale);\n          }\n        }\n        // If the initializer returns new mark-level facet channels, we must\n        // record that the mark is now faceted. Note: we aren’t actually\n        // populating the facet state, but subsequently we won’t need it.\n        if (fx != null || fy != null) facetStateByMark.set(mark, true);\n      }\n    }\n  }\n\n  // Reconstruct scales if new scaled channels were created during\n  // reinitialization. Preserve existing scale labels, if any.\n  if (newByScale.size) {\n    const newChannelsByScale = new Map();\n    addScaleChannels(newChannelsByScale, stateByMark, options, key => newByScale.has(key));\n    addScaleChannels(channelsByScale, stateByMark, options, key => newByScale.has(key));\n    const newScaleDescriptors = inheritScaleLabels(createScales(newChannelsByScale, options), scaleDescriptors);\n    const newScales = createScaleFunctions(newScaleDescriptors);\n    Object.assign(scaleDescriptors, newScaleDescriptors);\n    Object.assign(scales, newScales);\n  }\n\n  // Sort and filter the facets to match the fx and fy domains; this is needed\n  // because the facets were constructed prior to the fx and fy scales.\n  let facetDomains, facetTranslate;\n  if (facets !== undefined) {\n    facetDomains = {\n      x: fx?.domain(),\n      y: fy?.domain()\n    };\n    facets = recreateFacets(facets, facetDomains);\n    facetTranslate = facetTranslator(fx, fy, dimensions);\n  }\n\n  // Compute value objects, applying scales and projection as needed.\n  for (const [mark, state] of stateByMark) {\n    state.values = mark.scale(state.channels, scales, context);\n  }\n  const {\n    width,\n    height\n  } = dimensions;\n  (0,src.select)(svg).attr("class", className).attr("fill", "currentColor").attr("font-family", "system-ui, sans-serif").attr("font-size", 10).attr("text-anchor", "middle").attr("width", width).attr("height", height).attr("viewBox", `0 0 ${width} ${height}`).attr("aria-label", ariaLabel).attr("aria-description", ariaDescription).call(svg =>\n  // Warning: if you edit this, change defaultClassName.\n  svg.append("style").text(`.${className} {\n  display: block;\n  background: white;\n  height: auto;\n  height: intrinsic;\n  max-width: 100%;\n}\n.${className} text,\n.${className} tspan {\n  white-space: pre;\n}`)).call(applyInlineStyles, style);\n\n  // Render marks.\n  for (const mark of marks) {\n    const {\n      channels,\n      values,\n      facets: indexes\n    } = stateByMark.get(mark);\n\n    // Render a non-faceted mark.\n    if (facets === undefined || mark.facet === "super") {\n      let index = null;\n      if (indexes) {\n        index = indexes[0];\n        index = mark.filter(index, channels, values);\n        if (index.length === 0) continue;\n      }\n      const node = mark.render(index, scales, values, superdimensions, context);\n      if (node == null) continue;\n      svg.appendChild(node);\n    }\n\n    // Render a faceted mark.\n    else {\n      let g;\n      for (const f of facets) {\n        if (!(mark.facetAnchor?.(facets, facetDomains, f) ?? !f.empty)) continue;\n        let index = null;\n        if (indexes) {\n          const faceted = facetStateByMark.has(mark);\n          index = indexes[faceted ? f.i : 0];\n          index = mark.filter(index, channels, values);\n          if (index.length === 0) continue;\n          if (!faceted && index === indexes[0]) index = subarray(index); // copy before assigning fx, fy, fi\n          index.fx = f.x, index.fy = f.y, index.fi = f.i;\n        }\n        const node = mark.render(index, scales, values, subdimensions, context);\n        if (node == null) continue;\n        // Lazily construct the shared group (to drop empty marks).\n        (g ??= (0,src.select)(svg).append("g")).append(() => node).datum(f);\n        // Promote ARIA attributes and mark transform to avoid repetition on\n        // each facet; this assumes that these attributes are consistent across\n        // facets, but that should be the case!\n        for (const name of ["aria-label", "aria-description", "aria-hidden", "transform"]) {\n          if (node.hasAttribute(name)) {\n            g.attr(name, node.getAttribute(name));\n            node.removeAttribute(name);\n          }\n        }\n      }\n      g?.selectChildren().attr("transform", facetTranslate);\n    }\n  }\n\n  // Wrap the plot in a figure, if needed.\n  const legends = createLegends(scaleDescriptors, context, options);\n  const {\n    figure: figured = title != null || subtitle != null || caption != null || legends.length > 0\n  } = options;\n  if (figured) {\n    figure = document.createElement("figure");\n    figure.className = `${className}-figure`;\n    figure.style.maxWidth = "initial"; // avoid Observable default style\n    if (title != null) figure.append(createTitleElement(document, title, "h2"));\n    if (subtitle != null) figure.append(createTitleElement(document, subtitle, "h3"));\n    figure.append(...legends, svg);\n    if (caption != null) figure.append(createFigcaption(document, caption));\n  }\n  figure.scale = exposeScales(scaleDescriptors);\n  figure.legend = exposeLegends(scaleDescriptors, context, options);\n  const w = consumeWarnings();\n  if (w > 0) {\n    (0,src.select)(svg).append("text").attr("x", width).attr("y", 20).attr("dy", "-1em").attr("text-anchor", "end").attr("font-family", "initial") // fix emoji rendering in Chrome\n    .text("\\u26a0\\ufe0f") // emoji variation selector\n    .append("title").text(`${w.toLocaleString("en-US")} warning${w === 1 ? "" : "s"}. Please check the console.`);\n  }\n  return figure;\n}\nfunction createTitleElement(document, contents, tag) {\n  if (contents.ownerDocument) return contents;\n  const e = document.createElement(tag);\n  e.append(document.createTextNode(contents));\n  return e;\n}\nfunction createFigcaption(document, caption) {\n  const e = document.createElement("figcaption");\n  e.append(caption.ownerDocument ? caption : document.createTextNode(caption));\n  return e;\n}\nfunction plotThis({\n  marks = [],\n  ...options\n} = {}) {\n  return plot({\n    ...options,\n    marks: [...marks, this]\n  });\n}\n\n// Note: This side-effect avoids a circular dependency.\nMark.prototype.plot = plotThis;\nfunction flatMarks(marks) {\n  return marks.flat(Infinity).filter(mark => mark != null).map(markify);\n}\nfunction markify(mark) {\n  return typeof mark.render === "function" ? mark : new Render(mark);\n}\nclass Render extends Mark {\n  constructor(render) {\n    if (typeof render !== "function") throw new TypeError("invalid mark; missing render function");\n    super();\n    this.render = render;\n  }\n  render() {}\n}\n\n// Note: mutates channel.value to apply the scale transform, if any.\nfunction applyScaleTransforms(channels, options) {\n  for (const name in channels) applyScaleTransform(channels[name], options);\n  return channels;\n}\n\n// Note: mutates channel.value to apply the scale transform, if any. Also sets\n// channel.transform to false to prevent duplicate transform application.\nfunction applyScaleTransform(channel, options) {\n  const {\n    scale,\n    transform: t = true\n  } = channel;\n  if (scale == null || !t) return;\n  const {\n    type,\n    percent,\n    interval,\n    transform = percent ? x => x * 100 : maybeIntervalTransform(interval, type)\n  } = options[scale] ?? {};\n  if (transform == null) return;\n  channel.value = map(channel.value, transform);\n  channel.transform = false;\n}\n\n// An initializer may generate channels without knowing how the downstream mark\n// will use them. Marks are typically responsible associated scales with\n// channels, but here we assume common behavior across marks.\nfunction inferChannelScales(channels) {\n  for (const name in channels) {\n    inferChannelScale(name, channels[name]);\n  }\n}\nfunction addScaleChannels(channelsByScale, stateByMark, options, filter = yes) {\n  for (const {\n    channels\n  } of stateByMark.values()) {\n    for (const name in channels) {\n      const channel = channels[name];\n      const {\n        scale\n      } = channel;\n      if (scale != null && filter(scale)) {\n        // Geo marks affect the default x and y domains if there is no\n        // projection. Skip this (as an optimization) when a projection is\n        // specified, or when the domains for x and y are specified.\n        if (scale === "projection") {\n          if (!hasProjection(options)) {\n            const gx = options.x?.domain === undefined;\n            const gy = options.y?.domain === undefined;\n            if (gx || gy) {\n              const [x, y] = getGeometryChannels(channel);\n              if (gx) addScaleChannel(channelsByScale, "x", x);\n              if (gy) addScaleChannel(channelsByScale, "y", y);\n            }\n          }\n        } else {\n          addScaleChannel(channelsByScale, scale, channel);\n        }\n      }\n    }\n  }\n  return channelsByScale;\n}\nfunction addScaleChannel(channelsByScale, scale, channel) {\n  const scaleChannels = channelsByScale.get(scale);\n  if (scaleChannels !== undefined) scaleChannels.push(channel);else channelsByScale.set(scale, [channel]);\n}\n\n// Returns the facet groups, and possibly fx and fy channels, associated with\n// the top-level facet option {data, x, y}.\nfunction maybeTopFacet(facet, options) {\n  if (facet == null) return;\n  const {\n    x,\n    y\n  } = facet;\n  if (x == null && y == null) return;\n  const data = arrayify(facet.data);\n  if (data == null) throw new Error("missing facet data");\n  const channels = {};\n  if (x != null) channels.fx = createChannel(data, {\n    value: x,\n    scale: "fx"\n  });\n  if (y != null) channels.fy = createChannel(data, {\n    value: y,\n    scale: "fy"\n  });\n  applyScaleTransforms(channels, options);\n  const groups = facetGroups(data, channels);\n  return {\n    channels,\n    groups,\n    data: facet.data\n  };\n}\n\n// Returns the facet groups, and possibly fx and fy channels, associated with a\n// mark, either through top-level faceting or mark-level facet options {fx, fy}.\nfunction maybeMarkFacet(mark, topFacetState, options) {\n  if (mark.facet === null || mark.facet === "super") return;\n\n  // This mark defines a mark-level facet. TODO There’s some code duplication\n  // here with maybeTopFacet that we could reduce.\n  const {\n    fx,\n    fy\n  } = mark;\n  if (fx != null || fy != null) {\n    const data = arrayify(mark.data ?? fx ?? fy);\n    if (data === undefined) throw new Error(`missing facet data in ${mark.ariaLabel}`);\n    if (data === null) return; // ignore channel definitions if no data is provided TODO this right?\n    const channels = {};\n    if (fx != null) channels.fx = createChannel(data, {\n      value: fx,\n      scale: "fx"\n    });\n    if (fy != null) channels.fy = createChannel(data, {\n      value: fy,\n      scale: "fy"\n    });\n    applyScaleTransforms(channels, options);\n    return {\n      channels,\n      groups: facetGroups(data, channels)\n    };\n  }\n\n  // This mark links to a top-level facet, if present.\n  if (topFacetState === undefined) return;\n\n  // TODO Can we link the top-level facet channels here?\n  const {\n    channels,\n    groups,\n    data\n  } = topFacetState;\n  if (mark.facet !== "auto" || mark.data === data) return {\n    channels,\n    groups\n  };\n\n  // Warn for the common pitfall of wanting to facet mapped data with the\n  // top-level facet option.\n  if (data.length > 0 && (groups.size > 1 || groups.size === 1 && channels.fx && channels.fy && [...groups][0][1].size > 1) && arrayify(mark.data)?.length === data.length) {\n    warn(`Warning: the ${mark.ariaLabel} mark appears to use faceted data, but isn’t faceted. The mark data has the same length as the facet data and the mark facet option is "auto", but the mark data and facet data are distinct. If this mark should be faceted, set the mark facet option to true; otherwise, suppress this warning by setting the mark facet option to false.`);\n  }\n}\nfunction derive(mark, options = {}) {\n  return initializer({\n    ...options,\n    x: null,\n    y: null\n  }, (data, facets, channels, scales, dimensions, context) => {\n    return context.getMarkState(mark);\n  });\n}\nfunction inferTips(marks) {\n  const tips = [];\n  for (const mark of marks) {\n    const t = mark.tip;\n    if (t) {\n      const p = t === "x" ? pointerX : t === "y" ? pointerY : pointer;\n      const options = p(derive(mark)); // TODO tip options?\n      options.title = null; // prevent implicit title for primitive data\n      tips.push(tip(mark.data, options));\n    }\n  }\n  return tips;\n}\nfunction inferAxes(marks, channelsByScale, options) {\n  let {\n    projection,\n    x = {},\n    y = {},\n    fx = {},\n    fy = {},\n    axis,\n    grid,\n    facet = {},\n    facet: {\n      axis: facetAxis = axis,\n      grid: facetGrid\n    } = facet,\n    x: {\n      axis: xAxis = axis,\n      grid: xGrid = xAxis === null ? null : grid\n    } = x,\n    y: {\n      axis: yAxis = axis,\n      grid: yGrid = yAxis === null ? null : grid\n    } = y,\n    fx: {\n      axis: fxAxis = facetAxis,\n      grid: fxGrid = fxAxis === null ? null : facetGrid\n    } = fx,\n    fy: {\n      axis: fyAxis = facetAxis,\n      grid: fyGrid = fyAxis === null ? null : facetGrid\n    } = fy\n  } = options;\n\n  // Disable axes if the corresponding scale is not present.\n  if (projection || !isScaleOptions(x) && !hasPositionChannel("x", marks)) xAxis = xGrid = null;\n  if (projection || !isScaleOptions(y) && !hasPositionChannel("y", marks)) yAxis = yGrid = null;\n  if (!channelsByScale.has("fx")) fxAxis = fxGrid = null;\n  if (!channelsByScale.has("fy")) fyAxis = fyGrid = null;\n\n  // Resolve the default implicit axes by checking for explicit ones.\n  if (xAxis === undefined) xAxis = !hasAxis(marks, "x");\n  if (yAxis === undefined) yAxis = !hasAxis(marks, "y");\n  if (fxAxis === undefined) fxAxis = !hasAxis(marks, "fx");\n  if (fyAxis === undefined) fyAxis = !hasAxis(marks, "fy");\n\n  // Resolve the default orientation of axes.\n  if (xAxis === true) xAxis = "bottom";\n  if (yAxis === true) yAxis = "left";\n  if (fxAxis === true) fxAxis = xAxis === "top" || xAxis === null ? "bottom" : "top";\n  if (fyAxis === true) fyAxis = yAxis === "right" || yAxis === null ? "left" : "right";\n  const axes = [];\n  maybeGrid(axes, fyGrid, gridFy, fy);\n  maybeAxis(axes, fyAxis, axisFy, "right", "left", facet, fy);\n  maybeGrid(axes, fxGrid, gridFx, fx);\n  maybeAxis(axes, fxAxis, axisFx, "top", "bottom", facet, fx);\n  maybeGrid(axes, yGrid, gridY, y);\n  maybeAxis(axes, yAxis, axisY, "left", "right", options, y);\n  maybeGrid(axes, xGrid, gridX, x);\n  maybeAxis(axes, xAxis, axisX, "bottom", "top", options, x);\n  return axes;\n}\nfunction maybeAxis(axes, axis, axisType, primary, secondary, defaults, options) {\n  if (!axis) return;\n  const both = isBoth(axis);\n  options = axisOptions(both ? primary : axis, defaults, options);\n  const {\n    line\n  } = options;\n  if ((axisType === axisY || axisType === axisX) && line && !isNone(line)) axes.push(frame_frame(lineOptions(options)));\n  axes.push(axisType(options));\n  if (both) axes.push(axisType({\n    ...options,\n    anchor: secondary,\n    label: null\n  }));\n}\nfunction maybeGrid(axes, grid, gridType, options) {\n  if (!grid || isNone(grid)) return;\n  axes.push(gridType(gridOptions(grid, options)));\n}\nfunction isBoth(value) {\n  return /^\\s*both\\s*$/i.test(value);\n}\nfunction axisOptions(anchor, defaults, {\n  line = defaults.line,\n  ticks,\n  tickSize,\n  tickSpacing,\n  tickPadding,\n  tickFormat,\n  tickRotate,\n  fontVariant,\n  ariaLabel,\n  ariaDescription,\n  label = defaults.label,\n  labelAnchor,\n  labelArrow = defaults.labelArrow,\n  labelOffset\n}) {\n  return {\n    anchor,\n    line,\n    ticks,\n    tickSize,\n    tickSpacing,\n    tickPadding,\n    tickFormat,\n    tickRotate,\n    fontVariant,\n    ariaLabel,\n    ariaDescription,\n    label,\n    labelAnchor,\n    labelArrow,\n    labelOffset\n  };\n}\nfunction lineOptions(options) {\n  const {\n    anchor,\n    line\n  } = options;\n  return {\n    anchor,\n    facetAnchor: anchor + "-empty",\n    stroke: line === true ? undefined : line\n  };\n}\nfunction gridOptions(grid, {\n  stroke = isColor(grid) ? grid : undefined,\n  ticks = isGridTicks(grid) ? grid : undefined,\n  tickSpacing,\n  ariaLabel,\n  ariaDescription\n}) {\n  return {\n    stroke,\n    ticks,\n    tickSpacing,\n    ariaLabel,\n    ariaDescription\n  };\n}\nfunction isGridTicks(grid) {\n  switch (typeof grid) {\n    case "number":\n      return true;\n    case "string":\n      return !isColor(grid);\n  }\n  return isIterable(grid) || typeof grid?.range === "function";\n}\n\n// Is there an explicit axis already present? TODO We probably want a more\n// explicit test than looking for the ARIA label, but it does afford some\n// flexibility in axis implementation which is nice.\nfunction hasAxis(marks, k) {\n  const prefix = `${k}-axis `;\n  return marks.some(m => m.ariaLabel?.startsWith(prefix));\n}\nfunction hasPositionChannel(k, marks) {\n  for (const mark of marks) {\n    for (const key in mark.channels) {\n      const {\n        scale\n      } = mark.channels[key];\n      if (scale === k || scale === "projection") {\n        return true;\n      }\n    }\n  }\n  return false;\n}\nfunction inheritScaleLabels(newScales, scales) {\n  for (const key in newScales) {\n    const newScale = newScales[key];\n    const scale = scales[key];\n    if (newScale.label === undefined && scale) {\n      newScale.label = scale.label;\n    }\n  }\n  return newScales;\n}\n\n// This differs from the other outerDimensions in that it accounts for rounding\n// and outer padding in the fact scales; we want the frame to align exactly with\n// the actual range, not the desired range.\nfunction actualDimensions({\n  fx,\n  fy\n}, dimensions) {\n  const {\n    marginTop,\n    marginRight,\n    marginBottom,\n    marginLeft,\n    width,\n    height\n  } = outerDimensions(dimensions);\n  const fxr = fx && outerRange(fx);\n  const fyr = fy && outerRange(fy);\n  return {\n    marginTop: fy ? fyr[0] : marginTop,\n    marginRight: fx ? width - fxr[1] : marginRight,\n    marginBottom: fy ? height - fyr[1] : marginBottom,\n    marginLeft: fx ? fxr[0] : marginLeft,\n    // Some marks, namely the x- and y-axis labels, want to know what the\n    // desired (rather than actual) margins are for positioning.\n    inset: {\n      marginTop: dimensions.marginTop,\n      marginRight: dimensions.marginRight,\n      marginBottom: dimensions.marginBottom,\n      marginLeft: dimensions.marginLeft\n    },\n    width,\n    height\n  };\n}\nfunction outerRange(scale) {\n  const domain = scale.domain();\n  let x1 = scale(domain[0]);\n  let x2 = scale(domain[domain.length - 1]);\n  if (x2 < x1) [x1, x2] = [x2, x1];\n  return [x1, x2 + scale.bandwidth()];\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/curve.js\n\nconst curves = new Map([["basis", src.curveBasis], ["basis-closed", src.curveBasisClosed], ["basis-open", src.curveBasisOpen], ["bundle", src.curveBundle], ["bump-x", src.curveBumpX], ["bump-y", src.curveBumpY], ["cardinal", src.curveCardinal], ["cardinal-closed", src.curveCardinalClosed], ["cardinal-open", src.curveCardinalOpen], ["catmull-rom", src.curveCatmullRom], ["catmull-rom-closed", src.curveCatmullRomClosed], ["catmull-rom-open", src.curveCatmullRomOpen], ["linear", src.curveLinear], ["linear-closed", src.curveLinearClosed], ["monotone-x", src.curveMonotoneX], ["monotone-y", src.curveMonotoneY], ["natural", src.curveNatural], ["step", src.curveStep], ["step-after", src.curveStepAfter], ["step-before", src.curveStepBefore]]);\nfunction maybeCurve(curve = src.curveLinear, tension) {\n  if (typeof curve === "function") return curve; // custom curve\n  const c = curves.get(`${curve}`.toLowerCase());\n  if (!c) throw new Error(`unknown curve: ${curve}`);\n  if (tension !== undefined) {\n    if ("beta" in c) {\n      return c.beta(tension);\n    } else if ("tension" in c) {\n      return c.tension(tension);\n    } else if ("alpha" in c) {\n      return c.alpha(tension);\n    }\n  }\n  return c;\n}\n\n// For the “auto” curve, return a symbol instead of a curve implementation;\n// we’ll use d3.geoPath to render if there’s a projection.\nfunction maybeCurveAuto(curve = curveAuto, tension) {\n  return typeof curve !== "function" && `${curve}`.toLowerCase() === "auto" ? curveAuto : maybeCurve(curve, tension);\n}\n\n// This is a special built-in curve that will use d3.geoPath when there is a\n// projection, and the linear curve when there is not. You can explicitly\n// opt-out of d3.geoPath and instead use d3.line with the "linear" curve.\nfunction curveAuto(context) {\n  return (0,src.curveLinear)(context);\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/transforms/bin.js\n\n\n\n\n\n\n\n\n// Group on {z, fill, stroke}, then optionally on y, then bin x.\nfunction binX(outputs = {\n  y: "count"\n}, options = {}) {\n  [outputs, options] = mergeOptions(outputs, options);\n  const {\n    x,\n    y\n  } = options;\n  return binn(maybeBinValue(x, options, identity), null, null, y, outputs, maybeInsetX(options));\n}\n\n// Group on {z, fill, stroke}, then optionally on x, then bin y.\nfunction binY(outputs = {\n  x: "count"\n}, options = {}) {\n  [outputs, options] = mergeOptions(outputs, options);\n  const {\n    x,\n    y\n  } = options;\n  return binn(null, maybeBinValue(y, options, identity), x, null, outputs, maybeInsetY(options));\n}\n\n// Group on {z, fill, stroke}, then bin on x and y.\nfunction bin(outputs = {\n  fill: "count"\n}, options = {}) {\n  [outputs, options] = mergeOptions(outputs, options);\n  const {\n    x,\n    y\n  } = maybeBinValueTuple(options);\n  return binn(x, y, null, null, outputs, maybeInsetX(maybeInsetY(options)));\n}\nfunction maybeDenseInterval(bin, k, options = {}) {\n  return options?.interval == null ? options : bin({\n    [k]: options?.reduce === undefined ? reduceFirst : options.reduce,\n    filter: null\n  }, options);\n}\nfunction maybeDenseIntervalX(options = {}) {\n  return maybeDenseInterval(binX, "y", withTip(options, "x"));\n}\nfunction maybeDenseIntervalY(options = {}) {\n  return maybeDenseInterval(binY, "x", withTip(options, "y"));\n}\nfunction binn(bx,\n// optionally bin on x (exclusive with gx)\nby,\n// optionally bin on y (exclusive with gy)\ngx,\n// optionally group on x (exclusive with bx and gy)\ngy,\n// optionally group on y (exclusive with by and gx)\n{\n  data: reduceData = reduceIdentity,\n  // TODO avoid materializing when unused?\n  filter = reduceCount,\n  // return only non-empty bins by default\n  sort,\n  reverse,\n  ...outputs // output channel definitions\n} = {}, inputs = {} // input channels and options\n) {\n  bx = maybeBin(bx);\n  by = maybeBin(by);\n\n  // Compute the outputs.\n  outputs = maybeBinOutputs(outputs, inputs);\n  reduceData = maybeBinReduce(reduceData, identity);\n  sort = sort == null ? undefined : maybeBinOutput("sort", sort, inputs);\n  filter = filter == null ? undefined : maybeBinEvaluator("filter", filter, inputs);\n\n  // Don’t group on a channel if an output requires it as an input!\n  if (gx != null && hasOutput(outputs, "x", "x1", "x2")) gx = null;\n  if (gy != null && hasOutput(outputs, "y", "y1", "y2")) gy = null;\n\n  // Produce x1, x2, y1, and y2 output channels as appropriate (when binning).\n  const [BX1, setBX1] = maybeColumn(bx);\n  const [BX2, setBX2] = maybeColumn(bx);\n  const [BY1, setBY1] = maybeColumn(by);\n  const [BY2, setBY2] = maybeColumn(by);\n\n  // Produce x or y output channels as appropriate (when grouping).\n  const [k, gk] = gx != null ? [gx, "x"] : gy != null ? [gy, "y"] : [];\n  const [GK, setGK] = maybeColumn(k);\n\n  // Greedily materialize the z, fill, and stroke channels (if channels and not\n  // constants) so that we can reference them for subdividing groups without\n  // computing them more than once. We also want to consume options that should\n  // only apply to this transform rather than passing them through to the next.\n  const {\n    x,\n    y,\n    z,\n    fill,\n    stroke,\n    x1,\n    x2,\n    // consumed if x is an output\n    y1,\n    y2,\n    // consumed if y is an output\n    domain,\n    cumulative,\n    thresholds,\n    interval,\n    ...options\n  } = inputs;\n  const [GZ, setGZ] = maybeColumn(z);\n  const [vfill] = maybeColorChannel(fill);\n  const [vstroke] = maybeColorChannel(stroke);\n  const [GF, setGF] = maybeColumn(vfill);\n  const [GS, setGS] = maybeColumn(vstroke);\n  return {\n    ...("z" in inputs && {\n      z: GZ || z\n    }),\n    ...("fill" in inputs && {\n      fill: GF || fill\n    }),\n    ...("stroke" in inputs && {\n      stroke: GS || stroke\n    }),\n    ...basic(options, (data, facets, plotOptions) => {\n      const K = maybeApplyInterval(valueof(data, k), plotOptions?.[gk]);\n      const Z = valueof(data, z);\n      const F = valueof(data, vfill);\n      const S = valueof(data, vstroke);\n      const G = maybeSubgroup(outputs, {\n        z: Z,\n        fill: F,\n        stroke: S\n      });\n      const groupFacets = [];\n      const groupData = [];\n      const GK = K && setGK([]);\n      const GZ = Z && setGZ([]);\n      const GF = F && setGF([]);\n      const GS = S && setGS([]);\n      const BX1 = bx && setBX1([]);\n      const BX2 = bx && setBX2([]);\n      const BY1 = by && setBY1([]);\n      const BY2 = by && setBY2([]);\n      const bin = bing(bx?.(data), by?.(data));\n      let i = 0;\n      for (const o of outputs) o.initialize(data);\n      if (sort) sort.initialize(data);\n      if (filter) filter.initialize(data);\n      for (const facet of facets) {\n        const groupFacet = [];\n        for (const o of outputs) o.scope("facet", facet);\n        if (sort) sort.scope("facet", facet);\n        if (filter) filter.scope("facet", facet);\n        for (const [f, I] of maybeGroup(facet, G)) {\n          for (const [k, g] of maybeGroup(I, K)) {\n            for (const [b, extent] of bin(g)) {\n              if (filter && !filter.reduce(b, extent)) continue;\n              groupFacet.push(i++);\n              groupData.push(reduceData.reduceIndex(b, data, extent));\n              if (K) GK.push(k);\n              if (Z) GZ.push(G === Z ? f : Z[b[0]]);\n              if (F) GF.push(G === F ? f : F[b[0]]);\n              if (S) GS.push(G === S ? f : S[b[0]]);\n              if (BX1) BX1.push(extent.x1), BX2.push(extent.x2);\n              if (BY1) BY1.push(extent.y1), BY2.push(extent.y2);\n              for (const o of outputs) o.reduce(b, extent);\n              if (sort) sort.reduce(b);\n            }\n          }\n        }\n        groupFacets.push(groupFacet);\n      }\n      maybeSort(groupFacets, sort, reverse);\n      return {\n        data: groupData,\n        facets: groupFacets\n      };\n    }),\n    ...(!hasOutput(outputs, "x") && (BX1 ? {\n      x1: BX1,\n      x2: BX2,\n      x: mid(BX1, BX2)\n    } : {\n      x,\n      x1,\n      x2\n    })),\n    ...(!hasOutput(outputs, "y") && (BY1 ? {\n      y1: BY1,\n      y2: BY2,\n      y: mid(BY1, BY2)\n    } : {\n      y,\n      y1,\n      y2\n    })),\n    ...(GK && {\n      [gk]: GK\n    }),\n    ...Object.fromEntries(outputs.map(({\n      name,\n      output\n    }) => [name, output]))\n  };\n}\n\n// Allow bin options to be specified as part of outputs; merge them into options.\nfunction mergeOptions({\n  cumulative,\n  domain,\n  thresholds,\n  interval,\n  ...outputs\n}, options) {\n  return [outputs, {\n    cumulative,\n    domain,\n    thresholds,\n    interval,\n    ...options\n  }];\n}\nfunction maybeBinValue(value, {\n  cumulative,\n  domain,\n  thresholds,\n  interval\n}, defaultValue) {\n  value = {\n    ...maybeValue(value)\n  };\n  if (value.domain === undefined) value.domain = domain;\n  if (value.cumulative === undefined) value.cumulative = cumulative;\n  if (value.thresholds === undefined) value.thresholds = thresholds;\n  if (value.interval === undefined) value.interval = interval;\n  if (value.value === undefined) value.value = defaultValue;\n  value.thresholds = maybeThresholds(value.thresholds, value.interval);\n  return value;\n}\nfunction maybeBinValueTuple(options) {\n  let {\n    x,\n    y\n  } = options;\n  x = maybeBinValue(x, options);\n  y = maybeBinValue(y, options);\n  [x.value, y.value] = maybeTuple(x.value, y.value);\n  return {\n    x,\n    y\n  };\n}\nfunction maybeBin(options) {\n  if (options == null) return;\n  const {\n    value,\n    cumulative,\n    domain = src.extent,\n    thresholds\n  } = options;\n  const bin = data => {\n    let V = valueof(data, value);\n    let T; // bin thresholds\n    if (isTemporal(V) || isTimeThresholds(thresholds)) {\n      V = map(V, coerceDate, Float64Array); // like coerceDates, but faster\n      let [min, max] = typeof domain === "function" ? domain(V) : domain;\n      let t = typeof thresholds === "function" && !isInterval(thresholds) ? thresholds(V, min, max) : thresholds;\n      if (typeof t === "number") t = (0,src.utcTickInterval)(min, max, t);\n      if (isInterval(t)) {\n        if (domain === src.extent) {\n          min = t.floor(min);\n          max = t.offset(t.floor(max));\n        }\n        t = t.range(min, t.offset(max));\n      }\n      T = t;\n    } else {\n      V = coerceNumbers(V);\n      let [min, max] = typeof domain === "function" ? domain(V) : domain;\n      let t = typeof thresholds === "function" && !isInterval(thresholds) ? thresholds(V, min, max) : thresholds;\n      if (typeof t === "number") {\n        // This differs from d3.ticks with regard to exclusive bounds: we want a\n        // first threshold less than or equal to the minimum, and a last\n        // threshold (strictly) greater than the maximum.\n        if (domain === src.extent) {\n          let step = (0,src.tickIncrement)(min, max, t);\n          if (isFinite(step)) {\n            if (step > 0) {\n              let r0 = Math.round(min / step);\n              let r1 = Math.round(max / step);\n              if (!(r0 * step <= min)) --r0;\n              if (!(r1 * step > max)) ++r1;\n              let n = r1 - r0 + 1;\n              t = new Float64Array(n);\n              for (let i = 0; i < n; ++i) t[i] = (r0 + i) * step;\n            } else if (step < 0) {\n              step = -step;\n              let r0 = Math.round(min * step);\n              let r1 = Math.round(max * step);\n              if (!(r0 / step <= min)) --r0;\n              if (!(r1 / step > max)) ++r1;\n              let n = r1 - r0 + 1;\n              t = new Float64Array(n);\n              for (let i = 0; i < n; ++i) t[i] = (r0 + i) / step;\n            } else {\n              t = [min];\n            }\n          } else {\n            t = [min];\n          }\n        } else {\n          t = (0,src.ticks)(min, max, t);\n        }\n      } else if (isInterval(t)) {\n        if (domain === src.extent) {\n          min = t.floor(min);\n          max = t.offset(t.floor(max));\n        }\n        t = t.range(min, t.offset(max));\n      }\n      T = t;\n    }\n    const E = [];\n    if (T.length === 1) E.push([T[0], T[0]]); // collapsed domain\n    else for (let i = 1; i < T.length; ++i) E.push([T[i - 1], T[i]]);\n    E.bin = (cumulative < 0 ? bin1cn : cumulative > 0 ? bin1cp : bin1)(E, T, V);\n    return E;\n  };\n  bin.label = labelof(value);\n  return bin;\n}\nfunction maybeThresholds(thresholds, interval, defaultThresholds = thresholdAuto) {\n  if (thresholds === undefined) {\n    return interval === undefined ? defaultThresholds : maybeRangeInterval(interval);\n  }\n  if (typeof thresholds === "string") {\n    switch (thresholds.toLowerCase()) {\n      case "freedman-diaconis":\n        return src.thresholdFreedmanDiaconis;\n      case "scott":\n        return src.thresholdScott;\n      case "sturges":\n        return src.thresholdSturges;\n      case "auto":\n        return thresholdAuto;\n    }\n    return maybeUtcInterval(thresholds);\n  }\n  return thresholds; // pass array, count, or function to bin.thresholds\n}\n\nfunction maybeBinOutputs(outputs, inputs) {\n  return maybeOutputs(outputs, inputs, maybeBinOutput);\n}\nfunction maybeBinOutput(name, reduce, inputs) {\n  return maybeOutput(name, reduce, inputs, maybeBinEvaluator);\n}\nfunction maybeBinEvaluator(name, reduce, inputs) {\n  return maybeEvaluator(name, reduce, inputs, maybeBinReduce);\n}\nfunction maybeBinReduce(reduce, value) {\n  return maybeReduce(reduce, value, maybeBinReduceFallback);\n}\nfunction maybeBinReduceFallback(reduce) {\n  switch (`${reduce}`.toLowerCase()) {\n    case "x":\n      return reduceX;\n    case "x1":\n      return reduceX1;\n    case "x2":\n      return reduceX2;\n    case "y":\n      return reduceY;\n    case "y1":\n      return reduceY1;\n    case "y2":\n      return reduceY2;\n  }\n  throw new Error(`invalid bin reduce: ${reduce}`);\n}\nfunction thresholdAuto(values, min, max) {\n  return Math.min(200, (0,src.thresholdScott)(values, min, max));\n}\nfunction isTimeThresholds(t) {\n  return isTimeInterval(t) || isIterable(t) && isTemporal(t);\n}\nfunction isTimeInterval(t) {\n  return isInterval(t) && typeof t === "function" && t() instanceof Date;\n}\nfunction isInterval(t) {\n  return typeof t?.range === "function";\n}\nfunction bing(EX, EY) {\n  return EX && EY ? function* (I) {\n    const X = EX.bin(I); // first bin on x\n    for (const [ix, [x1, x2]] of EX.entries()) {\n      const Y = EY.bin(X[ix]); // then bin on y\n      for (const [iy, [y1, y2]] of EY.entries()) {\n        yield [Y[iy], {\n          x1,\n          y1,\n          x2,\n          y2\n        }];\n      }\n    }\n  } : EX ? function* (I) {\n    const X = EX.bin(I);\n    for (const [i, [x1, x2]] of EX.entries()) {\n      yield [X[i], {\n        x1,\n        x2\n      }];\n    }\n  } : function* (I) {\n    const Y = EY.bin(I);\n    for (const [i, [y1, y2]] of EY.entries()) {\n      yield [Y[i], {\n        y1,\n        y2\n      }];\n    }\n  };\n}\n\n// non-cumulative distribution\nfunction bin1(E, T, V) {\n  T = coerceNumbers(T); // for faster bisection\n  return I => {\n    const B = E.map(() => []);\n    for (const i of I) B[(0,src.bisect)(T, V[i]) - 1]?.push(i); // TODO quantization?\n    return B;\n  };\n}\n\n// cumulative distribution\nfunction bin1cp(E, T, V) {\n  const bin = bin1(E, T, V);\n  return I => {\n    const B = bin(I);\n    for (let i = 1, n = B.length; i < n; ++i) {\n      const C = B[i - 1];\n      const b = B[i];\n      for (const j of C) b.push(j);\n    }\n    return B;\n  };\n}\n\n// complementary cumulative distribution\nfunction bin1cn(E, T, V) {\n  const bin = bin1(E, T, V);\n  return I => {\n    const B = bin(I);\n    for (let i = B.length - 2; i >= 0; --i) {\n      const C = B[i + 1];\n      const b = B[i];\n      for (const j of C) b.push(j);\n    }\n    return B;\n  };\n}\nfunction mid1(x1, x2) {\n  const m = (+x1 + +x2) / 2;\n  return x1 instanceof Date ? new Date(m) : m;\n}\nconst reduceX = {\n  reduceIndex(I, X, {\n    x1,\n    x2\n  }) {\n    return mid1(x1, x2);\n  }\n};\nconst reduceY = {\n  reduceIndex(I, X, {\n    y1,\n    y2\n  }) {\n    return mid1(y1, y2);\n  }\n};\nconst reduceX1 = {\n  reduceIndex(I, X, {\n    x1\n  }) {\n    return x1;\n  }\n};\nconst reduceX2 = {\n  reduceIndex(I, X, {\n    x2\n  }) {\n    return x2;\n  }\n};\nconst reduceY1 = {\n  reduceIndex(I, X, {\n    y1\n  }) {\n    return y1;\n  }\n};\nconst reduceY2 = {\n  reduceIndex(I, X, {\n    y2\n  }) {\n    return y2;\n  }\n};\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/transforms/identity.js\n\nfunction maybeIdentityX(options = {}) {\n  return hasX(options) ? options : {\n    ...options,\n    x: identity\n  };\n}\nfunction maybeIdentityY(options = {}) {\n  return hasY(options) ? options : {\n    ...options,\n    y: identity\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/transforms/stack.js\n\n\n\n\n\n\nfunction stackX(stackOptions = {}, options = {}) {\n  if (arguments.length === 1) [stackOptions, options] = stack_mergeOptions(stackOptions);\n  const {\n    y1,\n    y = y1,\n    x,\n    ...rest\n  } = options; // note: consumes x!\n  const [transform, Y, x1, x2] = stack(y, x, "y", "x", stackOptions, rest);\n  return {\n    ...transform,\n    y1,\n    y: Y,\n    x1,\n    x2,\n    x: mid(x1, x2)\n  };\n}\nfunction stackX1(stackOptions = {}, options = {}) {\n  if (arguments.length === 1) [stackOptions, options] = stack_mergeOptions(stackOptions);\n  const {\n    y1,\n    y = y1,\n    x\n  } = options;\n  const [transform, Y, X] = stack(y, x, "y", "x", stackOptions, options);\n  return {\n    ...transform,\n    y1,\n    y: Y,\n    x: X\n  };\n}\nfunction stackX2(stackOptions = {}, options = {}) {\n  if (arguments.length === 1) [stackOptions, options] = stack_mergeOptions(stackOptions);\n  const {\n    y1,\n    y = y1,\n    x\n  } = options;\n  const [transform, Y,, X] = stack(y, x, "y", "x", stackOptions, options);\n  return {\n    ...transform,\n    y1,\n    y: Y,\n    x: X\n  };\n}\nfunction stackY(stackOptions = {}, options = {}) {\n  if (arguments.length === 1) [stackOptions, options] = stack_mergeOptions(stackOptions);\n  const {\n    x1,\n    x = x1,\n    y,\n    ...rest\n  } = options; // note: consumes y!\n  const [transform, X, y1, y2] = stack(x, y, "x", "y", stackOptions, rest);\n  return {\n    ...transform,\n    x1,\n    x: X,\n    y1,\n    y2,\n    y: mid(y1, y2)\n  };\n}\nfunction stackY1(stackOptions = {}, options = {}) {\n  if (arguments.length === 1) [stackOptions, options] = stack_mergeOptions(stackOptions);\n  const {\n    x1,\n    x = x1,\n    y\n  } = options;\n  const [transform, X, Y] = stack(x, y, "x", "y", stackOptions, options);\n  return {\n    ...transform,\n    x1,\n    x: X,\n    y: Y\n  };\n}\nfunction stackY2(stackOptions = {}, options = {}) {\n  if (arguments.length === 1) [stackOptions, options] = stack_mergeOptions(stackOptions);\n  const {\n    x1,\n    x = x1,\n    y\n  } = options;\n  const [transform, X,, Y] = stack(x, y, "x", "y", stackOptions, options);\n  return {\n    ...transform,\n    x1,\n    x: X,\n    y: Y\n  };\n}\nfunction maybeStackX({\n  x,\n  x1,\n  x2,\n  ...options\n} = {}) {\n  options = withTip(options, "y");\n  if (x1 === undefined && x2 === undefined) return stackX({\n    x,\n    ...options\n  });\n  [x1, x2] = maybeZero(x, x1, x2);\n  return {\n    ...options,\n    x1,\n    x2\n  };\n}\nfunction maybeStackY({\n  y,\n  y1,\n  y2,\n  ...options\n} = {}) {\n  options = withTip(options, "x");\n  if (y1 === undefined && y2 === undefined) return stackY({\n    y,\n    ...options\n  });\n  [y1, y2] = maybeZero(y, y1, y2);\n  return {\n    ...options,\n    y1,\n    y2\n  };\n}\n\n// The reverse option is ambiguous: it is both a stack option and a basic\n// transform. If only one options object is specified, we interpret it as a\n// stack option, and therefore must remove it from the propagated options.\nfunction stack_mergeOptions(options) {\n  const {\n    offset,\n    order,\n    reverse,\n    ...rest\n  } = options;\n  return [{\n    offset,\n    order,\n    reverse\n  }, rest];\n}\n\n// This is a hint to the tooltip mark that the y1 and y2 channels (for stackY,\n// or conversely x1 and x2 for stackX) represent a stacked length, and that the\n// tooltip should therefore show y2-y1 instead of an extent.\nconst lengthy = {\n  length: true\n};\nfunction stack(x, y = one, kx, ky, {\n  offset,\n  order,\n  reverse\n}, options) {\n  if (y === null) throw new Error(`stack requires ${ky}`);\n  const z = maybeZ(options);\n  const [X, setX] = maybeColumn(x);\n  const [Y1, setY1] = column(y);\n  const [Y2, setY2] = column(y);\n  Y1.hint = Y2.hint = lengthy;\n  offset = maybeOffset(offset);\n  order = stack_maybeOrder(order, offset, ky);\n  return [basic(options, (data, facets, plotOptions) => {\n    const X = x == null ? undefined : setX(maybeApplyInterval(valueof(data, x), plotOptions?.[kx]));\n    const Y = valueof(data, y, Float64Array);\n    const Z = valueof(data, z);\n    const compare = order && order(data, X, Y, Z);\n    const n = data.length;\n    const Y1 = setY1(new Float64Array(n));\n    const Y2 = setY2(new Float64Array(n));\n    const facetstacks = [];\n    for (const facet of facets) {\n      const stacks = X ? Array.from((0,src.group)(facet, i => X[i]).values()) : [facet];\n      if (compare) for (const stack of stacks) stack.sort(compare);\n      for (const stack of stacks) {\n        let yn = 0;\n        let yp = 0;\n        if (reverse) stack.reverse();\n        for (const i of stack) {\n          const y = Y[i];\n          if (y < 0) yn = Y2[i] = (Y1[i] = yn) + y;else if (y > 0) yp = Y2[i] = (Y1[i] = yp) + y;else Y2[i] = Y1[i] = yp; // NaN or zero\n        }\n      }\n\n      facetstacks.push(stacks);\n    }\n    if (offset) offset(facetstacks, Y1, Y2, Z);\n    return {\n      data,\n      facets\n    };\n  }), X, Y1, Y2];\n}\nfunction maybeOffset(offset) {\n  if (offset == null) return;\n  if (typeof offset === "function") return offset;\n  switch (`${offset}`.toLowerCase()) {\n    case "expand":\n    case "normalize":\n      return offsetExpand;\n    case "center":\n    case "silhouette":\n      return offsetCenter;\n    case "wiggle":\n      return offsetWiggle;\n  }\n  throw new Error(`unknown offset: ${offset}`);\n}\n\n// Given a single stack, returns the minimum and maximum values from the given\n// Y2 column. Note that this relies on Y2 always being the outer column for\n// diverging values.\nfunction extent(stack, Y2) {\n  let min = 0,\n    max = 0;\n  for (const i of stack) {\n    const y = Y2[i];\n    if (y < min) min = y;\n    if (y > max) max = y;\n  }\n  return [min, max];\n}\nfunction offsetExpand(facetstacks, Y1, Y2) {\n  for (const stacks of facetstacks) {\n    for (const stack of stacks) {\n      const [yn, yp] = extent(stack, Y2);\n      for (const i of stack) {\n        const m = 1 / (yp - yn || 1);\n        Y1[i] = m * (Y1[i] - yn);\n        Y2[i] = m * (Y2[i] - yn);\n      }\n    }\n  }\n}\nfunction offsetCenter(facetstacks, Y1, Y2) {\n  for (const stacks of facetstacks) {\n    for (const stack of stacks) {\n      const [yn, yp] = extent(stack, Y2);\n      for (const i of stack) {\n        const m = (yp + yn) / 2;\n        Y1[i] -= m;\n        Y2[i] -= m;\n      }\n    }\n    offsetZero(stacks, Y1, Y2);\n  }\n  offsetCenterFacets(facetstacks, Y1, Y2);\n}\nfunction offsetWiggle(facetstacks, Y1, Y2, Z) {\n  for (const stacks of facetstacks) {\n    const prev = new src.InternMap();\n    let y = 0;\n    for (const stack of stacks) {\n      let j = -1;\n      const Fi = stack.map(i => Math.abs(Y2[i] - Y1[i]));\n      const Df = stack.map(i => {\n        j = Z ? Z[i] : ++j;\n        const value = Y2[i] - Y1[i];\n        const diff = prev.has(j) ? value - prev.get(j) : 0;\n        prev.set(j, value);\n        return diff;\n      });\n      const Cf1 = [0, ...(0,src.cumsum)(Df)];\n      for (const i of stack) {\n        Y1[i] += y;\n        Y2[i] += y;\n      }\n      const s1 = (0,src.sum)(Fi);\n      if (s1) y -= (0,src.sum)(Fi, (d, i) => (Df[i] / 2 + Cf1[i]) * d) / s1;\n    }\n    offsetZero(stacks, Y1, Y2);\n  }\n  offsetCenterFacets(facetstacks, Y1, Y2);\n}\nfunction offsetZero(stacks, Y1, Y2) {\n  const m = (0,src.min)(stacks, stack => (0,src.min)(stack, i => Y1[i]));\n  for (const stack of stacks) {\n    for (const i of stack) {\n      Y1[i] -= m;\n      Y2[i] -= m;\n    }\n  }\n}\nfunction offsetCenterFacets(facetstacks, Y1, Y2) {\n  const n = facetstacks.length;\n  if (n === 1) return;\n  const facets = facetstacks.map(stacks => stacks.flat());\n  const m = facets.map(I => ((0,src.min)(I, i => Y1[i]) + (0,src.max)(I, i => Y2[i])) / 2);\n  const m0 = (0,src.min)(m);\n  for (let j = 0; j < n; j++) {\n    const p = m0 - m[j];\n    for (const i of facets[j]) {\n      Y1[i] += p;\n      Y2[i] += p;\n    }\n  }\n}\nfunction stack_maybeOrder(order, offset, ky) {\n  if (order === undefined && offset === offsetWiggle) return orderInsideOut(ascendingDefined);\n  if (order == null) return;\n  if (typeof order === "string") {\n    const negate = order.startsWith("-");\n    const compare = negate ? descendingDefined : ascendingDefined;\n    switch ((negate ? order.slice(1) : order).toLowerCase()) {\n      case "value":\n      case ky:\n        return orderY(compare);\n      case "z":\n        return orderZ(compare);\n      case "sum":\n        return orderSum(compare);\n      case "appearance":\n        return orderAppearance(compare);\n      case "inside-out":\n        return orderInsideOut(compare);\n    }\n    return orderAccessor(field(order));\n  }\n  if (typeof order === "function") return (order.length === 1 ? orderAccessor : orderComparator)(order);\n  if (Array.isArray(order)) return orderGiven(order);\n  throw new Error(`invalid order: ${order}`);\n}\n\n// by value\nfunction orderY(compare) {\n  return (data, X, Y) => (i, j) => compare(Y[i], Y[j]);\n}\n\n// by location\nfunction orderZ(compare) {\n  return (data, X, Y, Z) => (i, j) => compare(Z[i], Z[j]);\n}\n\n// by sum of value (a.k.a. “ascending”)\nfunction orderSum(compare) {\n  return orderZDomain(compare, (data, X, Y, Z) => (0,src.groupSort)(range(data), I => (0,src.sum)(I, i => Y[i]), i => Z[i]));\n}\n\n// by x = argmax of value\nfunction orderAppearance(compare) {\n  return orderZDomain(compare, (data, X, Y, Z) => (0,src.groupSort)(range(data), I => X[(0,src.greatest)(I, i => Y[i])], i => Z[i]));\n}\n\n// by x = argmax of value, but rearranged inside-out by alternating series\n// according to the sign of a running divergence of sums\nfunction orderInsideOut(compare) {\n  return orderZDomain(compare, (data, X, Y, Z) => {\n    const I = range(data);\n    const K = (0,src.groupSort)(I, I => X[(0,src.greatest)(I, i => Y[i])], i => Z[i]);\n    const sums = (0,src.rollup)(I, I => (0,src.sum)(I, i => Y[i]), i => Z[i]);\n    const Kp = [],\n      Kn = [];\n    let s = 0;\n    for (const k of K) {\n      if (s < 0) {\n        s += sums.get(k);\n        Kp.push(k);\n      } else {\n        s -= sums.get(k);\n        Kn.push(k);\n      }\n    }\n    return Kn.reverse().concat(Kp);\n  });\n}\nfunction orderAccessor(f) {\n  return data => {\n    const O = valueof(data, f);\n    return (i, j) => ascendingDefined(O[i], O[j]);\n  };\n}\nfunction orderComparator(f) {\n  return data => (i, j) => f(data[i], data[j]);\n}\nfunction orderGiven(domain) {\n  return orderZDomain(ascendingDefined, () => domain);\n}\n\n// Given an ordering (domain) of distinct values in z that can be derived from\n// the data, returns a comparator that can be used to sort stacks. Note that\n// this is a series order: it will be consistent across stacks.\nfunction orderZDomain(compare, domain) {\n  return (data, X, Y, Z) => {\n    if (!Z) throw new Error("missing channel: z");\n    const map = new src.InternMap(domain(data, X, Y, Z).map((d, i) => [d, i]));\n    return (i, j) => compare(map.get(Z[i]), map.get(Z[j]));\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/marks/area.js\n\n\n\n\n\n\n\n\n\nconst area_defaults = {\n  ariaLabel: "area",\n  strokeWidth: 1,\n  strokeLinecap: "round",\n  strokeLinejoin: "round",\n  strokeMiterlimit: 1\n};\nclass Area extends Mark {\n  constructor(data, options = {}) {\n    const {\n      x1,\n      y1,\n      x2,\n      y2,\n      z,\n      curve,\n      tension\n    } = options;\n    super(data, {\n      x1: {\n        value: x1,\n        scale: "x"\n      },\n      y1: {\n        value: y1,\n        scale: "y"\n      },\n      x2: {\n        value: x2,\n        scale: "x",\n        optional: true\n      },\n      y2: {\n        value: y2,\n        scale: "y",\n        optional: true\n      },\n      z: {\n        value: maybeZ(options),\n        optional: true\n      }\n    }, options, area_defaults);\n    this.z = z;\n    this.curve = maybeCurve(curve, tension);\n  }\n  filter(index) {\n    return index;\n  }\n  render(index, scales, channels, dimensions, context) {\n    const {\n      x1: X1,\n      y1: Y1,\n      x2: X2 = X1,\n      y2: Y2 = Y1\n    } = channels;\n    return create("svg:g", context).call(applyIndirectStyles, this, dimensions, context).call(applyTransform, this, scales, 0, 0).call(g => g.selectAll().data(groupIndex(index, [X1, Y1, X2, Y2], this, channels)).enter().append("path").call(applyDirectStyles, this).call(applyGroupedChannelStyles, this, channels).attr("d", (0,src.area)().curve(this.curve).defined(i => i >= 0).x0(i => X1[i]).y0(i => Y1[i]).x1(i => X2[i]).y1(i => Y2[i]))).node();\n  }\n}\nfunction area_area(data, options) {\n  if (options === undefined) return areaY(data, {\n    x: first,\n    y: second\n  });\n  return new Area(data, options);\n}\nfunction areaX(data, options) {\n  const {\n    y = indexOf,\n    ...rest\n  } = maybeDenseIntervalY(options);\n  return new Area(data, maybeStackX(maybeIdentityX({\n    ...rest,\n    y1: y,\n    y2: undefined\n  })));\n}\nfunction areaY(data, options) {\n  const {\n    x = indexOf,\n    ...rest\n  } = maybeDenseIntervalX(options);\n  return new Area(data, maybeStackY(maybeIdentityY({\n    ...rest,\n    x1: x,\n    x2: undefined\n  })));\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/marks/link.js\n\n\n\n\n\n\n\nconst link_defaults = {\n  ariaLabel: "link",\n  fill: "none",\n  stroke: "currentColor",\n  strokeMiterlimit: 1\n};\nclass Link extends Mark {\n  constructor(data, options = {}) {\n    const {\n      x1,\n      y1,\n      x2,\n      y2,\n      curve,\n      tension\n    } = options;\n    super(data, {\n      x1: {\n        value: x1,\n        scale: "x"\n      },\n      y1: {\n        value: y1,\n        scale: "y"\n      },\n      x2: {\n        value: x2,\n        scale: "x",\n        optional: true\n      },\n      y2: {\n        value: y2,\n        scale: "y",\n        optional: true\n      }\n    }, options, link_defaults);\n    this.curve = maybeCurveAuto(curve, tension);\n    markers(this, options);\n  }\n  project(channels, values, context) {\n    // For the auto curve, projection is handled at render.\n    if (this.curve !== curveAuto) {\n      super.project(channels, values, context);\n    }\n  }\n  render(index, scales, channels, dimensions, context) {\n    const {\n      x1: X1,\n      y1: Y1,\n      x2: X2 = X1,\n      y2: Y2 = Y1\n    } = channels;\n    const {\n      curve\n    } = this;\n    return create("svg:g", context).call(applyIndirectStyles, this, dimensions, context).call(applyTransform, this, scales).call(g => g.selectAll().data(index).enter().append("path").call(applyDirectStyles, this).attr("d", curve === curveAuto && context.projection ? sphereLink(context.projection, X1, Y1, X2, Y2) : i => {\n      const p = (0,src.pathRound)();\n      const c = curve(p);\n      c.lineStart();\n      c.point(X1[i], Y1[i]);\n      c.point(X2[i], Y2[i]);\n      c.lineEnd();\n      return p;\n    }).call(applyChannelStyles, this, channels).call(applyMarkers, this, channels, context)).node();\n  }\n}\nfunction sphereLink(projection, X1, Y1, X2, Y2) {\n  const path = (0,src.geoPath)(projection);\n  X1 = coerceNumbers(X1);\n  Y1 = coerceNumbers(Y1);\n  X2 = coerceNumbers(X2);\n  Y2 = coerceNumbers(Y2);\n  return i => path({\n    type: "LineString",\n    coordinates: [[X1[i], Y1[i]], [X2[i], Y2[i]]]\n  });\n}\nfunction link_link(data, {\n  x,\n  x1,\n  x2,\n  y,\n  y1,\n  y2,\n  ...options\n} = {}) {\n  [x1, x2] = maybeSameValue(x, x1, x2);\n  [y1, y2] = maybeSameValue(y, y1, y2);\n  return new Link(data, {\n    ...options,\n    x1,\n    x2,\n    y1,\n    y2\n  });\n}\n\n// If x1 and x2 are specified, return them as {x1, x2}.\n// If x and x1 and specified, or x and x2 are specified, return them as {x1, x2}.\n// If only x, x1, or x2 are specified, return it as {x1}.\nfunction maybeSameValue(x, x1, x2) {\n  if (x === undefined) {\n    if (x1 === undefined) {\n      if (x2 !== undefined) return [x2];\n    } else {\n      if (x2 === undefined) return [x1];\n    }\n  } else if (x1 === undefined) {\n    return x2 === undefined ? [x] : [x, x2];\n  } else if (x2 === undefined) {\n    return [x, x1];\n  }\n  return [x1, x2];\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/marks/arrow.js\n\n\n\n\n\n\n\nconst arrow_defaults = {\n  ariaLabel: "arrow",\n  fill: "none",\n  stroke: "currentColor",\n  strokeLinecap: "round",\n  strokeMiterlimit: 1,\n  strokeWidth: 1.5\n};\nclass Arrow extends Mark {\n  constructor(data, options = {}) {\n    const {\n      x1,\n      y1,\n      x2,\n      y2,\n      bend = 0,\n      headAngle = 60,\n      headLength = 8,\n      // Disable the arrow with headLength = 0; or, use Plot.link.\n      inset = 0,\n      insetStart = inset,\n      insetEnd = inset,\n      sweep\n    } = options;\n    super(data, {\n      x1: {\n        value: x1,\n        scale: "x"\n      },\n      y1: {\n        value: y1,\n        scale: "y"\n      },\n      x2: {\n        value: x2,\n        scale: "x",\n        optional: true\n      },\n      y2: {\n        value: y2,\n        scale: "y",\n        optional: true\n      }\n    }, options, arrow_defaults);\n    this.bend = bend === true ? 22.5 : Math.max(-90, Math.min(90, bend));\n    this.headAngle = +headAngle;\n    this.headLength = +headLength;\n    this.insetStart = +insetStart;\n    this.insetEnd = +insetEnd;\n    this.sweep = maybeSweep(sweep);\n  }\n  render(index, scales, channels, dimensions, context) {\n    const {\n      x1: X1,\n      y1: Y1,\n      x2: X2 = X1,\n      y2: Y2 = Y1,\n      SW\n    } = channels;\n    const {\n      strokeWidth,\n      bend,\n      headAngle,\n      headLength,\n      insetStart,\n      insetEnd\n    } = this;\n    const sw = SW ? i => SW[i] : constant(strokeWidth === undefined ? 1 : strokeWidth);\n\n    // The angle between the arrow’s shaft and one of the wings; the “head”\n    // angle between the wings is twice this value.\n    const wingAngle = headAngle * radians / 2;\n\n    // The length of the arrowhead’s “wings” (the line segments that extend from\n    // the end point) relative to the stroke width.\n    const wingScale = headLength / 1.5;\n    return create("svg:g", context).call(applyIndirectStyles, this, dimensions, context).call(applyTransform, this, scales).call(g => g.selectAll().data(index).enter().append("path").call(applyDirectStyles, this).attr("d", i => {\n      // The start ⟨x1,y1⟩ and end ⟨x2,y2⟩ points may be inset, and the\n      // ending line angle may be altered for inset swoopy arrows.\n      let x1 = X1[i],\n        y1 = Y1[i],\n        x2 = X2[i],\n        y2 = Y2[i];\n      const lineLength = Math.hypot(x2 - x1, y2 - y1);\n      if (lineLength <= insetStart + insetEnd) return null;\n      let lineAngle = Math.atan2(y2 - y1, x2 - x1);\n\n      // We don’t allow the wing length to be too large relative to the\n      // length of the arrow. (Plot.vector allows arbitrarily large\n      // wings, but that’s okay since vectors are usually small.)\n      const headLength = Math.min(wingScale * sw(i), lineLength / 3);\n\n      // When bending, the offset between the straight line between the two points\n      // and the outgoing tangent from the start point. (Also the negative\n      // incoming tangent to the end point.) This must be within ±π/2. A positive\n      // angle will produce a clockwise curve; a negative angle will produce a\n      // counterclockwise curve; zero will produce a straight line.\n      const bendAngle = this.sweep(x1, y1, x2, y2) * bend * radians;\n\n      // The radius of the circle that intersects with the two endpoints\n      // and has the specified bend angle.\n      const r = Math.hypot(lineLength / Math.tan(bendAngle), lineLength) / 2;\n\n      // Apply insets.\n      if (insetStart || insetEnd) {\n        if (r < 1e5) {\n          // For inset swoopy arrows, compute the circle-circle\n          // intersection between a circle centered around the\n          // respective arrow endpoint and the center of the circle\n          // segment that forms the shaft of the arrow.\n          const sign = Math.sign(bendAngle);\n          const [cx, cy] = pointPointCenter([x1, y1], [x2, y2], r, sign);\n          if (insetStart) {\n            [x1, y1] = circleCircleIntersect([cx, cy, r], [x1, y1, insetStart], -sign * Math.sign(insetStart));\n          }\n          // For the end inset, rotate the arrowhead so that it aligns\n          // with the truncated end of the arrow. Since the arrow is a\n          // segment of the circle centered at ⟨cx,cy⟩, we can compute\n          // the angular difference to the new endpoint.\n          if (insetEnd) {\n            const [x, y] = circleCircleIntersect([cx, cy, r], [x2, y2, insetEnd], sign * Math.sign(insetEnd));\n            lineAngle += Math.atan2(y - cy, x - cx) - Math.atan2(y2 - cy, x2 - cx);\n            x2 = x, y2 = y;\n          }\n        } else {\n          // For inset straight arrows, offset along the straight line.\n          const dx = x2 - x1,\n            dy = y2 - y1,\n            d = Math.hypot(dx, dy);\n          if (insetStart) x1 += dx / d * insetStart, y1 += dy / d * insetStart;\n          if (insetEnd) x2 -= dx / d * insetEnd, y2 -= dy / d * insetEnd;\n        }\n      }\n\n      // The angle of the arrow as it approaches the endpoint, and the\n      // angles of the adjacent wings. Here “left” refers to if the\n      // arrow is pointing up.\n      const endAngle = lineAngle + bendAngle;\n      const leftAngle = endAngle + wingAngle;\n      const rightAngle = endAngle - wingAngle;\n\n      // The endpoints of the two wings.\n      const x3 = x2 - headLength * Math.cos(leftAngle);\n      const y3 = y2 - headLength * Math.sin(leftAngle);\n      const x4 = x2 - headLength * Math.cos(rightAngle);\n      const y4 = y2 - headLength * Math.sin(rightAngle);\n\n      // If the radius is very large (or even infinite, as when the bend\n      // angle is zero), then render a straight line.\n      const a = r < 1e5 ? `A${r},${r} 0,0,${bendAngle > 0 ? 1 : 0} ` : `L`;\n      const h = headLength ? `M${x3},${y3}L${x2},${y2}L${x4},${y4}` : "";\n      return `M${x1},${y1}${a}${x2},${y2}${h}`;\n    }).call(applyChannelStyles, this, channels)).node();\n  }\n}\n\n// Maybe flip the bend angle, depending on the arrow orientation.\nfunction maybeSweep(sweep = 1) {\n  if (typeof sweep === "number") return constant(Math.sign(sweep));\n  if (typeof sweep === "function") return (x1, y1, x2, y2) => Math.sign(sweep(x1, y1, x2, y2));\n  switch (keyword(sweep, "sweep", ["+x", "-x", "+y", "-y"])) {\n    case "+x":\n      return (x1, y1, x2) => (0,src.ascending)(x1, x2);\n    case "-x":\n      return (x1, y1, x2) => (0,src.descending)(x1, x2);\n    case "+y":\n      return (x1, y1, x2, y2) => (0,src.ascending)(y1, y2);\n    case "-y":\n      return (x1, y1, x2, y2) => (0,src.descending)(y1, y2);\n  }\n}\n\n// Returns the center of a circle that goes through the two given points ⟨ax,ay⟩\n// and ⟨bx,by⟩ and has radius r. There are two such points; use the sign +1 or\n// -1 to choose between them. Returns [NaN, NaN] if r is too small.\nfunction pointPointCenter([ax, ay], [bx, by], r, sign) {\n  const dx = bx - ax,\n    dy = by - ay,\n    d = Math.hypot(dx, dy);\n  const k = sign * Math.sqrt(r * r - d * d / 4) / d;\n  return [(ax + bx) / 2 - dy * k, (ay + by) / 2 + dx * k];\n}\n\n// Given two circles, one centered at ⟨ax,ay⟩ with radius ar, and the other\n// centered at ⟨bx,by⟩ with radius br, returns a point at which the two circles\n// intersect. There are typically two such points; use the sign +1 or -1 to\n// chose between them. Returns [NaN, NaN] if there is no intersection.\n// https://mathworld.wolfram.com/Circle-CircleIntersection.html\nfunction circleCircleIntersect([ax, ay, ar], [bx, by, br], sign) {\n  const dx = bx - ax,\n    dy = by - ay,\n    d = Math.hypot(dx, dy);\n  const x = (dx * dx + dy * dy - br * br + ar * ar) / (2 * d);\n  const y = sign * Math.sqrt(ar * ar - x * x);\n  return [ax + (dx * x + dy * y) / d, ay + (dy * x - dx * y) / d];\n}\nfunction arrow(data, {\n  x,\n  x1,\n  x2,\n  y,\n  y1,\n  y2,\n  ...options\n} = {}) {\n  [x1, x2] = maybeSameValue(x, x1, x2);\n  [y1, y2] = maybeSameValue(y, y1, y2);\n  return new Arrow(data, {\n    ...options,\n    x1,\n    x2,\n    y1,\n    y2\n  });\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/marks/bar.js\n\n\n\n\n\n\n\n\n\nclass AbstractBar extends Mark {\n  constructor(data, channels, options = {}, defaults) {\n    super(data, channels, options, defaults);\n    const {\n      inset = 0,\n      insetTop = inset,\n      insetRight = inset,\n      insetBottom = inset,\n      insetLeft = inset,\n      rx,\n      ry\n    } = options;\n    this.insetTop = number(insetTop);\n    this.insetRight = number(insetRight);\n    this.insetBottom = number(insetBottom);\n    this.insetLeft = number(insetLeft);\n    this.rx = impliedString(rx, "auto"); // number or percentage\n    this.ry = impliedString(ry, "auto");\n  }\n  render(index, scales, channels, dimensions, context) {\n    const {\n      rx,\n      ry\n    } = this;\n    return create("svg:g", context).call(applyIndirectStyles, this, dimensions, context).call(this._transform, this, scales).call(g => g.selectAll().data(index).enter().append("rect").call(applyDirectStyles, this).attr("x", this._x(scales, channels, dimensions)).attr("width", this._width(scales, channels, dimensions)).attr("y", this._y(scales, channels, dimensions)).attr("height", this._height(scales, channels, dimensions)).call(applyAttr, "rx", rx).call(applyAttr, "ry", ry).call(applyChannelStyles, this, channels)).node();\n  }\n  _x(scales, {\n    x: X\n  }, {\n    marginLeft\n  }) {\n    const {\n      insetLeft\n    } = this;\n    return X ? i => X[i] + insetLeft : marginLeft + insetLeft;\n  }\n  _y(scales, {\n    y: Y\n  }, {\n    marginTop\n  }) {\n    const {\n      insetTop\n    } = this;\n    return Y ? i => Y[i] + insetTop : marginTop + insetTop;\n  }\n  _width({\n    x\n  }, {\n    x: X\n  }, {\n    marginRight,\n    marginLeft,\n    width\n  }) {\n    const {\n      insetLeft,\n      insetRight\n    } = this;\n    const bandwidth = X && x ? x.bandwidth() : width - marginRight - marginLeft;\n    return Math.max(0, bandwidth - insetLeft - insetRight);\n  }\n  _height({\n    y\n  }, {\n    y: Y\n  }, {\n    marginTop,\n    marginBottom,\n    height\n  }) {\n    const {\n      insetTop,\n      insetBottom\n    } = this;\n    const bandwidth = Y && y ? y.bandwidth() : height - marginTop - marginBottom;\n    return Math.max(0, bandwidth - insetTop - insetBottom);\n  }\n}\nconst bar_defaults = {\n  ariaLabel: "bar"\n};\nclass BarX extends AbstractBar {\n  constructor(data, options = {}) {\n    const {\n      x1,\n      x2,\n      y\n    } = options;\n    super(data, {\n      x1: {\n        value: x1,\n        scale: "x"\n      },\n      x2: {\n        value: x2,\n        scale: "x"\n      },\n      y: {\n        value: y,\n        scale: "y",\n        type: "band",\n        optional: true\n      }\n    }, options, bar_defaults);\n  }\n  _transform(selection, mark, {\n    x\n  }) {\n    selection.call(applyTransform, mark, {\n      x\n    }, 0, 0);\n  }\n  _x({\n    x\n  }, {\n    x1: X1,\n    x2: X2\n  }, {\n    marginLeft\n  }) {\n    const {\n      insetLeft\n    } = this;\n    return isCollapsed(x) ? marginLeft + insetLeft : i => Math.min(X1[i], X2[i]) + insetLeft;\n  }\n  _width({\n    x\n  }, {\n    x1: X1,\n    x2: X2\n  }, {\n    marginRight,\n    marginLeft,\n    width\n  }) {\n    const {\n      insetLeft,\n      insetRight\n    } = this;\n    return isCollapsed(x) ? width - marginRight - marginLeft - insetLeft - insetRight : i => Math.max(0, Math.abs(X2[i] - X1[i]) - insetLeft - insetRight);\n  }\n}\nclass BarY extends AbstractBar {\n  constructor(data, options = {}) {\n    const {\n      x,\n      y1,\n      y2\n    } = options;\n    super(data, {\n      y1: {\n        value: y1,\n        scale: "y"\n      },\n      y2: {\n        value: y2,\n        scale: "y"\n      },\n      x: {\n        value: x,\n        scale: "x",\n        type: "band",\n        optional: true\n      }\n    }, options, bar_defaults);\n  }\n  _transform(selection, mark, {\n    y\n  }) {\n    selection.call(applyTransform, mark, {\n      y\n    }, 0, 0);\n  }\n  _y({\n    y\n  }, {\n    y1: Y1,\n    y2: Y2\n  }, {\n    marginTop\n  }) {\n    const {\n      insetTop\n    } = this;\n    return isCollapsed(y) ? marginTop + insetTop : i => Math.min(Y1[i], Y2[i]) + insetTop;\n  }\n  _height({\n    y\n  }, {\n    y1: Y1,\n    y2: Y2\n  }, {\n    marginTop,\n    marginBottom,\n    height\n  }) {\n    const {\n      insetTop,\n      insetBottom\n    } = this;\n    return isCollapsed(y) ? height - marginTop - marginBottom - insetTop - insetBottom : i => Math.max(0, Math.abs(Y2[i] - Y1[i]) - insetTop - insetBottom);\n  }\n}\nfunction barX(data, options = {}) {\n  if (!hasXY(options)) options = {\n    ...options,\n    y: indexOf,\n    x2: identity\n  };\n  return new BarX(data, maybeStackX(maybeIntervalX(maybeIdentityX(options))));\n}\nfunction barY(data, options = {}) {\n  if (!hasXY(options)) options = {\n    ...options,\n    x: indexOf,\n    y2: identity\n  };\n  return new BarY(data, maybeStackY(maybeIntervalY(maybeIdentityY(options))));\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/marks/cell.js\n\n\n\nconst cell_defaults = {\n  ariaLabel: "cell"\n};\nclass Cell extends AbstractBar {\n  constructor(data, {\n    x,\n    y,\n    ...options\n  } = {}) {\n    super(data, {\n      x: {\n        value: x,\n        scale: "x",\n        type: "band",\n        optional: true\n      },\n      y: {\n        value: y,\n        scale: "y",\n        type: "band",\n        optional: true\n      }\n    }, options, cell_defaults);\n  }\n  _transform(selection, mark) {\n    // apply dx, dy\n    selection.call(applyTransform, mark, {}, 0, 0);\n  }\n}\nfunction cell(data, {\n  x,\n  y,\n  ...options\n} = {}) {\n  [x, y] = maybeTuple(x, y);\n  return new Cell(data, {\n    ...options,\n    x,\n    y\n  });\n}\nfunction cellX(data, {\n  x = indexOf,\n  fill,\n  stroke,\n  ...options\n} = {}) {\n  if (fill === undefined && maybeColorChannel(stroke)[0] === undefined) fill = identity;\n  return new Cell(data, {\n    ...options,\n    x,\n    fill,\n    stroke\n  });\n}\nfunction cellY(data, {\n  y = indexOf,\n  fill,\n  stroke,\n  ...options\n} = {}) {\n  if (fill === undefined && maybeColorChannel(stroke)[0] === undefined) fill = identity;\n  return new Cell(data, {\n    ...options,\n    y,\n    fill,\n    stroke\n  });\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/marks/dot.js\n\n\n\n\n\n\n\n\n\n\nconst dot_defaults = {\n  ariaLabel: "dot",\n  fill: "none",\n  stroke: "currentColor",\n  strokeWidth: 1.5\n};\nfunction withDefaultSort(options) {\n  return options.sort === undefined && options.reverse === undefined ? sort({\n    channel: "-r"\n  }, options) : options;\n}\nclass Dot extends Mark {\n  constructor(data, options = {}) {\n    const {\n      x,\n      y,\n      r,\n      rotate,\n      symbol = src.symbolCircle,\n      frameAnchor\n    } = options;\n    const [vrotate, crotate] = maybeNumberChannel(rotate, 0);\n    const [vsymbol, csymbol] = maybeSymbolChannel(symbol);\n    const [vr, cr] = maybeNumberChannel(r, vsymbol == null ? 3 : 4.5);\n    super(data, {\n      x: {\n        value: x,\n        scale: "x",\n        optional: true\n      },\n      y: {\n        value: y,\n        scale: "y",\n        optional: true\n      },\n      r: {\n        value: vr,\n        scale: "r",\n        filter: positive,\n        optional: true\n      },\n      rotate: {\n        value: vrotate,\n        optional: true\n      },\n      symbol: {\n        value: vsymbol,\n        scale: "auto",\n        optional: true\n      }\n    }, withDefaultSort(options), dot_defaults);\n    this.r = cr;\n    this.rotate = crotate;\n    this.symbol = csymbol;\n    this.frameAnchor = maybeFrameAnchor(frameAnchor);\n\n    // Give a hint to the symbol scale; this allows the symbol scale to choose\n    // appropriate default symbols based on whether the dots are filled or\n    // stroked, and for the symbol legend to match the appearance of the dots.\n    const {\n      channels\n    } = this;\n    const {\n      symbol: symbolChannel\n    } = channels;\n    if (symbolChannel) {\n      const {\n        fill: fillChannel,\n        stroke: strokeChannel\n      } = channels;\n      symbolChannel.hint = {\n        fill: fillChannel ? fillChannel.value === symbolChannel.value ? "color" : "currentColor" : this.fill,\n        stroke: strokeChannel ? strokeChannel.value === symbolChannel.value ? "color" : "currentColor" : this.stroke\n      };\n    }\n  }\n  render(index, scales, channels, dimensions, context) {\n    const {\n      x,\n      y\n    } = scales;\n    const {\n      x: X,\n      y: Y,\n      r: R,\n      rotate: A,\n      symbol: S\n    } = channels;\n    const {\n      r,\n      rotate,\n      symbol\n    } = this;\n    const [cx, cy] = applyFrameAnchor(this, dimensions);\n    const circle = symbol === src.symbolCircle;\n    const size = R ? undefined : r * r * Math.PI;\n    if (negative(r)) index = [];\n    return create("svg:g", context).call(applyIndirectStyles, this, dimensions, context).call(applyTransform, this, {\n      x: X && x,\n      y: Y && y\n    }).call(g => g.selectAll().data(index).enter().append(circle ? "circle" : "path").call(applyDirectStyles, this).call(circle ? selection => {\n      selection.attr("cx", X ? i => X[i] : cx).attr("cy", Y ? i => Y[i] : cy).attr("r", R ? i => R[i] : r);\n    } : selection => {\n      selection.attr("transform", template`translate(${X ? i => X[i] : cx},${Y ? i => Y[i] : cy})${A ? i => ` rotate(${A[i]})` : rotate ? ` rotate(${rotate})` : ``}`).attr("d", R && S ? i => {\n        const p = (0,src.pathRound)();\n        S[i].draw(p, R[i] * R[i] * Math.PI);\n        return p;\n      } : R ? i => {\n        const p = (0,src.pathRound)();\n        symbol.draw(p, R[i] * R[i] * Math.PI);\n        return p;\n      } : S ? i => {\n        const p = (0,src.pathRound)();\n        S[i].draw(p, size);\n        return p;\n      } : (() => {\n        const p = (0,src.pathRound)();\n        symbol.draw(p, size);\n        return p;\n      })());\n    }).call(applyChannelStyles, this, channels)).node();\n  }\n}\nfunction dot(data, {\n  x,\n  y,\n  ...options\n} = {}) {\n  if (options.frameAnchor === undefined) [x, y] = maybeTuple(x, y);\n  return new Dot(data, {\n    ...options,\n    x,\n    y\n  });\n}\nfunction dotX(data, {\n  x = identity,\n  ...options\n} = {}) {\n  return new Dot(data, maybeIntervalMidY({\n    ...options,\n    x\n  }));\n}\nfunction dotY(data, {\n  y = identity,\n  ...options\n} = {}) {\n  return new Dot(data, maybeIntervalMidX({\n    ...options,\n    y\n  }));\n}\nfunction circle(data, options) {\n  return dot(data, {\n    ...options,\n    symbol: "circle"\n  });\n}\nfunction hexagon(data, options) {\n  return dot(data, {\n    ...options,\n    symbol: "hexagon"\n  });\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/marks/line.js\n\n\n\n\n\n\n\n\nconst line_defaults = {\n  ariaLabel: "line",\n  fill: "none",\n  stroke: "currentColor",\n  strokeWidth: 1.5,\n  strokeLinecap: "round",\n  strokeLinejoin: "round",\n  strokeMiterlimit: 1\n};\nclass Line extends Mark {\n  constructor(data, options = {}) {\n    const {\n      x,\n      y,\n      z,\n      curve,\n      tension\n    } = options;\n    super(data, {\n      x: {\n        value: x,\n        scale: "x"\n      },\n      y: {\n        value: y,\n        scale: "y"\n      },\n      z: {\n        value: maybeZ(options),\n        optional: true\n      }\n    }, options, line_defaults);\n    this.z = z;\n    this.curve = maybeCurveAuto(curve, tension);\n    markers(this, options);\n  }\n  filter(index) {\n    return index;\n  }\n  project(channels, values, context) {\n    // For the auto curve, projection is handled at render.\n    if (this.curve !== curveAuto) {\n      super.project(channels, values, context);\n    }\n  }\n  render(index, scales, channels, dimensions, context) {\n    const {\n      x: X,\n      y: Y\n    } = channels;\n    const {\n      curve\n    } = this;\n    return create("svg:g", context).call(applyIndirectStyles, this, dimensions, context).call(applyTransform, this, scales).call(g => g.selectAll().data(groupIndex(index, [X, Y], this, channels)).enter().append("path").call(applyDirectStyles, this).call(applyGroupedChannelStyles, this, channels).call(applyGroupedMarkers, this, channels, context).attr("d", curve === curveAuto && context.projection ? sphereLine(context.projection, X, Y) : (0,src.line)().curve(curve).defined(i => i >= 0).x(i => X[i]).y(i => Y[i]))).node();\n  }\n}\nfunction sphereLine(projection, X, Y) {\n  const path = (0,src.geoPath)(projection);\n  X = coerceNumbers(X);\n  Y = coerceNumbers(Y);\n  return I => {\n    let line = [];\n    const lines = [line];\n    for (const i of I) {\n      // Check for undefined value; see groupIndex.\n      if (i === -1) {\n        line = [];\n        lines.push(line);\n      } else {\n        line.push([X[i], Y[i]]);\n      }\n    }\n    return path({\n      type: "MultiLineString",\n      coordinates: lines\n    });\n  };\n}\nfunction line(data, {\n  x,\n  y,\n  ...options\n} = {}) {\n  [x, y] = maybeTuple(x, y);\n  return new Line(data, {\n    ...options,\n    x,\n    y\n  });\n}\nfunction lineX(data, {\n  x = identity,\n  y = indexOf,\n  ...options\n} = {}) {\n  return new Line(data, maybeDenseIntervalY({\n    ...options,\n    x,\n    y\n  }));\n}\nfunction lineY(data, {\n  x = indexOf,\n  y = identity,\n  ...options\n} = {}) {\n  return new Line(data, maybeDenseIntervalX({\n    ...options,\n    x,\n    y\n  }));\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/marks/rect.js\n\n\n\n\n\n\n\n\n\nconst rect_defaults = {\n  ariaLabel: "rect"\n};\nclass Rect extends Mark {\n  constructor(data, options = {}) {\n    const {\n      x1,\n      y1,\n      x2,\n      y2,\n      inset = 0,\n      insetTop = inset,\n      insetRight = inset,\n      insetBottom = inset,\n      insetLeft = inset,\n      rx,\n      ry\n    } = options;\n    super(data, {\n      x1: {\n        value: x1,\n        scale: "x",\n        optional: true\n      },\n      y1: {\n        value: y1,\n        scale: "y",\n        optional: true\n      },\n      x2: {\n        value: x2,\n        scale: "x",\n        optional: true\n      },\n      y2: {\n        value: y2,\n        scale: "y",\n        optional: true\n      }\n    }, options, rect_defaults);\n    this.insetTop = number(insetTop);\n    this.insetRight = number(insetRight);\n    this.insetBottom = number(insetBottom);\n    this.insetLeft = number(insetLeft);\n    this.rx = impliedString(rx, "auto"); // number or percentage\n    this.ry = impliedString(ry, "auto");\n  }\n  render(index, scales, channels, dimensions, context) {\n    const {\n      x,\n      y\n    } = scales;\n    const {\n      x1: X1,\n      y1: Y1,\n      x2: X2,\n      y2: Y2\n    } = channels;\n    const {\n      marginTop,\n      marginRight,\n      marginBottom,\n      marginLeft,\n      width,\n      height\n    } = dimensions;\n    const {\n      projection\n    } = context;\n    const {\n      insetTop,\n      insetRight,\n      insetBottom,\n      insetLeft,\n      rx,\n      ry\n    } = this;\n    return create("svg:g", context).call(applyIndirectStyles, this, dimensions, context).call(applyTransform, this, {\n      x: X1 && X2 && x,\n      y: Y1 && Y2 && y\n    }, 0, 0).call(g => g.selectAll().data(index).enter().append("rect").call(applyDirectStyles, this).attr("x", X1 && X2 && (projection || !isCollapsed(x)) ? i => Math.min(X1[i], X2[i]) + insetLeft : marginLeft + insetLeft).attr("y", Y1 && Y2 && (projection || !isCollapsed(y)) ? i => Math.min(Y1[i], Y2[i]) + insetTop : marginTop + insetTop).attr("width", X1 && X2 && (projection || !isCollapsed(x)) ? i => Math.max(0, Math.abs(X2[i] - X1[i]) - insetLeft - insetRight) : width - marginRight - marginLeft - insetRight - insetLeft).attr("height", Y1 && Y2 && (projection || !isCollapsed(y)) ? i => Math.max(0, Math.abs(Y1[i] - Y2[i]) - insetTop - insetBottom) : height - marginTop - marginBottom - insetTop - insetBottom).call(applyAttr, "rx", rx).call(applyAttr, "ry", ry).call(applyChannelStyles, this, channels)).node();\n  }\n}\nfunction rect(data, options) {\n  return new Rect(data, maybeTrivialIntervalX(maybeTrivialIntervalY(options)));\n}\nfunction rectX(data, options = {}) {\n  if (!hasXY(options)) options = {\n    ...options,\n    y: indexOf,\n    x2: identity,\n    interval: 1\n  };\n  return new Rect(data, maybeStackX(maybeTrivialIntervalY(maybeIdentityX(options))));\n}\nfunction rectY(data, options = {}) {\n  if (!hasXY(options)) options = {\n    ...options,\n    x: indexOf,\n    y2: identity,\n    interval: 1\n  };\n  return new Rect(data, maybeStackY(maybeTrivialIntervalX(maybeIdentityY(options))));\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/marks/auto.js\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction autoSpec(data, options) {\n  options = normalizeOptions(options);\n\n  // Greedily materialize columns for type inference; we’ll need them anyway to\n  // plot! Note that we don’t apply any type inference to the fx and fy\n  // channels, if present; these are always ordinal (at least for now).\n  const {\n    x,\n    y,\n    color,\n    size\n  } = options;\n  const X = materializeValue(data, x);\n  const Y = materializeValue(data, y);\n  const C = materializeValue(data, color);\n  const S = materializeValue(data, size);\n\n  // Compute the default options.\n  let {\n    fx,\n    fy,\n    x: {\n      value: xValue,\n      reduce: xReduce,\n      zero: xZero,\n      ...xOptions\n    },\n    y: {\n      value: yValue,\n      reduce: yReduce,\n      zero: yZero,\n      ...yOptions\n    },\n    color: {\n      value: colorValue,\n      color: colorColor,\n      reduce: colorReduce\n    },\n    size: {\n      value: sizeValue,\n      reduce: sizeReduce\n    },\n    // TODO constant radius?\n    mark\n  } = options;\n\n  // Determine the default reducer, if any.\n  if (xReduce === undefined) xReduce = yReduce == null && xValue == null && sizeValue == null && yValue != null ? "count" : null;\n  if (yReduce === undefined) yReduce = xReduce == null && yValue == null && sizeValue == null && xValue != null ? "count" : null;\n\n  // Determine the default size reducer, if any.\n  if (sizeReduce === undefined && sizeValue == null && colorReduce == null && xReduce == null && yReduce == null && (xValue == null || isOrdinal(X)) && (yValue == null || isOrdinal(Y))) {\n    sizeReduce = "count";\n  }\n\n  // Determine the default zero-ness.\n  if (xZero === undefined) xZero = isZeroReducer(xReduce) ? true : undefined;\n  if (yZero === undefined) yZero = isZeroReducer(yReduce) ? true : undefined;\n\n  // TODO Shorthand: array of primitives should result in a histogram\n  if (xValue == null && yValue == null) throw new Error("must specify x or y");\n  if (xReduce != null && yValue == null) throw new Error("reducing x requires y");\n  if (yReduce != null && xValue == null) throw new Error("reducing y requires x");\n\n  // Determine the default mark type.\n  if (mark === undefined) {\n    mark = sizeValue != null || sizeReduce != null ? "dot" : isZeroReducer(xReduce) || isZeroReducer(yReduce) || colorReduce != null // histogram or heatmap\n    ? "bar" : xValue != null && yValue != null ? isOrdinal(X) || isOrdinal(Y) || xReduce == null && yReduce == null && !isMonotonic(X) && !isMonotonic(Y) ? "dot" : "line" : xValue != null || yValue != null ? "rule" : null;\n  }\n  let Z; // may be set to null to disable series-by-color for line and area\n  let colorMode; // "fill" or "stroke"\n\n  // Determine the mark implementation.\n  let markImpl;\n  switch (mark) {\n    case "dot":\n      markImpl = dot;\n      colorMode = "stroke";\n      break;\n    case "line":\n      markImpl = X && Y || xReduce != null || yReduce != null // same logic as area (see below), but default to line\n      ? yZero || yReduce != null || X && isMonotonic(X) ? lineY : xZero || xReduce != null || Y && isMonotonic(Y) ? lineX : line : X // 1d line by index\n      ? lineX : lineY;\n      colorMode = "stroke";\n      if (isHighCardinality(C)) Z = null; // TODO only if z not set by user\n      break;\n    case "area":\n      markImpl = !(yZero || yReduce != null) && (xZero || xReduce != null || Y && isMonotonic(Y)) ? areaX : areaY; // favor areaY if unsure\n      colorMode = "fill";\n      if (isHighCardinality(C)) Z = null; // TODO only if z not set by user\n      break;\n    case "rule":\n      markImpl = X ? ruleX : ruleY;\n      colorMode = "stroke";\n      break;\n    case "bar":\n      markImpl = xReduce != null // bin or group on y\n      ? isOrdinal(Y) ? isSelectReducer(xReduce) && X && isOrdinal(X) ? cell : barX : rectX : yReduce != null // bin or group on x\n      ? isOrdinal(X) ? isSelectReducer(yReduce) && Y && isOrdinal(Y) ? cell : barY : rectY : colorReduce != null || sizeReduce != null // bin or group on both x and y\n      ? X && isOrdinal(X) && Y && isOrdinal(Y) ? cell : X && isOrdinal(X) ? barY : Y && isOrdinal(Y) ? barX : rect : X && isNumeric(X) && !(Y && isNumeric(Y)) ? barX // if y is temporal, treat as ordinal\n      : Y && isNumeric(Y) && !(X && isNumeric(X)) ? barY // if x is temporal, treat as ordinal\n      : cell;\n      colorMode = "fill";\n      break;\n    default:\n      throw new Error(`invalid mark: ${mark}`);\n  }\n\n  // Determine the mark options.\n  let markOptions = {\n    fx,\n    fy,\n    x: X ?? undefined,\n    // treat null x as undefined for implicit stack\n    y: Y ?? undefined,\n    // treat null y as undefined for implicit stack\n    [colorMode]: C ?? colorColor,\n    z: Z,\n    r: S ?? undefined,\n    // treat null size as undefined for default constant radius\n    tip: true\n  };\n  let transformImpl;\n  let transformOptions = {\n    [colorMode]: colorReduce ?? undefined,\n    r: sizeReduce ?? undefined\n  };\n  if (xReduce != null && yReduce != null) {\n    throw new Error(`cannot reduce both x and y`); // for now at least\n  } else if (yReduce != null) {\n    transformOptions.y = yReduce;\n    transformImpl = isOrdinal(X) ? groupX : binX;\n  } else if (xReduce != null) {\n    transformOptions.x = xReduce;\n    transformImpl = isOrdinal(Y) ? groupY : binY;\n  } else if (colorReduce != null || sizeReduce != null) {\n    if (X && Y) {\n      transformImpl = isOrdinal(X) && isOrdinal(Y) ? group : isOrdinal(X) ? binY : isOrdinal(Y) ? binX : bin;\n    } else if (X) {\n      transformImpl = isOrdinal(X) ? groupX : binX;\n    } else if (Y) {\n      transformImpl = isOrdinal(Y) ? groupY : binY;\n    }\n  }\n\n  // When using the bin transform, pass through additional options (e.g., thresholds).\n  if (transformImpl === bin || transformImpl === binX) markOptions.x = {\n    value: X,\n    ...xOptions\n  };\n  if (transformImpl === bin || transformImpl === binY) markOptions.y = {\n    value: Y,\n    ...yOptions\n  };\n\n  // If zero-ness is not specified, default based on whether the resolved mark\n  // type will include a zero baseline.\n  if (xZero === undefined) xZero = X && !(transformImpl === bin || transformImpl === binX) && (markImpl === barX || markImpl === areaX || markImpl === rectX || markImpl === ruleY);\n  if (yZero === undefined) yZero = Y && !(transformImpl === bin || transformImpl === binY) && (markImpl === barY || markImpl === areaY || markImpl === rectY || markImpl === ruleX);\n  return {\n    fx: fx ?? null,\n    fy: fy ?? null,\n    x: {\n      value: xValue ?? null,\n      reduce: xReduce ?? null,\n      zero: !!xZero,\n      ...xOptions\n    },\n    y: {\n      value: yValue ?? null,\n      reduce: yReduce ?? null,\n      zero: !!yZero,\n      ...yOptions\n    },\n    color: {\n      value: colorValue ?? null,\n      reduce: colorReduce ?? null,\n      ...(colorColor !== undefined && {\n        color: colorColor\n      })\n    },\n    size: {\n      value: sizeValue ?? null,\n      reduce: sizeReduce ?? null\n    },\n    mark,\n    markImpl: implNames[markImpl],\n    markOptions,\n    transformImpl: implNames[transformImpl],\n    transformOptions,\n    colorMode\n  };\n}\nfunction auto(data, options) {\n  const spec = autoSpec(data, options);\n  const {\n    fx,\n    fy,\n    x: {\n      zero: xZero\n    },\n    y: {\n      zero: yZero\n    },\n    markOptions,\n    transformOptions,\n    colorMode\n  } = spec;\n  const markImpl = impls[spec.markImpl];\n  const transformImpl = impls[spec.transformImpl];\n  // In the case of filled marks (particularly bars and areas) the frame and\n  // rules should come after the mark; in the case of stroked marks\n  // (particularly dots and lines) they should come before the mark.\n  const frames = fx != null || fy != null ? frame_frame({\n    strokeOpacity: 0.1\n  }) : null;\n  const rules = [xZero ? ruleX([0]) : null, yZero ? ruleY([0]) : null];\n  const mark = markImpl(data, transformImpl ? transformImpl(transformOptions, markOptions) : markOptions);\n  return colorMode === "stroke" ? marks(frames, rules, mark) : marks(frames, mark, rules);\n}\n\n// TODO What about sorted within series?\nfunction isMonotonic(values) {\n  let previous;\n  let previousOrder;\n  for (const value of values) {\n    if (value == null) continue;\n    if (previous === undefined) {\n      previous = value;\n      continue;\n    }\n    const order = Math.sign((0,src.ascending)(previous, value));\n    if (!order) continue; // skip zero, NaN\n    if (previousOrder !== undefined && order !== previousOrder) return false;\n    previous = value;\n    previousOrder = order;\n  }\n  return true;\n}\n\n// Allow x and y and other dimensions to be specified as shorthand field names\n// (but note that they can also be specified as a {transform} object such as\n// Plot.identity). We don’t support reducers for the faceting, but for symmetry\n// with x and y we allow facets to be specified as {value} objects.\nfunction normalizeOptions({\n  x,\n  y,\n  color,\n  size,\n  fx,\n  fy,\n  mark\n} = {}) {\n  if (!isOptions(x)) x = makeOptions(x);\n  if (!isOptions(y)) y = makeOptions(y);\n  if (!isOptions(color)) color = isColor(color) ? {\n    color\n  } : makeOptions(color);\n  if (!isOptions(size)) size = makeOptions(size);\n  if (isOptions(fx)) ({\n    value: fx\n  } = makeOptions(fx));\n  if (isOptions(fy)) ({\n    value: fy\n  } = makeOptions(fy));\n  if (mark != null) mark = `${mark}`.toLowerCase();\n  return {\n    x,\n    y,\n    color,\n    size,\n    fx,\n    fy,\n    mark\n  };\n}\n\n// To apply heuristics based on the data types (values), realize the columns. We\n// could maybe look at the data.schema here, but Plot’s behavior depends on the\n// actual values anyway, so this probably is what we want.\nfunction materializeValue(data, options) {\n  const V = valueof(data, options.value);\n  if (V) V.label = labelof(options.value);\n  return V;\n}\nfunction makeOptions(value) {\n  return isReducer(value) ? {\n    reduce: value\n  } : {\n    value\n  };\n}\n\n// The distinct, count, sum, and proportion reducers are additive (stackable).\nfunction isZeroReducer(reduce) {\n  return /^(?:distinct|count|sum|proportion)$/i.test(reduce);\n}\n\n// The first, last, and mode reducers preserve the type of the aggregated values.\nfunction isSelectReducer(reduce) {\n  return /^(?:first|last|mode)$/i.test(reduce);\n}\n\n// https://github.com/observablehq/plot/blob/818562649280e155136f730fc496e0b3d15ae464/src/transforms/group.js#L236\nfunction isReducer(reduce) {\n  if (reduce == null) return false;\n  if (typeof reduce.reduceIndex === "function") return true;\n  if (typeof reduce.reduce === "function" && isObject(reduce)) return true; // N.B. array.reduce\n  if (/^p\\d{2}$/i.test(reduce)) return true;\n  switch (`${reduce}`.toLowerCase()) {\n    case "first":\n    case "last":\n    case "count":\n    case "distinct":\n    case "sum":\n    case "proportion":\n    case "proportion-facet": // TODO remove me?\n    case "deviation":\n    case "min":\n    case "min-index": // TODO remove me?\n    case "max":\n    case "max-index": // TODO remove me?\n    case "mean":\n    case "median":\n    case "variance":\n    case "mode":\n      // These are technically reducers, but I think we’d want to treat them as fields?\n      // case "x":\n      // case "x1":\n      // case "x2":\n      // case "y":\n      // case "y1":\n      // case "y2":\n      return true;\n  }\n  return false;\n}\nfunction isHighCardinality(value) {\n  return value ? new src.InternSet(value).size > value.length >> 1 : false;\n}\nconst impls = {\n  dot: dot,\n  line: line,\n  lineX: lineX,\n  lineY: lineY,\n  areaX: areaX,\n  areaY: areaY,\n  ruleX: ruleX,\n  ruleY: ruleY,\n  barX: barX,\n  barY: barY,\n  rect: rect,\n  rectX: rectX,\n  rectY: rectY,\n  cell: cell,\n  bin: bin,\n  binX: binX,\n  binY: binY,\n  group: group,\n  groupX: groupX,\n  groupY: groupY\n};\n\n// Instead of returning the mark or transform implementation directly, we return\n// the implementation name to facilitate code compilation (“eject to explicit\n// marks”). An implementation-to-name mapping needs to live somewhere for\n// compilation, and by having it in Plot we can more easily introduce a new mark\n// or transform implementation in Plot.auto without having to synchronize a\n// downstream change in the compiler.\nconst implNames = Object.fromEntries(Object.entries(impls).map(([name, impl]) => [impl, name]));\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/transforms/map.js\n\n\n\nfunction mapX(mapper, options = {}) {\n  let {\n    x,\n    x1,\n    x2\n  } = options;\n  if (x === undefined && x1 === undefined && x2 === undefined) options = {\n    ...options,\n    x: x = identity\n  };\n  const outputs = {};\n  if (x != null) outputs.x = mapper;\n  if (x1 != null) outputs.x1 = mapper;\n  if (x2 != null) outputs.x2 = mapper;\n  return map_map(outputs, options);\n}\nfunction mapY(mapper, options = {}) {\n  let {\n    y,\n    y1,\n    y2\n  } = options;\n  if (y === undefined && y1 === undefined && y2 === undefined) options = {\n    ...options,\n    y: y = identity\n  };\n  const outputs = {};\n  if (y != null) outputs.y = mapper;\n  if (y1 != null) outputs.y1 = mapper;\n  if (y2 != null) outputs.y2 = mapper;\n  return map_map(outputs, options);\n}\nfunction map_map(outputs = {}, options = {}) {\n  const z = maybeZ(options);\n  const channels = Object.entries(outputs).map(([key, map]) => {\n    const input = maybeInput(key, options);\n    if (input == null) throw new Error(`missing channel: ${key}`);\n    const [output, setOutput] = column(input);\n    return {\n      key,\n      input,\n      output,\n      setOutput,\n      map: maybeMap(map)\n    };\n  });\n  return {\n    ...basic(options, (data, facets) => {\n      const Z = valueof(data, z);\n      const X = channels.map(({\n        input\n      }) => valueof(data, input));\n      const MX = channels.map(({\n        setOutput\n      }) => setOutput(new Array(data.length)));\n      for (const facet of facets) {\n        for (const I of Z ? (0,src.group)(facet, i => Z[i]).values() : [facet]) {\n          channels.forEach(({\n            map\n          }, i) => map.mapIndex(I, X[i], MX[i]));\n        }\n      }\n      return {\n        data,\n        facets\n      };\n    }),\n    ...Object.fromEntries(channels.map(({\n      key,\n      output\n    }) => [key, output]))\n  };\n}\nfunction maybeMap(map) {\n  if (map == null) throw new Error("missing map");\n  if (typeof map.mapIndex === "function") return map;\n  if (typeof map.map === "function" && isObject(map)) return mapMap(map); // N.B. array.map\n  if (typeof map === "function") return mapFunction(taker(map));\n  switch (`${map}`.toLowerCase()) {\n    case "cumsum":\n      return mapCumsum;\n    case "rank":\n      return mapFunction((I, V) => (0,src.rank)(I, i => V[i]));\n    case "quantile":\n      return mapFunction((I, V) => rankQuantile(I, i => V[i]));\n  }\n  throw new Error(`invalid map: ${map}`);\n}\nfunction mapMap(map) {\n  console.warn("deprecated map interface; implement mapIndex instead.");\n  return {\n    mapIndex: map.map.bind(map)\n  };\n}\nfunction rankQuantile(I, f) {\n  const n = (0,src.count)(I, f) - 1;\n  return (0,src.rank)(I, f).map(r => r / n);\n}\nfunction mapFunction(f) {\n  return {\n    mapIndex(I, S, T) {\n      const M = f(I, S);\n      if (M.length !== I.length) throw new Error("map function returned a mismatched length");\n      for (let i = 0, n = I.length; i < n; ++i) T[I[i]] = M[i];\n    }\n  };\n}\nconst mapCumsum = {\n  mapIndex(I, S, T) {\n    let sum = 0;\n    for (const i of I) T[i] = sum += S[i];\n  }\n};\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/transforms/window.js\n\n\n\n\n\nfunction windowX(windowOptions = {}, options) {\n  if (arguments.length === 1) options = windowOptions;\n  return mapX(window_window(windowOptions), options);\n}\nfunction windowY(windowOptions = {}, options) {\n  if (arguments.length === 1) options = windowOptions;\n  return mapY(window_window(windowOptions), options);\n}\nfunction window_window(options = {}) {\n  if (typeof options === "number") options = {\n    k: options\n  };\n  let {\n    k,\n    reduce,\n    shift,\n    anchor,\n    strict\n  } = options;\n  if (anchor === undefined && shift !== undefined) {\n    anchor = maybeShift(shift);\n    warn(`Warning: the shift option is deprecated; please use anchor "${anchor}" instead.`);\n  }\n  if (!((k = Math.floor(k)) > 0)) throw new Error(`invalid k: ${k}`);\n  return window_maybeReduce(reduce)(k, window_maybeAnchor(anchor, k), strict);\n}\nfunction window_maybeAnchor(anchor = "middle", k) {\n  switch (`${anchor}`.toLowerCase()) {\n    case "middle":\n      return k - 1 >> 1;\n    case "start":\n      return 0;\n    case "end":\n      return k - 1;\n  }\n  throw new Error(`invalid anchor: ${anchor}`);\n}\nfunction maybeShift(shift) {\n  switch (`${shift}`.toLowerCase()) {\n    case "centered":\n      return "middle";\n    case "leading":\n      return "start";\n    case "trailing":\n      return "end";\n  }\n  throw new Error(`invalid shift: ${shift}`);\n}\nfunction window_maybeReduce(reduce = "mean") {\n  if (typeof reduce === "string") {\n    if (/^p\\d{2}$/i.test(reduce)) return window_reduceAccessor(percentile(reduce));\n    switch (reduce.toLowerCase()) {\n      case "deviation":\n        return window_reduceAccessor(src.deviation);\n      case "max":\n        return reduceArray((I, V) => (0,src.max)(I, i => V[i]));\n      case "mean":\n        return reduceMean;\n      case "median":\n        return window_reduceAccessor(src.median);\n      case "min":\n        return reduceArray((I, V) => (0,src.min)(I, i => V[i]));\n      case "mode":\n        return reduceArray((I, V) => (0,src.mode)(I, i => V[i]));\n      case "sum":\n        return window_reduceSum;\n      case "variance":\n        return window_reduceAccessor(src.variance);\n      case "difference":\n        return reduceDifference;\n      case "ratio":\n        return reduceRatio;\n      case "first":\n        return window_reduceFirst;\n      case "last":\n        return window_reduceLast;\n    }\n  }\n  if (typeof reduce !== "function") throw new Error(`invalid reduce: ${reduce}`);\n  return reduceArray(taker(reduce));\n}\n\n// Note that the subarray may include NaN in the non-strict case; we expect the\n// function f to handle that itself (e.g., by filtering as needed). The D3\n// reducers (e.g., min, max, mean, median) do, and it’s faster to avoid\n// redundant filtering.\nfunction window_reduceAccessor(f) {\n  return (k, s, strict) => strict ? {\n    mapIndex(I, S, T) {\n      const v = i => S[i] == null ? NaN : +S[i];\n      let nans = 0;\n      for (let i = 0; i < k - 1; ++i) if (isNaN(v(i))) ++nans;\n      for (let i = 0, n = I.length - k + 1; i < n; ++i) {\n        if (isNaN(v(i + k - 1))) ++nans;\n        T[I[i + s]] = nans === 0 ? f(subarray(I, i, i + k), v) : NaN;\n        if (isNaN(v(i))) --nans;\n      }\n    }\n  } : {\n    mapIndex(I, S, T) {\n      const v = i => S[i] == null ? NaN : +S[i];\n      for (let i = -s; i < 0; ++i) {\n        T[I[i + s]] = f(subarray(I, 0, i + k), v);\n      }\n      for (let i = 0, n = I.length - s; i < n; ++i) {\n        T[I[i + s]] = f(subarray(I, i, i + k), v);\n      }\n    }\n  };\n}\nfunction reduceArray(f) {\n  return (k, s, strict) => strict ? {\n    mapIndex(I, S, T) {\n      let count = 0;\n      for (let i = 0; i < k - 1; ++i) count += defined(S[I[i]]);\n      for (let i = 0, n = I.length - k + 1; i < n; ++i) {\n        count += defined(S[I[i + k - 1]]);\n        if (count === k) T[I[i + s]] = f(subarray(I, i, i + k), S);\n        count -= defined(S[I[i]]);\n      }\n    }\n  } : {\n    mapIndex(I, S, T) {\n      for (let i = -s; i < 0; ++i) {\n        T[I[i + s]] = f(subarray(I, 0, i + k), S);\n      }\n      for (let i = 0, n = I.length - s; i < n; ++i) {\n        T[I[i + s]] = f(subarray(I, i, i + k), S);\n      }\n    }\n  };\n}\nfunction window_reduceSum(k, s, strict) {\n  return strict ? {\n    mapIndex(I, S, T) {\n      let nans = 0;\n      let sum = 0;\n      for (let i = 0; i < k - 1; ++i) {\n        const v = S[I[i]];\n        if (v === null || isNaN(v)) ++nans;else sum += +v;\n      }\n      for (let i = 0, n = I.length - k + 1; i < n; ++i) {\n        const a = S[I[i]];\n        const b = S[I[i + k - 1]];\n        if (b === null || isNaN(b)) ++nans;else sum += +b;\n        T[I[i + s]] = nans === 0 ? sum : NaN;\n        if (a === null || isNaN(a)) --nans;else sum -= +a;\n      }\n    }\n  } : {\n    mapIndex(I, S, T) {\n      let sum = 0;\n      const n = I.length;\n      for (let i = 0, j = Math.min(n, k - s - 1); i < j; ++i) {\n        sum += +S[I[i]] || 0;\n      }\n      for (let i = -s, j = n - s; i < j; ++i) {\n        sum += +S[I[i + k - 1]] || 0;\n        T[I[i + s]] = sum;\n        sum -= +S[I[i]] || 0;\n      }\n    }\n  };\n}\nfunction reduceMean(k, s, strict) {\n  if (strict) {\n    const sum = window_reduceSum(k, s, strict);\n    return {\n      mapIndex(I, S, T) {\n        sum.mapIndex(I, S, T);\n        for (let i = 0, n = I.length - k + 1; i < n; ++i) {\n          T[I[i + s]] /= k;\n        }\n      }\n    };\n  } else {\n    return {\n      mapIndex(I, S, T) {\n        let sum = 0;\n        let count = 0;\n        const n = I.length;\n        for (let i = 0, j = Math.min(n, k - s - 1); i < j; ++i) {\n          let v = S[I[i]];\n          if (v !== null && !isNaN(v = +v)) sum += v, ++count;\n        }\n        for (let i = -s, j = n - s; i < j; ++i) {\n          let a = S[I[i + k - 1]];\n          let b = S[I[i]];\n          if (a !== null && !isNaN(a = +a)) sum += a, ++count;\n          T[I[i + s]] = sum / count;\n          if (b !== null && !isNaN(b = +b)) sum -= b, --count;\n        }\n      }\n    };\n  }\n}\nfunction firstDefined(S, I, i, k) {\n  for (let j = i + k; i < j; ++i) {\n    const v = S[I[i]];\n    if (defined(v)) return v;\n  }\n}\nfunction lastDefined(S, I, i, k) {\n  for (let j = i + k - 1; j >= i; --j) {\n    const v = S[I[j]];\n    if (defined(v)) return v;\n  }\n}\nfunction firstNumber(S, I, i, k) {\n  for (let j = i + k; i < j; ++i) {\n    let v = S[I[i]];\n    if (v !== null && !isNaN(v = +v)) return v;\n  }\n}\nfunction lastNumber(S, I, i, k) {\n  for (let j = i + k - 1; j >= i; --j) {\n    let v = S[I[j]];\n    if (v !== null && !isNaN(v = +v)) return v;\n  }\n}\nfunction reduceDifference(k, s, strict) {\n  return strict ? {\n    mapIndex(I, S, T) {\n      for (let i = 0, n = I.length - k; i < n; ++i) {\n        const a = S[I[i]];\n        const b = S[I[i + k - 1]];\n        T[I[i + s]] = a === null || b === null ? NaN : b - a;\n      }\n    }\n  } : {\n    mapIndex(I, S, T) {\n      for (let i = -s, n = I.length - k + s + 1; i < n; ++i) {\n        T[I[i + s]] = lastNumber(S, I, i, k) - firstNumber(S, I, i, k);\n      }\n    }\n  };\n}\nfunction reduceRatio(k, s, strict) {\n  return strict ? {\n    mapIndex(I, S, T) {\n      for (let i = 0, n = I.length - k; i < n; ++i) {\n        const a = S[I[i]];\n        const b = S[I[i + k - 1]];\n        T[I[i + s]] = a === null || b === null ? NaN : b / a;\n      }\n    }\n  } : {\n    mapIndex(I, S, T) {\n      for (let i = -s, n = I.length - k + s + 1; i < n; ++i) {\n        T[I[i + s]] = lastNumber(S, I, i, k) / firstNumber(S, I, i, k);\n      }\n    }\n  };\n}\nfunction window_reduceFirst(k, s, strict) {\n  return strict ? {\n    mapIndex(I, S, T) {\n      for (let i = 0, n = I.length - k; i < n; ++i) {\n        T[I[i + s]] = S[I[i]];\n      }\n    }\n  } : {\n    mapIndex(I, S, T) {\n      for (let i = -s, n = I.length - k + s + 1; i < n; ++i) {\n        T[I[i + s]] = firstDefined(S, I, i, k);\n      }\n    }\n  };\n}\nfunction window_reduceLast(k, s, strict) {\n  return strict ? {\n    mapIndex(I, S, T) {\n      for (let i = 0, n = I.length - k; i < n; ++i) {\n        T[I[i + s]] = S[I[i + k - 1]];\n      }\n    }\n  } : {\n    mapIndex(I, S, T) {\n      for (let i = -s, n = I.length - k + s + 1; i < n; ++i) {\n        T[I[i + s]] = lastDefined(S, I, i, k);\n      }\n    }\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/marks/bollinger.js\n\n\n\n\n\n\n\nconst bollinger_defaults = {\n  n: 20,\n  k: 2,\n  color: "currentColor",\n  opacity: 0.2,\n  strict: true,\n  anchor: "end"\n};\nfunction bollingerX(data, {\n  x = identity,\n  y,\n  k = bollinger_defaults.k,\n  color = bollinger_defaults.color,\n  opacity = bollinger_defaults.opacity,\n  fill = color,\n  fillOpacity = opacity,\n  stroke = color,\n  strokeOpacity,\n  strokeWidth,\n  ...options\n} = {}) {\n  return marks(isNoneish(fill) ? null : areaX(data, map_map({\n    x1: bollinger({\n      k: -k,\n      ...options\n    }),\n    x2: bollinger({\n      k,\n      ...options\n    })\n  }, {\n    x1: x,\n    x2: x,\n    y,\n    fill,\n    fillOpacity,\n    ...options\n  })), isNoneish(stroke) ? null : lineX(data, map_map({\n    x: bollinger(options)\n  }, {\n    x,\n    y,\n    stroke,\n    strokeOpacity,\n    strokeWidth,\n    ...options\n  })));\n}\nfunction bollingerY(data, {\n  x,\n  y = identity,\n  k = bollinger_defaults.k,\n  color = bollinger_defaults.color,\n  opacity = bollinger_defaults.opacity,\n  fill = color,\n  fillOpacity = opacity,\n  stroke = color,\n  strokeOpacity,\n  strokeWidth,\n  ...options\n} = {}) {\n  return marks(isNoneish(fill) ? null : areaY(data, map_map({\n    y1: bollinger({\n      k: -k,\n      ...options\n    }),\n    y2: bollinger({\n      k,\n      ...options\n    })\n  }, {\n    x,\n    y1: y,\n    y2: y,\n    fill,\n    fillOpacity,\n    ...options\n  })), isNoneish(stroke) ? null : lineY(data, map_map({\n    y: bollinger(options)\n  }, {\n    x,\n    y,\n    stroke,\n    strokeOpacity,\n    strokeWidth,\n    ...options\n  })));\n}\nfunction bollinger({\n  n = bollinger_defaults.n,\n  k = 0,\n  strict = bollinger_defaults.strict,\n  anchor = bollinger_defaults.anchor\n} = {}) {\n  return window_window({\n    k: n,\n    reduce: Y => (0,src.mean)(Y) + k * ((0,src.deviation)(Y) || 0),\n    strict,\n    anchor\n  });\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/marks/tick.js\n\n\n\n\n\nconst tick_defaults = {\n  ariaLabel: "tick",\n  fill: null,\n  stroke: "currentColor"\n};\nclass AbstractTick extends Mark {\n  constructor(data, channels, options) {\n    super(data, channels, options, tick_defaults);\n    markers(this, options);\n  }\n  render(index, scales, channels, dimensions, context) {\n    return create("svg:g", context).call(applyIndirectStyles, this, dimensions, context).call(this._transform, this, scales).call(g => g.selectAll().data(index).enter().append("line").call(applyDirectStyles, this).attr("x1", this._x1(scales, channels, dimensions)).attr("x2", this._x2(scales, channels, dimensions)).attr("y1", this._y1(scales, channels, dimensions)).attr("y2", this._y2(scales, channels, dimensions)).call(applyChannelStyles, this, channels).call(applyMarkers, this, channels, context)).node();\n  }\n}\nclass TickX extends AbstractTick {\n  constructor(data, options = {}) {\n    const {\n      x,\n      y,\n      inset = 0,\n      insetTop = inset,\n      insetBottom = inset\n    } = options;\n    super(data, {\n      x: {\n        value: x,\n        scale: "x"\n      },\n      y: {\n        value: y,\n        scale: "y",\n        type: "band",\n        optional: true\n      }\n    }, options);\n    this.insetTop = number(insetTop);\n    this.insetBottom = number(insetBottom);\n  }\n  _transform(selection, mark, {\n    x\n  }) {\n    selection.call(applyTransform, mark, {\n      x\n    }, offset, 0);\n  }\n  _x1(scales, {\n    x: X\n  }) {\n    return i => X[i];\n  }\n  _x2(scales, {\n    x: X\n  }) {\n    return i => X[i];\n  }\n  _y1({\n    y\n  }, {\n    y: Y\n  }, {\n    marginTop\n  }) {\n    const {\n      insetTop\n    } = this;\n    return Y && y ? i => Y[i] + insetTop : marginTop + insetTop;\n  }\n  _y2({\n    y\n  }, {\n    y: Y\n  }, {\n    height,\n    marginBottom\n  }) {\n    const {\n      insetBottom\n    } = this;\n    return Y && y ? i => Y[i] + y.bandwidth() - insetBottom : height - marginBottom - insetBottom;\n  }\n}\nclass TickY extends AbstractTick {\n  constructor(data, options = {}) {\n    const {\n      x,\n      y,\n      inset = 0,\n      insetRight = inset,\n      insetLeft = inset\n    } = options;\n    super(data, {\n      y: {\n        value: y,\n        scale: "y"\n      },\n      x: {\n        value: x,\n        scale: "x",\n        type: "band",\n        optional: true\n      }\n    }, options);\n    this.insetRight = number(insetRight);\n    this.insetLeft = number(insetLeft);\n  }\n  _transform(selection, mark, {\n    y\n  }) {\n    selection.call(applyTransform, mark, {\n      y\n    }, 0, offset);\n  }\n  _x1({\n    x\n  }, {\n    x: X\n  }, {\n    marginLeft\n  }) {\n    const {\n      insetLeft\n    } = this;\n    return X && x ? i => X[i] + insetLeft : marginLeft + insetLeft;\n  }\n  _x2({\n    x\n  }, {\n    x: X\n  }, {\n    width,\n    marginRight\n  }) {\n    const {\n      insetRight\n    } = this;\n    return X && x ? i => X[i] + x.bandwidth() - insetRight : width - marginRight - insetRight;\n  }\n  _y1(scales, {\n    y: Y\n  }) {\n    return i => Y[i];\n  }\n  _y2(scales, {\n    y: Y\n  }) {\n    return i => Y[i];\n  }\n}\nfunction tickX(data, {\n  x = identity,\n  ...options\n} = {}) {\n  return new TickX(data, {\n    ...options,\n    x\n  });\n}\nfunction tickY(data, {\n  y = identity,\n  ...options\n} = {}) {\n  return new TickY(data, {\n    ...options,\n    y\n  });\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/marks/box.js\n\n\n\n\n\n\n\n\n\n\n// Returns a composite mark for producing a horizontal box plot, applying the\n// necessary statistical transforms. The boxes are grouped by y, if present.\nfunction boxX(data, {\n  x = identity,\n  y = null,\n  fill = "#ccc",\n  fillOpacity,\n  stroke = "currentColor",\n  strokeOpacity,\n  strokeWidth = 2,\n  sort,\n  ...options\n} = {}) {\n  const group = y != null ? groupY : groupZ;\n  return marks(ruleY(data, group({\n    x1: loqr1,\n    x2: hiqr2\n  }, {\n    x,\n    y,\n    stroke,\n    strokeOpacity,\n    ...options\n  })), barX(data, group({\n    x1: "p25",\n    x2: "p75"\n  }, {\n    x,\n    y,\n    fill,\n    fillOpacity,\n    ...options\n  })), tickX(data, group({\n    x: "p50"\n  }, {\n    x,\n    y,\n    stroke,\n    strokeOpacity,\n    strokeWidth,\n    sort,\n    ...options\n  })), dot(data, map_map({\n    x: oqr\n  }, {\n    x,\n    y,\n    z: y,\n    stroke,\n    strokeOpacity,\n    ...options\n  })));\n}\n\n// Returns a composite mark for producing a vertical box plot, applying the\n// necessary statistical transforms. The boxes are grouped by x, if present.\nfunction boxY(data, {\n  y = identity,\n  x = null,\n  fill = "#ccc",\n  fillOpacity,\n  stroke = "currentColor",\n  strokeOpacity,\n  strokeWidth = 2,\n  sort,\n  ...options\n} = {}) {\n  const group = x != null ? groupX : groupZ;\n  return marks(ruleX(data, group({\n    y1: loqr1,\n    y2: hiqr2\n  }, {\n    x,\n    y,\n    stroke,\n    strokeOpacity,\n    ...options\n  })), barY(data, group({\n    y1: "p25",\n    y2: "p75"\n  }, {\n    x,\n    y,\n    fill,\n    fillOpacity,\n    ...options\n  })), tickY(data, group({\n    y: "p50"\n  }, {\n    x,\n    y,\n    stroke,\n    strokeOpacity,\n    strokeWidth,\n    sort,\n    ...options\n  })), dot(data, map_map({\n    y: oqr\n  }, {\n    x,\n    y,\n    z: x,\n    stroke,\n    strokeOpacity,\n    ...options\n  })));\n}\n\n// A map function that returns only outliers, returning NaN for non-outliers\nfunction oqr(values) {\n  const r1 = loqr1(values);\n  const r2 = hiqr2(values);\n  return values.map(v => v < r1 || v > r2 ? v : NaN);\n}\nfunction loqr1(values) {\n  const lo = quartile1(values) * 2.5 - quartile3(values) * 1.5;\n  return (0,src.min)(values, d => d >= lo ? d : NaN);\n}\nfunction hiqr2(values) {\n  const hi = quartile3(values) * 2.5 - quartile1(values) * 1.5;\n  return (0,src.max)(values, d => d <= hi ? d : NaN);\n}\nfunction quartile1(values) {\n  return (0,src.quantile)(values, 0.25);\n}\nfunction quartile3(values) {\n  return (0,src.quantile)(values, 0.75);\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/marks/raster.js\n\n\n\n\n\n\n\n\nconst raster_defaults = {\n  ariaLabel: "raster",\n  stroke: null,\n  pixelSize: 1\n};\nfunction raster_number(input, name) {\n  const x = +input;\n  if (isNaN(x)) throw new Error(`invalid ${name}: ${input}`);\n  return x;\n}\nfunction integer(input, name) {\n  const x = Math.floor(input);\n  if (isNaN(x)) throw new Error(`invalid ${name}: ${input}`);\n  return x;\n}\nclass AbstractRaster extends Mark {\n  constructor(data, channels, options = {}, defaults) {\n    let {\n      width,\n      height,\n      x,\n      y,\n      x1 = x == null ? 0 : undefined,\n      y1 = y == null ? 0 : undefined,\n      x2 = x == null ? width : undefined,\n      y2 = y == null ? height : undefined,\n      pixelSize = defaults.pixelSize,\n      blur = 0,\n      interpolate\n    } = options;\n    if (width != null) width = integer(width, "width");\n    if (height != null) height = integer(height, "height");\n    // These represent the (minimum) bounds of the raster; they are not\n    // evaluated for each datum. Also, if x and y are not specified explicitly,\n    // then these bounds are used to compute the dense linear grid.\n    if (x1 != null) x1 = raster_number(x1, "x1");\n    if (y1 != null) y1 = raster_number(y1, "y1");\n    if (x2 != null) x2 = raster_number(x2, "x2");\n    if (y2 != null) y2 = raster_number(y2, "y2");\n    if (x == null && (x1 == null || x2 == null)) throw new Error("missing x");\n    if (y == null && (y1 == null || y2 == null)) throw new Error("missing y");\n    if (data != null && width != null && height != null) {\n      // If x and y are not given, assume the data is a dense array of samples\n      // covering the entire grid in row-major order. These defaults allow\n      // further shorthand where x and y represent grid column and row index.\n      // TODO If we know that the x and y scales are linear, then we could avoid\n      // materializing these columns to improve performance.\n      if (x === undefined && x1 != null && x2 != null) x = denseX(x1, x2, width, height);\n      if (y === undefined && y1 != null && y2 != null) y = denseY(y1, y2, width, height);\n    }\n    super(data, {\n      x: {\n        value: x,\n        scale: "x",\n        optional: true\n      },\n      y: {\n        value: y,\n        scale: "y",\n        optional: true\n      },\n      x1: {\n        value: x1 == null ? null : [x1],\n        scale: "x",\n        optional: true,\n        filter: null\n      },\n      y1: {\n        value: y1 == null ? null : [y1],\n        scale: "y",\n        optional: true,\n        filter: null\n      },\n      x2: {\n        value: x2 == null ? null : [x2],\n        scale: "x",\n        optional: true,\n        filter: null\n      },\n      y2: {\n        value: y2 == null ? null : [y2],\n        scale: "y",\n        optional: true,\n        filter: null\n      },\n      ...channels\n    }, options, defaults);\n    this.width = width;\n    this.height = height;\n    this.pixelSize = raster_number(pixelSize, "pixelSize");\n    this.blur = raster_number(blur, "blur");\n    this.interpolate = x == null || y == null ? null : maybeInterpolate(interpolate); // interpolation requires x & y\n  }\n}\n\nclass Raster extends AbstractRaster {\n  constructor(data, options = {}) {\n    const {\n      imageRendering\n    } = options;\n    if (data == null) {\n      const {\n        fill,\n        fillOpacity\n      } = options;\n      if (maybeNumberChannel(fillOpacity)[0] !== undefined) options = sampler("fillOpacity", options);\n      if (maybeColorChannel(fill)[0] !== undefined) options = sampler("fill", options);\n    }\n    super(data, undefined, options, raster_defaults);\n    this.imageRendering = impliedString(imageRendering, "auto");\n  }\n  // Ignore the color scale, so the fill channel is returned unscaled.\n  scale(channels, {\n    color,\n    ...scales\n  }, context) {\n    return super.scale(channels, scales, context);\n  }\n  render(index, scales, values, dimensions, context) {\n    const color = scales[values.channels.fill?.scale] ?? (x => x);\n    const {\n      x: X,\n      y: Y\n    } = values;\n    const {\n      document\n    } = context;\n    const [x1, y1, x2, y2] = renderBounds(values, dimensions, context);\n    const dx = x2 - x1;\n    const dy = y2 - y1;\n    const {\n      pixelSize: k,\n      width: w = Math.round(Math.abs(dx) / k),\n      height: h = Math.round(Math.abs(dy) / k)\n    } = this;\n    const n = w * h;\n\n    // Interpolate the samples to fill the raster grid. If interpolate is null,\n    // then a continuous function is being sampled, and the raster grid is\n    // already aligned with the canvas.\n    let {\n      fill: F,\n      fillOpacity: FO\n    } = values;\n    let offset = 0;\n    if (this.interpolate) {\n      const kx = w / dx;\n      const ky = h / dy;\n      const IX = map(X, x => (x - x1) * kx, Float64Array);\n      const IY = map(Y, y => (y - y1) * ky, Float64Array);\n      if (F) F = this.interpolate(index, w, h, IX, IY, F);\n      if (FO) FO = this.interpolate(index, w, h, IX, IY, FO);\n    }\n\n    // When faceting without interpolation, as when sampling a continuous\n    // function, offset into the dense grid based on the current facet index.\n    else if (this.data == null && index) offset = index.fi * n;\n\n    // Render the raster grid to the canvas, blurring if needed.\n    const canvas = document.createElement("canvas");\n    canvas.width = w;\n    canvas.height = h;\n    const context2d = canvas.getContext("2d");\n    const image = context2d.createImageData(w, h);\n    const imageData = image.data;\n    let {\n      r,\n      g,\n      b\n    } = (0,src.rgb)(this.fill) ?? {\n      r: 0,\n      g: 0,\n      b: 0\n    };\n    let a = (this.fillOpacity ?? 1) * 255;\n    for (let i = 0; i < n; ++i) {\n      const j = i << 2;\n      if (F) {\n        const fi = color(F[i + offset]);\n        if (fi == null) {\n          imageData[j + 3] = 0;\n          continue;\n        }\n        ({\n          r,\n          g,\n          b\n        } = (0,src.rgb)(fi));\n      }\n      if (FO) a = FO[i + offset] * 255;\n      imageData[j + 0] = r;\n      imageData[j + 1] = g;\n      imageData[j + 2] = b;\n      imageData[j + 3] = a;\n    }\n    if (this.blur > 0) (0,src.blurImage)(image, this.blur);\n    context2d.putImageData(image, 0, 0);\n    return create("svg:g", context).call(applyIndirectStyles, this, dimensions, context).call(applyTransform, this, scales).call(g => g.append("image").attr("transform", `translate(${x1},${y1}) scale(${Math.sign(x2 - x1)},${Math.sign(y2 - y1)})`).attr("width", Math.abs(dx)).attr("height", Math.abs(dy)).attr("preserveAspectRatio", "none").call(applyAttr, "image-rendering", this.imageRendering).call(applyDirectStyles, this).attr("xlink:href", canvas.toDataURL())).node();\n  }\n}\nfunction maybeTuples(k, data, options) {\n  if (arguments.length < 3) options = data, data = null;\n  let {\n    x,\n    y,\n    [k]: z,\n    ...rest\n  } = options;\n  // Because we use implicit x and y when z is a function of (x, y), and when\n  // data is a dense grid, we must further disambiguate by testing whether data\n  // contains [x, y, z?] tuples. Hence you can’t use this shorthand with a\n  // transform that lazily generates tuples, but that seems reasonable since\n  // this is just for convenience anyway.\n  if (x === undefined && y === undefined && isTuples(data)) {\n    x = first, y = second;\n    if (z === undefined) z = third;\n  }\n  return [data, {\n    ...rest,\n    x,\n    y,\n    [k]: z\n  }];\n}\nfunction raster() {\n  const [data, options] = maybeTuples("fill", ...arguments);\n  return new Raster(data, data == null || options.fill !== undefined || options.fillOpacity !== undefined ? options : {\n    ...options,\n    fill: identity\n  });\n}\n\n// See rasterBounds; this version is called during render.\nfunction renderBounds({\n  x1,\n  y1,\n  x2,\n  y2\n}, dimensions, {\n  projection\n}) {\n  const {\n    width,\n    height,\n    marginTop,\n    marginRight,\n    marginBottom,\n    marginLeft\n  } = dimensions;\n  return [x1 && projection == null ? x1[0] : marginLeft, y1 && projection == null ? y1[0] : marginTop, x2 && projection == null ? x2[0] : width - marginRight, y2 && projection == null ? y2[0] : height - marginBottom];\n}\n\n// If x1, y1, x2, y2 were specified, and no projection is in use (and thus the\n// raster grid is necessarily an axis-aligned rectangle), then we can compute\n// tighter bounds for the image, improving resolution.\nfunction rasterBounds({\n  x1,\n  y1,\n  x2,\n  y2\n}, scales, dimensions, context) {\n  const channels = {};\n  if (x1) channels.x1 = x1;\n  if (y1) channels.y1 = y1;\n  if (x2) channels.x2 = x2;\n  if (y2) channels.y2 = y2;\n  return renderBounds(valueObject(channels, scales), dimensions, context);\n}\n\n// Evaluates the function with the given name, if it exists, on the raster grid,\n// generating a channel of the same name.\nfunction sampler(name, options = {}) {\n  const {\n    [name]: value\n  } = options;\n  if (typeof value !== "function") throw new Error(`invalid ${name}: not a function`);\n  return initializer({\n    ...options,\n    [name]: undefined\n  }, function (data, facets, channels, scales, dimensions, context) {\n    const {\n      x,\n      y\n    } = scales;\n    // TODO Allow projections, if invertible.\n    if (!x) throw new Error("missing scale: x");\n    if (!y) throw new Error("missing scale: y");\n    const [x1, y1, x2, y2] = rasterBounds(channels, scales, dimensions, context);\n    const dx = x2 - x1;\n    const dy = y2 - y1;\n    const {\n      pixelSize: k\n    } = this;\n    // Note: this must exactly match the defaults in render above!\n    const {\n      width: w = Math.round(Math.abs(dx) / k),\n      height: h = Math.round(Math.abs(dy) / k)\n    } = options;\n    // TODO Hint to use a typed array when possible?\n    const V = new Array(w * h * (facets ? facets.length : 1));\n    const kx = dx / w;\n    const ky = dy / h;\n    let i = 0;\n    for (const facet of facets ?? [undefined]) {\n      for (let yi = 0.5; yi < h; ++yi) {\n        for (let xi = 0.5; xi < w; ++xi, ++i) {\n          V[i] = value(x.invert(x1 + xi * kx), y.invert(y1 + yi * ky), facet);\n        }\n      }\n    }\n    return {\n      data: V,\n      facets,\n      channels: {\n        [name]: {\n          value: V,\n          scale: "auto"\n        }\n      }\n    };\n  });\n}\nfunction maybeInterpolate(interpolate) {\n  if (typeof interpolate === "function") return interpolate;\n  if (interpolate == null) return interpolateNone;\n  switch (`${interpolate}`.toLowerCase()) {\n    case "none":\n      return interpolateNone;\n    case "nearest":\n      return interpolateNearest;\n    case "barycentric":\n      return interpolatorBarycentric();\n    case "random-walk":\n      return interpolatorRandomWalk();\n  }\n  throw new Error(`invalid interpolate: ${interpolate}`);\n}\n\n// Applies a simple forward mapping of samples, binning them into pixels without\n// any blending or interpolation. Note: if multiple samples map to the same\n// pixel, the last one wins; this can introduce bias if the points are not in\n// random order, so use Plot.shuffle to randomize the input if needed.\nfunction interpolateNone(index, width, height, X, Y, V) {\n  const W = new Array(width * height);\n  for (const i of index) {\n    if (X[i] < 0 || X[i] >= width || Y[i] < 0 || Y[i] >= height) continue;\n    W[Math.floor(Y[i]) * width + Math.floor(X[i])] = V[i];\n  }\n  return W;\n}\nfunction interpolatorBarycentric({\n  random = (0,src.randomLcg)(42)\n} = {}) {\n  return (index, width, height, X, Y, V) => {\n    // Interpolate the interior of all triangles with barycentric coordinates\n    const {\n      points,\n      triangles,\n      hull\n    } = src.Delaunay.from(index, i => X[i], i => Y[i]);\n    const W = new V.constructor(width * height).fill(NaN);\n    const S = new Uint8Array(width * height); // 1 if pixel has been seen.\n    const mix = mixer(V, random);\n    for (let i = 0; i < triangles.length; i += 3) {\n      const ta = triangles[i];\n      const tb = triangles[i + 1];\n      const tc = triangles[i + 2];\n      const Ax = points[2 * ta];\n      const Bx = points[2 * tb];\n      const Cx = points[2 * tc];\n      const Ay = points[2 * ta + 1];\n      const By = points[2 * tb + 1];\n      const Cy = points[2 * tc + 1];\n      const x1 = Math.min(Ax, Bx, Cx);\n      const x2 = Math.max(Ax, Bx, Cx);\n      const y1 = Math.min(Ay, By, Cy);\n      const y2 = Math.max(Ay, By, Cy);\n      const z = (By - Cy) * (Ax - Cx) + (Ay - Cy) * (Cx - Bx);\n      if (!z) continue;\n      const va = V[index[ta]];\n      const vb = V[index[tb]];\n      const vc = V[index[tc]];\n      for (let x = Math.floor(x1); x < x2; ++x) {\n        for (let y = Math.floor(y1); y < y2; ++y) {\n          if (x < 0 || x >= width || y < 0 || y >= height) continue;\n          const xp = x + 0.5; // sample pixel centroids\n          const yp = y + 0.5;\n          const ga = ((By - Cy) * (xp - Cx) + (yp - Cy) * (Cx - Bx)) / z;\n          if (ga < 0) continue;\n          const gb = ((Cy - Ay) * (xp - Cx) + (yp - Cy) * (Ax - Cx)) / z;\n          if (gb < 0) continue;\n          const gc = 1 - ga - gb;\n          if (gc < 0) continue;\n          const i = x + width * y;\n          W[i] = mix(va, ga, vb, gb, vc, gc, x, y);\n          S[i] = 1;\n        }\n      }\n    }\n    extrapolateBarycentric(W, S, X, Y, V, width, height, hull, index, mix);\n    return W;\n  };\n}\n\n// Extrapolate by finding the closest point on the hull.\nfunction extrapolateBarycentric(W, S, X, Y, V, width, height, hull, index, mix) {\n  X = Float64Array.from(hull, i => X[index[i]]);\n  Y = Float64Array.from(hull, i => Y[index[i]]);\n  V = Array.from(hull, i => V[index[i]]);\n  const n = X.length;\n  const rays = Array.from({\n    length: n\n  }, (_, j) => ray(j, X, Y));\n  let k = 0;\n  for (let y = 0; y < height; ++y) {\n    const yp = y + 0.5;\n    for (let x = 0; x < width; ++x) {\n      const i = x + width * y;\n      if (!S[i]) {\n        const xp = x + 0.5;\n        for (let l = 0; l < n; ++l) {\n          const j = (n + k + (l % 2 ? (l + 1) / 2 : -l / 2)) % n;\n          if (rays[j](xp, yp)) {\n            const t = segmentProject(X.at(j - 1), Y.at(j - 1), X[j], Y[j], xp, yp);\n            W[i] = mix(V.at(j - 1), t, V[j], 1 - t, V[j], 0, x, y);\n            k = j;\n            break;\n          }\n        }\n      }\n    }\n  }\n}\n\n// Projects a point p = [x, y] onto the line segment [p1, p2], returning the\n// projected coordinates p’ as t in [0, 1] with p’ = t p1 + (1 - t) p2.\nfunction segmentProject(x1, y1, x2, y2, x, y) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const a = dx * (x2 - x) + dy * (y2 - y);\n  const b = dx * (x - x1) + dy * (y - y1);\n  return a > 0 && b > 0 ? a / (a + b) : +(a > b);\n}\nfunction cross(xa, ya, xb, yb) {\n  return xa * yb - xb * ya;\n}\nfunction ray(j, X, Y) {\n  const n = X.length;\n  const xc = X.at(j - 2);\n  const yc = Y.at(j - 2);\n  const xa = X.at(j - 1);\n  const ya = Y.at(j - 1);\n  const xb = X[j];\n  const yb = Y[j];\n  const xd = X.at(j + 1 - n);\n  const yd = Y.at(j + 1 - n);\n  const dxab = xa - xb;\n  const dyab = ya - yb;\n  const dxca = xc - xa;\n  const dyca = yc - ya;\n  const dxbd = xb - xd;\n  const dybd = yb - yd;\n  const hab = Math.hypot(dxab, dyab);\n  const hca = Math.hypot(dxca, dyca);\n  const hbd = Math.hypot(dxbd, dybd);\n  return (x, y) => {\n    const dxa = x - xa;\n    const dya = y - ya;\n    const dxb = x - xb;\n    const dyb = y - yb;\n    return cross(dxa, dya, dxb, dyb) > -1e-6 && cross(dxa, dya, dxab, dyab) * hca - cross(dxa, dya, dxca, dyca) * hab > -1e-6 && cross(dxb, dyb, dxbd, dybd) * hab - cross(dxb, dyb, dxab, dyab) * hbd <= 0;\n  };\n}\nfunction interpolateNearest(index, width, height, X, Y, V) {\n  const W = new V.constructor(width * height);\n  const delaunay = src.Delaunay.from(index, i => X[i], i => Y[i]);\n  // memoization of delaunay.find for the line start (iy) and pixel (ix)\n  let iy, ix;\n  for (let y = 0.5, k = 0; y < height; ++y) {\n    ix = iy;\n    for (let x = 0.5; x < width; ++x, ++k) {\n      ix = delaunay.find(x, y, ix);\n      if (x === 0.5) iy = ix;\n      W[k] = V[index[ix]];\n    }\n  }\n  return W;\n}\n\n// https://observablehq.com/@observablehq/walk-on-spheres-precision\nfunction interpolatorRandomWalk({\n  random = (0,src.randomLcg)(42),\n  minDistance = 0.5,\n  maxSteps = 2\n} = {}) {\n  return (index, width, height, X, Y, V) => {\n    const W = new V.constructor(width * height);\n    const delaunay = src.Delaunay.from(index, i => X[i], i => Y[i]);\n    // memoization of delaunay.find for the line start (iy), pixel (ix), and wos step (iw)\n    let iy, ix, iw;\n    for (let y = 0.5, k = 0; y < height; ++y) {\n      ix = iy;\n      for (let x = 0.5; x < width; ++x, ++k) {\n        let cx = x;\n        let cy = y;\n        iw = ix = delaunay.find(cx, cy, ix);\n        if (x === 0.5) iy = ix;\n        let distance; // distance to closest sample\n        let step = 0; // count of steps for this walk\n        while ((distance = Math.hypot(X[index[iw]] - cx, Y[index[iw]] - cy)) > minDistance && step < maxSteps) {\n          const angle = random(x, y, step) * 2 * Math.PI;\n          cx += Math.cos(angle) * distance;\n          cy += Math.sin(angle) * distance;\n          iw = delaunay.find(cx, cy, iw);\n          ++step;\n        }\n        W[k] = V[index[iw]];\n      }\n    }\n    return W;\n  };\n}\nfunction blend(a, ca, b, cb, c, cc) {\n  return ca * a + cb * b + cc * c;\n}\nfunction pick(random) {\n  return (a, ca, b, cb, c, cc, x, y) => {\n    const u = random(x, y);\n    return u < ca ? a : u < ca + cb ? b : c;\n  };\n}\nfunction mixer(F, random) {\n  return isNumeric(F) || isTemporal(F) ? blend : pick(random);\n}\nfunction denseX(x1, x2, width) {\n  return {\n    transform(data) {\n      const n = data.length;\n      const X = new Float64Array(n);\n      const kx = (x2 - x1) / width;\n      const x0 = x1 + kx / 2;\n      for (let i = 0; i < n; ++i) X[i] = i % width * kx + x0;\n      return X;\n    }\n  };\n}\nfunction denseY(y1, y2, width, height) {\n  return {\n    transform(data) {\n      const n = data.length;\n      const Y = new Float64Array(n);\n      const ky = (y2 - y1) / height;\n      const y0 = y1 + ky / 2;\n      for (let i = 0; i < n; ++i) Y[i] = Math.floor(i / width) % height * ky + y0;\n      return Y;\n    }\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/marks/contour.js\n\n\n\n\n\n\n\n\n\nconst contour_defaults = {\n  ariaLabel: "contour",\n  fill: "none",\n  stroke: "currentColor",\n  strokeMiterlimit: 1,\n  pixelSize: 2\n};\nclass Contour extends AbstractRaster {\n  constructor(data, {\n    smooth = true,\n    value,\n    ...options\n  } = {}) {\n    const channels = styles({}, options, contour_defaults);\n\n    // If value is not specified explicitly, look for a channel to promote. If\n    // more than one channel is present, throw an error. (To disambiguate,\n    // specify the value option explicitly.)\n    if (value === undefined) {\n      for (const key in channels) {\n        if (channels[key].value != null) {\n          if (value !== undefined) throw new Error("ambiguous contour value");\n          value = options[key];\n          options[key] = "value";\n        }\n      }\n    }\n\n    // For any channel specified as the literal (contour threshold) "value"\n    // (maybe because of the promotion above), propagate the label from the\n    // original value definition.\n    if (value != null) {\n      const v = {\n        transform: D => D.map(d => d.value),\n        label: labelof(value)\n      };\n      for (const key in channels) {\n        if (options[key] === "value") {\n          options[key] = v;\n        }\n      }\n    }\n\n    // If the data is null, then we’ll construct the raster grid by evaluating a\n    // function for each point in a dense grid. The value channel is populated\n    // by the sampler initializer, and hence is not passed to super to avoid\n    // computing it before there’s data.\n    if (data == null) {\n      if (value == null) throw new Error("missing contour value");\n      options = sampler("value", {\n        value,\n        ...options\n      });\n      value = null;\n    }\n\n    // Otherwise if data was provided, it represents a discrete set of spatial\n    // samples (often a grid, but not necessarily). If no interpolation method\n    // was specified, default to nearest.\n    else {\n      let {\n        interpolate\n      } = options;\n      if (value === undefined) value = identity;\n      if (interpolate === undefined) options.interpolate = "nearest";\n    }\n\n    // Wrap the options in our initializer that computes the contour geometries;\n    // this runs after any other initializers (and transforms).\n    super(data, {\n      value: {\n        value,\n        optional: true\n      }\n    }, contourGeometry(options), contour_defaults);\n\n    // With the exception of the x, y, x1, y1, x2, y2, and value channels, this\n    // mark’s channels are not evaluated on the initial data but rather on the\n    // contour multipolygons generated in the initializer.\n    const contourChannels = {\n      geometry: {\n        value: identity\n      }\n    };\n    for (const key in this.channels) {\n      const channel = this.channels[key];\n      const {\n        scale\n      } = channel;\n      if (scale === "x" || scale === "y" || key === "value") continue;\n      contourChannels[key] = channel;\n      delete this.channels[key];\n    }\n    this.contourChannels = contourChannels;\n    this.smooth = !!smooth;\n  }\n  filter(index, {\n    x,\n    y,\n    value,\n    ...channels\n  }, values) {\n    // Only filter channels constructed by the contourGeometry initializer; the\n    // x, y, and value channels must be filtered by the initializer itself.\n    return super.filter(index, channels, values);\n  }\n  render(index, scales, channels, dimensions, context) {\n    const {\n      geometry: G\n    } = channels;\n    const path = (0,src.geoPath)();\n    return create("svg:g", context).call(applyIndirectStyles, this, dimensions, context).call(applyTransform, this, scales).call(g => {\n      g.selectAll().data(index).enter().append("path").call(applyDirectStyles, this).attr("d", i => path(G[i])).call(applyChannelStyles, this, channels);\n    }).node();\n  }\n}\nfunction contourGeometry({\n  thresholds,\n  interval,\n  ...options\n}) {\n  thresholds = maybeThresholds(thresholds, interval, src.thresholdSturges);\n  return initializer(options, function (data, facets, channels, scales, dimensions, context) {\n    const [x1, y1, x2, y2] = rasterBounds(channels, scales, dimensions, context);\n    const dx = x2 - x1;\n    const dy = y2 - y1;\n    const {\n      pixelSize: k,\n      width: w = Math.round(Math.abs(dx) / k),\n      height: h = Math.round(Math.abs(dy) / k)\n    } = this;\n    const kx = w / dx;\n    const ky = h / dy;\n    const V = channels.value.value;\n    const VV = []; // V per facet\n\n    // Interpolate the raster grid, as needed.\n    if (this.interpolate) {\n      const {\n        x: X,\n        y: Y\n      } = applyPosition(channels, scales, context);\n      // Convert scaled (screen) coordinates to grid (canvas) coordinates.\n      const IX = map(X, x => (x - x1) * kx, Float64Array);\n      const IY = map(Y, y => (y - y1) * ky, Float64Array);\n      // The contour mark normally skips filtering on x, y, and value, so here\n      // we’re careful to use different names (0, 1, 2) when filtering.\n      const ichannels = [channels.x, channels.y, channels.value];\n      const ivalues = [IX, IY, V];\n      for (const facet of facets) {\n        const index = this.filter(facet, ichannels, ivalues);\n        VV.push(this.interpolate(index, w, h, IX, IY, V));\n      }\n    }\n\n    // Otherwise, chop up the existing dense raster grid into facets, if needed.\n    // V must be a dense grid in projected coordinates; if there are multiple\n    // facets, then V must be laid out vertically as facet 0, 1, 2… etc.\n    else if (facets) {\n      const n = w * h;\n      const m = facets.length;\n      for (let i = 0; i < m; ++i) VV.push(V.slice(i * n, i * n + n));\n    } else {\n      VV.push(V);\n    }\n\n    // Blur the raster grid, if desired.\n    if (this.blur > 0) for (const V of VV) (0,src.blur2)({\n      data: V,\n      width: w,\n      height: h\n    }, this.blur);\n\n    // Compute the contour thresholds.\n    const T = maybeTicks(thresholds, V, ...finiteExtent(VV));\n    if (T === null) throw new Error(`unsupported thresholds: ${thresholds}`);\n\n    // Compute the (maybe faceted) contours.\n    const {\n      contour\n    } = (0,src.contours)().size([w, h]).smooth(this.smooth);\n    const contourData = [];\n    const contourFacets = [];\n    for (const V of VV) {\n      contourFacets.push((0,src.range)(contourData.length, contourData.push(...map(T, t => contour(V, t)))));\n    }\n\n    // Rescale the contour multipolygon from grid to screen coordinates.\n    for (const {\n      coordinates\n    } of contourData) {\n      for (const rings of coordinates) {\n        for (const ring of rings) {\n          for (const point of ring) {\n            point[0] = point[0] / kx + x1;\n            point[1] = point[1] / ky + y1;\n          }\n        }\n      }\n    }\n\n    // Compute the deferred channels.\n    return {\n      data: contourData,\n      facets: contourFacets,\n      channels: createChannels(this.contourChannels, contourData)\n    };\n  });\n}\n\n// Apply the thresholds interval, function, or count, and return an array of\n// ticks. d3-contour unlike d3-array doesn’t pass the min and max automatically,\n// so we do that here to normalize, and also so we can share consistent\n// thresholds across facets. When an interval is used, note that the lowest\n// threshold should be below (or equal) to the lowest value, or else some data\n// will be missing.\nfunction maybeTicks(thresholds, V, min, max) {\n  if (typeof thresholds?.range === "function") return thresholds.range(thresholds.floor(min), max);\n  if (typeof thresholds === "function") thresholds = thresholds(V, min, max);\n  if (typeof thresholds !== "number") return arrayify(thresholds);\n  const tz = (0,src.ticks)(...(0,src.nice)(min, max, thresholds), thresholds);\n  while (tz[tz.length - 1] >= max) tz.pop();\n  while (tz[1] < min) tz.shift();\n  return tz;\n}\nfunction contour() {\n  return new Contour(...maybeTuples("value", ...arguments));\n}\nfunction finiteExtent(VV) {\n  return [(0,src.min)(VV, V => (0,src.min)(V, contour_finite)), (0,src.max)(VV, V => (0,src.max)(V, contour_finite))];\n}\nfunction contour_finite(x) {\n  return isFinite(x) ? x : NaN;\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/marks/crosshair.js\n\n\n\n\n\n\nfunction crosshair(data, options) {\n  return crosshairK(pointer, data, options);\n}\nfunction crosshairX(data, options = {}) {\n  return crosshairK(pointerX, data, options);\n}\nfunction crosshairY(data, options = {}) {\n  return crosshairK(pointerY, data, options);\n}\nfunction crosshairK(pointer, data, options = {}) {\n  const {\n    x,\n    y,\n    maxRadius\n  } = options;\n  const p = pointer({\n    px: x,\n    py: y,\n    maxRadius\n  });\n  const M = [];\n  if (x != null) M.push(ruleX(data, ruleOptions("x", {\n    ...p,\n    inset: -6\n  }, options)));\n  if (y != null) M.push(ruleY(data, ruleOptions("y", {\n    ...p,\n    inset: -6\n  }, options)));\n  if (x != null) M.push(text_text(data, textOptions("x", {\n    ...p,\n    dy: 9,\n    frameAnchor: "bottom",\n    lineAnchor: "top"\n  }, options)));\n  if (y != null) M.push(text_text(data, textOptions("y", {\n    ...p,\n    dx: -9,\n    frameAnchor: "left",\n    textAnchor: "end"\n  }, options)));\n  for (const m of M) m.ariaLabel = `crosshair ${m.ariaLabel}`;\n  return marks(...M);\n}\nfunction markOptions(k, {\n  channels: pointerChannels,\n  ...pointerOptions\n}, {\n  facet,\n  facetAnchor,\n  fx,\n  fy,\n  [k]: p,\n  channels,\n  transform,\n  initializer\n}) {\n  return {\n    ...pointerOptions,\n    facet,\n    facetAnchor,\n    fx,\n    fy,\n    [k]: p,\n    channels: {\n      ...pointerChannels,\n      ...channels\n    },\n    transform,\n    initializer: pxpy(k, initializer)\n  };\n}\n\n// Wrap the initializer, if any, mapping px and py to x and y temporarily (e.g.,\n// for hexbin) then mapping back to px and py for rendering.\nfunction pxpy(k, i) {\n  if (i == null) return i;\n  return function (data, facets, {\n    x: x1,\n    y: y1,\n    px,\n    py,\n    ...c1\n  }, ...args) {\n    const {\n      channels: {\n        x,\n        y,\n        ...c\n      } = {},\n      ...rest\n    } = i.call(this, data, facets, {\n      ...c1,\n      x: px,\n      y: py\n    }, ...args);\n    return {\n      channels: {\n        ...c,\n        ...(x && {\n          px: x,\n          ...(k === "x" && {\n            x\n          })\n        }),\n        ...(y && {\n          py: y,\n          ...(k === "y" && {\n            y\n          })\n        })\n      },\n      ...rest\n    };\n  };\n}\nfunction ruleOptions(k, pointerOptions, options) {\n  const {\n    color = "currentColor",\n    opacity = 0.2,\n    ruleStroke: stroke = color,\n    ruleStrokeOpacity: strokeOpacity = opacity,\n    ruleStrokeWidth: strokeWidth\n  } = options;\n  return {\n    ...markOptions(k, pointerOptions, options),\n    stroke,\n    strokeOpacity,\n    strokeWidth\n  };\n}\nfunction textOptions(k, pointerOptions, options) {\n  const {\n    color = "currentColor",\n    textFill: fill = color,\n    textFillOpacity: fillOpacity,\n    textStroke: stroke = "white",\n    textStrokeOpacity: strokeOpacity,\n    textStrokeWidth: strokeWidth = 5\n  } = options;\n  return {\n    ...markOptions(k, pointerOptions, textChannel(k, options)),\n    fill,\n    fillOpacity,\n    stroke,\n    strokeOpacity,\n    strokeWidth\n  };\n}\n\n// Rather than aliasing text to have the same definition as x and y, we use an\n// initializer to alias the channel values, such that the text channel can be\n// derived by an initializer such as hexbin.\nfunction textChannel(source, options) {\n  return initializer(options, (data, facets, channels) => {\n    return {\n      channels: {\n        text: {\n          value: getSource(channels, source)?.value\n        }\n      }\n    };\n  });\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/marks/delaunay.js\n\n\n\n\n\n\n\nconst delaunayLinkDefaults = {\n  ariaLabel: "delaunay link",\n  fill: "none",\n  stroke: "currentColor",\n  strokeMiterlimit: 1\n};\nconst delaunayMeshDefaults = {\n  ariaLabel: "delaunay mesh",\n  fill: null,\n  stroke: "currentColor",\n  strokeOpacity: 0.2\n};\nconst hullDefaults = {\n  ariaLabel: "hull",\n  fill: "none",\n  stroke: "currentColor",\n  strokeWidth: 1.5,\n  strokeMiterlimit: 1\n};\nconst voronoiDefaults = {\n  ariaLabel: "voronoi",\n  fill: "none",\n  stroke: "currentColor",\n  strokeMiterlimit: 1\n};\nconst voronoiMeshDefaults = {\n  ariaLabel: "voronoi mesh",\n  fill: null,\n  stroke: "currentColor",\n  strokeOpacity: 0.2\n};\nclass DelaunayLink extends Mark {\n  constructor(data, options = {}) {\n    const {\n      x,\n      y,\n      z,\n      curve,\n      tension\n    } = options;\n    super(data, {\n      x: {\n        value: x,\n        scale: "x",\n        optional: true\n      },\n      y: {\n        value: y,\n        scale: "y",\n        optional: true\n      },\n      z: {\n        value: z,\n        optional: true\n      }\n    }, options, delaunayLinkDefaults);\n    this.curve = maybeCurve(curve, tension);\n    markers(this, options);\n  }\n  render(index, scales, channels, dimensions, context) {\n    const {\n      x,\n      y\n    } = scales;\n    const {\n      x: X,\n      y: Y,\n      z: Z\n    } = channels;\n    const {\n      curve\n    } = this;\n    const [cx, cy] = applyFrameAnchor(this, dimensions);\n    const xi = X ? i => X[i] : constant(cx);\n    const yi = Y ? i => Y[i] : constant(cy);\n    const mark = this;\n    function links(index) {\n      let i = -1;\n      const newIndex = [];\n      const newChannels = {};\n      for (const k in channels) newChannels[k] = [];\n      const X1 = [];\n      const X2 = [];\n      const Y1 = [];\n      const Y2 = [];\n      function link(ti, tj) {\n        ti = index[ti];\n        tj = index[tj];\n        newIndex.push(++i);\n        X1[i] = xi(ti);\n        Y1[i] = yi(ti);\n        X2[i] = xi(tj);\n        Y2[i] = yi(tj);\n        for (const k in channels) newChannels[k].push(channels[k][tj]);\n      }\n      const {\n        halfedges,\n        hull,\n        triangles\n      } = src.Delaunay.from(index, xi, yi);\n      for (let i = 0; i < halfedges.length; ++i) {\n        // inner edges\n        const j = halfedges[i];\n        if (j > i) link(triangles[i], triangles[j]);\n      }\n      for (let i = 0; i < hull.length; ++i) {\n        // convex hull\n        link(hull[i], hull[(i + 1) % hull.length]);\n      }\n      (0,src.select)(this).selectAll().data(newIndex).enter().append("path").call(applyDirectStyles, mark).attr("d", i => {\n        const p = (0,src.pathRound)();\n        const c = curve(p);\n        c.lineStart();\n        c.point(X1[i], Y1[i]);\n        c.point(X2[i], Y2[i]);\n        c.lineEnd();\n        return p;\n      }).call(applyChannelStyles, mark, newChannels).call(applyMarkers, mark, newChannels, context);\n    }\n    return create("svg:g", context).call(applyIndirectStyles, this, dimensions, context).call(applyTransform, this, {\n      x: X && x,\n      y: Y && y\n    }).call(Z ? g => g.selectAll().data((0,src.group)(index, i => Z[i]).values()).enter().append("g").each(links) : g => g.datum(index).each(links)).node();\n  }\n}\nclass AbstractDelaunayMark extends Mark {\n  constructor(data, options = {}, defaults, zof = ({\n    z\n  }) => z) {\n    const {\n      x,\n      y\n    } = options;\n    super(data, {\n      x: {\n        value: x,\n        scale: "x",\n        optional: true\n      },\n      y: {\n        value: y,\n        scale: "y",\n        optional: true\n      },\n      z: {\n        value: zof(options),\n        optional: true\n      }\n    }, options, defaults);\n  }\n  render(index, scales, channels, dimensions, context) {\n    const {\n      x,\n      y\n    } = scales;\n    const {\n      x: X,\n      y: Y,\n      z: Z\n    } = channels;\n    const [cx, cy] = applyFrameAnchor(this, dimensions);\n    const xi = X ? i => X[i] : constant(cx);\n    const yi = Y ? i => Y[i] : constant(cy);\n    const mark = this;\n    function mesh(index) {\n      const delaunay = src.Delaunay.from(index, xi, yi);\n      (0,src.select)(this).append("path").datum(index[0]).call(applyDirectStyles, mark).attr("d", mark._render(delaunay, dimensions)).call(applyChannelStyles, mark, channels);\n    }\n    return create("svg:g", context).call(applyIndirectStyles, this, dimensions, context).call(applyTransform, this, {\n      x: X && x,\n      y: Y && y\n    }).call(Z ? g => g.selectAll().data((0,src.group)(index, i => Z[i]).values()).enter().append("g").each(mesh) : g => g.datum(index).each(mesh)).node();\n  }\n}\nclass DelaunayMesh extends AbstractDelaunayMark {\n  constructor(data, options = {}) {\n    super(data, options, delaunayMeshDefaults);\n    this.fill = "none";\n  }\n  _render(delaunay) {\n    return delaunay.render();\n  }\n}\nclass Hull extends AbstractDelaunayMark {\n  constructor(data, options = {}) {\n    super(data, options, hullDefaults, maybeZ);\n  }\n  _render(delaunay) {\n    return delaunay.renderHull();\n  }\n}\nclass Voronoi extends Mark {\n  constructor(data, options = {}) {\n    const {\n      x,\n      y,\n      z\n    } = options;\n    super(data, {\n      x: {\n        value: x,\n        scale: "x",\n        optional: true\n      },\n      y: {\n        value: y,\n        scale: "y",\n        optional: true\n      },\n      z: {\n        value: z,\n        optional: true\n      }\n    }, options, voronoiDefaults);\n  }\n  render(index, scales, channels, dimensions, context) {\n    const {\n      x,\n      y\n    } = scales;\n    const {\n      x: X,\n      y: Y,\n      z: Z\n    } = channels;\n    const [cx, cy] = applyFrameAnchor(this, dimensions);\n    const xi = X ? i => X[i] : constant(cx);\n    const yi = Y ? i => Y[i] : constant(cy);\n    const mark = this;\n    function cells(index) {\n      const delaunay = src.Delaunay.from(index, xi, yi);\n      const voronoi = voronoiof(delaunay, dimensions);\n      (0,src.select)(this).selectAll().data(index).enter().append("path").call(applyDirectStyles, mark).attr("d", (_, i) => voronoi.renderCell(i)).call(applyChannelStyles, mark, channels);\n    }\n    return create("svg:g", context).call(applyIndirectStyles, this, dimensions, context).call(applyTransform, this, {\n      x: X && x,\n      y: Y && y\n    }).call(Z ? g => g.selectAll().data((0,src.group)(index, i => Z[i]).values()).enter().append("g").each(cells) : g => g.datum(index).each(cells)).node();\n  }\n}\nclass VoronoiMesh extends AbstractDelaunayMark {\n  constructor(data, options) {\n    super(data, options, voronoiMeshDefaults);\n    this.fill = "none";\n  }\n  _render(delaunay, dimensions) {\n    return voronoiof(delaunay, dimensions).render();\n  }\n}\nfunction voronoiof(delaunay, dimensions) {\n  const {\n    width,\n    height,\n    marginTop,\n    marginRight,\n    marginBottom,\n    marginLeft\n  } = dimensions;\n  return delaunay.voronoi([marginLeft, marginTop, width - marginRight, height - marginBottom]);\n}\nfunction delaunayMark(DelaunayMark, data, {\n  x,\n  y,\n  ...options\n} = {}) {\n  [x, y] = maybeTuple(x, y);\n  return new DelaunayMark(data, {\n    ...options,\n    x,\n    y\n  });\n}\nfunction delaunayLink(data, options) {\n  return delaunayMark(DelaunayLink, data, options);\n}\nfunction delaunayMesh(data, options) {\n  return delaunayMark(DelaunayMesh, data, options);\n}\nfunction hull(data, options) {\n  return delaunayMark(Hull, data, options);\n}\nfunction voronoi(data, options) {\n  return delaunayMark(Voronoi, data, options);\n}\nfunction voronoiMesh(data, options) {\n  return delaunayMark(VoronoiMesh, data, options);\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/marks/density.js\n\n\n\n\n\n\n\nconst density_defaults = {\n  ariaLabel: "density",\n  fill: "none",\n  stroke: "currentColor",\n  strokeMiterlimit: 1\n};\nclass Density extends Mark {\n  constructor(data, {\n    x,\n    y,\n    z,\n    weight,\n    fill,\n    stroke,\n    ...options\n  } = {}) {\n    // If fill or stroke is specified as “density”, then temporarily treat these\n    // as a literal color when computing defaults and maybeZ; below, we’ll unset\n    // these constant colors back to undefined since they will instead be\n    // populated by a channel generated by the initializer.\n    const fillDensity = isDensity(fill) && (fill = "currentColor", true);\n    const strokeDensity = isDensity(stroke) && (stroke = "currentColor", true);\n    super(data, {\n      x: {\n        value: x,\n        scale: "x",\n        optional: true\n      },\n      y: {\n        value: y,\n        scale: "y",\n        optional: true\n      },\n      z: {\n        value: maybeZ({\n          z,\n          fill,\n          stroke\n        }),\n        optional: true\n      },\n      weight: {\n        value: weight,\n        optional: true\n      }\n    }, densityInitializer({\n      ...options,\n      fill,\n      stroke\n    }, fillDensity, strokeDensity), density_defaults);\n    if (fillDensity) this.fill = undefined;\n    if (strokeDensity) this.stroke = undefined;\n    this.z = z;\n  }\n  filter(index) {\n    return index; // don’t filter contours constructed by initializer\n  }\n\n  render(index, scales, channels, dimensions, context) {\n    const {\n      contours\n    } = channels;\n    const path = (0,src.geoPath)();\n    return create("svg:g", context).call(applyIndirectStyles, this, dimensions, context).call(applyTransform, this, {}).call(g => g.selectAll().data(index).enter().append("path").call(applyDirectStyles, this).call(applyChannelStyles, this, channels).attr("d", i => path(contours[i]))).node();\n  }\n}\nfunction density(data, {\n  x,\n  y,\n  ...options\n} = {}) {\n  [x, y] = maybeTuple(x, y);\n  return new Density(data, {\n    ...options,\n    x,\n    y\n  });\n}\nconst dropChannels = new Set(["x", "y", "z", "weight"]);\nfunction densityInitializer(options, fillDensity, strokeDensity) {\n  const k = 100; // arbitrary scale factor for readability\n  let {\n    bandwidth,\n    thresholds\n  } = options;\n  bandwidth = bandwidth === undefined ? 20 : +bandwidth;\n  thresholds = thresholds === undefined ? 20 : typeof thresholds?.[Symbol.iterator] === "function" ? coerceNumbers(thresholds) : +thresholds;\n  return initializer(options, function (data, facets, channels, scales, dimensions, context) {\n    const W = channels.weight ? coerceNumbers(channels.weight.value) : null;\n    const Z = channels.z?.value;\n    const {\n      z\n    } = this;\n    const [cx, cy] = applyFrameAnchor(this, dimensions);\n    const {\n      width,\n      height\n    } = dimensions;\n\n    // Get the (either scaled or projected) xy channels.\n    const {\n      x: X,\n      y: Y\n    } = applyPosition(channels, scales, context);\n\n    // Group any of the input channels according to the first index associated\n    // with each z-series or facet. Drop any channels not be needed for\n    // rendering after the contours are computed.\n    const newChannels = Object.fromEntries(Object.entries(channels).filter(([key]) => !dropChannels.has(key)).map(([key, channel]) => [key, {\n      ...channel,\n      value: []\n    }]));\n\n    // If the fill or stroke encodes density, construct new output channels.\n    const FD = fillDensity && [];\n    const SD = strokeDensity && [];\n    const density = (0,src.contourDensity)().x(X ? i => X[i] : cx).y(Y ? i => Y[i] : cy).weight(W ? i => W[i] : 1).size([width, height]).bandwidth(bandwidth);\n\n    // Compute the grid for each facet-series.\n    const facetsContours = [];\n    for (const facet of facets) {\n      const facetContours = [];\n      facetsContours.push(facetContours);\n      for (const index of Z ? style_groupZ(facet, Z, z) : [facet]) {\n        const contour = density.contours(index);\n        facetContours.push([index, contour]);\n      }\n    }\n\n    // If explicit thresholds were not specified, find the maximum density of\n    // all grids and use this to compute thresholds.\n    let T = thresholds;\n    if (!(T instanceof TypedArray)) {\n      let maxValue = 0;\n      for (const facetContours of facetsContours) {\n        for (const [, contour] of facetContours) {\n          const max = contour.max;\n          if (max > maxValue) maxValue = max;\n        }\n      }\n      T = Float64Array.from({\n        length: thresholds - 1\n      }, (_, i) => maxValue * k * (i + 1) / thresholds);\n    }\n\n    // Generate contours for each facet-series.\n    const newFacets = [];\n    const contours = [];\n    for (const facetContours of facetsContours) {\n      const newFacet = [];\n      newFacets.push(newFacet);\n      for (const [index, contour] of facetContours) {\n        for (const t of T) {\n          newFacet.push(contours.length);\n          contours.push(contour(t / k));\n          if (FD) FD.push(t);\n          if (SD) SD.push(t);\n          for (const key in newChannels) {\n            newChannels[key].value.push(channels[key].value[index[0]]);\n          }\n        }\n      }\n    }\n\n    // If the fill or stroke encodes density, ensure that a zero value is\n    // included so that the default color scale domain starts at zero. Otherwise\n    // if the starting range value is the same as the background color, the\n    // first contour might not be visible.\n    if (FD) FD.push(0);\n    if (SD) SD.push(0);\n    return {\n      data,\n      facets: newFacets,\n      channels: {\n        ...newChannels,\n        ...(FD && {\n          fill: {\n            value: FD,\n            scale: "color"\n          }\n        }),\n        ...(SD && {\n          stroke: {\n            value: SD,\n            scale: "color"\n          }\n        }),\n        contours: {\n          value: contours\n        }\n      }\n    };\n  });\n}\nfunction isDensity(value) {\n  return /^density$/i.test(value);\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/marks/geo.js\n\n\n\n\n\n\n\nconst geo_defaults = {\n  ariaLabel: "geo",\n  fill: "none",\n  stroke: "currentColor",\n  strokeWidth: 1,\n  strokeLinecap: "round",\n  strokeLinejoin: "round",\n  strokeMiterlimit: 1\n};\nclass Geo extends Mark {\n  constructor(data, options = {}) {\n    const [vr, cr] = maybeNumberChannel(options.r, 3);\n    super(data, {\n      geometry: {\n        value: options.geometry,\n        scale: "projection"\n      },\n      r: {\n        value: vr,\n        scale: "r",\n        filter: positive,\n        optional: true\n      }\n    }, withDefaultSort(options), geo_defaults);\n    this.r = cr;\n  }\n  render(index, scales, channels, dimensions, context) {\n    const {\n      geometry: G,\n      r: R\n    } = channels;\n    const path = (0,src.geoPath)(context.projection ?? geo_scaleProjection(scales));\n    const {\n      r\n    } = this;\n    if (negative(r)) index = [];else if (r !== undefined) path.pointRadius(r);\n    return create("svg:g", context).call(applyIndirectStyles, this, dimensions, context).call(applyTransform, this, scales).call(g => {\n      g.selectAll().data(index).enter().append("path").call(applyDirectStyles, this).attr("d", R ? i => path.pointRadius(R[i])(G[i]) : i => path(G[i])).call(applyChannelStyles, this, channels);\n    }).node();\n  }\n}\n\n// If no projection is specified, default to a projection that passes points\n// through the x and y scales, if any.\nfunction geo_scaleProjection({\n  x: X,\n  y: Y\n}) {\n  if (X || Y) {\n    X ??= x => x;\n    Y ??= y => y;\n    return (0,src.geoTransform)({\n      point(x, y) {\n        this.stream.point(X(x), Y(y));\n      }\n    });\n  }\n}\nfunction geo(data, {\n  geometry = identity,\n  ...options\n} = {}) {\n  switch (data?.type) {\n    case "FeatureCollection":\n      data = data.features;\n      break;\n    case "GeometryCollection":\n      data = data.geometries;\n      break;\n    case "Feature":\n    case "LineString":\n    case "MultiLineString":\n    case "MultiPoint":\n    case "MultiPolygon":\n    case "Point":\n    case "Polygon":\n    case "Sphere":\n      data = [data];\n      break;\n  }\n  return new Geo(data, {\n    geometry,\n    ...options\n  });\n}\nfunction sphere({\n  strokeWidth = 1.5,\n  ...options\n} = {}) {\n  return geo({\n    type: "Sphere"\n  }, {\n    strokeWidth,\n    ...options\n  });\n}\nfunction graticule({\n  strokeOpacity = 0.1,\n  ...options\n} = {}) {\n  return geo((0,src.geoGraticule10)(), {\n    strokeOpacity,\n    ...options\n  });\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/transforms/hexbin.js\n\n\n\n\n\n\n// We don’t want the hexagons to align with the edges of the plot frame, as that\n// would cause extreme x-values (the upper bound of the default x-scale domain)\n// to be rounded up into a floating bin to the right of the plot. Therefore,\n// rather than centering the origin hexagon around ⟨0,0⟩ in screen coordinates,\n// we offset slightly to ⟨0.5,0⟩. The hexgrid mark uses the same origin.\nconst ox = 0.5,\n  oy = 0;\nfunction hexbin(outputs = {\n  fill: "count"\n}, {\n  binWidth,\n  ...options\n} = {}) {\n  const {\n    z\n  } = options;\n\n  // TODO filter e.g. to show empty hexbins?\n  // TODO disallow x, x1, x2, y, y1, y2 reducers?\n  binWidth = binWidth === undefined ? 20 : number(binWidth);\n  outputs = maybeOutputs(outputs, options);\n\n  // A fill output means a fill channel; declaring the channel here instead of\n  // waiting for the initializer allows the mark constructor to determine that\n  // the stroke should default to none (assuming a mark that defaults to fill\n  // and no stroke, such as dot). Note that it’s safe to mutate options here\n  // because we just created it with the rest operator above.\n  if (hasOutput(outputs, "fill")) options.channels = {\n    ...options.channels,\n    fill: {\n      value: []\n    }\n  };\n\n  // Populate default values for the r and symbol options, as appropriate.\n  if (options.symbol === undefined) options.symbol = "hexagon";\n  if (options.r === undefined && !hasOutput(outputs, "r")) options.r = binWidth / 2;\n  return initializer(options, (data, facets, channels, scales, _, context) => {\n    let {\n      x: X,\n      y: Y,\n      z: Z,\n      fill: F,\n      stroke: S,\n      symbol: Q\n    } = channels;\n    if (X === undefined) throw new Error("missing channel: x");\n    if (Y === undefined) throw new Error("missing channel: y");\n\n    // Get the (either scaled or projected) xy channels.\n    ({\n      x: X,\n      y: Y\n    } = applyPosition(channels, scales, context));\n\n    // Extract the values for channels that are eligible for grouping; not all\n    // marks define a z channel, so compute one if it not already computed. If z\n    // was explicitly set to null, ensure that we don’t subdivide bins.\n    Z = Z ? Z.value : valueof(data, z);\n    F = F?.value;\n    S = S?.value;\n    Q = Q?.value;\n\n    // Group on the first of z, fill, stroke, and symbol. Implicitly reduce\n    // these channels using the first corresponding value for each bin.\n    const G = maybeSubgroup(outputs, {\n      z: Z,\n      fill: F,\n      stroke: S,\n      symbol: Q\n    });\n    const GZ = Z && [];\n    const GF = F && [];\n    const GS = S && [];\n    const GQ = Q && [];\n\n    // Construct the hexbins and populate the output channels.\n    const binFacets = [];\n    const BX = [];\n    const BY = [];\n    let i = -1;\n    for (const o of outputs) o.initialize(data);\n    for (const facet of facets) {\n      const binFacet = [];\n      for (const o of outputs) o.scope("facet", facet);\n      for (const [f, I] of maybeGroup(facet, G)) {\n        for (const bin of hbin(I, X, Y, binWidth)) {\n          binFacet.push(++i);\n          BX.push(bin.x);\n          BY.push(bin.y);\n          if (Z) GZ.push(G === Z ? f : Z[bin[0]]);\n          if (F) GF.push(G === F ? f : F[bin[0]]);\n          if (S) GS.push(G === S ? f : S[bin[0]]);\n          if (Q) GQ.push(G === Q ? f : Q[bin[0]]);\n          for (const o of outputs) o.reduce(bin);\n        }\n      }\n      binFacets.push(binFacet);\n    }\n\n    // Construct the output channels, and populate the radius scale hint.\n    const sx = channels.x.scale;\n    const sy = channels.y.scale;\n    const binChannels = {\n      x: {\n        value: BX,\n        source: scales[sx] ? {\n          value: map(BX, scales[sx].invert),\n          scale: sx\n        } : null\n      },\n      y: {\n        value: BY,\n        source: scales[sy] ? {\n          value: map(BY, scales[sy].invert),\n          scale: sy\n        } : null\n      },\n      ...(Z && {\n        z: {\n          value: GZ\n        }\n      }),\n      ...(F && {\n        fill: {\n          value: GF,\n          scale: "auto"\n        }\n      }),\n      ...(S && {\n        stroke: {\n          value: GS,\n          scale: "auto"\n        }\n      }),\n      ...(Q && {\n        symbol: {\n          value: GQ,\n          scale: "auto"\n        }\n      }),\n      ...Object.fromEntries(outputs.map(({\n        name,\n        output\n      }) => [name, {\n        scale: "auto",\n        label: output.label,\n        radius: name === "r" ? binWidth / 2 : undefined,\n        value: output.transform()\n      }]))\n    };\n    return {\n      data,\n      facets: binFacets,\n      channels: binChannels\n    };\n  });\n}\nfunction hbin(I, X, Y, dx) {\n  const dy = dx * (1.5 / sqrt3);\n  const bins = new Map();\n  for (const i of I) {\n    let px = X[i],\n      py = Y[i];\n    if (isNaN(px) || isNaN(py)) continue;\n    let pj = Math.round(py = (py - oy) / dy),\n      pi = Math.round(px = (px - ox) / dx - (pj & 1) / 2),\n      py1 = py - pj;\n    if (Math.abs(py1) * 3 > 1) {\n      let px1 = px - pi,\n        pi2 = pi + (px < pi ? -1 : 1) / 2,\n        pj2 = pj + (py < pj ? -1 : 1),\n        px2 = px - pi2,\n        py2 = py - pj2;\n      if (px1 * px1 + py1 * py1 > px2 * px2 + py2 * py2) pi = pi2 + (pj & 1 ? 1 : -1) / 2, pj = pj2;\n    }\n    const key = `${pi},${pj}`;\n    let bin = bins.get(key);\n    if (bin === undefined) {\n      bins.set(key, bin = []);\n      bin.x = (pi + (pj & 1) / 2) * dx + ox;\n      bin.y = pj * dy + oy;\n    }\n    bin.push(i);\n  }\n  return bins.values();\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/marks/hexgrid.js\n\n\n\n\n\n\nconst hexgrid_defaults = {\n  ariaLabel: "hexgrid",\n  fill: "none",\n  stroke: "currentColor",\n  strokeOpacity: 0.1\n};\nfunction hexgrid(options) {\n  return new Hexgrid(options);\n}\nclass Hexgrid extends Mark {\n  constructor({\n    binWidth = 20,\n    clip = true,\n    ...options\n  } = {}) {\n    super(singleton, undefined, {\n      clip,\n      ...options\n    }, hexgrid_defaults);\n    this.binWidth = number(binWidth);\n  }\n  render(index, scales, channels, dimensions, context) {\n    const {\n      binWidth\n    } = this;\n    const {\n      marginTop,\n      marginRight,\n      marginBottom,\n      marginLeft,\n      width,\n      height\n    } = dimensions;\n    const x0 = marginLeft - ox,\n      x1 = width - marginRight - ox,\n      y0 = marginTop - oy,\n      y1 = height - marginBottom - oy,\n      rx = binWidth / 2,\n      ry = rx * sqrt4_3,\n      hy = ry / 2,\n      wx = rx * 2,\n      wy = ry * 1.5,\n      i0 = Math.floor(x0 / wx),\n      i1 = Math.ceil(x1 / wx),\n      j0 = Math.floor((y0 + hy) / wy),\n      j1 = Math.ceil((y1 - hy) / wy) + 1,\n      path = `m0,${round(-ry)}l${round(rx)},${round(hy)}v${round(ry)}l${round(-rx)},${round(hy)}`;\n    let d = path;\n    for (let j = j0; j < j1; ++j) {\n      for (let i = i0; i < i1; ++i) {\n        d += `M${round(i * wx + (j & 1) * rx)},${round(j * wy)}${path}`;\n      }\n    }\n    return create("svg:g", context).datum(0).call(applyIndirectStyles, this, dimensions, context).call(applyTransform, this, {}, offset + ox, offset + oy).call(g => g.append("path").call(applyDirectStyles, this).call(applyChannelStyles, this, channels).attr("d", d)).node();\n  }\n}\nfunction round(x) {\n  return Math.round(x * 1e3) / 1e3;\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/marks/image.js\n\n\n\n\n\n\n\nconst image_defaults = {\n  ariaLabel: "image",\n  fill: null,\n  stroke: null\n};\n\n// Tests if the given string is a path: does it start with a dot-slash\n// (./foo.png), dot-dot-slash (../foo.png), or slash (/foo.png)?\nfunction isPath(string) {\n  return /^\\.*\\//.test(string);\n}\n\n// Tests if the given string is a URL (e.g., https://placekitten.com/200/300).\n// The allowed protocols is overly restrictive, but we don’t want to allow any\n// scheme here because it would increase the likelihood of a false positive with\n// a field name that happens to contain a colon.\nfunction isUrl(string) {\n  return /^(blob|data|file|http|https):/i.test(string);\n}\n\n// Disambiguates a constant src definition from a channel. A path or URL string\n// is assumed to be a constant; any other string is assumed to be a field name.\nfunction maybePathChannel(value) {\n  return typeof value === "string" && (isPath(value) || isUrl(value)) ? [undefined, value] : [value, undefined];\n}\nclass Image extends Mark {\n  constructor(data, options = {}) {\n    let {\n      x,\n      y,\n      r,\n      width,\n      height,\n      rotate,\n      src,\n      preserveAspectRatio,\n      crossOrigin,\n      frameAnchor,\n      imageRendering\n    } = options;\n    if (r == null) r = undefined;\n    if (r === undefined && width === undefined && height === undefined) width = height = 16;else if (width === undefined && height !== undefined) width = height;else if (height === undefined && width !== undefined) height = width;\n    const [vs, cs] = maybePathChannel(src);\n    const [vr, cr] = maybeNumberChannel(r);\n    const [vw, cw] = maybeNumberChannel(width, cr !== undefined ? cr * 2 : undefined);\n    const [vh, ch] = maybeNumberChannel(height, cr !== undefined ? cr * 2 : undefined);\n    const [va, ca] = maybeNumberChannel(rotate, 0);\n    super(data, {\n      x: {\n        value: x,\n        scale: "x",\n        optional: true\n      },\n      y: {\n        value: y,\n        scale: "y",\n        optional: true\n      },\n      r: {\n        value: vr,\n        scale: "r",\n        filter: positive,\n        optional: true\n      },\n      width: {\n        value: vw,\n        filter: positive,\n        optional: true\n      },\n      height: {\n        value: vh,\n        filter: positive,\n        optional: true\n      },\n      rotate: {\n        value: va,\n        optional: true\n      },\n      src: {\n        value: vs,\n        optional: true\n      }\n    }, withDefaultSort(options), image_defaults);\n    this.src = cs;\n    this.width = cw;\n    this.rotate = ca;\n    this.height = ch;\n    this.r = cr;\n    this.preserveAspectRatio = impliedString(preserveAspectRatio, "xMidYMid");\n    this.crossOrigin = string(crossOrigin);\n    this.frameAnchor = maybeFrameAnchor(frameAnchor);\n    this.imageRendering = impliedString(imageRendering, "auto");\n  }\n  render(index, scales, channels, dimensions, context) {\n    const {\n      x,\n      y\n    } = scales;\n    const {\n      x: X,\n      y: Y,\n      width: W,\n      height: H,\n      r: R,\n      rotate: A,\n      src: S\n    } = channels;\n    const {\n      r,\n      width,\n      height,\n      rotate\n    } = this;\n    const [cx, cy] = applyFrameAnchor(this, dimensions);\n    return create("svg:g", context).call(applyIndirectStyles, this, dimensions, context).call(applyTransform, this, {\n      x: X && x,\n      y: Y && y\n    }).call(g => g.selectAll().data(index).enter().append("image").call(applyDirectStyles, this).attr("x", image_position(X, W, R, cx, width, r)).attr("y", image_position(Y, H, R, cy, height, r)).attr("width", W ? i => W[i] : width !== undefined ? width : R ? i => R[i] * 2 : r * 2).attr("height", H ? i => H[i] : height !== undefined ? height : R ? i => R[i] * 2 : r * 2)\n    // TODO: combine x, y, rotate and transform-origin into a single transform\n    .attr("transform", A ? i => `rotate(${A[i]})` : rotate ? `rotate(${rotate})` : null).attr("transform-origin", A || rotate ? template`${X ? i => X[i] : cx}px ${Y ? i => Y[i] : cy}px` : null).call(applyAttr, "href", S ? i => S[i] : this.src).call(applyAttr, "preserveAspectRatio", this.preserveAspectRatio).call(applyAttr, "crossorigin", this.crossOrigin).call(applyAttr, "image-rendering", this.imageRendering).call(applyAttr, "clip-path", R ? i => `circle(${R[i]}px)` : r !== undefined ? `circle(${r}px)` : null).call(applyChannelStyles, this, channels)).node();\n  }\n}\nfunction image_position(X, W, R, x, w, r) {\n  return W && X ? i => X[i] - W[i] / 2 : W ? i => x - W[i] / 2 : X && w !== undefined ? i => X[i] - w / 2 : w !== undefined ? x - w / 2 : R && X ? i => X[i] - R[i] : R ? i => x - R[i] : X ? i => X[i] - r : x - r;\n}\nfunction image_image(data, {\n  x,\n  y,\n  ...options\n} = {}) {\n  if (options.frameAnchor === undefined) [x, y] = maybeTuple(x, y);\n  return new Image(data, {\n    ...options,\n    x,\n    y\n  });\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/stats.js\n// https://github.com/jstat/jstat\n//\n// Copyright (c) 2013 jStat\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the "Software"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nfunction ibetainv(p, a, b) {\n  var EPS = 1e-8;\n  var a1 = a - 1;\n  var b1 = b - 1;\n  var j = 0;\n  var lna, lnb, pp, t, u, err, x, al, h, w, afac;\n  if (p <= 0) return 0;\n  if (p >= 1) return 1;\n  if (a >= 1 && b >= 1) {\n    pp = p < 0.5 ? p : 1 - p;\n    t = Math.sqrt(-2 * Math.log(pp));\n    x = (2.30753 + t * 0.27061) / (1 + t * (0.99229 + t * 0.04481)) - t;\n    if (p < 0.5) x = -x;\n    al = (x * x - 3) / 6;\n    h = 2 / (1 / (2 * a - 1) + 1 / (2 * b - 1));\n    w = x * Math.sqrt(al + h) / h - (1 / (2 * b - 1) - 1 / (2 * a - 1)) * (al + 5 / 6 - 2 / (3 * h));\n    x = a / (a + b * Math.exp(2 * w));\n  } else {\n    lna = Math.log(a / (a + b));\n    lnb = Math.log(b / (a + b));\n    t = Math.exp(a * lna) / a;\n    u = Math.exp(b * lnb) / b;\n    w = t + u;\n    if (p < t / w) x = Math.pow(a * w * p, 1 / a);else x = 1 - Math.pow(b * w * (1 - p), 1 / b);\n  }\n  afac = -gammaln(a) - gammaln(b) + gammaln(a + b);\n  for (; j < 10; j++) {\n    if (x === 0 || x === 1) return x;\n    err = ibeta(x, a, b) - p;\n    t = Math.exp(a1 * Math.log(x) + b1 * Math.log(1 - x) + afac);\n    u = err / t;\n    x -= t = u / (1 - 0.5 * Math.min(1, u * (a1 / x - b1 / (1 - x))));\n    if (x <= 0) x = 0.5 * (x + t);\n    if (x >= 1) x = 0.5 * (x + t + 1);\n    if (Math.abs(t) < EPS * x && j > 0) break;\n  }\n  return x;\n}\nfunction ibeta(x, a, b) {\n  // Factors in front of the continued fraction.\n  var bt = x === 0 || x === 1 ? 0 : Math.exp(gammaln(a + b) - gammaln(a) - gammaln(b) + a * Math.log(x) + b * Math.log(1 - x));\n  if (x < 0 || x > 1) return false;\n  if (x < (a + 1) / (a + b + 2))\n    // Use continued fraction directly.\n    return bt * betacf(x, a, b) / a;\n  // else use continued fraction after making the symmetry transformation.\n  return 1 - bt * betacf(1 - x, b, a) / b;\n}\nfunction betacf(x, a, b) {\n  var fpmin = 1e-30;\n  var m = 1;\n  var qab = a + b;\n  var qap = a + 1;\n  var qam = a - 1;\n  var c = 1;\n  var d = 1 - qab * x / qap;\n  var m2, aa, del, h;\n\n  // These q\'s will be used in factors that occur in the coefficients\n  if (Math.abs(d) < fpmin) d = fpmin;\n  d = 1 / d;\n  h = d;\n  for (; m <= 100; m++) {\n    m2 = 2 * m;\n    aa = m * (b - m) * x / ((qam + m2) * (a + m2));\n    // One step (the even one) of the recurrence\n    d = 1 + aa * d;\n    if (Math.abs(d) < fpmin) d = fpmin;\n    c = 1 + aa / c;\n    if (Math.abs(c) < fpmin) c = fpmin;\n    d = 1 / d;\n    h *= d * c;\n    aa = -(a + m) * (qab + m) * x / ((a + m2) * (qap + m2));\n    // Next step of the recurrence (the odd one)\n    d = 1 + aa * d;\n    if (Math.abs(d) < fpmin) d = fpmin;\n    c = 1 + aa / c;\n    if (Math.abs(c) < fpmin) c = fpmin;\n    d = 1 / d;\n    del = d * c;\n    h *= del;\n    if (Math.abs(del - 1.0) < 3e-7) break;\n  }\n  return h;\n}\nfunction gammaln(x) {\n  var j = 0;\n  var cof = [76.18009172947146, -86.5053203294167, 24.01409824083091, -1.231739572450155, 0.1208650973866179e-2, -0.5395239384953e-5];\n  var ser = 1.000000000190015;\n  var xx, y, tmp;\n  tmp = (y = xx = x) + 5.5;\n  tmp -= (xx + 0.5) * Math.log(tmp);\n  for (; j < 6; j++) ser += cof[j] / ++y;\n  return Math.log(2.506628274631 * ser / xx) - tmp;\n}\nfunction qt(p, dof) {\n  var x = ibetainv(2 * Math.min(p, 1 - p), 0.5 * dof, 0.5);\n  x = Math.sqrt(dof * (1 - x) / x);\n  return p > 0.5 ? x : -x;\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/marks/linearRegression.js\n\n\n\n\n\n\n\nconst linearRegression_defaults = {\n  ariaLabel: "linear-regression",\n  fill: "currentColor",\n  fillOpacity: 0.1,\n  stroke: "currentColor",\n  strokeWidth: 1.5,\n  strokeLinecap: "round",\n  strokeLinejoin: "round",\n  strokeMiterlimit: 1\n};\nclass LinearRegression extends Mark {\n  constructor(data, options = {}) {\n    const {\n      x,\n      y,\n      z,\n      ci = 0.95,\n      precision = 4\n    } = options;\n    super(data, {\n      x: {\n        value: x,\n        scale: "x"\n      },\n      y: {\n        value: y,\n        scale: "y"\n      },\n      z: {\n        value: maybeZ(options),\n        optional: true\n      }\n    }, options, linearRegression_defaults);\n    this.z = z;\n    this.ci = +ci;\n    this.precision = +precision;\n    if (!(0 <= this.ci && this.ci < 1)) throw new Error(`invalid ci; not in [0, 1): ${ci}`);\n    if (!(this.precision > 0)) throw new Error(`invalid precision: ${precision}`);\n  }\n  render(index, scales, channels, dimensions, context) {\n    const {\n      x: X,\n      y: Y,\n      z: Z\n    } = channels;\n    const {\n      ci\n    } = this;\n    return create("svg:g", context).call(applyIndirectStyles, this, dimensions, context).call(applyTransform, this, scales).call(g => g.selectAll().data(Z ? style_groupZ(index, Z, this.z) : [index]).enter().call(enter => enter.append("path").attr("fill", "none").call(applyDirectStyles, this).call(applyGroupedChannelStyles, this, {\n      ...channels,\n      fill: null,\n      fillOpacity: null\n    }).attr("d", I => this._renderLine(I, X, Y)).call(ci && !isNone(this.fill) ? path => path.select(pathBefore).attr("stroke", "none").call(applyDirectStyles, this).call(applyGroupedChannelStyles, this, {\n      ...channels,\n      stroke: null,\n      strokeOpacity: null,\n      strokeWidth: null\n    }).attr("d", I => this._renderBand(I, X, Y)) : () => {}))).node();\n  }\n}\nfunction pathBefore() {\n  return this.parentNode.insertBefore(this.ownerDocument.createElementNS(src.namespaces.svg, "path"), this);\n}\nclass LinearRegressionX extends LinearRegression {\n  constructor(data, options) {\n    super(data, options);\n  }\n  _renderBand(I, X, Y) {\n    const {\n      ci,\n      precision\n    } = this;\n    const [y1, y2] = (0,src.extent)(I, i => Y[i]);\n    const f = linearRegressionF(I, Y, X);\n    const g = confidenceIntervalF(I, Y, X, (1 - ci) / 2, f);\n    return (0,src.area)().y(y => y).x0(y => g(y, -1)).x1(y => g(y, +1))((0,src.range)(y1, y2 - precision / 2, precision).concat(y2));\n  }\n  _renderLine(I, X, Y) {\n    const [y1, y2] = (0,src.extent)(I, i => Y[i]);\n    const f = linearRegressionF(I, Y, X);\n    return `M${f(y1)},${y1}L${f(y2)},${y2}`;\n  }\n}\nclass LinearRegressionY extends LinearRegression {\n  constructor(data, options) {\n    super(data, options);\n  }\n  _renderBand(I, X, Y) {\n    const {\n      ci,\n      precision\n    } = this;\n    const [x1, x2] = (0,src.extent)(I, i => X[i]);\n    const f = linearRegressionF(I, X, Y);\n    const g = confidenceIntervalF(I, X, Y, (1 - ci) / 2, f);\n    return (0,src.area)().x(x => x).y0(x => g(x, -1)).y1(x => g(x, +1))((0,src.range)(x1, x2 - precision / 2, precision).concat(x2));\n  }\n  _renderLine(I, X, Y) {\n    const [x1, x2] = (0,src.extent)(I, i => X[i]);\n    const f = linearRegressionF(I, X, Y);\n    return `M${x1},${f(x1)}L${x2},${f(x2)}`;\n  }\n}\nfunction linearRegressionX(data, {\n  y = indexOf,\n  x = identity,\n  stroke,\n  fill = isNoneish(stroke) ? "currentColor" : stroke,\n  ...options\n} = {}) {\n  return new LinearRegressionX(data, maybeDenseIntervalY({\n    ...options,\n    x,\n    y,\n    fill,\n    stroke\n  }));\n}\nfunction linearRegressionY(data, {\n  x = indexOf,\n  y = identity,\n  stroke,\n  fill = isNoneish(stroke) ? "currentColor" : stroke,\n  ...options\n} = {}) {\n  return new LinearRegressionY(data, maybeDenseIntervalX({\n    ...options,\n    x,\n    y,\n    fill,\n    stroke\n  }));\n}\nfunction linearRegressionF(I, X, Y) {\n  let sumX = 0,\n    sumY = 0,\n    sumXY = 0,\n    sumX2 = 0;\n  for (const i of I) {\n    const xi = X[i];\n    const yi = Y[i];\n    sumX += xi;\n    sumY += yi;\n    sumXY += xi * yi;\n    sumX2 += xi * xi;\n  }\n  const n = I.length;\n  const slope = (n * sumXY - sumX * sumY) / (n * sumX2 - sumX * sumX);\n  const intercept = (sumY - slope * sumX) / n;\n  return x => slope * x + intercept;\n}\nfunction confidenceIntervalF(I, X, Y, p, f) {\n  const mean = (0,src.sum)(I, i => X[i]) / I.length;\n  let a = 0,\n    b = 0;\n  for (const i of I) {\n    a += (X[i] - mean) ** 2;\n    b += (Y[i] - f(X[i])) ** 2;\n  }\n  const sy = Math.sqrt(b / (I.length - 2));\n  const t = qt(p, I.length - 2);\n  return (x, k) => {\n    const Y = f(x);\n    const se = sy * Math.sqrt(1 / I.length + (x - mean) ** 2 / a);\n    return Y + k * t * se;\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/transforms/tree.js\n\n\n\n\nfunction treeNode({\n  path = identity,\n  // the delimited path\n  delimiter,\n  // how the path is separated\n  frameAnchor,\n  treeLayout = src.tree,\n  treeSort,\n  treeSeparation,\n  treeAnchor,\n  treeFilter,\n  ...options\n} = {}) {\n  treeAnchor = maybeTreeAnchor(treeAnchor);\n  treeSort = maybeTreeSort(treeSort);\n  if (treeFilter != null) treeFilter = maybeNodeValue(treeFilter);\n  if (frameAnchor === undefined) frameAnchor = treeAnchor.frameAnchor;\n  const normalize = normalizer(delimiter);\n  const outputs = treeOutputs(options, maybeNodeValue);\n  const [X, setX] = column();\n  const [Y, setY] = column();\n  return {\n    x: X,\n    y: Y,\n    frameAnchor,\n    ...basic(options, (data, facets) => {\n      const P = normalize(valueof(data, path));\n      const X = setX([]);\n      const Y = setY([]);\n      let treeIndex = -1;\n      const treeData = [];\n      const treeFacets = [];\n      const rootof = (0,src.stratify)().path(i => P[i]);\n      const layout = treeLayout();\n      if (layout.nodeSize) layout.nodeSize([1, 1]);\n      if (layout.separation && treeSeparation !== undefined) layout.separation(treeSeparation ?? one);\n      for (const o of outputs) o[output_values] = o[output_setValues]([]);\n      for (const facet of facets) {\n        const treeFacet = [];\n        const root = rootof(facet.filter(i => P[i] != null)).each(node => node.data = data[node.data]);\n        if (treeSort != null) root.sort(treeSort);\n        layout(root);\n        for (const node of root.descendants()) {\n          if (treeFilter != null && !treeFilter(node)) continue;\n          treeFacet.push(++treeIndex);\n          treeData[treeIndex] = node.data;\n          treeAnchor.position(node, treeIndex, X, Y);\n          for (const o of outputs) o[output_values][treeIndex] = o[output_evaluate](node);\n        }\n        treeFacets.push(treeFacet);\n      }\n      return {\n        data: treeData,\n        facets: treeFacets\n      };\n    }),\n    ...Object.fromEntries(outputs)\n  };\n}\nfunction treeLink({\n  path = identity,\n  // the delimited path\n  delimiter,\n  // how the path is separated\n  curve = "bump-x",\n  stroke = "#555",\n  strokeWidth = 1.5,\n  strokeOpacity = 0.5,\n  treeLayout = src.tree,\n  treeSort,\n  treeSeparation,\n  treeAnchor,\n  treeFilter,\n  ...options\n} = {}) {\n  treeAnchor = maybeTreeAnchor(treeAnchor);\n  treeSort = maybeTreeSort(treeSort);\n  if (treeFilter != null) treeFilter = maybeLinkValue(treeFilter);\n  options = {\n    curve,\n    stroke,\n    strokeWidth,\n    strokeOpacity,\n    ...options\n  };\n  const normalize = normalizer(delimiter);\n  const outputs = treeOutputs(options, maybeLinkValue);\n  const [X1, setX1] = column();\n  const [X2, setX2] = column();\n  const [Y1, setY1] = column();\n  const [Y2, setY2] = column();\n  return {\n    x1: X1,\n    x2: X2,\n    y1: Y1,\n    y2: Y2,\n    ...basic(options, (data, facets) => {\n      const P = normalize(valueof(data, path));\n      const X1 = setX1([]);\n      const X2 = setX2([]);\n      const Y1 = setY1([]);\n      const Y2 = setY2([]);\n      let treeIndex = -1;\n      const treeData = [];\n      const treeFacets = [];\n      const rootof = (0,src.stratify)().path(i => P[i]);\n      const layout = treeLayout();\n      if (layout.nodeSize) layout.nodeSize([1, 1]);\n      if (layout.separation && treeSeparation !== undefined) layout.separation(treeSeparation ?? one);\n      for (const o of outputs) o[output_values] = o[output_setValues]([]);\n      for (const facet of facets) {\n        const treeFacet = [];\n        const root = rootof(facet.filter(i => P[i] != null)).each(node => node.data = data[node.data]);\n        if (treeSort != null) root.sort(treeSort);\n        layout(root);\n        for (const {\n          source,\n          target\n        } of root.links()) {\n          if (treeFilter != null && !treeFilter(target, source)) continue;\n          treeFacet.push(++treeIndex);\n          treeData[treeIndex] = target.data;\n          treeAnchor.position(source, treeIndex, X1, Y1);\n          treeAnchor.position(target, treeIndex, X2, Y2);\n          for (const o of outputs) o[output_values][treeIndex] = o[output_evaluate](target, source);\n        }\n        treeFacets.push(treeFacet);\n      }\n      return {\n        data: treeData,\n        facets: treeFacets\n      };\n    }),\n    ...Object.fromEntries(outputs)\n  };\n}\nfunction maybeTreeAnchor(anchor = "left") {\n  switch (`${anchor}`.trim().toLowerCase()) {\n    case "left":\n      return treeAnchorLeft;\n    case "right":\n      return treeAnchorRight;\n  }\n  throw new Error(`invalid tree anchor: ${anchor}`);\n}\nconst treeAnchorLeft = {\n  frameAnchor: "left",\n  dx: 6,\n  position({\n    x,\n    y\n  }, i, X, Y) {\n    X[i] = y;\n    Y[i] = -x;\n  }\n};\nconst treeAnchorRight = {\n  frameAnchor: "right",\n  dx: -6,\n  position({\n    x,\n    y\n  }, i, X, Y) {\n    X[i] = -y;\n    Y[i] = -x;\n  }\n};\nfunction maybeTreeSort(sort) {\n  return sort == null || typeof sort === "function" ? sort : `${sort}`.trim().toLowerCase().startsWith("node:") ? nodeSort(maybeNodeValue(sort)) : nodeSort(nodeData(sort));\n}\nfunction nodeSort(value) {\n  return (a, b) => ascendingDefined(value(a), value(b));\n}\nfunction nodeData(field) {\n  return node => node.data?.[field];\n}\nfunction normalizer(delimiter = "/") {\n  return `${delimiter}` === "/" ? P => P // paths are already slash-separated\n  : P => P.map(replaceAll(delimiter, "/")); // TODO string.replaceAll when supported\n}\n\nfunction replaceAll(search, replace) {\n  search = new RegExp(regexEscape(search), "g");\n  return value => value == null ? null : `${value}`.replace(search, replace);\n}\nfunction regexEscape(string) {\n  return `${string}`.replace(/[\\\\^$*+?.()|[\\]{}]/g, "\\\\$&");\n}\nfunction isNodeValue(option) {\n  return isObject(option) && typeof option.node === "function";\n}\nfunction isLinkValue(option) {\n  return isObject(option) && typeof option.link === "function";\n}\nfunction maybeNodeValue(value) {\n  if (isNodeValue(value)) return value.node;\n  value = `${value}`.trim().toLowerCase();\n  if (!value.startsWith("node:")) return;\n  switch (value) {\n    case "node:name":\n      return nodeName;\n    case "node:path":\n      return nodePath;\n    case "node:internal":\n      return nodeInternal;\n    case "node:external":\n      return nodeExternal;\n    case "node:depth":\n      return nodeDepth;\n    case "node:height":\n      return nodeHeight;\n  }\n  throw new Error(`invalid node value: ${value}`);\n}\nfunction maybeLinkValue(value) {\n  if (isNodeValue(value)) return value.node;\n  if (isLinkValue(value)) return value.link;\n  value = `${value}`.trim().toLowerCase();\n  if (!value.startsWith("node:") && !value.startsWith("parent:")) return;\n  switch (value) {\n    case "parent:name":\n      return parentValue(nodeName);\n    case "parent:path":\n      return parentValue(nodePath);\n    case "parent:depth":\n      return parentValue(nodeDepth);\n    case "parent:height":\n      return parentValue(nodeHeight);\n    case "node:name":\n      return nodeName;\n    case "node:path":\n      return nodePath;\n    case "node:internal":\n      return nodeInternal;\n    case "node:external":\n      return nodeExternal;\n    case "node:depth":\n      return nodeDepth;\n    case "node:height":\n      return nodeHeight;\n  }\n  throw new Error(`invalid link value: ${value}`);\n}\nfunction nodePath(node) {\n  return node.id;\n}\nfunction nodeName(node) {\n  return nameof(node.id);\n}\nfunction nodeDepth(node) {\n  return node.depth;\n}\nfunction nodeHeight(node) {\n  return node.height;\n}\nfunction nodeInternal(node) {\n  return !!node.children;\n}\nfunction nodeExternal(node) {\n  return !node.children;\n}\nfunction parentValue(evaluate) {\n  return (child, parent) => parent == null ? undefined : evaluate(parent);\n}\n\n// Walk backwards to find the first slash.\nfunction nameof(path) {\n  let i = path.length;\n  while (--i > 0) if (slash(path, i)) break;\n  return path.slice(i + 1);\n}\n\n// Slashes can be escaped; to determine whether a slash is a path delimiter, we\n// count the number of preceding backslashes escaping the forward slash: an odd\n// number indicates an escaped forward slash.\nfunction slash(path, i) {\n  if (path[i] === "/") {\n    let k = 0;\n    while (i > 0 && path[--i] === "\\\\") ++k;\n    if ((k & 1) === 0) return true;\n  }\n  return false;\n}\n\n// These indexes match the array returned by nodeOutputs. The first two elements\n// are always the name of the output and its column value definition so that\n// the outputs can be passed directly to Object.fromEntries.\nconst output_setValues = 2;\nconst output_evaluate = 3;\nconst output_values = 4;\nfunction treeOutputs(options, maybeTreeValue) {\n  const outputs = [];\n  for (const name in options) {\n    const value = options[name];\n    const treeValue = maybeTreeValue(value);\n    if (treeValue !== undefined) {\n      outputs.push([name, ...column(value), treeValue]);\n    }\n  }\n  return outputs;\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/marks/tree.js\n\n\n\n\n\n\n\n\nfunction tree(data, {\n  fill,\n  stroke,\n  strokeWidth,\n  strokeOpacity,\n  strokeLinejoin,\n  strokeLinecap,\n  strokeMiterlimit,\n  strokeDasharray,\n  strokeDashoffset,\n  marker,\n  markerStart = marker,\n  markerEnd = marker,\n  dot: dotDot = isNoneish(markerStart) && isNoneish(markerEnd),\n  text: textText = "node:name",\n  textStroke = "white",\n  title = "node:path",\n  dx,\n  dy,\n  textAnchor,\n  treeLayout = src.tree,\n  textLayout = treeLayout === src.tree || treeLayout === src.cluster ? "mirrored" : "normal",\n  tip,\n  ...options\n} = {}) {\n  if (dx === undefined) dx = maybeTreeAnchor(options.treeAnchor).dx;\n  if (textAnchor !== undefined) throw new Error("textAnchor is not a configurable tree option");\n  textLayout = keyword(textLayout, "textLayout", ["mirrored", "normal"]);\n  function treeText(textOptions) {\n    return text_text(data, treeNode({\n      treeLayout,\n      text: textText,\n      fill: fill === undefined ? "currentColor" : fill,\n      stroke: textStroke,\n      dx,\n      dy,\n      title,\n      ...textOptions,\n      ...options\n    }));\n  }\n  return marks(link_link(data, treeLink({\n    treeLayout,\n    markerStart,\n    markerEnd,\n    stroke: stroke !== undefined ? stroke : fill === undefined ? "node:internal" : fill,\n    strokeWidth,\n    strokeOpacity,\n    strokeLinejoin,\n    strokeLinecap,\n    strokeMiterlimit,\n    strokeDasharray,\n    strokeDashoffset,\n    ...options\n  })), dotDot ? dot(data, treeNode({\n    treeLayout,\n    fill: fill === undefined ? "node:internal" : fill,\n    title,\n    tip,\n    ...options\n  })) : null, textText != null ? textLayout === "mirrored" ? [treeText({\n    textAnchor: "start",\n    treeFilter: "node:external"\n  }), treeText({\n    textAnchor: "end",\n    treeFilter: "node:internal",\n    dx: -dx\n  })] : treeText() : null);\n}\nfunction cluster(data, options) {\n  return tree(data, {\n    ...options,\n    treeLayout: src.cluster\n  });\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/transforms/centroid.js\n\n\n\nfunction centroid({\n  geometry = identity,\n  ...options\n} = {}) {\n  // Suppress defaults for x and y since they will be computed by the initializer.\n  return initializer({\n    ...options,\n    x: null,\n    y: null\n  }, (data, facets, channels, scales, dimensions, {\n    projection\n  }) => {\n    const G = valueof(data, geometry);\n    const n = G.length;\n    const X = new Float64Array(n);\n    const Y = new Float64Array(n);\n    const path = (0,src.geoPath)(projection);\n    for (let i = 0; i < n; ++i) [X[i], Y[i]] = path.centroid(G[i]);\n    return {\n      data,\n      facets,\n      channels: {\n        x: {\n          value: X,\n          scale: projection == null ? "x" : null,\n          source: null\n        },\n        y: {\n          value: Y,\n          scale: projection == null ? "y" : null,\n          source: null\n        }\n      }\n    };\n  });\n}\nfunction geoCentroid({\n  geometry = identity,\n  ...options\n} = {}) {\n  let C;\n  return {\n    ...options,\n    x: {\n      transform: data => Float64Array.from(C = valueof(valueof(data, geometry), src.geoCentroid), ([x]) => x)\n    },\n    y: {\n      transform: () => Float64Array.from(C, ([, y]) => y)\n    }\n  };\n}\n// EXTERNAL MODULE: ./node_modules/interval-tree-1d/interval-tree.js\nvar interval_tree = __webpack_require__(82);\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/transforms/dodge.js\n\n\n\n\n\nconst anchorXLeft = ({\n  marginLeft\n}) => [1, marginLeft];\nconst anchorXRight = ({\n  width,\n  marginRight\n}) => [-1, width - marginRight];\nconst anchorXMiddle = ({\n  width,\n  marginLeft,\n  marginRight\n}) => [0, (marginLeft + width - marginRight) / 2];\nconst anchorYTop = ({\n  marginTop\n}) => [1, marginTop];\nconst anchorYBottom = ({\n  height,\n  marginBottom\n}) => [-1, height - marginBottom];\nconst anchorYMiddle = ({\n  height,\n  marginTop,\n  marginBottom\n}) => [0, (marginTop + height - marginBottom) / 2];\nfunction dodge_maybeAnchor(anchor) {\n  return typeof anchor === "string" ? {\n    anchor\n  } : anchor;\n}\nfunction dodgeX(dodgeOptions = {}, options = {}) {\n  if (arguments.length === 1) [dodgeOptions, options] = dodge_mergeOptions(dodgeOptions);\n  let {\n    anchor = "left",\n    padding = 1,\n    r = options.r\n  } = dodge_maybeAnchor(dodgeOptions);\n  switch (`${anchor}`.toLowerCase()) {\n    case "left":\n      anchor = anchorXLeft;\n      break;\n    case "right":\n      anchor = anchorXRight;\n      break;\n    case "middle":\n      anchor = anchorXMiddle;\n      break;\n    default:\n      throw new Error(`unknown dodge anchor: ${anchor}`);\n  }\n  return dodge("x", "y", anchor, number(padding), r, options);\n}\nfunction dodgeY(dodgeOptions = {}, options = {}) {\n  if (arguments.length === 1) [dodgeOptions, options] = dodge_mergeOptions(dodgeOptions);\n  let {\n    anchor = "bottom",\n    padding = 1,\n    r = options.r\n  } = dodge_maybeAnchor(dodgeOptions);\n  switch (`${anchor}`.toLowerCase()) {\n    case "top":\n      anchor = anchorYTop;\n      break;\n    case "bottom":\n      anchor = anchorYBottom;\n      break;\n    case "middle":\n      anchor = anchorYMiddle;\n      break;\n    default:\n      throw new Error(`unknown dodge anchor: ${anchor}`);\n  }\n  return dodge("y", "x", anchor, number(padding), r, options);\n}\nfunction dodge_mergeOptions(options) {\n  const {\n    anchor,\n    padding,\n    ...rest\n  } = options;\n  const {\n    r\n  } = rest; // don’t consume r; allow it to propagate\n  return [{\n    anchor,\n    padding,\n    r\n  }, rest];\n}\nfunction dodge(y, x, anchor, padding, r, options) {\n  if (r != null && typeof r !== "number") {\n    let {\n      channels,\n      sort,\n      reverse\n    } = options;\n    channels = maybeNamed(channels);\n    if (channels?.r === undefined) options = {\n      ...options,\n      channels: {\n        ...channels,\n        r: {\n          value: r,\n          scale: "r"\n        }\n      }\n    };\n    if (sort === undefined && reverse === undefined) options.sort = {\n      channel: "-r"\n    };\n  }\n  return initializer(options, function (data, facets, channels, scales, dimensions, context) {\n    let {\n      [x]: X,\n      r: R\n    } = channels;\n    if (!channels[x]) throw new Error(`missing channel: ${x}`);\n    ({\n      [x]: X\n    } = applyPosition(channels, scales, context));\n    const cr = R ? undefined : r !== undefined ? number(r) : this.r !== undefined ? this.r : 3;\n    if (R) R = valueof(R.value, scales[R.scale] || identity, Float64Array);\n    let [ky, ty] = anchor(dimensions);\n    const compare = ky ? compareAscending : compareSymmetric;\n    const Y = new Float64Array(X.length);\n    const radius = R ? i => R[i] : () => cr;\n    for (let I of facets) {\n      const tree = interval_tree();\n      I = I.filter(R ? i => finite(X[i]) && positive(R[i]) : i => finite(X[i]));\n      const intervals = new Float64Array(2 * I.length + 2);\n      for (const i of I) {\n        const ri = radius(i);\n        const y0 = ky ? ri + padding : 0; // offset baseline for varying radius\n        const l = X[i] - ri;\n        const h = X[i] + ri;\n\n        // The first two positions are 0 to test placing the dot on the baseline.\n        let k = 2;\n\n        // For any previously placed circles that may overlap this circle, compute\n        // the y-positions that place this circle tangent to these other circles.\n        // https://observablehq.com/@mbostock/circle-offset-along-line\n        tree.queryInterval(l - padding, h + padding, ([,, j]) => {\n          const yj = Y[j] - y0;\n          const dx = X[i] - X[j];\n          const dr = padding + (R ? R[i] + R[j] : 2 * cr);\n          const dy = Math.sqrt(dr * dr - dx * dx);\n          intervals[k++] = yj - dy;\n          intervals[k++] = yj + dy;\n        });\n\n        // Find the best y-value where this circle can fit.\n        let candidates = intervals.slice(0, k);\n        if (ky) candidates = candidates.filter(y => y >= 0);\n        out: for (const y of candidates.sort(compare)) {\n          for (let j = 0; j < k; j += 2) {\n            if (intervals[j] + 1e-6 < y && y < intervals[j + 1] - 1e-6) {\n              continue out;\n            }\n          }\n          Y[i] = y + y0;\n          break;\n        }\n\n        // Insert the placed circle into the interval tree.\n        tree.insert([l, h, i]);\n      }\n    }\n    if (!ky) ky = 1;\n    for (const I of facets) {\n      for (const i of I) {\n        Y[i] = Y[i] * ky + ty;\n      }\n    }\n    return {\n      data,\n      facets,\n      channels: {\n        [y]: {\n          value: Y,\n          source: null\n        },\n        // don’t show in tooltip\n        [x]: {\n          value: X,\n          source: channels[x]\n        },\n        ...(R && {\n          r: {\n            value: R,\n            source: channels.r\n          }\n        })\n      }\n    };\n  });\n}\nfunction compareSymmetric(a, b) {\n  return Math.abs(a) - Math.abs(b);\n}\nfunction compareAscending(a, b) {\n  return a - b;\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/transforms/normalize.js\n\n\n\n\nfunction normalizeX(basis, options) {\n  if (arguments.length === 1) ({\n    basis,\n    ...options\n  } = basis);\n  return mapX(normalize(basis), options);\n}\nfunction normalizeY(basis, options) {\n  if (arguments.length === 1) ({\n    basis,\n    ...options\n  } = basis);\n  return mapY(normalize(basis), options);\n}\nfunction normalize(basis) {\n  if (basis === undefined) return normalizeFirst;\n  if (typeof basis === "function") return normalizeBasis(taker(basis));\n  if (/^p\\d{2}$/i.test(basis)) return normalizeAccessor(percentile(basis));\n  switch (`${basis}`.toLowerCase()) {\n    case "deviation":\n      return normalizeDeviation;\n    case "first":\n      return normalizeFirst;\n    case "last":\n      return normalizeLast;\n    case "max":\n      return normalizeMax;\n    case "mean":\n      return normalizeMean;\n    case "median":\n      return normalizeMedian;\n    case "min":\n      return normalizeMin;\n    case "sum":\n      return normalizeSum;\n    case "extent":\n      return normalizeExtent;\n  }\n  throw new Error(`invalid basis: ${basis}`);\n}\nfunction normalizeBasis(basis) {\n  return {\n    mapIndex(I, S, T) {\n      const b = +basis(I, S);\n      for (const i of I) {\n        T[i] = S[i] === null ? NaN : S[i] / b;\n      }\n    }\n  };\n}\nfunction normalizeAccessor(f) {\n  return normalizeBasis((I, S) => f(I, i => S[i]));\n}\nconst normalizeExtent = {\n  mapIndex(I, S, T) {\n    const [s1, s2] = (0,src.extent)(I, i => S[i]);\n    const d = s2 - s1;\n    for (const i of I) {\n      T[i] = S[i] === null ? NaN : (S[i] - s1) / d;\n    }\n  }\n};\nconst normalizeFirst = normalizeBasis((I, S) => {\n  for (let i = 0; i < I.length; ++i) {\n    const s = S[I[i]];\n    if (defined(s)) return s;\n  }\n});\nconst normalizeLast = normalizeBasis((I, S) => {\n  for (let i = I.length - 1; i >= 0; --i) {\n    const s = S[I[i]];\n    if (defined(s)) return s;\n  }\n});\nconst normalizeDeviation = {\n  mapIndex(I, S, T) {\n    const m = (0,src.mean)(I, i => S[i]);\n    const d = (0,src.deviation)(I, i => S[i]);\n    for (const i of I) {\n      T[i] = S[i] === null ? NaN : d ? (S[i] - m) / d : 0;\n    }\n  }\n};\nconst normalizeMax = normalizeAccessor(src.max);\nconst normalizeMean = normalizeAccessor(src.mean);\nconst normalizeMedian = normalizeAccessor(src.median);\nconst normalizeMin = normalizeAccessor(src.min);\nconst normalizeSum = normalizeAccessor(src.sum);\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/transforms/select.js\n\n\n\nfunction select_select(selector, options = {}) {\n  // If specified selector is a string or function, it’s a selector without an\n  // input channel such as first or last.\n  if (typeof selector === "string") {\n    switch (selector.toLowerCase()) {\n      case "first":\n        return selectFirst(options);\n      case "last":\n        return selectLast(options);\n    }\n  }\n  if (typeof selector === "function") {\n    return selectChannel(null, selector, options);\n  }\n  // Otherwise the selector is an option {name: value} where name is a channel\n  // name and value is a selector definition that additionally takes the given\n  // channel values as input. The selector object must have exactly one key.\n  let key, value;\n  for (key in selector) {\n    if (value !== undefined) throw new Error("ambiguous selector; multiple inputs");\n    value = maybeSelector(selector[key]);\n  }\n  if (value === undefined) throw new Error(`invalid selector: ${selector}`);\n  return selectChannel(key, value, options);\n}\nfunction maybeSelector(selector) {\n  if (typeof selector === "function") return selector;\n  switch (`${selector}`.toLowerCase()) {\n    case "min":\n      return selectorMin;\n    case "max":\n      return selectorMax;\n  }\n  throw new Error(`unknown selector: ${selector}`);\n}\nfunction selectFirst(options) {\n  return selectChannel(null, selectorFirst, options);\n}\nfunction selectLast(options) {\n  return selectChannel(null, selectorLast, options);\n}\nfunction selectMinX(options) {\n  return selectChannel("x", selectorMin, options);\n}\nfunction selectMinY(options) {\n  return selectChannel("y", selectorMin, options);\n}\nfunction selectMaxX(options) {\n  return selectChannel("x", selectorMax, options);\n}\nfunction selectMaxY(options) {\n  return selectChannel("y", selectorMax, options);\n}\nfunction* selectorFirst(I) {\n  yield I[0];\n}\nfunction* selectorLast(I) {\n  yield I[I.length - 1];\n}\nfunction* selectorMin(I, X) {\n  yield (0,src.least)(I, i => X[i]);\n}\nfunction* selectorMax(I, X) {\n  yield (0,src.greatest)(I, i => X[i]);\n}\nfunction selectChannel(v, selector, options) {\n  if (v != null) {\n    if (options[v] == null) throw new Error(`missing channel: ${v}`);\n    v = options[v];\n  }\n  const z = maybeZ(options);\n  return basic(options, (data, facets) => {\n    const Z = valueof(data, z);\n    const V = valueof(data, v);\n    const selectFacets = [];\n    for (const facet of facets) {\n      const selectFacet = [];\n      for (const I of Z ? (0,src.group)(facet, i => Z[i]).values() : [facet]) {\n        for (const i of selector(I, V)) {\n          selectFacet.push(i);\n        }\n      }\n      selectFacets.push(selectFacet);\n    }\n    return {\n      data,\n      facets: selectFacets\n    };\n  });\n}\n;// CONCATENATED MODULE: ./node_modules/@observablehq/plot/src/index.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=webpack:///./node_modules/@observablehq/plot/src/index.js_+_77_modules?')},37:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "Adder": () => (/* reexport */ Adder),\n  "Delaunay": () => (/* reexport */ Delaunay),\n  "FormatSpecifier": () => (/* reexport */ FormatSpecifier),\n  "InternMap": () => (/* reexport */ InternMap),\n  "InternSet": () => (/* reexport */ InternSet),\n  "Node": () => (/* reexport */ Node),\n  "Path": () => (/* reexport */ Path),\n  "Voronoi": () => (/* reexport */ Voronoi),\n  "ZoomTransform": () => (/* reexport */ Transform),\n  "active": () => (/* reexport */ active),\n  "arc": () => (/* reexport */ arc),\n  "area": () => (/* reexport */ d3_shape_src_area),\n  "areaRadial": () => (/* reexport */ areaRadial),\n  "ascending": () => (/* reexport */ ascending),\n  "autoType": () => (/* reexport */ autoType),\n  "axisBottom": () => (/* reexport */ axisBottom),\n  "axisLeft": () => (/* reexport */ axisLeft),\n  "axisRight": () => (/* reexport */ axisRight),\n  "axisTop": () => (/* reexport */ axisTop),\n  "bin": () => (/* reexport */ bin),\n  "bisect": () => (/* reexport */ bisect),\n  "bisectCenter": () => (/* reexport */ bisectCenter),\n  "bisectLeft": () => (/* reexport */ bisectLeft),\n  "bisectRight": () => (/* reexport */ bisectRight),\n  "bisector": () => (/* reexport */ bisector),\n  "blob": () => (/* reexport */ blob),\n  "blur": () => (/* reexport */ blur_blur),\n  "blur2": () => (/* reexport */ blur2),\n  "blurImage": () => (/* reexport */ blurImage),\n  "brush": () => (/* reexport */ brush),\n  "brushSelection": () => (/* reexport */ brushSelection),\n  "brushX": () => (/* reexport */ brushX),\n  "brushY": () => (/* reexport */ brushY),\n  "buffer": () => (/* reexport */ buffer),\n  "chord": () => (/* reexport */ chord),\n  "chordDirected": () => (/* reexport */ chordDirected),\n  "chordTranspose": () => (/* reexport */ chordTranspose),\n  "cluster": () => (/* reexport */ cluster),\n  "color": () => (/* reexport */ color),\n  "contourDensity": () => (/* reexport */ density),\n  "contours": () => (/* reexport */ src_contours),\n  "count": () => (/* reexport */ count),\n  "create": () => (/* reexport */ src_create),\n  "creator": () => (/* reexport */ creator),\n  "cross": () => (/* reexport */ cross),\n  "csv": () => (/* reexport */ dsv_csv),\n  "csvFormat": () => (/* reexport */ csvFormat),\n  "csvFormatBody": () => (/* reexport */ csvFormatBody),\n  "csvFormatRow": () => (/* reexport */ csvFormatRow),\n  "csvFormatRows": () => (/* reexport */ csvFormatRows),\n  "csvFormatValue": () => (/* reexport */ csvFormatValue),\n  "csvParse": () => (/* reexport */ csvParse),\n  "csvParseRows": () => (/* reexport */ csvParseRows),\n  "cubehelix": () => (/* reexport */ cubehelix_cubehelix),\n  "cumsum": () => (/* reexport */ cumsum),\n  "curveBasis": () => (/* reexport */ curve_basis),\n  "curveBasisClosed": () => (/* reexport */ curve_basisClosed),\n  "curveBasisOpen": () => (/* reexport */ basisOpen),\n  "curveBumpX": () => (/* reexport */ bumpX),\n  "curveBumpY": () => (/* reexport */ bumpY),\n  "curveBundle": () => (/* reexport */ bundle),\n  "curveCardinal": () => (/* reexport */ cardinal),\n  "curveCardinalClosed": () => (/* reexport */ cardinalClosed),\n  "curveCardinalOpen": () => (/* reexport */ cardinalOpen),\n  "curveCatmullRom": () => (/* reexport */ catmullRom),\n  "curveCatmullRomClosed": () => (/* reexport */ catmullRomClosed),\n  "curveCatmullRomOpen": () => (/* reexport */ catmullRomOpen),\n  "curveLinear": () => (/* reexport */ curve_linear),\n  "curveLinearClosed": () => (/* reexport */ linearClosed),\n  "curveMonotoneX": () => (/* reexport */ monotoneX),\n  "curveMonotoneY": () => (/* reexport */ monotoneY),\n  "curveNatural": () => (/* reexport */ natural),\n  "curveStep": () => (/* reexport */ step),\n  "curveStepAfter": () => (/* reexport */ stepAfter),\n  "curveStepBefore": () => (/* reexport */ stepBefore),\n  "descending": () => (/* reexport */ descending),\n  "deviation": () => (/* reexport */ deviation),\n  "difference": () => (/* reexport */ difference),\n  "disjoint": () => (/* reexport */ disjoint),\n  "dispatch": () => (/* reexport */ src_dispatch),\n  "drag": () => (/* reexport */ drag),\n  "dragDisable": () => (/* reexport */ nodrag),\n  "dragEnable": () => (/* reexport */ yesdrag),\n  "dsv": () => (/* reexport */ dsv_dsv),\n  "dsvFormat": () => (/* reexport */ dsv),\n  "easeBack": () => (/* reexport */ backInOut),\n  "easeBackIn": () => (/* reexport */ backIn),\n  "easeBackInOut": () => (/* reexport */ backInOut),\n  "easeBackOut": () => (/* reexport */ backOut),\n  "easeBounce": () => (/* reexport */ bounceOut),\n  "easeBounceIn": () => (/* reexport */ bounceIn),\n  "easeBounceInOut": () => (/* reexport */ bounceInOut),\n  "easeBounceOut": () => (/* reexport */ bounceOut),\n  "easeCircle": () => (/* reexport */ circleInOut),\n  "easeCircleIn": () => (/* reexport */ circleIn),\n  "easeCircleInOut": () => (/* reexport */ circleInOut),\n  "easeCircleOut": () => (/* reexport */ circleOut),\n  "easeCubic": () => (/* reexport */ cubicInOut),\n  "easeCubicIn": () => (/* reexport */ cubicIn),\n  "easeCubicInOut": () => (/* reexport */ cubicInOut),\n  "easeCubicOut": () => (/* reexport */ cubicOut),\n  "easeElastic": () => (/* reexport */ elasticOut),\n  "easeElasticIn": () => (/* reexport */ elasticIn),\n  "easeElasticInOut": () => (/* reexport */ elasticInOut),\n  "easeElasticOut": () => (/* reexport */ elasticOut),\n  "easeExp": () => (/* reexport */ expInOut),\n  "easeExpIn": () => (/* reexport */ expIn),\n  "easeExpInOut": () => (/* reexport */ expInOut),\n  "easeExpOut": () => (/* reexport */ expOut),\n  "easeLinear": () => (/* reexport */ linear_linear),\n  "easePoly": () => (/* reexport */ polyInOut),\n  "easePolyIn": () => (/* reexport */ polyIn),\n  "easePolyInOut": () => (/* reexport */ polyInOut),\n  "easePolyOut": () => (/* reexport */ polyOut),\n  "easeQuad": () => (/* reexport */ quadInOut),\n  "easeQuadIn": () => (/* reexport */ quadIn),\n  "easeQuadInOut": () => (/* reexport */ quadInOut),\n  "easeQuadOut": () => (/* reexport */ quadOut),\n  "easeSin": () => (/* reexport */ sinInOut),\n  "easeSinIn": () => (/* reexport */ sinIn),\n  "easeSinInOut": () => (/* reexport */ sinInOut),\n  "easeSinOut": () => (/* reexport */ sinOut),\n  "every": () => (/* reexport */ every),\n  "extent": () => (/* reexport */ extent),\n  "fcumsum": () => (/* reexport */ fcumsum),\n  "filter": () => (/* reexport */ filter),\n  "flatGroup": () => (/* reexport */ flatGroup),\n  "flatRollup": () => (/* reexport */ flatRollup),\n  "forceCenter": () => (/* reexport */ src_center),\n  "forceCollide": () => (/* reexport */ collide),\n  "forceLink": () => (/* reexport */ src_link),\n  "forceManyBody": () => (/* reexport */ manyBody),\n  "forceRadial": () => (/* reexport */ radial),\n  "forceSimulation": () => (/* reexport */ simulation),\n  "forceX": () => (/* reexport */ src_x),\n  "forceY": () => (/* reexport */ src_y),\n  "format": () => (/* reexport */ format),\n  "formatDefaultLocale": () => (/* reexport */ defaultLocale),\n  "formatLocale": () => (/* reexport */ locale),\n  "formatPrefix": () => (/* reexport */ formatPrefix),\n  "formatSpecifier": () => (/* reexport */ formatSpecifier),\n  "fsum": () => (/* reexport */ fsum),\n  "geoAlbers": () => (/* reexport */ albers),\n  "geoAlbersUsa": () => (/* reexport */ albersUsa),\n  "geoArea": () => (/* reexport */ d3_geo_src_area),\n  "geoAzimuthalEqualArea": () => (/* reexport */ azimuthalEqualArea),\n  "geoAzimuthalEqualAreaRaw": () => (/* reexport */ azimuthalEqualAreaRaw),\n  "geoAzimuthalEquidistant": () => (/* reexport */ azimuthalEquidistant),\n  "geoAzimuthalEquidistantRaw": () => (/* reexport */ azimuthalEquidistantRaw),\n  "geoBounds": () => (/* reexport */ bounds),\n  "geoCentroid": () => (/* reexport */ centroid),\n  "geoCircle": () => (/* reexport */ circle),\n  "geoClipAntimeridian": () => (/* reexport */ antimeridian),\n  "geoClipCircle": () => (/* reexport */ clip_circle),\n  "geoClipExtent": () => (/* reexport */ clip_extent),\n  "geoClipRectangle": () => (/* reexport */ clipRectangle),\n  "geoConicConformal": () => (/* reexport */ conicConformal),\n  "geoConicConformalRaw": () => (/* reexport */ conicConformalRaw),\n  "geoConicEqualArea": () => (/* reexport */ conicEqualArea),\n  "geoConicEqualAreaRaw": () => (/* reexport */ conicEqualAreaRaw),\n  "geoConicEquidistant": () => (/* reexport */ conicEquidistant),\n  "geoConicEquidistantRaw": () => (/* reexport */ conicEquidistantRaw),\n  "geoContains": () => (/* reexport */ src_contains),\n  "geoDistance": () => (/* reexport */ distance),\n  "geoEqualEarth": () => (/* reexport */ equalEarth),\n  "geoEqualEarthRaw": () => (/* reexport */ equalEarthRaw),\n  "geoEquirectangular": () => (/* reexport */ equirectangular),\n  "geoEquirectangularRaw": () => (/* reexport */ equirectangularRaw),\n  "geoGnomonic": () => (/* reexport */ gnomonic),\n  "geoGnomonicRaw": () => (/* reexport */ gnomonicRaw),\n  "geoGraticule": () => (/* reexport */ graticule),\n  "geoGraticule10": () => (/* reexport */ graticule10),\n  "geoIdentity": () => (/* reexport */ projection_identity),\n  "geoInterpolate": () => (/* reexport */ src_interpolate),\n  "geoLength": () => (/* reexport */ src_length),\n  "geoMercator": () => (/* reexport */ mercator),\n  "geoMercatorRaw": () => (/* reexport */ mercatorRaw),\n  "geoNaturalEarth1": () => (/* reexport */ naturalEarth1),\n  "geoNaturalEarth1Raw": () => (/* reexport */ naturalEarth1Raw),\n  "geoOrthographic": () => (/* reexport */ orthographic),\n  "geoOrthographicRaw": () => (/* reexport */ orthographicRaw),\n  "geoPath": () => (/* reexport */ src_path),\n  "geoProjection": () => (/* reexport */ projection),\n  "geoProjectionMutator": () => (/* reexport */ projectionMutator),\n  "geoRotation": () => (/* reexport */ rotation),\n  "geoStereographic": () => (/* reexport */ stereographic),\n  "geoStereographicRaw": () => (/* reexport */ stereographicRaw),\n  "geoStream": () => (/* reexport */ stream),\n  "geoTransform": () => (/* reexport */ transform),\n  "geoTransverseMercator": () => (/* reexport */ transverseMercator),\n  "geoTransverseMercatorRaw": () => (/* reexport */ transverseMercatorRaw),\n  "gray": () => (/* reexport */ gray),\n  "greatest": () => (/* reexport */ greatest),\n  "greatestIndex": () => (/* reexport */ greatestIndex),\n  "group": () => (/* reexport */ group),\n  "groupSort": () => (/* reexport */ groupSort),\n  "groups": () => (/* reexport */ groups),\n  "hcl": () => (/* reexport */ hcl),\n  "hierarchy": () => (/* reexport */ hierarchy),\n  "histogram": () => (/* reexport */ bin),\n  "hsl": () => (/* reexport */ hsl),\n  "html": () => (/* reexport */ xml_html),\n  "image": () => (/* reexport */ src_image),\n  "index": () => (/* reexport */ index),\n  "indexes": () => (/* reexport */ indexes),\n  "interpolate": () => (/* reexport */ value),\n  "interpolateArray": () => (/* reexport */ src_array),\n  "interpolateBasis": () => (/* reexport */ src_basis),\n  "interpolateBasisClosed": () => (/* reexport */ basisClosed),\n  "interpolateBlues": () => (/* reexport */ Blues),\n  "interpolateBrBG": () => (/* reexport */ BrBG),\n  "interpolateBuGn": () => (/* reexport */ BuGn),\n  "interpolateBuPu": () => (/* reexport */ BuPu),\n  "interpolateCividis": () => (/* reexport */ cividis),\n  "interpolateCool": () => (/* reexport */ cool),\n  "interpolateCubehelix": () => (/* reexport */ src_cubehelix),\n  "interpolateCubehelixDefault": () => (/* reexport */ sequential_multi_cubehelix),\n  "interpolateCubehelixLong": () => (/* reexport */ cubehelixLong),\n  "interpolateDate": () => (/* reexport */ date),\n  "interpolateDiscrete": () => (/* reexport */ discrete),\n  "interpolateGnBu": () => (/* reexport */ GnBu),\n  "interpolateGreens": () => (/* reexport */ Greens),\n  "interpolateGreys": () => (/* reexport */ Greys),\n  "interpolateHcl": () => (/* reexport */ src_hcl),\n  "interpolateHclLong": () => (/* reexport */ hclLong),\n  "interpolateHsl": () => (/* reexport */ src_hsl),\n  "interpolateHslLong": () => (/* reexport */ hslLong),\n  "interpolateHue": () => (/* reexport */ src_hue),\n  "interpolateInferno": () => (/* reexport */ inferno),\n  "interpolateLab": () => (/* reexport */ lab_lab),\n  "interpolateMagma": () => (/* reexport */ magma),\n  "interpolateNumber": () => (/* reexport */ src_number),\n  "interpolateNumberArray": () => (/* reexport */ numberArray),\n  "interpolateObject": () => (/* reexport */ object),\n  "interpolateOrRd": () => (/* reexport */ OrRd),\n  "interpolateOranges": () => (/* reexport */ Oranges),\n  "interpolatePRGn": () => (/* reexport */ PRGn),\n  "interpolatePiYG": () => (/* reexport */ PiYG),\n  "interpolatePlasma": () => (/* reexport */ plasma),\n  "interpolatePuBu": () => (/* reexport */ PuBu),\n  "interpolatePuBuGn": () => (/* reexport */ PuBuGn),\n  "interpolatePuOr": () => (/* reexport */ PuOr),\n  "interpolatePuRd": () => (/* reexport */ PuRd),\n  "interpolatePurples": () => (/* reexport */ Purples),\n  "interpolateRainbow": () => (/* reexport */ rainbow),\n  "interpolateRdBu": () => (/* reexport */ RdBu),\n  "interpolateRdGy": () => (/* reexport */ RdGy),\n  "interpolateRdPu": () => (/* reexport */ RdPu),\n  "interpolateRdYlBu": () => (/* reexport */ RdYlBu),\n  "interpolateRdYlGn": () => (/* reexport */ RdYlGn),\n  "interpolateReds": () => (/* reexport */ Reds),\n  "interpolateRgb": () => (/* reexport */ rgb),\n  "interpolateRgbBasis": () => (/* reexport */ rgbBasis),\n  "interpolateRgbBasisClosed": () => (/* reexport */ rgbBasisClosed),\n  "interpolateRound": () => (/* reexport */ round),\n  "interpolateSinebow": () => (/* reexport */ sinebow),\n  "interpolateSpectral": () => (/* reexport */ Spectral),\n  "interpolateString": () => (/* reexport */ string),\n  "interpolateTransformCss": () => (/* reexport */ interpolateTransformCss),\n  "interpolateTransformSvg": () => (/* reexport */ interpolateTransformSvg),\n  "interpolateTurbo": () => (/* reexport */ turbo),\n  "interpolateViridis": () => (/* reexport */ viridis),\n  "interpolateWarm": () => (/* reexport */ warm),\n  "interpolateYlGn": () => (/* reexport */ YlGn),\n  "interpolateYlGnBu": () => (/* reexport */ YlGnBu),\n  "interpolateYlOrBr": () => (/* reexport */ YlOrBr),\n  "interpolateYlOrRd": () => (/* reexport */ YlOrRd),\n  "interpolateZoom": () => (/* reexport */ src_zoom),\n  "interrupt": () => (/* reexport */ interrupt),\n  "intersection": () => (/* reexport */ intersection),\n  "interval": () => (/* reexport */ src_interval),\n  "isoFormat": () => (/* reexport */ isoFormat),\n  "isoParse": () => (/* reexport */ isoParse),\n  "json": () => (/* reexport */ json),\n  "lab": () => (/* reexport */ lab),\n  "lch": () => (/* reexport */ lch),\n  "least": () => (/* reexport */ least),\n  "leastIndex": () => (/* reexport */ leastIndex),\n  "line": () => (/* reexport */ src_line),\n  "lineRadial": () => (/* reexport */ src_lineRadial),\n  "link": () => (/* reexport */ link_link),\n  "linkHorizontal": () => (/* reexport */ linkHorizontal),\n  "linkRadial": () => (/* reexport */ linkRadial),\n  "linkVertical": () => (/* reexport */ linkVertical),\n  "local": () => (/* reexport */ local_local),\n  "map": () => (/* reexport */ map_map),\n  "matcher": () => (/* reexport */ matcher),\n  "max": () => (/* reexport */ max),\n  "maxIndex": () => (/* reexport */ maxIndex),\n  "mean": () => (/* reexport */ mean),\n  "median": () => (/* reexport */ median),\n  "medianIndex": () => (/* reexport */ medianIndex),\n  "merge": () => (/* reexport */ merge),\n  "min": () => (/* reexport */ min),\n  "minIndex": () => (/* reexport */ minIndex),\n  "mode": () => (/* reexport */ mode),\n  "namespace": () => (/* reexport */ namespace),\n  "namespaces": () => (/* reexport */ namespaces),\n  "nice": () => (/* reexport */ nice),\n  "now": () => (/* reexport */ now),\n  "pack": () => (/* reexport */ pack),\n  "packEnclose": () => (/* reexport */ enclose),\n  "packSiblings": () => (/* reexport */ siblings),\n  "pairs": () => (/* reexport */ pairs),\n  "partition": () => (/* reexport */ partition),\n  "path": () => (/* reexport */ path),\n  "pathRound": () => (/* reexport */ pathRound),\n  "permute": () => (/* reexport */ permute),\n  "pie": () => (/* reexport */ pie),\n  "piecewise": () => (/* reexport */ piecewise),\n  "pointRadial": () => (/* reexport */ pointRadial),\n  "pointer": () => (/* reexport */ pointer),\n  "pointers": () => (/* reexport */ pointers),\n  "polygonArea": () => (/* reexport */ d3_polygon_src_area),\n  "polygonCentroid": () => (/* reexport */ src_centroid),\n  "polygonContains": () => (/* reexport */ d3_polygon_src_contains),\n  "polygonHull": () => (/* reexport */ hull),\n  "polygonLength": () => (/* reexport */ d3_polygon_src_length),\n  "precisionFixed": () => (/* reexport */ precisionFixed),\n  "precisionPrefix": () => (/* reexport */ precisionPrefix),\n  "precisionRound": () => (/* reexport */ precisionRound),\n  "quadtree": () => (/* reexport */ quadtree),\n  "quantile": () => (/* reexport */ quantile),\n  "quantileIndex": () => (/* reexport */ quantileIndex),\n  "quantileSorted": () => (/* reexport */ quantileSorted),\n  "quantize": () => (/* reexport */ quantize),\n  "quickselect": () => (/* reexport */ quickselect),\n  "radialArea": () => (/* reexport */ areaRadial),\n  "radialLine": () => (/* reexport */ src_lineRadial),\n  "randomBates": () => (/* reexport */ bates),\n  "randomBernoulli": () => (/* reexport */ bernoulli),\n  "randomBeta": () => (/* reexport */ beta),\n  "randomBinomial": () => (/* reexport */ binomial),\n  "randomCauchy": () => (/* reexport */ cauchy),\n  "randomExponential": () => (/* reexport */ src_exponential),\n  "randomGamma": () => (/* reexport */ src_gamma),\n  "randomGeometric": () => (/* reexport */ geometric),\n  "randomInt": () => (/* reexport */ src_int),\n  "randomIrwinHall": () => (/* reexport */ irwinHall),\n  "randomLcg": () => (/* reexport */ lcg_lcg),\n  "randomLogNormal": () => (/* reexport */ logNormal),\n  "randomLogistic": () => (/* reexport */ logistic),\n  "randomNormal": () => (/* reexport */ normal),\n  "randomPareto": () => (/* reexport */ pareto),\n  "randomPoisson": () => (/* reexport */ poisson),\n  "randomUniform": () => (/* reexport */ uniform),\n  "randomWeibull": () => (/* reexport */ weibull),\n  "range": () => (/* reexport */ range),\n  "rank": () => (/* reexport */ rank),\n  "reduce": () => (/* reexport */ reduce),\n  "reverse": () => (/* reexport */ reverse),\n  "rgb": () => (/* reexport */ color_rgb),\n  "ribbon": () => (/* reexport */ src_ribbon),\n  "ribbonArrow": () => (/* reexport */ ribbonArrow),\n  "rollup": () => (/* reexport */ rollup),\n  "rollups": () => (/* reexport */ rollups),\n  "scaleBand": () => (/* reexport */ band),\n  "scaleDiverging": () => (/* reexport */ diverging),\n  "scaleDivergingLog": () => (/* reexport */ divergingLog),\n  "scaleDivergingPow": () => (/* reexport */ divergingPow),\n  "scaleDivergingSqrt": () => (/* reexport */ divergingSqrt),\n  "scaleDivergingSymlog": () => (/* reexport */ divergingSymlog),\n  "scaleIdentity": () => (/* reexport */ identity_identity),\n  "scaleImplicit": () => (/* reexport */ implicit),\n  "scaleLinear": () => (/* reexport */ src_linear_linear),\n  "scaleLog": () => (/* reexport */ log_log),\n  "scaleOrdinal": () => (/* reexport */ ordinal),\n  "scalePoint": () => (/* reexport */ point),\n  "scalePow": () => (/* reexport */ pow_pow),\n  "scaleQuantile": () => (/* reexport */ quantile_quantile),\n  "scaleQuantize": () => (/* reexport */ quantize_quantize),\n  "scaleRadial": () => (/* reexport */ radial_radial),\n  "scaleSequential": () => (/* reexport */ sequential),\n  "scaleSequentialLog": () => (/* reexport */ sequentialLog),\n  "scaleSequentialPow": () => (/* reexport */ sequentialPow),\n  "scaleSequentialQuantile": () => (/* reexport */ sequentialQuantile),\n  "scaleSequentialSqrt": () => (/* reexport */ sequentialSqrt),\n  "scaleSequentialSymlog": () => (/* reexport */ sequentialSymlog),\n  "scaleSqrt": () => (/* reexport */ pow_sqrt),\n  "scaleSymlog": () => (/* reexport */ symlog),\n  "scaleThreshold": () => (/* reexport */ threshold),\n  "scaleTime": () => (/* reexport */ time),\n  "scaleUtc": () => (/* reexport */ utcTime),\n  "scan": () => (/* reexport */ scan),\n  "schemeAccent": () => (/* reexport */ Accent),\n  "schemeBlues": () => (/* reexport */ Blues_scheme),\n  "schemeBrBG": () => (/* reexport */ scheme),\n  "schemeBuGn": () => (/* reexport */ BuGn_scheme),\n  "schemeBuPu": () => (/* reexport */ BuPu_scheme),\n  "schemeCategory10": () => (/* reexport */ category10),\n  "schemeDark2": () => (/* reexport */ Dark2),\n  "schemeGnBu": () => (/* reexport */ GnBu_scheme),\n  "schemeGreens": () => (/* reexport */ Greens_scheme),\n  "schemeGreys": () => (/* reexport */ Greys_scheme),\n  "schemeOrRd": () => (/* reexport */ OrRd_scheme),\n  "schemeOranges": () => (/* reexport */ Oranges_scheme),\n  "schemePRGn": () => (/* reexport */ PRGn_scheme),\n  "schemePaired": () => (/* reexport */ Paired),\n  "schemePastel1": () => (/* reexport */ Pastel1),\n  "schemePastel2": () => (/* reexport */ Pastel2),\n  "schemePiYG": () => (/* reexport */ PiYG_scheme),\n  "schemePuBu": () => (/* reexport */ PuBu_scheme),\n  "schemePuBuGn": () => (/* reexport */ PuBuGn_scheme),\n  "schemePuOr": () => (/* reexport */ PuOr_scheme),\n  "schemePuRd": () => (/* reexport */ PuRd_scheme),\n  "schemePurples": () => (/* reexport */ Purples_scheme),\n  "schemeRdBu": () => (/* reexport */ RdBu_scheme),\n  "schemeRdGy": () => (/* reexport */ RdGy_scheme),\n  "schemeRdPu": () => (/* reexport */ RdPu_scheme),\n  "schemeRdYlBu": () => (/* reexport */ RdYlBu_scheme),\n  "schemeRdYlGn": () => (/* reexport */ RdYlGn_scheme),\n  "schemeReds": () => (/* reexport */ Reds_scheme),\n  "schemeSet1": () => (/* reexport */ Set1),\n  "schemeSet2": () => (/* reexport */ Set2),\n  "schemeSet3": () => (/* reexport */ Set3),\n  "schemeSpectral": () => (/* reexport */ Spectral_scheme),\n  "schemeTableau10": () => (/* reexport */ Tableau10),\n  "schemeYlGn": () => (/* reexport */ YlGn_scheme),\n  "schemeYlGnBu": () => (/* reexport */ YlGnBu_scheme),\n  "schemeYlOrBr": () => (/* reexport */ YlOrBr_scheme),\n  "schemeYlOrRd": () => (/* reexport */ YlOrRd_scheme),\n  "select": () => (/* reexport */ src_select),\n  "selectAll": () => (/* reexport */ src_selectAll),\n  "selection": () => (/* reexport */ src_selection),\n  "selector": () => (/* reexport */ selector),\n  "selectorAll": () => (/* reexport */ selectorAll),\n  "shuffle": () => (/* reexport */ shuffle),\n  "shuffler": () => (/* reexport */ shuffler),\n  "some": () => (/* reexport */ some),\n  "sort": () => (/* reexport */ sort),\n  "stack": () => (/* reexport */ stack),\n  "stackOffsetDiverging": () => (/* reexport */ offset_diverging),\n  "stackOffsetExpand": () => (/* reexport */ expand),\n  "stackOffsetNone": () => (/* reexport */ offset_none),\n  "stackOffsetSilhouette": () => (/* reexport */ silhouette),\n  "stackOffsetWiggle": () => (/* reexport */ wiggle),\n  "stackOrderAppearance": () => (/* reexport */ appearance),\n  "stackOrderAscending": () => (/* reexport */ order_ascending),\n  "stackOrderDescending": () => (/* reexport */ order_descending),\n  "stackOrderInsideOut": () => (/* reexport */ insideOut),\n  "stackOrderNone": () => (/* reexport */ order_none),\n  "stackOrderReverse": () => (/* reexport */ order_reverse),\n  "stratify": () => (/* reexport */ stratify),\n  "style": () => (/* reexport */ styleValue),\n  "subset": () => (/* reexport */ subset),\n  "sum": () => (/* reexport */ sum_sum),\n  "superset": () => (/* reexport */ superset),\n  "svg": () => (/* reexport */ svg),\n  "symbol": () => (/* reexport */ symbol_Symbol),\n  "symbolAsterisk": () => (/* reexport */ asterisk),\n  "symbolCircle": () => (/* reexport */ symbol_circle),\n  "symbolCross": () => (/* reexport */ symbol_cross),\n  "symbolDiamond": () => (/* reexport */ diamond),\n  "symbolDiamond2": () => (/* reexport */ diamond2),\n  "symbolPlus": () => (/* reexport */ plus),\n  "symbolSquare": () => (/* reexport */ symbol_square),\n  "symbolSquare2": () => (/* reexport */ square2),\n  "symbolStar": () => (/* reexport */ star),\n  "symbolTimes": () => (/* reexport */ times),\n  "symbolTriangle": () => (/* reexport */ triangle),\n  "symbolTriangle2": () => (/* reexport */ triangle2),\n  "symbolWye": () => (/* reexport */ wye),\n  "symbolX": () => (/* reexport */ times),\n  "symbols": () => (/* reexport */ symbolsFill),\n  "symbolsFill": () => (/* reexport */ symbolsFill),\n  "symbolsStroke": () => (/* reexport */ symbolsStroke),\n  "text": () => (/* reexport */ src_text),\n  "thresholdFreedmanDiaconis": () => (/* reexport */ thresholdFreedmanDiaconis),\n  "thresholdScott": () => (/* reexport */ thresholdScott),\n  "thresholdSturges": () => (/* reexport */ thresholdSturges),\n  "tickFormat": () => (/* reexport */ tickFormat),\n  "tickIncrement": () => (/* reexport */ tickIncrement),\n  "tickStep": () => (/* reexport */ tickStep),\n  "ticks": () => (/* reexport */ ticks),\n  "timeDay": () => (/* reexport */ timeDay),\n  "timeDays": () => (/* reexport */ timeDays),\n  "timeFormat": () => (/* reexport */ timeFormat),\n  "timeFormatDefaultLocale": () => (/* reexport */ defaultLocale_defaultLocale),\n  "timeFormatLocale": () => (/* reexport */ formatLocale),\n  "timeFriday": () => (/* reexport */ timeFriday),\n  "timeFridays": () => (/* reexport */ timeFridays),\n  "timeHour": () => (/* reexport */ timeHour),\n  "timeHours": () => (/* reexport */ timeHours),\n  "timeInterval": () => (/* reexport */ timeInterval),\n  "timeMillisecond": () => (/* reexport */ millisecond),\n  "timeMilliseconds": () => (/* reexport */ milliseconds),\n  "timeMinute": () => (/* reexport */ timeMinute),\n  "timeMinutes": () => (/* reexport */ timeMinutes),\n  "timeMonday": () => (/* reexport */ timeMonday),\n  "timeMondays": () => (/* reexport */ timeMondays),\n  "timeMonth": () => (/* reexport */ timeMonth),\n  "timeMonths": () => (/* reexport */ timeMonths),\n  "timeParse": () => (/* reexport */ timeParse),\n  "timeSaturday": () => (/* reexport */ timeSaturday),\n  "timeSaturdays": () => (/* reexport */ timeSaturdays),\n  "timeSecond": () => (/* reexport */ second),\n  "timeSeconds": () => (/* reexport */ seconds),\n  "timeSunday": () => (/* reexport */ timeSunday),\n  "timeSundays": () => (/* reexport */ timeSundays),\n  "timeThursday": () => (/* reexport */ timeThursday),\n  "timeThursdays": () => (/* reexport */ timeThursdays),\n  "timeTickInterval": () => (/* reexport */ timeTickInterval),\n  "timeTicks": () => (/* reexport */ timeTicks),\n  "timeTuesday": () => (/* reexport */ timeTuesday),\n  "timeTuesdays": () => (/* reexport */ timeTuesdays),\n  "timeWednesday": () => (/* reexport */ timeWednesday),\n  "timeWednesdays": () => (/* reexport */ timeWednesdays),\n  "timeWeek": () => (/* reexport */ timeSunday),\n  "timeWeeks": () => (/* reexport */ timeSundays),\n  "timeYear": () => (/* reexport */ timeYear),\n  "timeYears": () => (/* reexport */ timeYears),\n  "timeout": () => (/* reexport */ src_timeout),\n  "timer": () => (/* reexport */ timer),\n  "timerFlush": () => (/* reexport */ timerFlush),\n  "transition": () => (/* reexport */ transition_transition),\n  "transpose": () => (/* reexport */ transpose),\n  "tree": () => (/* reexport */ tree),\n  "treemap": () => (/* reexport */ treemap),\n  "treemapBinary": () => (/* reexport */ binary),\n  "treemapDice": () => (/* reexport */ dice),\n  "treemapResquarify": () => (/* reexport */ resquarify),\n  "treemapSlice": () => (/* reexport */ treemap_slice),\n  "treemapSliceDice": () => (/* reexport */ sliceDice),\n  "treemapSquarify": () => (/* reexport */ squarify),\n  "tsv": () => (/* reexport */ dsv_tsv),\n  "tsvFormat": () => (/* reexport */ tsvFormat),\n  "tsvFormatBody": () => (/* reexport */ tsvFormatBody),\n  "tsvFormatRow": () => (/* reexport */ tsvFormatRow),\n  "tsvFormatRows": () => (/* reexport */ tsvFormatRows),\n  "tsvFormatValue": () => (/* reexport */ tsvFormatValue),\n  "tsvParse": () => (/* reexport */ tsvParse),\n  "tsvParseRows": () => (/* reexport */ tsvParseRows),\n  "union": () => (/* reexport */ union),\n  "unixDay": () => (/* reexport */ unixDay),\n  "unixDays": () => (/* reexport */ unixDays),\n  "utcDay": () => (/* reexport */ utcDay),\n  "utcDays": () => (/* reexport */ utcDays),\n  "utcFormat": () => (/* reexport */ utcFormat),\n  "utcFriday": () => (/* reexport */ utcFriday),\n  "utcFridays": () => (/* reexport */ utcFridays),\n  "utcHour": () => (/* reexport */ utcHour),\n  "utcHours": () => (/* reexport */ utcHours),\n  "utcMillisecond": () => (/* reexport */ millisecond),\n  "utcMilliseconds": () => (/* reexport */ milliseconds),\n  "utcMinute": () => (/* reexport */ utcMinute),\n  "utcMinutes": () => (/* reexport */ utcMinutes),\n  "utcMonday": () => (/* reexport */ utcMonday),\n  "utcMondays": () => (/* reexport */ utcMondays),\n  "utcMonth": () => (/* reexport */ utcMonth),\n  "utcMonths": () => (/* reexport */ utcMonths),\n  "utcParse": () => (/* reexport */ utcParse),\n  "utcSaturday": () => (/* reexport */ utcSaturday),\n  "utcSaturdays": () => (/* reexport */ utcSaturdays),\n  "utcSecond": () => (/* reexport */ second),\n  "utcSeconds": () => (/* reexport */ seconds),\n  "utcSunday": () => (/* reexport */ utcSunday),\n  "utcSundays": () => (/* reexport */ utcSundays),\n  "utcThursday": () => (/* reexport */ utcThursday),\n  "utcThursdays": () => (/* reexport */ utcThursdays),\n  "utcTickInterval": () => (/* reexport */ utcTickInterval),\n  "utcTicks": () => (/* reexport */ utcTicks),\n  "utcTuesday": () => (/* reexport */ utcTuesday),\n  "utcTuesdays": () => (/* reexport */ utcTuesdays),\n  "utcWednesday": () => (/* reexport */ utcWednesday),\n  "utcWednesdays": () => (/* reexport */ utcWednesdays),\n  "utcWeek": () => (/* reexport */ utcSunday),\n  "utcWeeks": () => (/* reexport */ utcSundays),\n  "utcYear": () => (/* reexport */ utcYear),\n  "utcYears": () => (/* reexport */ utcYears),\n  "variance": () => (/* reexport */ variance),\n  "window": () => (/* reexport */ src_window),\n  "xml": () => (/* reexport */ xml),\n  "zip": () => (/* reexport */ zip),\n  "zoom": () => (/* reexport */ zoom),\n  "zoomIdentity": () => (/* reexport */ transform_identity),\n  "zoomTransform": () => (/* reexport */ transform_transform)\n});\n\n;// CONCATENATED MODULE: ./node_modules/d3-array/src/ascending.js\nfunction ascending(a, b) {\n  return a == null || b == null ? NaN : a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-array/src/descending.js\nfunction descending(a, b) {\n  return a == null || b == null ? NaN : b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-array/src/bisector.js\n\n\nfunction bisector(f) {\n  let compare1, compare2, delta;\n\n  // If an accessor is specified, promote it to a comparator. In this case we\n  // can test whether the search value is (self-) comparable. We can’t do this\n  // for a comparator (except for specific, known comparators) because we can’t\n  // tell if the comparator is symmetric, and an asymmetric comparator can’t be\n  // used to test whether a single value is comparable.\n  if (f.length !== 2) {\n    compare1 = ascending;\n    compare2 = (d, x) => ascending(f(d), x);\n    delta = (d, x) => f(d) - x;\n  } else {\n    compare1 = f === ascending || f === descending ? f : zero;\n    compare2 = f;\n    delta = f;\n  }\n  function left(a, x, lo = 0, hi = a.length) {\n    if (lo < hi) {\n      if (compare1(x, x) !== 0) return hi;\n      do {\n        const mid = lo + hi >>> 1;\n        if (compare2(a[mid], x) < 0) lo = mid + 1;else hi = mid;\n      } while (lo < hi);\n    }\n    return lo;\n  }\n  function right(a, x, lo = 0, hi = a.length) {\n    if (lo < hi) {\n      if (compare1(x, x) !== 0) return hi;\n      do {\n        const mid = lo + hi >>> 1;\n        if (compare2(a[mid], x) <= 0) lo = mid + 1;else hi = mid;\n      } while (lo < hi);\n    }\n    return lo;\n  }\n  function center(a, x, lo = 0, hi = a.length) {\n    const i = left(a, x, lo, hi - 1);\n    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;\n  }\n  return {\n    left,\n    center,\n    right\n  };\n}\nfunction zero() {\n  return 0;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-array/src/number.js\nfunction number(x) {\n  return x === null ? NaN : +x;\n}\nfunction* numbers(values, valueof) {\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  }\n}\n;// CONCATENATED MODULE: ./node_modules/d3-array/src/bisect.js\n\n\n\nconst ascendingBisect = bisector(ascending);\nconst bisectRight = ascendingBisect.right;\nconst bisectLeft = ascendingBisect.left;\nconst bisectCenter = bisector(number).center;\n/* harmony default export */ const bisect = (bisectRight);\n;// CONCATENATED MODULE: ./node_modules/d3-array/src/blur.js\nfunction blur_blur(values, r) {\n  if (!((r = +r) >= 0)) throw new RangeError("invalid r");\n  let length = values.length;\n  if (!((length = Math.floor(length)) >= 0)) throw new RangeError("invalid length");\n  if (!length || !r) return values;\n  const blur = blurf(r);\n  const temp = values.slice();\n  blur(values, temp, 0, length, 1);\n  blur(temp, values, 0, length, 1);\n  blur(values, temp, 0, length, 1);\n  return values;\n}\nconst blur2 = Blur2(blurf);\nconst blurImage = Blur2(blurfImage);\nfunction Blur2(blur) {\n  return function (data, rx, ry = rx) {\n    if (!((rx = +rx) >= 0)) throw new RangeError("invalid rx");\n    if (!((ry = +ry) >= 0)) throw new RangeError("invalid ry");\n    let {\n      data: values,\n      width,\n      height\n    } = data;\n    if (!((width = Math.floor(width)) >= 0)) throw new RangeError("invalid width");\n    if (!((height = Math.floor(height !== undefined ? height : values.length / width)) >= 0)) throw new RangeError("invalid height");\n    if (!width || !height || !rx && !ry) return data;\n    const blurx = rx && blur(rx);\n    const blury = ry && blur(ry);\n    const temp = values.slice();\n    if (blurx && blury) {\n      blurh(blurx, temp, values, width, height);\n      blurh(blurx, values, temp, width, height);\n      blurh(blurx, temp, values, width, height);\n      blurv(blury, values, temp, width, height);\n      blurv(blury, temp, values, width, height);\n      blurv(blury, values, temp, width, height);\n    } else if (blurx) {\n      blurh(blurx, values, temp, width, height);\n      blurh(blurx, temp, values, width, height);\n      blurh(blurx, values, temp, width, height);\n    } else if (blury) {\n      blurv(blury, values, temp, width, height);\n      blurv(blury, temp, values, width, height);\n      blurv(blury, values, temp, width, height);\n    }\n    return data;\n  };\n}\nfunction blurh(blur, T, S, w, h) {\n  for (let y = 0, n = w * h; y < n;) {\n    blur(T, S, y, y += w, 1);\n  }\n}\nfunction blurv(blur, T, S, w, h) {\n  for (let x = 0, n = w * h; x < w; ++x) {\n    blur(T, S, x, x + n, w);\n  }\n}\nfunction blurfImage(radius) {\n  const blur = blurf(radius);\n  return (T, S, start, stop, step) => {\n    start <<= 2, stop <<= 2, step <<= 2;\n    blur(T, S, start + 0, stop + 0, step);\n    blur(T, S, start + 1, stop + 1, step);\n    blur(T, S, start + 2, stop + 2, step);\n    blur(T, S, start + 3, stop + 3, step);\n  };\n}\n\n// Given a target array T, a source array S, sets each value T[i] to the average\n// of {S[i - r], …, S[i], …, S[i + r]}, where r = ⌊radius⌋, start <= i < stop,\n// for each i, i + step, i + 2 * step, etc., and where S[j] is clamped between\n// S[start] (inclusive) and S[stop] (exclusive). If the given radius is not an\n// integer, S[i - r - 1] and S[i + r + 1] are added to the sum, each weighted\n// according to r - ⌊radius⌋.\nfunction blurf(radius) {\n  const radius0 = Math.floor(radius);\n  if (radius0 === radius) return bluri(radius);\n  const t = radius - radius0;\n  const w = 2 * radius + 1;\n  return (T, S, start, stop, step) => {\n    // stop must be aligned!\n    if (!((stop -= step) >= start)) return; // inclusive stop\n    let sum = radius0 * S[start];\n    const s0 = step * radius0;\n    const s1 = s0 + step;\n    for (let i = start, j = start + s0; i < j; i += step) {\n      sum += S[Math.min(stop, i)];\n    }\n    for (let i = start, j = stop; i <= j; i += step) {\n      sum += S[Math.min(stop, i + s0)];\n      T[i] = (sum + t * (S[Math.max(start, i - s1)] + S[Math.min(stop, i + s1)])) / w;\n      sum -= S[Math.max(start, i - s0)];\n    }\n  };\n}\n\n// Like blurf, but optimized for integer radius.\nfunction bluri(radius) {\n  const w = 2 * radius + 1;\n  return (T, S, start, stop, step) => {\n    // stop must be aligned!\n    if (!((stop -= step) >= start)) return; // inclusive stop\n    let sum = radius * S[start];\n    const s = step * radius;\n    for (let i = start, j = start + s; i < j; i += step) {\n      sum += S[Math.min(stop, i)];\n    }\n    for (let i = start, j = stop; i <= j; i += step) {\n      sum += S[Math.min(stop, i + s)];\n      T[i] = sum / w;\n      sum -= S[Math.max(start, i - s)];\n    }\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/d3-array/src/count.js\nfunction count(values, valueof) {\n  let count = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        ++count;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        ++count;\n      }\n    }\n  }\n  return count;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-array/src/cross.js\nfunction cross_length(array) {\n  return array.length | 0;\n}\nfunction empty(length) {\n  return !(length > 0);\n}\nfunction arrayify(values) {\n  return typeof values !== "object" || "length" in values ? values : Array.from(values);\n}\nfunction reducer(reduce) {\n  return values => reduce(...values);\n}\nfunction cross(...values) {\n  const reduce = typeof values[values.length - 1] === "function" && reducer(values.pop());\n  values = values.map(arrayify);\n  const lengths = values.map(cross_length);\n  const j = values.length - 1;\n  const index = new Array(j + 1).fill(0);\n  const product = [];\n  if (j < 0 || lengths.some(empty)) return product;\n  while (true) {\n    product.push(index.map((j, i) => values[i][j]));\n    let i = j;\n    while (++index[i] === lengths[i]) {\n      if (i === 0) return reduce ? product.map(reduce) : product;\n      index[i--] = 0;\n    }\n  }\n}\n;// CONCATENATED MODULE: ./node_modules/d3-array/src/cumsum.js\nfunction cumsum(values, valueof) {\n  var sum = 0,\n    index = 0;\n  return Float64Array.from(values, valueof === undefined ? v => sum += +v || 0 : v => sum += +valueof(v, index++, values) || 0);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-array/src/variance.js\nfunction variance(values, valueof) {\n  let count = 0;\n  let delta;\n  let mean = 0;\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        delta = value - mean;\n        mean += delta / ++count;\n        sum += delta * (value - mean);\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        delta = value - mean;\n        mean += delta / ++count;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n  if (count > 1) return sum / (count - 1);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-array/src/deviation.js\n\nfunction deviation(values, valueof) {\n  const v = variance(values, valueof);\n  return v ? Math.sqrt(v) : v;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-array/src/extent.js\nfunction extent(values, valueof) {\n  let min;\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null) {\n        if (min === undefined) {\n          if (value >= value) min = max = value;\n        } else {\n          if (min > value) min = value;\n          if (max < value) max = value;\n        }\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null) {\n        if (min === undefined) {\n          if (value >= value) min = max = value;\n        } else {\n          if (min > value) min = value;\n          if (max < value) max = value;\n        }\n      }\n    }\n  }\n  return [min, max];\n}\n;// CONCATENATED MODULE: ./node_modules/d3-array/src/fsum.js\n// https://github.com/python/cpython/blob/a74eea238f5baba15797e2e8b570d153bc8690a7/Modules/mathmodule.c#L1423\nclass Adder {\n  constructor() {\n    this._partials = new Float64Array(32);\n    this._n = 0;\n  }\n  add(x) {\n    const p = this._partials;\n    let i = 0;\n    for (let j = 0; j < this._n && j < 32; j++) {\n      const y = p[j],\n        hi = x + y,\n        lo = Math.abs(x) < Math.abs(y) ? x - (hi - y) : y - (hi - x);\n      if (lo) p[i++] = lo;\n      x = hi;\n    }\n    p[i] = x;\n    this._n = i + 1;\n    return this;\n  }\n  valueOf() {\n    const p = this._partials;\n    let n = this._n,\n      x,\n      y,\n      lo,\n      hi = 0;\n    if (n > 0) {\n      hi = p[--n];\n      while (n > 0) {\n        x = hi;\n        y = p[--n];\n        hi = x + y;\n        lo = y - (hi - x);\n        if (lo) break;\n      }\n      if (n > 0 && (lo < 0 && p[n - 1] < 0 || lo > 0 && p[n - 1] > 0)) {\n        y = lo * 2;\n        x = hi + y;\n        if (y == x - hi) hi = x;\n      }\n    }\n    return hi;\n  }\n}\nfunction fsum(values, valueof) {\n  const adder = new Adder();\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        adder.add(value);\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        adder.add(value);\n      }\n    }\n  }\n  return +adder;\n}\nfunction fcumsum(values, valueof) {\n  const adder = new Adder();\n  let index = -1;\n  return Float64Array.from(values, valueof === undefined ? v => adder.add(+v || 0) : v => adder.add(+valueof(v, ++index, values) || 0));\n}\n;// CONCATENATED MODULE: ./node_modules/internmap/src/index.js\nclass InternMap extends Map {\n  constructor(entries, key = keyof) {\n    super();\n    Object.defineProperties(this, {\n      _intern: {\n        value: new Map()\n      },\n      _key: {\n        value: key\n      }\n    });\n    if (entries != null) for (const [key, value] of entries) this.set(key, value);\n  }\n  get(key) {\n    return super.get(intern_get(this, key));\n  }\n  has(key) {\n    return super.has(intern_get(this, key));\n  }\n  set(key, value) {\n    return super.set(intern_set(this, key), value);\n  }\n  delete(key) {\n    return super.delete(intern_delete(this, key));\n  }\n}\nclass InternSet extends Set {\n  constructor(values, key = keyof) {\n    super();\n    Object.defineProperties(this, {\n      _intern: {\n        value: new Map()\n      },\n      _key: {\n        value: key\n      }\n    });\n    if (values != null) for (const value of values) this.add(value);\n  }\n  has(value) {\n    return super.has(intern_get(this, value));\n  }\n  add(value) {\n    return super.add(intern_set(this, value));\n  }\n  delete(value) {\n    return super.delete(intern_delete(this, value));\n  }\n}\nfunction intern_get({\n  _intern,\n  _key\n}, value) {\n  const key = _key(value);\n  return _intern.has(key) ? _intern.get(key) : value;\n}\nfunction intern_set({\n  _intern,\n  _key\n}, value) {\n  const key = _key(value);\n  if (_intern.has(key)) return _intern.get(key);\n  _intern.set(key, value);\n  return value;\n}\nfunction intern_delete({\n  _intern,\n  _key\n}, value) {\n  const key = _key(value);\n  if (_intern.has(key)) {\n    value = _intern.get(key);\n    _intern.delete(key);\n  }\n  return value;\n}\nfunction keyof(value) {\n  return value !== null && typeof value === "object" ? value.valueOf() : value;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-array/src/identity.js\nfunction identity(x) {\n  return x;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-array/src/group.js\n\n\nfunction group(values, ...keys) {\n  return nest(values, identity, identity, keys);\n}\nfunction groups(values, ...keys) {\n  return nest(values, Array.from, identity, keys);\n}\nfunction flatten(groups, keys) {\n  for (let i = 1, n = keys.length; i < n; ++i) {\n    groups = groups.flatMap(g => g.pop().map(([key, value]) => [...g, key, value]));\n  }\n  return groups;\n}\nfunction flatGroup(values, ...keys) {\n  return flatten(groups(values, ...keys), keys);\n}\nfunction flatRollup(values, reduce, ...keys) {\n  return flatten(rollups(values, reduce, ...keys), keys);\n}\nfunction rollup(values, reduce, ...keys) {\n  return nest(values, identity, reduce, keys);\n}\nfunction rollups(values, reduce, ...keys) {\n  return nest(values, Array.from, reduce, keys);\n}\nfunction index(values, ...keys) {\n  return nest(values, identity, unique, keys);\n}\nfunction indexes(values, ...keys) {\n  return nest(values, Array.from, unique, keys);\n}\nfunction unique(values) {\n  if (values.length !== 1) throw new Error("duplicate key");\n  return values[0];\n}\nfunction nest(values, map, reduce, keys) {\n  return function regroup(values, i) {\n    if (i >= keys.length) return reduce(values);\n    const groups = new InternMap();\n    const keyof = keys[i++];\n    let index = -1;\n    for (const value of values) {\n      const key = keyof(value, ++index, values);\n      const group = groups.get(key);\n      if (group) group.push(value);else groups.set(key, [value]);\n    }\n    for (const [key, values] of groups) {\n      groups.set(key, regroup(values, i));\n    }\n    return map(groups);\n  }(values, 0);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-array/src/permute.js\nfunction permute(source, keys) {\n  return Array.from(keys, key => source[key]);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-array/src/sort.js\n\n\nfunction sort(values, ...F) {\n  if (typeof values[Symbol.iterator] !== "function") throw new TypeError("values is not iterable");\n  values = Array.from(values);\n  let [f] = F;\n  if (f && f.length !== 2 || F.length > 1) {\n    const index = Uint32Array.from(values, (d, i) => i);\n    if (F.length > 1) {\n      F = F.map(f => values.map(f));\n      index.sort((i, j) => {\n        for (const f of F) {\n          const c = ascendingDefined(f[i], f[j]);\n          if (c) return c;\n        }\n      });\n    } else {\n      f = values.map(f);\n      index.sort((i, j) => ascendingDefined(f[i], f[j]));\n    }\n    return permute(values, index);\n  }\n  return values.sort(compareDefined(f));\n}\nfunction compareDefined(compare = ascending) {\n  if (compare === ascending) return ascendingDefined;\n  if (typeof compare !== "function") throw new TypeError("compare is not a function");\n  return (a, b) => {\n    const x = compare(a, b);\n    if (x || x === 0) return x;\n    return (compare(b, b) === 0) - (compare(a, a) === 0);\n  };\n}\nfunction ascendingDefined(a, b) {\n  return (a == null || !(a >= a)) - (b == null || !(b >= b)) || (a < b ? -1 : a > b ? 1 : 0);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-array/src/groupSort.js\n\n\n\nfunction groupSort(values, reduce, key) {\n  return (reduce.length !== 2 ? sort(rollup(values, reduce, key), ([ak, av], [bk, bv]) => ascending(av, bv) || ascending(ak, bk)) : sort(group(values, key), ([ak, av], [bk, bv]) => reduce(av, bv) || ascending(ak, bk))).map(([key]) => key);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-array/src/array.js\nvar array = Array.prototype;\nvar slice = array.slice;\nvar map = array.map;\n;// CONCATENATED MODULE: ./node_modules/d3-array/src/constant.js\nfunction constant(x) {\n  return () => x;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-array/src/ticks.js\nconst e10 = Math.sqrt(50),\n  e5 = Math.sqrt(10),\n  e2 = Math.sqrt(2);\nfunction tickSpec(start, stop, count) {\n  const step = (stop - start) / Math.max(0, count),\n    power = Math.floor(Math.log10(step)),\n    error = step / Math.pow(10, power),\n    factor = error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1;\n  let i1, i2, inc;\n  if (power < 0) {\n    inc = Math.pow(10, -power) / factor;\n    i1 = Math.round(start * inc);\n    i2 = Math.round(stop * inc);\n    if (i1 / inc < start) ++i1;\n    if (i2 / inc > stop) --i2;\n    inc = -inc;\n  } else {\n    inc = Math.pow(10, power) * factor;\n    i1 = Math.round(start / inc);\n    i2 = Math.round(stop / inc);\n    if (i1 * inc < start) ++i1;\n    if (i2 * inc > stop) --i2;\n  }\n  if (i2 < i1 && 0.5 <= count && count < 2) return tickSpec(start, stop, count * 2);\n  return [i1, i2, inc];\n}\nfunction ticks(start, stop, count) {\n  stop = +stop, start = +start, count = +count;\n  if (!(count > 0)) return [];\n  if (start === stop) return [start];\n  const reverse = stop < start,\n    [i1, i2, inc] = reverse ? tickSpec(stop, start, count) : tickSpec(start, stop, count);\n  if (!(i2 >= i1)) return [];\n  const n = i2 - i1 + 1,\n    ticks = new Array(n);\n  if (reverse) {\n    if (inc < 0) for (let i = 0; i < n; ++i) ticks[i] = (i2 - i) / -inc;else for (let i = 0; i < n; ++i) ticks[i] = (i2 - i) * inc;\n  } else {\n    if (inc < 0) for (let i = 0; i < n; ++i) ticks[i] = (i1 + i) / -inc;else for (let i = 0; i < n; ++i) ticks[i] = (i1 + i) * inc;\n  }\n  return ticks;\n}\nfunction tickIncrement(start, stop, count) {\n  stop = +stop, start = +start, count = +count;\n  return tickSpec(start, stop, count)[2];\n}\nfunction tickStep(start, stop, count) {\n  stop = +stop, start = +start, count = +count;\n  const reverse = stop < start,\n    inc = reverse ? tickIncrement(stop, start, count) : tickIncrement(start, stop, count);\n  return (reverse ? -1 : 1) * (inc < 0 ? 1 / -inc : inc);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-array/src/nice.js\n\nfunction nice(start, stop, count) {\n  let prestep;\n  while (true) {\n    const step = tickIncrement(start, stop, count);\n    if (step === prestep || step === 0 || !isFinite(step)) {\n      return [start, stop];\n    } else if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n    }\n    prestep = step;\n  }\n}\n;// CONCATENATED MODULE: ./node_modules/d3-array/src/threshold/sturges.js\n\nfunction thresholdSturges(values) {\n  return Math.ceil(Math.log(count(values)) / Math.LN2) + 1;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-array/src/bin.js\n\n\n\n\n\n\n\n\nfunction bin() {\n  var value = identity,\n    domain = extent,\n    threshold = thresholdSturges;\n  function histogram(data) {\n    if (!Array.isArray(data)) data = Array.from(data);\n    var i,\n      n = data.length,\n      x,\n      step,\n      values = new Array(n);\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n    var xz = domain(values),\n      x0 = xz[0],\n      x1 = xz[1],\n      tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds, and nice the\n    // default domain accordingly.\n    if (!Array.isArray(tz)) {\n      const max = x1,\n        tn = +tz;\n      if (domain === extent) [x0, x1] = nice(x0, x1, tn);\n      tz = ticks(x0, x1, tn);\n\n      // If the domain is aligned with the first tick (which it will by\n      // default), then we can use quantization rather than bisection to bin\n      // values, which is substantially faster.\n      if (tz[0] <= x0) step = tickIncrement(x0, x1, tn);\n\n      // If the last threshold is coincident with the domain’s upper bound, the\n      // last bin will be zero-width. If the default domain is used, and this\n      // last threshold is coincident with the maximum input value, we can\n      // extend the niced upper bound by one tick to ensure uniform bin widths;\n      // otherwise, we simply remove the last threshold. Note that we don’t\n      // coerce values or the domain to numbers, and thus must be careful to\n      // compare order (>=) rather than strict equality (===)!\n      if (tz[tz.length - 1] >= x1) {\n        if (max >= x1 && domain === extent) {\n          const step = tickIncrement(x0, x1, tn);\n          if (isFinite(step)) {\n            if (step > 0) {\n              x1 = (Math.floor(x1 / step) + 1) * step;\n            } else if (step < 0) {\n              x1 = (Math.ceil(x1 * -step) + 1) / -step;\n            }\n          }\n        } else {\n          tz.pop();\n        }\n      }\n    }\n\n    // Remove any thresholds outside the domain.\n    // Be careful not to mutate an array owned by the user!\n    var m = tz.length,\n      a = 0,\n      b = m;\n    while (tz[a] <= x0) ++a;\n    while (tz[b - 1] > x1) --b;\n    if (a || b < m) tz = tz.slice(a, b), m = b - a;\n    var bins = new Array(m + 1),\n      bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    if (isFinite(step)) {\n      if (step > 0) {\n        for (i = 0; i < n; ++i) {\n          if ((x = values[i]) != null && x0 <= x && x <= x1) {\n            bins[Math.min(m, Math.floor((x - x0) / step))].push(data[i]);\n          }\n        }\n      } else if (step < 0) {\n        for (i = 0; i < n; ++i) {\n          if ((x = values[i]) != null && x0 <= x && x <= x1) {\n            const j = Math.floor((x0 - x) * step);\n            bins[Math.min(m, j + (tz[j] <= x))].push(data[i]); // handle off-by-one due to rounding\n          }\n        }\n      }\n    } else {\n      for (i = 0; i < n; ++i) {\n        if ((x = values[i]) != null && x0 <= x && x <= x1) {\n          bins[bisect(tz, x, 0, m)].push(data[i]);\n        }\n      }\n    }\n    return bins;\n  }\n  histogram.value = function (_) {\n    return arguments.length ? (value = typeof _ === "function" ? _ : constant(_), histogram) : value;\n  };\n  histogram.domain = function (_) {\n    return arguments.length ? (domain = typeof _ === "function" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n  histogram.thresholds = function (_) {\n    return arguments.length ? (threshold = typeof _ === "function" ? _ : constant(Array.isArray(_) ? slice.call(_) : _), histogram) : threshold;\n  };\n  return histogram;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-array/src/max.js\nfunction max(values, valueof) {\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null && (max < value || max === undefined && value >= value)) {\n        max = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (max < value || max === undefined && value >= value)) {\n        max = value;\n      }\n    }\n  }\n  return max;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-array/src/maxIndex.js\nfunction maxIndex(values, valueof) {\n  let max;\n  let maxIndex = -1;\n  let index = -1;\n  if (valueof === undefined) {\n    for (const value of values) {\n      ++index;\n      if (value != null && (max < value || max === undefined && value >= value)) {\n        max = value, maxIndex = index;\n      }\n    }\n  } else {\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (max < value || max === undefined && value >= value)) {\n        max = value, maxIndex = index;\n      }\n    }\n  }\n  return maxIndex;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-array/src/min.js\nfunction min(values, valueof) {\n  let min;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null && (min > value || min === undefined && value >= value)) {\n        min = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (min > value || min === undefined && value >= value)) {\n        min = value;\n      }\n    }\n  }\n  return min;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-array/src/minIndex.js\nfunction minIndex(values, valueof) {\n  let min;\n  let minIndex = -1;\n  let index = -1;\n  if (valueof === undefined) {\n    for (const value of values) {\n      ++index;\n      if (value != null && (min > value || min === undefined && value >= value)) {\n        min = value, minIndex = index;\n      }\n    }\n  } else {\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (min > value || min === undefined && value >= value)) {\n        min = value, minIndex = index;\n      }\n    }\n  }\n  return minIndex;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-array/src/quickselect.js\n\n\n// Based on https://github.com/mourner/quickselect\n// ISC license, Copyright 2018 Vladimir Agafonkin.\nfunction quickselect(array, k, left = 0, right = Infinity, compare) {\n  k = Math.floor(k);\n  left = Math.floor(Math.max(0, left));\n  right = Math.floor(Math.min(array.length - 1, right));\n  if (!(left <= k && k <= right)) return array;\n  compare = compare === undefined ? ascendingDefined : compareDefined(compare);\n  while (right > left) {\n    if (right - left > 600) {\n      const n = right - left + 1;\n      const m = k - left + 1;\n      const z = Math.log(n);\n      const s = 0.5 * Math.exp(2 * z / 3);\n      const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n      const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n      const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n      quickselect(array, k, newLeft, newRight, compare);\n    }\n    const t = array[k];\n    let i = left;\n    let j = right;\n    swap(array, left, k);\n    if (compare(array[right], t) > 0) swap(array, left, right);\n    while (i < j) {\n      swap(array, i, j), ++i, --j;\n      while (compare(array[i], t) < 0) ++i;\n      while (compare(array[j], t) > 0) --j;\n    }\n    if (compare(array[left], t) === 0) swap(array, left, j);else ++j, swap(array, j, right);\n    if (j <= k) left = j + 1;\n    if (k <= j) right = j - 1;\n  }\n  return array;\n}\nfunction swap(array, i, j) {\n  const t = array[i];\n  array[i] = array[j];\n  array[j] = t;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-array/src/greatest.js\n\nfunction greatest(values, compare = ascending) {\n  let max;\n  let defined = false;\n  if (compare.length === 1) {\n    let maxValue;\n    for (const element of values) {\n      const value = compare(element);\n      if (defined ? ascending(value, maxValue) > 0 : ascending(value, value) === 0) {\n        max = element;\n        maxValue = value;\n        defined = true;\n      }\n    }\n  } else {\n    for (const value of values) {\n      if (defined ? compare(value, max) > 0 : compare(value, value) === 0) {\n        max = value;\n        defined = true;\n      }\n    }\n  }\n  return max;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-array/src/quantile.js\n\n\n\n\n\n\n\n\nfunction quantile(values, p, valueof) {\n  values = Float64Array.from(numbers(values, valueof));\n  if (!(n = values.length) || isNaN(p = +p)) return;\n  if (p <= 0 || n < 2) return min(values);\n  if (p >= 1) return max(values);\n  var n,\n    i = (n - 1) * p,\n    i0 = Math.floor(i),\n    value0 = max(quickselect(values, i0).subarray(0, i0 + 1)),\n    value1 = min(values.subarray(i0 + 1));\n  return value0 + (value1 - value0) * (i - i0);\n}\nfunction quantileSorted(values, p, valueof = number) {\n  if (!(n = values.length) || isNaN(p = +p)) return;\n  if (p <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n    i = (n - 1) * p,\n    i0 = Math.floor(i),\n    value0 = +valueof(values[i0], i0, values),\n    value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\nfunction quantileIndex(values, p, valueof) {\n  values = Float64Array.from(numbers(values, valueof));\n  if (!(n = values.length) || isNaN(p = +p)) return;\n  if (p <= 0 || n < 2) return minIndex(values);\n  if (p >= 1) return maxIndex(values);\n  var n,\n    i = Math.floor((n - 1) * p),\n    order = (i, j) => ascendingDefined(values[i], values[j]),\n    index = quickselect(Uint32Array.from(values, (_, i) => i), i, 0, n - 1, order);\n  return greatest(index.subarray(0, i + 1), i => values[i]);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-array/src/threshold/freedmanDiaconis.js\n\n\nfunction thresholdFreedmanDiaconis(values, min, max) {\n  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(count(values), -1 / 3)));\n}\n;// CONCATENATED MODULE: ./node_modules/d3-array/src/threshold/scott.js\n\n\nfunction thresholdScott(values, min, max) {\n  return Math.ceil((max - min) * Math.cbrt(count(values)) / (3.49 * deviation(values)));\n}\n;// CONCATENATED MODULE: ./node_modules/d3-array/src/mean.js\nfunction mean(values, valueof) {\n  let count = 0;\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        ++count, sum += value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        ++count, sum += value;\n      }\n    }\n  }\n  if (count) return sum / count;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-array/src/median.js\n\nfunction median(values, valueof) {\n  return quantile(values, 0.5, valueof);\n}\nfunction medianIndex(values, valueof) {\n  return quantileIndex(values, 0.5, valueof);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-array/src/merge.js\nfunction* merge_flatten(arrays) {\n  for (const array of arrays) {\n    yield* array;\n  }\n}\nfunction merge(arrays) {\n  return Array.from(merge_flatten(arrays));\n}\n;// CONCATENATED MODULE: ./node_modules/d3-array/src/mode.js\n\nfunction mode(values, valueof) {\n  const counts = new InternMap();\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && value >= value) {\n        counts.set(value, (counts.get(value) || 0) + 1);\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && value >= value) {\n        counts.set(value, (counts.get(value) || 0) + 1);\n      }\n    }\n  }\n  let modeValue;\n  let modeCount = 0;\n  for (const [value, count] of counts) {\n    if (count > modeCount) {\n      modeCount = count;\n      modeValue = value;\n    }\n  }\n  return modeValue;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-array/src/pairs.js\nfunction pairs(values, pairof = pair) {\n  const pairs = [];\n  let previous;\n  let first = false;\n  for (const value of values) {\n    if (first) pairs.push(pairof(previous, value));\n    previous = value;\n    first = true;\n  }\n  return pairs;\n}\nfunction pair(a, b) {\n  return [a, b];\n}\n;// CONCATENATED MODULE: ./node_modules/d3-array/src/range.js\nfunction range(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n  var i = -1,\n    n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n    range = new Array(n);\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n  return range;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-array/src/rank.js\n\n\nfunction rank(values, valueof = ascending) {\n  if (typeof values[Symbol.iterator] !== "function") throw new TypeError("values is not iterable");\n  let V = Array.from(values);\n  const R = new Float64Array(V.length);\n  if (valueof.length !== 2) V = V.map(valueof), valueof = ascending;\n  const compareIndex = (i, j) => valueof(V[i], V[j]);\n  let k, r;\n  Uint32Array.from(V, (_, i) => i).sort(valueof === ascending ? (i, j) => ascendingDefined(V[i], V[j]) : compareDefined(compareIndex)).forEach((j, i) => {\n    const c = compareIndex(j, k === undefined ? j : k);\n    if (c >= 0) {\n      if (k === undefined || c > 0) k = j, r = i;\n      R[j] = r;\n    } else {\n      R[j] = NaN;\n    }\n  });\n  return R;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-array/src/least.js\n\nfunction least(values, compare = ascending) {\n  let min;\n  let defined = false;\n  if (compare.length === 1) {\n    let minValue;\n    for (const element of values) {\n      const value = compare(element);\n      if (defined ? ascending(value, minValue) < 0 : ascending(value, value) === 0) {\n        min = element;\n        minValue = value;\n        defined = true;\n      }\n    }\n  } else {\n    for (const value of values) {\n      if (defined ? compare(value, min) < 0 : compare(value, value) === 0) {\n        min = value;\n        defined = true;\n      }\n    }\n  }\n  return min;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-array/src/leastIndex.js\n\n\nfunction leastIndex(values, compare = ascending) {\n  if (compare.length === 1) return minIndex(values, compare);\n  let minValue;\n  let min = -1;\n  let index = -1;\n  for (const value of values) {\n    ++index;\n    if (min < 0 ? compare(value, value) === 0 : compare(value, minValue) < 0) {\n      minValue = value;\n      min = index;\n    }\n  }\n  return min;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-array/src/greatestIndex.js\n\n\nfunction greatestIndex(values, compare = ascending) {\n  if (compare.length === 1) return maxIndex(values, compare);\n  let maxValue;\n  let max = -1;\n  let index = -1;\n  for (const value of values) {\n    ++index;\n    if (max < 0 ? compare(value, value) === 0 : compare(value, maxValue) > 0) {\n      maxValue = value;\n      max = index;\n    }\n  }\n  return max;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-array/src/scan.js\n\nfunction scan(values, compare) {\n  const index = leastIndex(values, compare);\n  return index < 0 ? undefined : index;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-array/src/shuffle.js\n/* harmony default export */ const shuffle = (shuffler(Math.random));\nfunction shuffler(random) {\n  return function shuffle(array, i0 = 0, i1 = array.length) {\n    let m = i1 - (i0 = +i0);\n    while (m) {\n      const i = random() * m-- | 0,\n        t = array[m + i0];\n      array[m + i0] = array[i + i0];\n      array[i + i0] = t;\n    }\n    return array;\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/d3-array/src/sum.js\nfunction sum_sum(values, valueof) {\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        sum += value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        sum += value;\n      }\n    }\n  }\n  return sum;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-array/src/transpose.js\n\nfunction transpose(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, transpose_length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n}\nfunction transpose_length(d) {\n  return d.length;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-array/src/zip.js\n\nfunction zip() {\n  return transpose(arguments);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-array/src/every.js\nfunction every(values, test) {\n  if (typeof test !== "function") throw new TypeError("test is not a function");\n  let index = -1;\n  for (const value of values) {\n    if (!test(value, ++index, values)) {\n      return false;\n    }\n  }\n  return true;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-array/src/some.js\nfunction some(values, test) {\n  if (typeof test !== "function") throw new TypeError("test is not a function");\n  let index = -1;\n  for (const value of values) {\n    if (test(value, ++index, values)) {\n      return true;\n    }\n  }\n  return false;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-array/src/filter.js\nfunction filter(values, test) {\n  if (typeof test !== "function") throw new TypeError("test is not a function");\n  const array = [];\n  let index = -1;\n  for (const value of values) {\n    if (test(value, ++index, values)) {\n      array.push(value);\n    }\n  }\n  return array;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-array/src/map.js\nfunction map_map(values, mapper) {\n  if (typeof values[Symbol.iterator] !== "function") throw new TypeError("values is not iterable");\n  if (typeof mapper !== "function") throw new TypeError("mapper is not a function");\n  return Array.from(values, (value, index) => mapper(value, index, values));\n}\n;// CONCATENATED MODULE: ./node_modules/d3-array/src/reduce.js\nfunction reduce(values, reducer, value) {\n  if (typeof reducer !== "function") throw new TypeError("reducer is not a function");\n  const iterator = values[Symbol.iterator]();\n  let done,\n    next,\n    index = -1;\n  if (arguments.length < 3) {\n    ({\n      done,\n      value\n    } = iterator.next());\n    if (done) return;\n    ++index;\n  }\n  while (({\n    done,\n    value: next\n  } = iterator.next()), !done) {\n    value = reducer(value, next, ++index, values);\n  }\n  return value;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-array/src/reverse.js\nfunction reverse(values) {\n  if (typeof values[Symbol.iterator] !== "function") throw new TypeError("values is not iterable");\n  return Array.from(values).reverse();\n}\n;// CONCATENATED MODULE: ./node_modules/d3-array/src/difference.js\n\nfunction difference(values, ...others) {\n  values = new InternSet(values);\n  for (const other of others) {\n    for (const value of other) {\n      values.delete(value);\n    }\n  }\n  return values;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-array/src/disjoint.js\n\nfunction disjoint(values, other) {\n  const iterator = other[Symbol.iterator](),\n    set = new InternSet();\n  for (const v of values) {\n    if (set.has(v)) return false;\n    let value, done;\n    while (({\n      value,\n      done\n    } = iterator.next())) {\n      if (done) break;\n      if (Object.is(v, value)) return false;\n      set.add(value);\n    }\n  }\n  return true;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-array/src/intersection.js\n\nfunction intersection(values, ...others) {\n  values = new InternSet(values);\n  others = others.map(set);\n  out: for (const value of values) {\n    for (const other of others) {\n      if (!other.has(value)) {\n        values.delete(value);\n        continue out;\n      }\n    }\n  }\n  return values;\n}\nfunction set(values) {\n  return values instanceof InternSet ? values : new InternSet(values);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-array/src/superset.js\nfunction superset(values, other) {\n  const iterator = values[Symbol.iterator](),\n    set = new Set();\n  for (const o of other) {\n    const io = intern(o);\n    if (set.has(io)) continue;\n    let value, done;\n    while (({\n      value,\n      done\n    } = iterator.next())) {\n      if (done) return false;\n      const ivalue = intern(value);\n      set.add(ivalue);\n      if (Object.is(io, ivalue)) break;\n    }\n  }\n  return true;\n}\nfunction intern(value) {\n  return value !== null && typeof value === "object" ? value.valueOf() : value;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-array/src/subset.js\n\nfunction subset(values, other) {\n  return superset(other, values);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-array/src/union.js\n\nfunction union(...others) {\n  const set = new InternSet();\n  for (const other of others) {\n    for (const o of other) {\n      set.add(o);\n    }\n  }\n  return set;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-array/src/index.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n // Deprecated; use bin.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n // Deprecated; use leastIndex.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n;// CONCATENATED MODULE: ./node_modules/d3-axis/src/identity.js\n/* harmony default export */ function src_identity(x) {\n  return x;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-axis/src/axis.js\n\nvar axis_top = 1,\n  right = 2,\n  bottom = 3,\n  left = 4,\n  epsilon = 1e-6;\nfunction translateX(x) {\n  return "translate(" + x + ",0)";\n}\nfunction translateY(y) {\n  return "translate(0," + y + ")";\n}\nfunction axis_number(scale) {\n  return d => +scale(d);\n}\nfunction center(scale, offset) {\n  offset = Math.max(0, scale.bandwidth() - offset * 2) / 2;\n  if (scale.round()) offset = Math.round(offset);\n  return d => +scale(d) + offset;\n}\nfunction entering() {\n  return !this.__axis;\n}\nfunction axis(orient, scale) {\n  var tickArguments = [],\n    tickValues = null,\n    tickFormat = null,\n    tickSizeInner = 6,\n    tickSizeOuter = 6,\n    tickPadding = 3,\n    offset = typeof window !== "undefined" && window.devicePixelRatio > 1 ? 0 : 0.5,\n    k = orient === axis_top || orient === left ? -1 : 1,\n    x = orient === left || orient === right ? "x" : "y",\n    transform = orient === axis_top || orient === bottom ? translateX : translateY;\n  function axis(context) {\n    var values = tickValues == null ? scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain() : tickValues,\n      format = tickFormat == null ? scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : src_identity : tickFormat,\n      spacing = Math.max(tickSizeInner, 0) + tickPadding,\n      range = scale.range(),\n      range0 = +range[0] + offset,\n      range1 = +range[range.length - 1] + offset,\n      position = (scale.bandwidth ? center : axis_number)(scale.copy(), offset),\n      selection = context.selection ? context.selection() : context,\n      path = selection.selectAll(".domain").data([null]),\n      tick = selection.selectAll(".tick").data(values, scale).order(),\n      tickExit = tick.exit(),\n      tickEnter = tick.enter().append("g").attr("class", "tick"),\n      line = tick.select("line"),\n      text = tick.select("text");\n    path = path.merge(path.enter().insert("path", ".tick").attr("class", "domain").attr("stroke", "currentColor"));\n    tick = tick.merge(tickEnter);\n    line = line.merge(tickEnter.append("line").attr("stroke", "currentColor").attr(x + "2", k * tickSizeInner));\n    text = text.merge(tickEnter.append("text").attr("fill", "currentColor").attr(x, k * spacing).attr("dy", orient === axis_top ? "0em" : orient === bottom ? "0.71em" : "0.32em"));\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n      tickExit = tickExit.transition(context).attr("opacity", epsilon).attr("transform", function (d) {\n        return isFinite(d = position(d)) ? transform(d + offset) : this.getAttribute("transform");\n      });\n      tickEnter.attr("opacity", epsilon).attr("transform", function (d) {\n        var p = this.parentNode.__axis;\n        return transform((p && isFinite(p = p(d)) ? p : position(d)) + offset);\n      });\n    }\n    tickExit.remove();\n    path.attr("d", orient === left || orient === right ? tickSizeOuter ? "M" + k * tickSizeOuter + "," + range0 + "H" + offset + "V" + range1 + "H" + k * tickSizeOuter : "M" + offset + "," + range0 + "V" + range1 : tickSizeOuter ? "M" + range0 + "," + k * tickSizeOuter + "V" + offset + "H" + range1 + "V" + k * tickSizeOuter : "M" + range0 + "," + offset + "H" + range1);\n    tick.attr("opacity", 1).attr("transform", function (d) {\n      return transform(position(d) + offset);\n    });\n    line.attr(x + "2", k * tickSizeInner);\n    text.attr(x, k * spacing).text(format);\n    selection.filter(entering).attr("fill", "none").attr("font-size", 10).attr("font-family", "sans-serif").attr("text-anchor", orient === right ? "start" : orient === left ? "end" : "middle");\n    selection.each(function () {\n      this.__axis = position;\n    });\n  }\n  axis.scale = function (_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n  axis.ticks = function () {\n    return tickArguments = Array.from(arguments), axis;\n  };\n  axis.tickArguments = function (_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : Array.from(_), axis) : tickArguments.slice();\n  };\n  axis.tickValues = function (_) {\n    return arguments.length ? (tickValues = _ == null ? null : Array.from(_), axis) : tickValues && tickValues.slice();\n  };\n  axis.tickFormat = function (_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n  axis.tickSize = function (_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n  axis.tickSizeInner = function (_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n  axis.tickSizeOuter = function (_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n  axis.tickPadding = function (_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n  axis.offset = function (_) {\n    return arguments.length ? (offset = +_, axis) : offset;\n  };\n  return axis;\n}\nfunction axisTop(scale) {\n  return axis(axis_top, scale);\n}\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-axis/src/index.js\n\n;// CONCATENATED MODULE: ./node_modules/d3-dispatch/src/dispatch.js\nvar noop = {\n  value: () => {}\n};\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + "") || t in _ || /[\\s.]/.test(t)) throw new Error("illegal type: " + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\nfunction Dispatch(_) {\n  this._ = _;\n}\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function (t) {\n    var name = "",\n      i = t.indexOf(".");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error("unknown type: " + t);\n    return {\n      type: t,\n      name: name\n    };\n  });\n}\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function (typename, callback) {\n    var _ = this._,\n      T = parseTypenames(typename + "", _),\n      t,\n      i = -1,\n      n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== "function") throw new Error("invalid callback: " + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = dispatch_set(_[t], typename.name, callback);else if (callback == null) for (t in _) _[t] = dispatch_set(_[t], typename.name, null);\n    }\n    return this;\n  },\n  copy: function () {\n    var copy = {},\n      _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function (type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error("unknown type: " + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function (type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error("unknown type: " + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\nfunction dispatch_set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({\n    name: name,\n    value: callback\n  });\n  return type;\n}\n/* harmony default export */ const src_dispatch = (dispatch);\n;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selector.js\nfunction none() {}\n/* harmony default export */ function selector(selector) {\n  return selector == null ? none : function () {\n    return this.querySelector(selector);\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/select.js\n\n\n/* harmony default export */ function selection_select(select) {\n  if (typeof select !== "function") select = selector(select);\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if ("__data__" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n  return new Selection(subgroups, this._parents);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-selection/src/array.js\n// Given something array like (or null), returns something that is strictly an\n// array. This is used to ensure that array-like objects passed to d3.selectAll\n// or selection.selectAll are converted into proper arrays when creating a\n// selection; we don’t ever want to create a selection backed by a live\n// HTMLCollection or NodeList. However, note that selection.selectAll will use a\n// static NodeList as a group, since it safely derived from querySelectorAll.\nfunction array_array(x) {\n  return x == null ? [] : Array.isArray(x) ? x : Array.from(x);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selectorAll.js\nfunction selectorAll_empty() {\n  return [];\n}\n/* harmony default export */ function selectorAll(selector) {\n  return selector == null ? selectorAll_empty : function () {\n    return this.querySelectorAll(selector);\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/selectAll.js\n\n\n\nfunction arrayAll(select) {\n  return function () {\n    return array_array(select.apply(this, arguments));\n  };\n}\n/* harmony default export */ function selectAll(select) {\n  if (typeof select === "function") select = arrayAll(select);else select = selectorAll(select);\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n  return new Selection(subgroups, parents);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-selection/src/matcher.js\n/* harmony default export */ function matcher(selector) {\n  return function () {\n    return this.matches(selector);\n  };\n}\nfunction childMatcher(selector) {\n  return function (node) {\n    return node.matches(selector);\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/selectChild.js\n\nvar find = Array.prototype.find;\nfunction childFind(match) {\n  return function () {\n    return find.call(this.children, match);\n  };\n}\nfunction childFirst() {\n  return this.firstElementChild;\n}\n/* harmony default export */ function selectChild(match) {\n  return this.select(match == null ? childFirst : childFind(typeof match === "function" ? match : childMatcher(match)));\n}\n;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/selectChildren.js\n\nvar selectChildren_filter = Array.prototype.filter;\nfunction children() {\n  return Array.from(this.children);\n}\nfunction childrenFilter(match) {\n  return function () {\n    return selectChildren_filter.call(this.children, match);\n  };\n}\n/* harmony default export */ function selectChildren(match) {\n  return this.selectAll(match == null ? children : childrenFilter(typeof match === "function" ? match : childMatcher(match)));\n}\n;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/filter.js\n\n\n/* harmony default export */ function selection_filter(match) {\n  if (typeof match !== "function") match = matcher(match);\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n  return new Selection(subgroups, this._parents);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/sparse.js\n/* harmony default export */ function sparse(update) {\n  return new Array(update.length);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/enter.js\n\n\n/* harmony default export */ function enter() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function (child) {\n    return this._parent.insertBefore(child, this._next);\n  },\n  insertBefore: function (child, next) {\n    return this._parent.insertBefore(child, next);\n  },\n  querySelector: function (selector) {\n    return this._parent.querySelector(selector);\n  },\n  querySelectorAll: function (selector) {\n    return this._parent.querySelectorAll(selector);\n  }\n};\n;// CONCATENATED MODULE: ./node_modules/d3-selection/src/constant.js\n/* harmony default export */ function src_constant(x) {\n  return function () {\n    return x;\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/data.js\n\n\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n    node,\n    groupLength = group.length,\n    dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n    node,\n    nodeByKeyValue = new Map(),\n    groupLength = group.length,\n    dataLength = data.length,\n    keyValues = new Array(groupLength),\n    keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = key.call(node, node.__data__, i, group) + "";\n      if (nodeByKeyValue.has(keyValue)) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue.set(keyValue, node);\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = key.call(parent, data[i], i, data) + "";\n    if (node = nodeByKeyValue.get(keyValue)) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue.delete(keyValue);\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && nodeByKeyValue.get(keyValues[i]) === node) {\n      exit[i] = node;\n    }\n  }\n}\nfunction datum(node) {\n  return node.__data__;\n}\n/* harmony default export */ function data(value, key) {\n  if (!arguments.length) return Array.from(this, datum);\n  var bind = key ? bindKey : bindIndex,\n    parents = this._parents,\n    groups = this._groups;\n  if (typeof value !== "function") value = src_constant(value);\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n      group = groups[j],\n      groupLength = group.length,\n      data = arraylike(value.call(parent, parent && parent.__data__, j, parents)),\n      dataLength = data.length,\n      enterGroup = enter[j] = new Array(dataLength),\n      updateGroup = update[j] = new Array(dataLength),\n      exitGroup = exit[j] = new Array(groupLength);\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n\n// Given some data, this returns an array-like view of it: an object that\n// exposes a length property and allows numeric indexing. Note that unlike\n// selectAll, this isn’t worried about “live” collections because the resulting\n// array will only be used briefly while data is being bound. (It is possible to\n// cause the data to change while iterating by using a key function, but please\n// don’t; we’d rather avoid a gratuitous copy.)\nfunction arraylike(data) {\n  return typeof data === "object" && "length" in data ? data // Array, TypedArray, NodeList, array-like\n  : Array.from(data); // Map, Set, iterable, string, or anything else\n}\n;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/exit.js\n\n\n/* harmony default export */ function exit() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/join.js\n/* harmony default export */ function join(onenter, onupdate, onexit) {\n  var enter = this.enter(),\n    update = this,\n    exit = this.exit();\n  if (typeof onenter === "function") {\n    enter = onenter(enter);\n    if (enter) enter = enter.selection();\n  } else {\n    enter = enter.append(onenter + "");\n  }\n  if (onupdate != null) {\n    update = onupdate(update);\n    if (update) update = update.selection();\n  }\n  if (onexit == null) exit.remove();else onexit(exit);\n  return enter && update ? enter.merge(update).order() : update;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/merge.js\n\n/* harmony default export */ function selection_merge(context) {\n  var selection = context.selection ? context.selection() : context;\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n  return new Selection(merges, this._parents);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/order.js\n/* harmony default export */ function order() {\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n  return this;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/sort.js\n\n/* harmony default export */ function selection_sort(compare) {\n  if (!compare) compare = sort_ascending;\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n  return new Selection(sortgroups, this._parents).order();\n}\nfunction sort_ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/call.js\n/* harmony default export */ function call() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/nodes.js\n/* harmony default export */ function nodes() {\n  return Array.from(this);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/node.js\n/* harmony default export */ function node() {\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n  return null;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/size.js\n/* harmony default export */ function size() {\n  let size = 0;\n  for (const node of this) ++size; // eslint-disable-line no-unused-vars\n  return size;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/empty.js\n/* harmony default export */ function selection_empty() {\n  return !this.node();\n}\n;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/each.js\n/* harmony default export */ function each(callback) {\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n  return this;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-selection/src/namespaces.js\nvar xhtml = "http://www.w3.org/1999/xhtml";\n/* harmony default export */ const namespaces = ({\n  svg: "http://www.w3.org/2000/svg",\n  xhtml: xhtml,\n  xlink: "http://www.w3.org/1999/xlink",\n  xml: "http://www.w3.org/XML/1998/namespace",\n  xmlns: "http://www.w3.org/2000/xmlns/"\n});\n;// CONCATENATED MODULE: ./node_modules/d3-selection/src/namespace.js\n\n/* harmony default export */ function namespace(name) {\n  var prefix = name += "",\n    i = prefix.indexOf(":");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== "xmlns") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {\n    space: namespaces[prefix],\n    local: name\n  } : name; // eslint-disable-line no-prototype-builtins\n}\n;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/attr.js\n\nfunction attrRemove(name) {\n  return function () {\n    this.removeAttribute(name);\n  };\n}\nfunction attrRemoveNS(fullname) {\n  return function () {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\nfunction attrConstant(name, value) {\n  return function () {\n    this.setAttribute(name, value);\n  };\n}\nfunction attrConstantNS(fullname, value) {\n  return function () {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\nfunction attrFunction(name, value) {\n  return function () {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);else this.setAttribute(name, v);\n  };\n}\nfunction attrFunctionNS(fullname, value) {\n  return function () {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n/* harmony default export */ function attr(name, value) {\n  var fullname = namespace(name);\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local ? node.getAttributeNS(fullname.space, fullname.local) : node.getAttribute(fullname);\n  }\n  return this.each((value == null ? fullname.local ? attrRemoveNS : attrRemove : typeof value === "function" ? fullname.local ? attrFunctionNS : attrFunction : fullname.local ? attrConstantNS : attrConstant)(fullname, value));\n}\n;// CONCATENATED MODULE: ./node_modules/d3-selection/src/window.js\n/* harmony default export */ function src_window(node) {\n  return node.ownerDocument && node.ownerDocument.defaultView // node is a Node\n  || node.document && node // node is a Window\n  || node.defaultView; // node is a Document\n}\n;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/style.js\n\nfunction styleRemove(name) {\n  return function () {\n    this.style.removeProperty(name);\n  };\n}\nfunction styleConstant(name, value, priority) {\n  return function () {\n    this.style.setProperty(name, value, priority);\n  };\n}\nfunction styleFunction(name, value, priority) {\n  return function () {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);else this.style.setProperty(name, v, priority);\n  };\n}\n/* harmony default export */ function style(name, value, priority) {\n  return arguments.length > 1 ? this.each((value == null ? styleRemove : typeof value === "function" ? styleFunction : styleConstant)(name, value, priority == null ? "" : priority)) : styleValue(this.node(), name);\n}\nfunction styleValue(node, name) {\n  return node.style.getPropertyValue(name) || src_window(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/property.js\nfunction propertyRemove(name) {\n  return function () {\n    delete this[name];\n  };\n}\nfunction propertyConstant(name, value) {\n  return function () {\n    this[name] = value;\n  };\n}\nfunction propertyFunction(name, value) {\n  return function () {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];else this[name] = v;\n  };\n}\n/* harmony default export */ function property(name, value) {\n  return arguments.length > 1 ? this.each((value == null ? propertyRemove : typeof value === "function" ? propertyFunction : propertyConstant)(name, value)) : this.node()[name];\n}\n;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/classed.js\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute("class") || "");\n}\nClassList.prototype = {\n  add: function (name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute("class", this._names.join(" "));\n    }\n  },\n  remove: function (name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute("class", this._names.join(" "));\n    }\n  },\n  contains: function (name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\nfunction classedAdd(node, names) {\n  var list = classList(node),\n    i = -1,\n    n = names.length;\n  while (++i < n) list.add(names[i]);\n}\nfunction classedRemove(node, names) {\n  var list = classList(node),\n    i = -1,\n    n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\nfunction classedTrue(names) {\n  return function () {\n    classedAdd(this, names);\n  };\n}\nfunction classedFalse(names) {\n  return function () {\n    classedRemove(this, names);\n  };\n}\nfunction classedFunction(names, value) {\n  return function () {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n/* harmony default export */ function classed(name, value) {\n  var names = classArray(name + "");\n  if (arguments.length < 2) {\n    var list = classList(this.node()),\n      i = -1,\n      n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n  return this.each((typeof value === "function" ? classedFunction : value ? classedTrue : classedFalse)(names, value));\n}\n;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/text.js\nfunction textRemove() {\n  this.textContent = "";\n}\nfunction textConstant(value) {\n  return function () {\n    this.textContent = value;\n  };\n}\nfunction textFunction(value) {\n  return function () {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? "" : v;\n  };\n}\n/* harmony default export */ function selection_text(value) {\n  return arguments.length ? this.each(value == null ? textRemove : (typeof value === "function" ? textFunction : textConstant)(value)) : this.node().textContent;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/html.js\nfunction htmlRemove() {\n  this.innerHTML = "";\n}\nfunction htmlConstant(value) {\n  return function () {\n    this.innerHTML = value;\n  };\n}\nfunction htmlFunction(value) {\n  return function () {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? "" : v;\n  };\n}\n/* harmony default export */ function html(value) {\n  return arguments.length ? this.each(value == null ? htmlRemove : (typeof value === "function" ? htmlFunction : htmlConstant)(value)) : this.node().innerHTML;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/raise.js\nfunction raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n/* harmony default export */ function selection_raise() {\n  return this.each(raise);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/lower.js\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n/* harmony default export */ function selection_lower() {\n  return this.each(lower);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-selection/src/creator.js\n\n\nfunction creatorInherit(name) {\n  return function () {\n    var document = this.ownerDocument,\n      uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml ? document.createElement(name) : document.createElementNS(uri, name);\n  };\n}\nfunction creatorFixed(fullname) {\n  return function () {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n/* harmony default export */ function creator(name) {\n  var fullname = namespace(name);\n  return (fullname.local ? creatorFixed : creatorInherit)(fullname);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/append.js\n\n/* harmony default export */ function append(name) {\n  var create = typeof name === "function" ? name : creator(name);\n  return this.select(function () {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/insert.js\n\n\nfunction constantNull() {\n  return null;\n}\n/* harmony default export */ function insert(name, before) {\n  var create = typeof name === "function" ? name : creator(name),\n    select = before == null ? constantNull : typeof before === "function" ? before : selector(before);\n  return this.select(function () {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/remove.js\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n/* harmony default export */ function selection_remove() {\n  return this.each(remove);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/clone.js\nfunction selection_cloneShallow() {\n  var clone = this.cloneNode(false),\n    parent = this.parentNode;\n  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;\n}\nfunction selection_cloneDeep() {\n  var clone = this.cloneNode(true),\n    parent = this.parentNode;\n  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;\n}\n/* harmony default export */ function clone(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/datum.js\n/* harmony default export */ function selection_datum(value) {\n  return arguments.length ? this.property("__data__", value) : this.node().__data__;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/on.js\nfunction contextListener(listener) {\n  return function (event) {\n    listener.call(this, event, this.__data__);\n  };\n}\nfunction on_parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function (t) {\n    var name = "",\n      i = t.indexOf(".");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {\n      type: t,\n      name: name\n    };\n  });\n}\nfunction onRemove(typename) {\n  return function () {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.options);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;else delete this.__on;\n  };\n}\nfunction onAdd(typename, value, options) {\n  return function () {\n    var on = this.__on,\n      o,\n      listener = contextListener(value);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.options);\n        this.addEventListener(o.type, o.listener = listener, o.options = options);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, options);\n    o = {\n      type: typename.type,\n      name: typename.name,\n      value: value,\n      listener: listener,\n      options: options\n    };\n    if (!on) this.__on = [o];else on.push(o);\n  };\n}\n/* harmony default export */ function on(typename, value, options) {\n  var typenames = on_parseTypenames(typename + ""),\n    i,\n    n = typenames.length,\n    t;\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n  on = value ? onAdd : onRemove;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, options));\n  return this;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/dispatch.js\n\nfunction dispatchEvent(node, type, params) {\n  var window = src_window(node),\n    event = window.CustomEvent;\n  if (typeof event === "function") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent("Event");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;else event.initEvent(type, false, false);\n  }\n  node.dispatchEvent(event);\n}\nfunction dispatchConstant(type, params) {\n  return function () {\n    return dispatchEvent(this, type, params);\n  };\n}\nfunction dispatchFunction(type, params) {\n  return function () {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n/* harmony default export */ function selection_dispatch(type, params) {\n  return this.each((typeof params === "function" ? dispatchFunction : dispatchConstant)(type, params));\n}\n;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/iterator.js\n/* harmony default export */ function* iterator() {\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) yield node;\n    }\n  }\n}\n;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/index.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar root = [null];\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\nfunction selection_selection() {\n  return this;\n}\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selectAll,\n  selectChild: selectChild,\n  selectChildren: selectChildren,\n  filter: selection_filter,\n  data: data,\n  enter: enter,\n  exit: exit,\n  join: join,\n  merge: selection_merge,\n  selection: selection_selection,\n  order: order,\n  sort: selection_sort,\n  call: call,\n  nodes: nodes,\n  node: node,\n  size: size,\n  empty: selection_empty,\n  each: each,\n  attr: attr,\n  style: style,\n  property: property,\n  classed: classed,\n  text: selection_text,\n  html: html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: append,\n  insert: insert,\n  remove: selection_remove,\n  clone: clone,\n  datum: selection_datum,\n  on: on,\n  dispatch: selection_dispatch,\n  [Symbol.iterator]: iterator\n};\n/* harmony default export */ const src_selection = (selection);\n;// CONCATENATED MODULE: ./node_modules/d3-selection/src/select.js\n\n/* harmony default export */ function src_select(selector) {\n  return typeof selector === "string" ? new Selection([[document.querySelector(selector)]], [document.documentElement]) : new Selection([[selector]], root);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-drag/src/noevent.js\n// These are typically used in conjunction with noevent to ensure that we can\n// preventDefault on the event.\nconst nonpassive = {\n  passive: false\n};\nconst nonpassivecapture = {\n  capture: true,\n  passive: false\n};\nfunction nopropagation(event) {\n  event.stopImmediatePropagation();\n}\n/* harmony default export */ function noevent(event) {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n;// CONCATENATED MODULE: ./node_modules/d3-drag/src/nodrag.js\n\n\n/* harmony default export */ function nodrag(view) {\n  var root = view.document.documentElement,\n    selection = src_select(view).on("dragstart.drag", noevent, nonpassivecapture);\n  if ("onselectstart" in root) {\n    selection.on("selectstart.drag", noevent, nonpassivecapture);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = "none";\n  }\n}\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n    selection = src_select(view).on("dragstart.drag", null);\n  if (noclick) {\n    selection.on("click.drag", noevent, nonpassivecapture);\n    setTimeout(function () {\n      selection.on("click.drag", null);\n    }, 0);\n  }\n  if ("onselectstart" in root) {\n    selection.on("selectstart.drag", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n;// CONCATENATED MODULE: ./node_modules/d3-color/src/define.js\n/* harmony default export */ function src_define(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-color/src/color.js\n\nfunction Color() {}\nvar darker = 0.7;\nvar brighter = 1 / darker;\nvar reI = "\\\\s*([+-]?\\\\d+)\\\\s*",\n  reN = "\\\\s*([+-]?(?:\\\\d*\\\\.)?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*",\n  reP = "\\\\s*([+-]?(?:\\\\d*\\\\.)?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*",\n  reHex = /^#([0-9a-f]{3,8})$/,\n  reRgbInteger = new RegExp(`^rgb\\\\(${reI},${reI},${reI}\\\\)$`),\n  reRgbPercent = new RegExp(`^rgb\\\\(${reP},${reP},${reP}\\\\)$`),\n  reRgbaInteger = new RegExp(`^rgba\\\\(${reI},${reI},${reI},${reN}\\\\)$`),\n  reRgbaPercent = new RegExp(`^rgba\\\\(${reP},${reP},${reP},${reN}\\\\)$`),\n  reHslPercent = new RegExp(`^hsl\\\\(${reN},${reP},${reP}\\\\)$`),\n  reHslaPercent = new RegExp(`^hsla\\\\(${reN},${reP},${reP},${reN}\\\\)$`);\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\nsrc_define(Color, color, {\n  copy(channels) {\n    return Object.assign(new this.constructor(), this, channels);\n  },\n  displayable() {\n    return this.rgb().displayable();\n  },\n  hex: color_formatHex,\n  // Deprecated! Use color.formatHex.\n  formatHex: color_formatHex,\n  formatHex8: color_formatHex8,\n  formatHsl: color_formatHsl,\n  formatRgb: color_formatRgb,\n  toString: color_formatRgb\n});\nfunction color_formatHex() {\n  return this.rgb().formatHex();\n}\nfunction color_formatHex8() {\n  return this.rgb().formatHex8();\n}\nfunction color_formatHsl() {\n  return hslConvert(this).formatHsl();\n}\nfunction color_formatRgb() {\n  return this.rgb().formatRgb();\n}\nfunction color(format) {\n  var m, l;\n  format = (format + "").trim().toLowerCase();\n  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000\n  : l === 3 ? new Rgb(m >> 8 & 0xf | m >> 4 & 0xf0, m >> 4 & 0xf | m & 0xf0, (m & 0xf) << 4 | m & 0xf, 1) // #f00\n  : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000\n  : l === 4 ? rgba(m >> 12 & 0xf | m >> 8 & 0xf0, m >> 8 & 0xf | m >> 4 & 0xf0, m >> 4 & 0xf | m & 0xf0, ((m & 0xf) << 4 | m & 0xf) / 0xff) // #f000\n  : null // invalid hex\n  ) : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n  : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n  : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n  : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n  : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n  : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n  : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins\n  : format === "transparent" ? new Rgb(NaN, NaN, NaN, 0) : null;\n}\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb();\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\nfunction color_rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\nsrc_define(Rgb, color_rgb, extend(Color, {\n  brighter(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb() {\n    return this;\n  },\n  clamp() {\n    return new Rgb(clampi(this.r), clampi(this.g), clampi(this.b), clampa(this.opacity));\n  },\n  displayable() {\n    return -0.5 <= this.r && this.r < 255.5 && -0.5 <= this.g && this.g < 255.5 && -0.5 <= this.b && this.b < 255.5 && 0 <= this.opacity && this.opacity <= 1;\n  },\n  hex: rgb_formatHex,\n  // Deprecated! Use color.formatHex.\n  formatHex: rgb_formatHex,\n  formatHex8: rgb_formatHex8,\n  formatRgb: rgb_formatRgb,\n  toString: rgb_formatRgb\n}));\nfunction rgb_formatHex() {\n  return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}`;\n}\nfunction rgb_formatHex8() {\n  return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}${hex((isNaN(this.opacity) ? 1 : this.opacity) * 255)}`;\n}\nfunction rgb_formatRgb() {\n  const a = clampa(this.opacity);\n  return `${a === 1 ? "rgb(" : "rgba("}${clampi(this.r)}, ${clampi(this.g)}, ${clampi(this.b)}${a === 1 ? ")" : `, ${a})`}`;\n}\nfunction clampa(opacity) {\n  return isNaN(opacity) ? 1 : Math.max(0, Math.min(1, opacity));\n}\nfunction clampi(value) {\n  return Math.max(0, Math.min(255, Math.round(value) || 0));\n}\nfunction hex(value) {\n  value = clampi(value);\n  return (value < 16 ? "0" : "") + value.toString(16);\n}\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;else if (l <= 0 || l >= 1) h = s = NaN;else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl();\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n    g = o.g / 255,\n    b = o.b / 255,\n    min = Math.min(r, g, b),\n    max = Math.max(r, g, b),\n    h = NaN,\n    s = max - min,\n    l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;else if (g === max) h = (b - r) / s + 2;else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\nsrc_define(Hsl, hsl, extend(Color, {\n  brighter(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n      s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n      l = this.l,\n      m2 = l + (l < 0.5 ? l : 1 - l) * s,\n      m1 = 2 * l - m2;\n    return new Rgb(hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2), hsl2rgb(h, m1, m2), hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2), this.opacity);\n  },\n  clamp() {\n    return new Hsl(clamph(this.h), clampt(this.s), clampt(this.l), clampa(this.opacity));\n  },\n  displayable() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && 0 <= this.l && this.l <= 1 && 0 <= this.opacity && this.opacity <= 1;\n  },\n  formatHsl() {\n    const a = clampa(this.opacity);\n    return `${a === 1 ? "hsl(" : "hsla("}${clamph(this.h)}, ${clampt(this.s) * 100}%, ${clampt(this.l) * 100}%${a === 1 ? ")" : `, ${a})`}`;\n  }\n}));\nfunction clamph(value) {\n  value = (value || 0) % 360;\n  return value < 0 ? value + 360 : value;\n}\nfunction clampt(value) {\n  return Math.max(0, Math.min(1, value || 0));\n}\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60 : h < 180 ? m2 : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60 : m1) * 255;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/basis.js\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1,\n    t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0 + (4 - 6 * t2 + 3 * t3) * v1 + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2 + t3 * v3) / 6;\n}\n/* harmony default export */ function src_basis(values) {\n  var n = values.length - 1;\n  return function (t) {\n    var i = t <= 0 ? t = 0 : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n      v1 = values[i],\n      v2 = values[i + 1],\n      v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n      v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/basisClosed.js\n\n/* harmony default export */ function basisClosed(values) {\n  var n = values.length;\n  return function (t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n      v0 = values[(i + n - 1) % n],\n      v1 = values[i % n],\n      v2 = values[(i + 1) % n],\n      v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/constant.js\n/* harmony default export */ const d3_interpolate_src_constant = (x => () => x);\n;// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/color.js\n\nfunction linear(a, d) {\n  return function (t) {\n    return a + t * d;\n  };\n}\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function (t) {\n    return Math.pow(a + t * b, y);\n  };\n}\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : d3_interpolate_src_constant(isNaN(a) ? b : a);\n}\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function (a, b) {\n    return b - a ? exponential(a, b, y) : d3_interpolate_src_constant(isNaN(a) ? b : a);\n  };\n}\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : d3_interpolate_src_constant(isNaN(a) ? b : a);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/rgb.js\n\n\n\n\n/* harmony default export */ const rgb = ((function rgbGamma(y) {\n  var color = gamma(y);\n  function rgb(start, end) {\n    var r = color((start = color_rgb(start)).r, (end = color_rgb(end)).r),\n      g = color(start.g, end.g),\n      b = color(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n    return function (t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + "";\n    };\n  }\n  rgb.gamma = rgbGamma;\n  return rgb;\n})(1));\nfunction rgbSpline(spline) {\n  return function (colors) {\n    var n = colors.length,\n      r = new Array(n),\n      g = new Array(n),\n      b = new Array(n),\n      i,\n      color;\n    for (i = 0; i < n; ++i) {\n      color = color_rgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function (t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + "";\n    };\n  };\n}\nvar rgbBasis = rgbSpline(src_basis);\nvar rgbBasisClosed = rgbSpline(basisClosed);\n;// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/numberArray.js\n/* harmony default export */ function numberArray(a, b) {\n  if (!b) b = [];\n  var n = a ? Math.min(b.length, a.length) : 0,\n    c = b.slice(),\n    i;\n  return function (t) {\n    for (i = 0; i < n; ++i) c[i] = a[i] * (1 - t) + b[i] * t;\n    return c;\n  };\n}\nfunction isNumberArray(x) {\n  return ArrayBuffer.isView(x) && !(x instanceof DataView);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/array.js\n\n\n/* harmony default export */ function src_array(a, b) {\n  return (isNumberArray(b) ? numberArray : genericArray)(a, b);\n}\nfunction genericArray(a, b) {\n  var nb = b ? b.length : 0,\n    na = a ? Math.min(nb, a.length) : 0,\n    x = new Array(na),\n    c = new Array(nb),\n    i;\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n  return function (t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/date.js\n/* harmony default export */ function date(a, b) {\n  var d = new Date();\n  return a = +a, b = +b, function (t) {\n    return d.setTime(a * (1 - t) + b * t), d;\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/number.js\n/* harmony default export */ function src_number(a, b) {\n  return a = +a, b = +b, function (t) {\n    return a * (1 - t) + b * t;\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/object.js\n\n/* harmony default export */ function object(a, b) {\n  var i = {},\n    c = {},\n    k;\n  if (a === null || typeof a !== "object") a = {};\n  if (b === null || typeof b !== "object") b = {};\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n  return function (t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/string.js\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n  reB = new RegExp(reA.source, "g");\nfunction string_zero(b) {\n  return function () {\n    return b;\n  };\n}\nfunction one(b) {\n  return function (t) {\n    return b(t) + "";\n  };\n}\n/* harmony default export */ function string(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0,\n    // scan index for next number in b\n    am,\n    // current match in a\n    bm,\n    // current match in b\n    bs,\n    // string preceding current number in b, if any\n    i = -1,\n    // index in s\n    s = [],\n    // string constants and placeholders\n    q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + "", b = b + "";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a)) && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) {\n      // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) {\n      // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else {\n      // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({\n        i: i,\n        x: src_number(am, bm)\n      });\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? q[0] ? one(q[0].x) : string_zero(b) : (b = q.length, function (t) {\n    for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n    return s.join("");\n  });\n}\n;// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/value.js\n\n\n\n\n\n\n\n\n\n/* harmony default export */ function value(a, b) {\n  var t = typeof b,\n    c;\n  return b == null || t === "boolean" ? d3_interpolate_src_constant(b) : (t === "number" ? src_number : t === "string" ? (c = color(b)) ? (b = c, rgb) : string : b instanceof color ? rgb : b instanceof Date ? date : isNumberArray(b) ? numberArray : Array.isArray(b) ? genericArray : typeof b.valueOf !== "function" && typeof b.toString !== "function" || isNaN(b) ? object : src_number)(a, b);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-selection/src/sourceEvent.js\n/* harmony default export */ function sourceEvent(event) {\n  let sourceEvent;\n  while (sourceEvent = event.sourceEvent) event = sourceEvent;\n  return event;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-selection/src/pointer.js\n\n/* harmony default export */ function pointer(event, node) {\n  event = sourceEvent(event);\n  if (node === undefined) node = event.currentTarget;\n  if (node) {\n    var svg = node.ownerSVGElement || node;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      point.x = event.clientX, point.y = event.clientY;\n      point = point.matrixTransform(node.getScreenCTM().inverse());\n      return [point.x, point.y];\n    }\n    if (node.getBoundingClientRect) {\n      var rect = node.getBoundingClientRect();\n      return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n    }\n  }\n  return [event.pageX, event.pageY];\n}\n;// CONCATENATED MODULE: ./node_modules/d3-timer/src/timer.js\nvar timer_frame = 0,\n  // is an animation frame pending?\n  timeout = 0,\n  // is a timeout pending?\n  interval = 0,\n  // are any timers active?\n  pokeDelay = 1000,\n  // how frequently we check for clock skew\n  taskHead,\n  taskTail,\n  clockLast = 0,\n  clockNow = 0,\n  clockSkew = 0,\n  clock = typeof performance === "object" && performance.now ? performance : Date,\n  setFrame = typeof window === "object" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function (f) {\n    setTimeout(f, 17);\n  };\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\nfunction clearNow() {\n  clockNow = 0;\n}\nfunction Timer() {\n  this._call = this._time = this._next = null;\n}\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function (callback, delay, time) {\n    if (typeof callback !== "function") throw new TypeError("callback is not a function");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function () {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\nfunction timer(callback, delay, time) {\n  var t = new Timer();\n  t.restart(callback, delay, time);\n  return t;\n}\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++timer_frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead,\n    e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(undefined, e);\n    t = t._next;\n  }\n  --timer_frame;\n}\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  timer_frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    timer_frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\nfunction poke() {\n  var now = clock.now(),\n    delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\nfunction nap() {\n  var t0,\n    t1 = taskHead,\n    t2,\n    time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\nfunction sleep(time) {\n  if (timer_frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    timer_frame = 1, setFrame(wake);\n  }\n}\n;// CONCATENATED MODULE: ./node_modules/d3-timer/src/timeout.js\n\n/* harmony default export */ function src_timeout(callback, delay, time) {\n  var t = new Timer();\n  delay = delay == null ? 0 : +delay;\n  t.restart(elapsed => {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/schedule.js\n\n\nvar emptyOn = src_dispatch("start", "end", "cancel", "interrupt");\nvar emptyTween = [];\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n/* harmony default export */ function schedule(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index,\n    // For context during callback.\n    group: group,\n    // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\nfunction init(node, id) {\n  var schedule = schedule_get(node, id);\n  if (schedule.state > CREATED) throw new Error("too late; already scheduled");\n  return schedule;\n}\nfunction schedule_set(node, id) {\n  var schedule = schedule_get(node, id);\n  if (schedule.state > STARTED) throw new Error("too late; already running");\n  return schedule;\n}\nfunction schedule_get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error("transition not found");\n  return schedule;\n}\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n    tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return src_timeout(start);\n\n      // Interrupt the active transition, if any.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call("interrupt", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions.\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call("cancel", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    src_timeout(function () {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call("start", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n      i = -1,\n      n = tween.length;\n    while (++i < n) {\n      tween[i].call(node, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call("end", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n;// CONCATENATED MODULE: ./node_modules/d3-transition/src/interrupt.js\n\n/* harmony default export */ function interrupt(node, name) {\n  var schedules = node.__transition,\n    schedule,\n    active,\n    empty = true,\n    i;\n  if (!schedules) return;\n  name = name == null ? null : name + "";\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) {\n      empty = false;\n      continue;\n    }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    schedule.on.call(active ? "interrupt" : "cancel", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n  if (empty) delete node.__transition;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-transition/src/selection/interrupt.js\n\n/* harmony default export */ function selection_interrupt(name) {\n  return this.each(function () {\n    interrupt(this, name);\n  });\n}\n;// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/transform/decompose.js\nvar degrees = 180 / Math.PI;\nvar decompose_identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n/* harmony default export */ function decompose(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/transform/parse.js\n\nvar svgNode;\n\n/* eslint-disable no-undef */\nfunction parseCss(value) {\n  const m = new (typeof DOMMatrix === "function" ? DOMMatrix : WebKitCSSMatrix)(value + "");\n  return m.isIdentity ? decompose_identity : decompose(m.a, m.b, m.c, m.d, m.e, m.f);\n}\nfunction parseSvg(value) {\n  if (value == null) return decompose_identity;\n  if (!svgNode) svgNode = document.createElementNS("http://www.w3.org/2000/svg", "g");\n  svgNode.setAttribute("transform", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return decompose_identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/transform/index.js\n\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n  function pop(s) {\n    return s.length ? s.pop() + " " : "";\n  }\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push("translate(", null, pxComma, null, pxParen);\n      q.push({\n        i: i - 4,\n        x: src_number(xa, xb)\n      }, {\n        i: i - 2,\n        x: src_number(ya, yb)\n      });\n    } else if (xb || yb) {\n      s.push("translate(" + xb + pxComma + yb + pxParen);\n    }\n  }\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360;else if (b - a > 180) a += 360; // shortest path\n      q.push({\n        i: s.push(pop(s) + "rotate(", null, degParen) - 2,\n        x: src_number(a, b)\n      });\n    } else if (b) {\n      s.push(pop(s) + "rotate(" + b + degParen);\n    }\n  }\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({\n        i: s.push(pop(s) + "skewX(", null, degParen) - 2,\n        x: src_number(a, b)\n      });\n    } else if (b) {\n      s.push(pop(s) + "skewX(" + b + degParen);\n    }\n  }\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + "scale(", null, ",", null, ")");\n      q.push({\n        i: i - 4,\n        x: src_number(xa, xb)\n      }, {\n        i: i - 2,\n        x: src_number(ya, yb)\n      });\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + "scale(" + xb + "," + yb + ")");\n    }\n  }\n  return function (a, b) {\n    var s = [],\n      // string constants and placeholders\n      q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function (t) {\n      var i = -1,\n        n = q.length,\n        o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join("");\n    };\n  };\n}\nvar interpolateTransformCss = interpolateTransform(parseCss, "px, ", "px)", "deg)");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, ", ", ")", ")");\n;// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/tween.js\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function () {\n    var schedule = schedule_set(this, id),\n      tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n    schedule.tween = tween1;\n  };\n}\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== "function") throw new Error();\n  return function () {\n    var schedule = schedule_set(this, id),\n      tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {\n          name: name,\n          value: value\n        }, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n    schedule.tween = tween1;\n  };\n}\n/* harmony default export */ function tween(name, value) {\n  var id = this._id;\n  name += "";\n  if (arguments.length < 2) {\n    var tween = schedule_get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n  transition.each(function () {\n    var schedule = schedule_set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n  return function (node) {\n    return schedule_get(node, id).value[name];\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/interpolate.js\n\n\n/* harmony default export */ function interpolate(a, b) {\n  var c;\n  return (typeof b === "number" ? src_number : b instanceof color ? rgb : (c = color(b)) ? (b = c, rgb) : string)(a, b);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/attr.js\n\n\n\n\nfunction attr_attrRemove(name) {\n  return function () {\n    this.removeAttribute(name);\n  };\n}\nfunction attr_attrRemoveNS(fullname) {\n  return function () {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\nfunction attr_attrConstant(name, interpolate, value1) {\n  var string00,\n    string1 = value1 + "",\n    interpolate0;\n  return function () {\n    var string0 = this.getAttribute(name);\n    return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\nfunction attr_attrConstantNS(fullname, interpolate, value1) {\n  var string00,\n    string1 = value1 + "",\n    interpolate0;\n  return function () {\n    var string0 = this.getAttributeNS(fullname.space, fullname.local);\n    return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\nfunction attr_attrFunction(name, interpolate, value) {\n  var string00, string10, interpolate0;\n  return function () {\n    var string0,\n      value1 = value(this),\n      string1;\n    if (value1 == null) return void this.removeAttribute(name);\n    string0 = this.getAttribute(name);\n    string1 = value1 + "";\n    return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\nfunction attr_attrFunctionNS(fullname, interpolate, value) {\n  var string00, string10, interpolate0;\n  return function () {\n    var string0,\n      value1 = value(this),\n      string1;\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    string0 = this.getAttributeNS(fullname.space, fullname.local);\n    string1 = value1 + "";\n    return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n/* harmony default export */ function transition_attr(name, value) {\n  var fullname = namespace(name),\n    i = fullname === "transform" ? interpolateTransformSvg : interpolate;\n  return this.attrTween(name, typeof value === "function" ? (fullname.local ? attr_attrFunctionNS : attr_attrFunction)(fullname, i, tweenValue(this, "attr." + name, value)) : value == null ? (fullname.local ? attr_attrRemoveNS : attr_attrRemove)(fullname) : (fullname.local ? attr_attrConstantNS : attr_attrConstant)(fullname, i, value));\n}\n;// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/attrTween.js\n\nfunction attrInterpolate(name, i) {\n  return function (t) {\n    this.setAttribute(name, i.call(this, t));\n  };\n}\nfunction attrInterpolateNS(fullname, i) {\n  return function (t) {\n    this.setAttributeNS(fullname.space, fullname.local, i.call(this, t));\n  };\n}\nfunction attrTweenNS(fullname, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\nfunction attrTween(name, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n/* harmony default export */ function transition_attrTween(name, value) {\n  var key = "attr." + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== "function") throw new Error();\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n;// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/delay.js\n\nfunction delayFunction(id, value) {\n  return function () {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\nfunction delayConstant(id, value) {\n  return value = +value, function () {\n    init(this, id).delay = value;\n  };\n}\n/* harmony default export */ function delay(value) {\n  var id = this._id;\n  return arguments.length ? this.each((typeof value === "function" ? delayFunction : delayConstant)(id, value)) : schedule_get(this.node(), id).delay;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/duration.js\n\nfunction durationFunction(id, value) {\n  return function () {\n    schedule_set(this, id).duration = +value.apply(this, arguments);\n  };\n}\nfunction durationConstant(id, value) {\n  return value = +value, function () {\n    schedule_set(this, id).duration = value;\n  };\n}\n/* harmony default export */ function duration(value) {\n  var id = this._id;\n  return arguments.length ? this.each((typeof value === "function" ? durationFunction : durationConstant)(id, value)) : schedule_get(this.node(), id).duration;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/ease.js\n\nfunction easeConstant(id, value) {\n  if (typeof value !== "function") throw new Error();\n  return function () {\n    schedule_set(this, id).ease = value;\n  };\n}\n/* harmony default export */ function ease(value) {\n  var id = this._id;\n  return arguments.length ? this.each(easeConstant(id, value)) : schedule_get(this.node(), id).ease;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/easeVarying.js\n\nfunction easeVarying(id, value) {\n  return function () {\n    var v = value.apply(this, arguments);\n    if (typeof v !== "function") throw new Error();\n    schedule_set(this, id).ease = v;\n  };\n}\n/* harmony default export */ function transition_easeVarying(value) {\n  if (typeof value !== "function") throw new Error();\n  return this.each(easeVarying(this._id, value));\n}\n;// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/filter.js\n\n\n/* harmony default export */ function transition_filter(match) {\n  if (typeof match !== "function") match = matcher(match);\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/merge.js\n\n/* harmony default export */ function transition_merge(transition) {\n  if (transition._id !== this._id) throw new Error();\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/on.js\n\nfunction start(name) {\n  return (name + "").trim().split(/^|\\s+/).every(function (t) {\n    var i = t.indexOf(".");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === "start";\n  });\n}\nfunction onFunction(id, name, listener) {\n  var on0,\n    on1,\n    sit = start(name) ? init : schedule_set;\n  return function () {\n    var schedule = sit(this, id),\n      on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n    schedule.on = on1;\n  };\n}\n/* harmony default export */ function transition_on(name, listener) {\n  var id = this._id;\n  return arguments.length < 2 ? schedule_get(this.node(), id).on.on(name) : this.each(onFunction(id, name, listener));\n}\n;// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/remove.js\nfunction removeFunction(id) {\n  return function () {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n/* harmony default export */ function transition_remove() {\n  return this.on("end.remove", removeFunction(this._id));\n}\n;// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/select.js\n\n\n\n/* harmony default export */ function transition_select(select) {\n  var name = this._name,\n    id = this._id;\n  if (typeof select !== "function") select = selector(select);\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if ("__data__" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, schedule_get(node, id));\n      }\n    }\n  }\n  return new Transition(subgroups, this._parents, name, id);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/selectAll.js\n\n\n\n/* harmony default export */ function transition_selectAll(select) {\n  var name = this._name,\n    id = this._id;\n  if (typeof select !== "function") select = selectorAll(select);\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = schedule_get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n  return new Transition(subgroups, parents, name, id);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/selection.js\n\nvar selection_Selection = src_selection.prototype.constructor;\n/* harmony default export */ function transition_selection() {\n  return new selection_Selection(this._groups, this._parents);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/style.js\n\n\n\n\n\nfunction styleNull(name, interpolate) {\n  var string00, string10, interpolate0;\n  return function () {\n    var string0 = styleValue(this, name),\n      string1 = (this.style.removeProperty(name), styleValue(this, name));\n    return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : interpolate0 = interpolate(string00 = string0, string10 = string1);\n  };\n}\nfunction style_styleRemove(name) {\n  return function () {\n    this.style.removeProperty(name);\n  };\n}\nfunction style_styleConstant(name, interpolate, value1) {\n  var string00,\n    string1 = value1 + "",\n    interpolate0;\n  return function () {\n    var string0 = styleValue(this, name);\n    return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\nfunction style_styleFunction(name, interpolate, value) {\n  var string00, string10, interpolate0;\n  return function () {\n    var string0 = styleValue(this, name),\n      value1 = value(this),\n      string1 = value1 + "";\n    if (value1 == null) string1 = value1 = (this.style.removeProperty(name), styleValue(this, name));\n    return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\nfunction styleMaybeRemove(id, name) {\n  var on0,\n    on1,\n    listener0,\n    key = "style." + name,\n    event = "end." + key,\n    remove;\n  return function () {\n    var schedule = schedule_set(this, id),\n      on = schedule.on,\n      listener = schedule.value[key] == null ? remove || (remove = style_styleRemove(name)) : undefined;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);\n    schedule.on = on1;\n  };\n}\n/* harmony default export */ function transition_style(name, value, priority) {\n  var i = (name += "") === "transform" ? interpolateTransformCss : interpolate;\n  return value == null ? this.styleTween(name, styleNull(name, i)).on("end.style." + name, style_styleRemove(name)) : typeof value === "function" ? this.styleTween(name, style_styleFunction(name, i, tweenValue(this, "style." + name, value))).each(styleMaybeRemove(this._id, name)) : this.styleTween(name, style_styleConstant(name, i, value), priority).on("end.style." + name, null);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/styleTween.js\nfunction styleInterpolate(name, i, priority) {\n  return function (t) {\n    this.style.setProperty(name, i.call(this, t), priority);\n  };\n}\nfunction styleTween(name, value, priority) {\n  var t, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);\n    return t;\n  }\n  tween._value = value;\n  return tween;\n}\n/* harmony default export */ function transition_styleTween(name, value, priority) {\n  var key = "style." + (name += "");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== "function") throw new Error();\n  return this.tween(key, styleTween(name, value, priority == null ? "" : priority));\n}\n;// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/text.js\n\nfunction text_textConstant(value) {\n  return function () {\n    this.textContent = value;\n  };\n}\nfunction text_textFunction(value) {\n  return function () {\n    var value1 = value(this);\n    this.textContent = value1 == null ? "" : value1;\n  };\n}\n/* harmony default export */ function transition_text(value) {\n  return this.tween("text", typeof value === "function" ? text_textFunction(tweenValue(this, "text", value)) : text_textConstant(value == null ? "" : value + ""));\n}\n;// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/textTween.js\nfunction textInterpolate(i) {\n  return function (t) {\n    this.textContent = i.call(this, t);\n  };\n}\nfunction textTween(value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && textInterpolate(i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n/* harmony default export */ function transition_textTween(value) {\n  var key = "text";\n  if (arguments.length < 1) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== "function") throw new Error();\n  return this.tween(key, textTween(value));\n}\n;// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/transition.js\n\n\n/* harmony default export */ function transition() {\n  var name = this._name,\n    id0 = this._id,\n    id1 = newId();\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = schedule_get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n  return new Transition(groups, this._parents, name, id1);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/end.js\n\n/* harmony default export */ function end() {\n  var on0,\n    on1,\n    that = this,\n    id = that._id,\n    size = that.size();\n  return new Promise(function (resolve, reject) {\n    var cancel = {\n        value: reject\n      },\n      end = {\n        value: function () {\n          if (--size === 0) resolve();\n        }\n      };\n    that.each(function () {\n      var schedule = schedule_set(this, id),\n        on = schedule.on;\n\n      // If this node shared a dispatch with the previous node,\n      // just assign the updated shared dispatch and we’re done!\n      // Otherwise, copy-on-write.\n      if (on !== on0) {\n        on1 = (on0 = on).copy();\n        on1._.cancel.push(cancel);\n        on1._.interrupt.push(cancel);\n        on1._.end.push(end);\n      }\n      schedule.on = on1;\n    });\n\n    // The selection was empty, resolve end immediately\n    if (size === 0) resolve();\n  });\n}\n;// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/index.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar id = 0;\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\nfunction transition_transition(name) {\n  return src_selection().transition(name);\n}\nfunction newId() {\n  return ++id;\n}\nvar selection_prototype = src_selection.prototype;\nTransition.prototype = transition_transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  selectChild: selection_prototype.selectChild,\n  selectChildren: selection_prototype.selectChildren,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  textTween: transition_textTween,\n  remove: transition_remove,\n  tween: tween,\n  delay: delay,\n  duration: duration,\n  ease: ease,\n  easeVarying: transition_easeVarying,\n  end: end,\n  [Symbol.iterator]: selection_prototype[Symbol.iterator]\n};\n;// CONCATENATED MODULE: ./node_modules/d3-ease/src/cubic.js\nfunction cubicIn(t) {\n  return t * t * t;\n}\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-transition/src/selection/transition.js\n\n\n\n\nvar defaultTiming = {\n  time: null,\n  // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: cubicInOut\n};\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      throw new Error(`transition ${id} not found`);\n    }\n  }\n  return timing;\n}\n/* harmony default export */ function selection_transition(name) {\n  var id, timing;\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + "";\n  }\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n  return new Transition(groups, this._parents, name, id);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-transition/src/selection/index.js\n\n\n\nsrc_selection.prototype.interrupt = selection_interrupt;\nsrc_selection.prototype.transition = selection_transition;\n;// CONCATENATED MODULE: ./node_modules/d3-transition/src/active.js\n\n\nvar active_root = [null];\n/* harmony default export */ function active(node, name) {\n  var schedules = node.__transition,\n    schedule,\n    i;\n  if (schedules) {\n    name = name == null ? null : name + "";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], active_root, name, +i);\n      }\n    }\n  }\n  return null;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-transition/src/index.js\n\n\n\n\n;// CONCATENATED MODULE: ./node_modules/d3-brush/src/constant.js\n/* harmony default export */ const d3_brush_src_constant = (x => () => x);\n;// CONCATENATED MODULE: ./node_modules/d3-brush/src/event.js\nfunction BrushEvent(type, {\n  sourceEvent,\n  target,\n  selection,\n  mode,\n  dispatch\n}) {\n  Object.defineProperties(this, {\n    type: {\n      value: type,\n      enumerable: true,\n      configurable: true\n    },\n    sourceEvent: {\n      value: sourceEvent,\n      enumerable: true,\n      configurable: true\n    },\n    target: {\n      value: target,\n      enumerable: true,\n      configurable: true\n    },\n    selection: {\n      value: selection,\n      enumerable: true,\n      configurable: true\n    },\n    mode: {\n      value: mode,\n      enumerable: true,\n      configurable: true\n    },\n    _: {\n      value: dispatch\n    }\n  });\n}\n;// CONCATENATED MODULE: ./node_modules/d3-brush/src/noevent.js\nfunction noevent_nopropagation(event) {\n  event.stopImmediatePropagation();\n}\n/* harmony default export */ function src_noevent(event) {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n;// CONCATENATED MODULE: ./node_modules/d3-brush/src/brush.js\n\n\n\n\n\n\n\n\nvar MODE_DRAG = {\n    name: "drag"\n  },\n  MODE_SPACE = {\n    name: "space"\n  },\n  MODE_HANDLE = {\n    name: "handle"\n  },\n  MODE_CENTER = {\n    name: "center"\n  };\nconst {\n  abs,\n  max: brush_max,\n  min: brush_min\n} = Math;\nfunction number1(e) {\n  return [+e[0], +e[1]];\n}\nfunction number2(e) {\n  return [number1(e[0]), number1(e[1])];\n}\nvar X = {\n  name: "x",\n  handles: ["w", "e"].map(type),\n  input: function (x, e) {\n    return x == null ? null : [[+x[0], e[0][1]], [+x[1], e[1][1]]];\n  },\n  output: function (xy) {\n    return xy && [xy[0][0], xy[1][0]];\n  }\n};\nvar Y = {\n  name: "y",\n  handles: ["n", "s"].map(type),\n  input: function (y, e) {\n    return y == null ? null : [[e[0][0], +y[0]], [e[1][0], +y[1]]];\n  },\n  output: function (xy) {\n    return xy && [xy[0][1], xy[1][1]];\n  }\n};\nvar XY = {\n  name: "xy",\n  handles: ["n", "w", "e", "s", "nw", "ne", "sw", "se"].map(type),\n  input: function (xy) {\n    return xy == null ? null : number2(xy);\n  },\n  output: function (xy) {\n    return xy;\n  }\n};\nvar cursors = {\n  overlay: "crosshair",\n  selection: "move",\n  n: "ns-resize",\n  e: "ew-resize",\n  s: "ns-resize",\n  w: "ew-resize",\n  nw: "nwse-resize",\n  ne: "nesw-resize",\n  se: "nwse-resize",\n  sw: "nesw-resize"\n};\nvar flipX = {\n  e: "w",\n  w: "e",\n  nw: "ne",\n  ne: "nw",\n  se: "sw",\n  sw: "se"\n};\nvar flipY = {\n  n: "s",\n  s: "n",\n  nw: "sw",\n  ne: "se",\n  se: "ne",\n  sw: "nw"\n};\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\nfunction type(t) {\n  return {\n    type: t\n  };\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter(event) {\n  return !event.ctrlKey && !event.button;\n}\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  if (svg.hasAttribute("viewBox")) {\n    svg = svg.viewBox.baseVal;\n    return [[svg.x, svg.y], [svg.x + svg.width, svg.y + svg.height]];\n  }\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\nfunction defaultTouchable() {\n  return navigator.maxTouchPoints || "ontouchstart" in this;\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\nfunction brush_empty(extent) {\n  return extent[0][0] === extent[1][0] || extent[0][1] === extent[1][1];\n}\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\nfunction brushX() {\n  return brush_brush(X);\n}\nfunction brushY() {\n  return brush_brush(Y);\n}\n/* harmony default export */ function brush() {\n  return brush_brush(XY);\n}\nfunction brush_brush(dim) {\n  var extent = defaultExtent,\n    filter = defaultFilter,\n    touchable = defaultTouchable,\n    keys = true,\n    listeners = src_dispatch("start", "brush", "end"),\n    handleSize = 6,\n    touchending;\n  function brush(group) {\n    var overlay = group.property("__brush", initialize).selectAll(".overlay").data([type("overlay")]);\n    overlay.enter().append("rect").attr("class", "overlay").attr("pointer-events", "all").attr("cursor", cursors.overlay).merge(overlay).each(function () {\n      var extent = local(this).extent;\n      src_select(this).attr("x", extent[0][0]).attr("y", extent[0][1]).attr("width", extent[1][0] - extent[0][0]).attr("height", extent[1][1] - extent[0][1]);\n    });\n    group.selectAll(".selection").data([type("selection")]).enter().append("rect").attr("class", "selection").attr("cursor", cursors.selection).attr("fill", "#777").attr("fill-opacity", 0.3).attr("stroke", "#fff").attr("shape-rendering", "crispEdges");\n    var handle = group.selectAll(".handle").data(dim.handles, function (d) {\n      return d.type;\n    });\n    handle.exit().remove();\n    handle.enter().append("rect").attr("class", function (d) {\n      return "handle handle--" + d.type;\n    }).attr("cursor", function (d) {\n      return cursors[d.type];\n    });\n    group.each(redraw).attr("fill", "none").attr("pointer-events", "all").on("mousedown.brush", started).filter(touchable).on("touchstart.brush", started).on("touchmove.brush", touchmoved).on("touchend.brush touchcancel.brush", touchended).style("touch-action", "none").style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");\n  }\n  brush.move = function (group, selection, event) {\n    if (group.tween) {\n      group.on("start.brush", function (event) {\n        emitter(this, arguments).beforestart().start(event);\n      }).on("interrupt.brush end.brush", function (event) {\n        emitter(this, arguments).end(event);\n      }).tween("brush", function () {\n        var that = this,\n          state = that.__brush,\n          emit = emitter(that, arguments),\n          selection0 = state.selection,\n          selection1 = dim.input(typeof selection === "function" ? selection.apply(this, arguments) : selection, state.extent),\n          i = value(selection0, selection1);\n        function tween(t) {\n          state.selection = t === 1 && selection1 === null ? null : i(t);\n          redraw.call(that);\n          emit.brush();\n        }\n        return selection0 !== null && selection1 !== null ? tween : tween(1);\n      });\n    } else {\n      group.each(function () {\n        var that = this,\n          args = arguments,\n          state = that.__brush,\n          selection1 = dim.input(typeof selection === "function" ? selection.apply(that, args) : selection, state.extent),\n          emit = emitter(that, args).beforestart();\n        interrupt(that);\n        state.selection = selection1 === null ? null : selection1;\n        redraw.call(that);\n        emit.start(event).brush(event).end(event);\n      });\n    }\n  };\n  brush.clear = function (group, event) {\n    brush.move(group, null, event);\n  };\n  function redraw() {\n    var group = src_select(this),\n      selection = local(this).selection;\n    if (selection) {\n      group.selectAll(".selection").style("display", null).attr("x", selection[0][0]).attr("y", selection[0][1]).attr("width", selection[1][0] - selection[0][0]).attr("height", selection[1][1] - selection[0][1]);\n      group.selectAll(".handle").style("display", null).attr("x", function (d) {\n        return d.type[d.type.length - 1] === "e" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2;\n      }).attr("y", function (d) {\n        return d.type[0] === "s" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2;\n      }).attr("width", function (d) {\n        return d.type === "n" || d.type === "s" ? selection[1][0] - selection[0][0] + handleSize : handleSize;\n      }).attr("height", function (d) {\n        return d.type === "e" || d.type === "w" ? selection[1][1] - selection[0][1] + handleSize : handleSize;\n      });\n    } else {\n      group.selectAll(".selection,.handle").style("display", "none").attr("x", null).attr("y", null).attr("width", null).attr("height", null);\n    }\n  }\n  function emitter(that, args, clean) {\n    var emit = that.__brush.emitter;\n    return emit && (!clean || !emit.clean) ? emit : new Emitter(that, args, clean);\n  }\n  function Emitter(that, args, clean) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n    this.clean = clean;\n  }\n  Emitter.prototype = {\n    beforestart: function () {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function (event, mode) {\n      if (this.starting) this.starting = false, this.emit("start", event, mode);else this.emit("brush", event);\n      return this;\n    },\n    brush: function (event, mode) {\n      this.emit("brush", event, mode);\n      return this;\n    },\n    end: function (event, mode) {\n      if (--this.active === 0) delete this.state.emitter, this.emit("end", event, mode);\n      return this;\n    },\n    emit: function (type, event, mode) {\n      var d = src_select(this.that).datum();\n      listeners.call(type, this.that, new BrushEvent(type, {\n        sourceEvent: event,\n        target: brush,\n        selection: dim.output(this.state.selection),\n        mode,\n        dispatch: listeners\n      }), d);\n    }\n  };\n  function started(event) {\n    if (touchending && !event.touches) return;\n    if (!filter.apply(this, arguments)) return;\n    var that = this,\n      type = event.target.__data__.type,\n      mode = (keys && event.metaKey ? type = "overlay" : type) === "selection" ? MODE_DRAG : keys && event.altKey ? MODE_CENTER : MODE_HANDLE,\n      signX = dim === Y ? null : signsX[type],\n      signY = dim === X ? null : signsY[type],\n      state = local(that),\n      extent = state.extent,\n      selection = state.selection,\n      W = extent[0][0],\n      w0,\n      w1,\n      N = extent[0][1],\n      n0,\n      n1,\n      E = extent[1][0],\n      e0,\n      e1,\n      S = extent[1][1],\n      s0,\n      s1,\n      dx = 0,\n      dy = 0,\n      moving,\n      shifting = signX && signY && keys && event.shiftKey,\n      lockX,\n      lockY,\n      points = Array.from(event.touches || [event], t => {\n        const i = t.identifier;\n        t = pointer(t, that);\n        t.point0 = t.slice();\n        t.identifier = i;\n        return t;\n      });\n    interrupt(that);\n    var emit = emitter(that, arguments, true).beforestart();\n    if (type === "overlay") {\n      if (selection) moving = true;\n      const pts = [points[0], points[1] || points[0]];\n      state.selection = selection = [[w0 = dim === Y ? W : brush_min(pts[0][0], pts[1][0]), n0 = dim === X ? N : brush_min(pts[0][1], pts[1][1])], [e0 = dim === Y ? E : brush_max(pts[0][0], pts[1][0]), s0 = dim === X ? S : brush_max(pts[0][1], pts[1][1])]];\n      if (points.length > 1) move(event);\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n    var group = src_select(that).attr("pointer-events", "none");\n    var overlay = group.selectAll(".overlay").attr("cursor", cursors[type]);\n    if (event.touches) {\n      emit.moved = moved;\n      emit.ended = ended;\n    } else {\n      var view = src_select(event.view).on("mousemove.brush", moved, true).on("mouseup.brush", ended, true);\n      if (keys) view.on("keydown.brush", keydowned, true).on("keyup.brush", keyupped, true);\n      nodrag(event.view);\n    }\n    redraw.call(that);\n    emit.start(event, mode.name);\n    function moved(event) {\n      for (const p of event.changedTouches || [event]) {\n        for (const d of points) if (d.identifier === p.identifier) d.cur = pointer(p, that);\n      }\n      if (shifting && !lockX && !lockY && points.length === 1) {\n        const point = points[0];\n        if (abs(point.cur[0] - point[0]) > abs(point.cur[1] - point[1])) lockY = true;else lockX = true;\n      }\n      for (const point of points) if (point.cur) point[0] = point.cur[0], point[1] = point.cur[1];\n      moving = true;\n      src_noevent(event);\n      move(event);\n    }\n    function move(event) {\n      const point = points[0],\n        point0 = point.point0;\n      var t;\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG:\n          {\n            if (signX) dx = brush_max(W - w0, brush_min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n            if (signY) dy = brush_max(N - n0, brush_min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n            break;\n          }\n        case MODE_HANDLE:\n          {\n            if (points[1]) {\n              if (signX) w1 = brush_max(W, brush_min(E, points[0][0])), e1 = brush_max(W, brush_min(E, points[1][0])), signX = 1;\n              if (signY) n1 = brush_max(N, brush_min(S, points[0][1])), s1 = brush_max(N, brush_min(S, points[1][1])), signY = 1;\n            } else {\n              if (signX < 0) dx = brush_max(W - w0, brush_min(E - w0, dx)), w1 = w0 + dx, e1 = e0;else if (signX > 0) dx = brush_max(W - e0, brush_min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n              if (signY < 0) dy = brush_max(N - n0, brush_min(S - n0, dy)), n1 = n0 + dy, s1 = s0;else if (signY > 0) dy = brush_max(N - s0, brush_min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n            }\n            break;\n          }\n        case MODE_CENTER:\n          {\n            if (signX) w1 = brush_max(W, brush_min(E, w0 - dx * signX)), e1 = brush_max(W, brush_min(E, e0 + dx * signX));\n            if (signY) n1 = brush_max(N, brush_min(S, n0 - dy * signY)), s1 = brush_max(N, brush_min(S, s0 + dy * signY));\n            break;\n          }\n      }\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr("cursor", cursors[type = flipX[type]]);\n      }\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr("cursor", cursors[type = flipY[type]]);\n      }\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n      if (selection[0][0] !== w1 || selection[0][1] !== n1 || selection[1][0] !== e1 || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush(event, mode.name);\n      }\n    }\n    function ended(event) {\n      noevent_nopropagation(event);\n      if (event.touches) {\n        if (event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function () {\n          touchending = null;\n        }, 500); // Ghost clicks are delayed!\n      } else {\n        yesdrag(event.view, moving);\n        view.on("keydown.brush keyup.brush mousemove.brush mouseup.brush", null);\n      }\n      group.attr("pointer-events", "all");\n      overlay.attr("cursor", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n      if (brush_empty(selection)) state.selection = null, redraw.call(that);\n      emit.end(event, mode.name);\n    }\n    function keydowned(event) {\n      switch (event.keyCode) {\n        case 16:\n          {\n            // SHIFT\n            shifting = signX && signY;\n            break;\n          }\n        case 18:\n          {\n            // ALT\n            if (mode === MODE_HANDLE) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n              move(event);\n            }\n            break;\n          }\n        case 32:\n          {\n            // SPACE; takes priority over ALT\n            if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n              if (signX < 0) e0 = e1 - dx;else if (signX > 0) w0 = w1 - dx;\n              if (signY < 0) s0 = s1 - dy;else if (signY > 0) n0 = n1 - dy;\n              mode = MODE_SPACE;\n              overlay.attr("cursor", cursors.selection);\n              move(event);\n            }\n            break;\n          }\n        default:\n          return;\n      }\n      src_noevent(event);\n    }\n    function keyupped(event) {\n      switch (event.keyCode) {\n        case 16:\n          {\n            // SHIFT\n            if (shifting) {\n              lockX = lockY = shifting = false;\n              move(event);\n            }\n            break;\n          }\n        case 18:\n          {\n            // ALT\n            if (mode === MODE_CENTER) {\n              if (signX < 0) e0 = e1;else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1;else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n              move(event);\n            }\n            break;\n          }\n        case 32:\n          {\n            // SPACE\n            if (mode === MODE_SPACE) {\n              if (event.altKey) {\n                if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n                if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n                mode = MODE_CENTER;\n              } else {\n                if (signX < 0) e0 = e1;else if (signX > 0) w0 = w1;\n                if (signY < 0) s0 = s1;else if (signY > 0) n0 = n1;\n                mode = MODE_HANDLE;\n              }\n              overlay.attr("cursor", cursors[type]);\n              move(event);\n            }\n            break;\n          }\n        default:\n          return;\n      }\n      src_noevent(event);\n    }\n  }\n  function touchmoved(event) {\n    emitter(this, arguments).moved(event);\n  }\n  function touchended(event) {\n    emitter(this, arguments).ended(event);\n  }\n  function initialize() {\n    var state = this.__brush || {\n      selection: null\n    };\n    state.extent = number2(extent.apply(this, arguments));\n    state.dim = dim;\n    return state;\n  }\n  brush.extent = function (_) {\n    return arguments.length ? (extent = typeof _ === "function" ? _ : d3_brush_src_constant(number2(_)), brush) : extent;\n  };\n  brush.filter = function (_) {\n    return arguments.length ? (filter = typeof _ === "function" ? _ : d3_brush_src_constant(!!_), brush) : filter;\n  };\n  brush.touchable = function (_) {\n    return arguments.length ? (touchable = typeof _ === "function" ? _ : d3_brush_src_constant(!!_), brush) : touchable;\n  };\n  brush.handleSize = function (_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n  brush.keyModifiers = function (_) {\n    return arguments.length ? (keys = !!_, brush) : keys;\n  };\n  brush.on = function () {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n  return brush;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-brush/src/index.js\n\n;// CONCATENATED MODULE: ./node_modules/d3-chord/src/math.js\nvar math_abs = Math.abs;\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi = Math.PI;\nvar halfPi = pi / 2;\nvar tau = pi * 2;\nvar math_max = Math.max;\nvar math_epsilon = 1e-12;\n;// CONCATENATED MODULE: ./node_modules/d3-chord/src/chord.js\n\nfunction chord_range(i, j) {\n  return Array.from({\n    length: j - i\n  }, (_, k) => i + k);\n}\nfunction compareValue(compare) {\n  return function (a, b) {\n    return compare(a.source.value + a.target.value, b.source.value + b.target.value);\n  };\n}\n/* harmony default export */ function chord() {\n  return chord_chord(false, false);\n}\nfunction chordTranspose() {\n  return chord_chord(false, true);\n}\nfunction chordDirected() {\n  return chord_chord(true, false);\n}\nfunction chord_chord(directed, transpose) {\n  var padAngle = 0,\n    sortGroups = null,\n    sortSubgroups = null,\n    sortChords = null;\n  function chord(matrix) {\n    var n = matrix.length,\n      groupSums = new Array(n),\n      groupIndex = chord_range(0, n),\n      chords = new Array(n * n),\n      groups = new Array(n),\n      k = 0,\n      dx;\n    matrix = Float64Array.from({\n      length: n * n\n    }, transpose ? (_, i) => matrix[i % n][i / n | 0] : (_, i) => matrix[i / n | 0][i % n]);\n\n    // Compute the scaling factor from value to angle in [0, 2pi].\n    for (let i = 0; i < n; ++i) {\n      let x = 0;\n      for (let j = 0; j < n; ++j) x += matrix[i * n + j] + directed * matrix[j * n + i];\n      k += groupSums[i] = x;\n    }\n    k = math_max(0, tau - padAngle * n) / k;\n    dx = k ? padAngle : tau / n;\n\n    // Compute the angles for each group and constituent chord.\n    {\n      let x = 0;\n      if (sortGroups) groupIndex.sort((a, b) => sortGroups(groupSums[a], groupSums[b]));\n      for (const i of groupIndex) {\n        const x0 = x;\n        if (directed) {\n          const subgroupIndex = chord_range(~n + 1, n).filter(j => j < 0 ? matrix[~j * n + i] : matrix[i * n + j]);\n          if (sortSubgroups) subgroupIndex.sort((a, b) => sortSubgroups(a < 0 ? -matrix[~a * n + i] : matrix[i * n + a], b < 0 ? -matrix[~b * n + i] : matrix[i * n + b]));\n          for (const j of subgroupIndex) {\n            if (j < 0) {\n              const chord = chords[~j * n + i] || (chords[~j * n + i] = {\n                source: null,\n                target: null\n              });\n              chord.target = {\n                index: i,\n                startAngle: x,\n                endAngle: x += matrix[~j * n + i] * k,\n                value: matrix[~j * n + i]\n              };\n            } else {\n              const chord = chords[i * n + j] || (chords[i * n + j] = {\n                source: null,\n                target: null\n              });\n              chord.source = {\n                index: i,\n                startAngle: x,\n                endAngle: x += matrix[i * n + j] * k,\n                value: matrix[i * n + j]\n              };\n            }\n          }\n          groups[i] = {\n            index: i,\n            startAngle: x0,\n            endAngle: x,\n            value: groupSums[i]\n          };\n        } else {\n          const subgroupIndex = chord_range(0, n).filter(j => matrix[i * n + j] || matrix[j * n + i]);\n          if (sortSubgroups) subgroupIndex.sort((a, b) => sortSubgroups(matrix[i * n + a], matrix[i * n + b]));\n          for (const j of subgroupIndex) {\n            let chord;\n            if (i < j) {\n              chord = chords[i * n + j] || (chords[i * n + j] = {\n                source: null,\n                target: null\n              });\n              chord.source = {\n                index: i,\n                startAngle: x,\n                endAngle: x += matrix[i * n + j] * k,\n                value: matrix[i * n + j]\n              };\n            } else {\n              chord = chords[j * n + i] || (chords[j * n + i] = {\n                source: null,\n                target: null\n              });\n              chord.target = {\n                index: i,\n                startAngle: x,\n                endAngle: x += matrix[i * n + j] * k,\n                value: matrix[i * n + j]\n              };\n              if (i === j) chord.source = chord.target;\n            }\n            if (chord.source && chord.target && chord.source.value < chord.target.value) {\n              const source = chord.source;\n              chord.source = chord.target;\n              chord.target = source;\n            }\n          }\n          groups[i] = {\n            index: i,\n            startAngle: x0,\n            endAngle: x,\n            value: groupSums[i]\n          };\n        }\n        x += dx;\n      }\n    }\n\n    // Remove empty chords.\n    chords = Object.values(chords);\n    chords.groups = groups;\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n  chord.padAngle = function (_) {\n    return arguments.length ? (padAngle = math_max(0, _), chord) : padAngle;\n  };\n  chord.sortGroups = function (_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n  chord.sortSubgroups = function (_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n  chord.sortChords = function (_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n  return chord;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-path/src/path.js\nconst path_pi = Math.PI,\n  path_tau = 2 * path_pi,\n  path_epsilon = 1e-6,\n  tauEpsilon = path_tau - path_epsilon;\nfunction path_append(strings) {\n  this._ += strings[0];\n  for (let i = 1, n = strings.length; i < n; ++i) {\n    this._ += arguments[i] + strings[i];\n  }\n}\nfunction appendRound(digits) {\n  let d = Math.floor(digits);\n  if (!(d >= 0)) throw new Error(`invalid digits: ${digits}`);\n  if (d > 15) return path_append;\n  const k = 10 ** d;\n  return function (strings) {\n    this._ += strings[0];\n    for (let i = 1, n = strings.length; i < n; ++i) {\n      this._ += Math.round(arguments[i] * k) / k + strings[i];\n    }\n  };\n}\nclass Path {\n  constructor(digits) {\n    this._x0 = this._y0 =\n    // start of current subpath\n    this._x1 = this._y1 = null; // end of current subpath\n    this._ = "";\n    this._append = digits == null ? path_append : appendRound(digits);\n  }\n  moveTo(x, y) {\n    this._append`M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}`;\n  }\n  closePath() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._append`Z`;\n    }\n  }\n  lineTo(x, y) {\n    this._append`L${this._x1 = +x},${this._y1 = +y}`;\n  }\n  quadraticCurveTo(x1, y1, x, y) {\n    this._append`Q${+x1},${+y1},${this._x1 = +x},${this._y1 = +y}`;\n  }\n  bezierCurveTo(x1, y1, x2, y2, x, y) {\n    this._append`C${+x1},${+y1},${+x2},${+y2},${this._x1 = +x},${this._y1 = +y}`;\n  }\n  arcTo(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(`negative radius: ${r}`);\n    let x0 = this._x1,\n      y0 = this._y1,\n      x21 = x2 - x1,\n      y21 = y2 - y1,\n      x01 = x0 - x1,\n      y01 = y0 - y1,\n      l01_2 = x01 * x01 + y01 * y01;\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._append`M${this._x1 = x1},${this._y1 = y1}`;\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > path_epsilon)) ;\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > path_epsilon) || !r) {\n      this._append`L${this._x1 = x1},${this._y1 = y1}`;\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      let x20 = x2 - x0,\n        y20 = y2 - y0,\n        l21_2 = x21 * x21 + y21 * y21,\n        l20_2 = x20 * x20 + y20 * y20,\n        l21 = Math.sqrt(l21_2),\n        l01 = Math.sqrt(l01_2),\n        l = r * Math.tan((path_pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n        t01 = l / l01,\n        t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > path_epsilon) {\n        this._append`L${x1 + t01 * x01},${y1 + t01 * y01}`;\n      }\n      this._append`A${r},${r},0,0,${+(y01 * x20 > x01 * y20)},${this._x1 = x1 + t21 * x21},${this._y1 = y1 + t21 * y21}`;\n    }\n  }\n  arc(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(`negative radius: ${r}`);\n    let dx = r * Math.cos(a0),\n      dy = r * Math.sin(a0),\n      x0 = x + dx,\n      y0 = y + dy,\n      cw = 1 ^ ccw,\n      da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._append`M${x0},${y0}`;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > path_epsilon || Math.abs(this._y1 - y0) > path_epsilon) {\n      this._append`L${x0},${y0}`;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % path_tau + path_tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._append`A${r},${r},0,1,${cw},${x - dx},${y - dy}A${r},${r},0,1,${cw},${this._x1 = x0},${this._y1 = y0}`;\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > path_epsilon) {\n      this._append`A${r},${r},0,${+(da >= path_pi)},${cw},${this._x1 = x + r * Math.cos(a1)},${this._y1 = y + r * Math.sin(a1)}`;\n    }\n  }\n  rect(x, y, w, h) {\n    this._append`M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}h${w = +w}v${+h}h${-w}Z`;\n  }\n  toString() {\n    return this._;\n  }\n}\nfunction path() {\n  return new Path();\n}\n\n// Allow instanceof d3.path\npath.prototype = Path.prototype;\nfunction pathRound(digits = 3) {\n  return new Path(+digits);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-chord/src/array.js\nvar array_slice = Array.prototype.slice;\n;// CONCATENATED MODULE: ./node_modules/d3-chord/src/constant.js\n/* harmony default export */ function d3_chord_src_constant(x) {\n  return function () {\n    return x;\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/d3-chord/src/ribbon.js\n\n\n\n\nfunction defaultSource(d) {\n  return d.source;\n}\nfunction defaultTarget(d) {\n  return d.target;\n}\nfunction defaultRadius(d) {\n  return d.radius;\n}\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\nfunction defaultPadAngle() {\n  return 0;\n}\nfunction defaultArrowheadRadius() {\n  return 10;\n}\nfunction ribbon(headRadius) {\n  var source = defaultSource,\n    target = defaultTarget,\n    sourceRadius = defaultRadius,\n    targetRadius = defaultRadius,\n    startAngle = defaultStartAngle,\n    endAngle = defaultEndAngle,\n    padAngle = defaultPadAngle,\n    context = null;\n  function ribbon() {\n    var buffer,\n      s = source.apply(this, arguments),\n      t = target.apply(this, arguments),\n      ap = padAngle.apply(this, arguments) / 2,\n      argv = array_slice.call(arguments),\n      sr = +sourceRadius.apply(this, (argv[0] = s, argv)),\n      sa0 = startAngle.apply(this, argv) - halfPi,\n      sa1 = endAngle.apply(this, argv) - halfPi,\n      tr = +targetRadius.apply(this, (argv[0] = t, argv)),\n      ta0 = startAngle.apply(this, argv) - halfPi,\n      ta1 = endAngle.apply(this, argv) - halfPi;\n    if (!context) context = buffer = path();\n    if (ap > math_epsilon) {\n      if (math_abs(sa1 - sa0) > ap * 2 + math_epsilon) sa1 > sa0 ? (sa0 += ap, sa1 -= ap) : (sa0 -= ap, sa1 += ap);else sa0 = sa1 = (sa0 + sa1) / 2;\n      if (math_abs(ta1 - ta0) > ap * 2 + math_epsilon) ta1 > ta0 ? (ta0 += ap, ta1 -= ap) : (ta0 -= ap, ta1 += ap);else ta0 = ta1 = (ta0 + ta1) / 2;\n    }\n    context.moveTo(sr * cos(sa0), sr * sin(sa0));\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) {\n      if (headRadius) {\n        var hr = +headRadius.apply(this, arguments),\n          tr2 = tr - hr,\n          ta2 = (ta0 + ta1) / 2;\n        context.quadraticCurveTo(0, 0, tr2 * cos(ta0), tr2 * sin(ta0));\n        context.lineTo(tr * cos(ta2), tr * sin(ta2));\n        context.lineTo(tr2 * cos(ta1), tr2 * sin(ta1));\n      } else {\n        context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n        context.arc(0, 0, tr, ta0, ta1);\n      }\n    }\n    context.quadraticCurveTo(0, 0, sr * cos(sa0), sr * sin(sa0));\n    context.closePath();\n    if (buffer) return context = null, buffer + "" || null;\n  }\n  if (headRadius) ribbon.headRadius = function (_) {\n    return arguments.length ? (headRadius = typeof _ === "function" ? _ : d3_chord_src_constant(+_), ribbon) : headRadius;\n  };\n  ribbon.radius = function (_) {\n    return arguments.length ? (sourceRadius = targetRadius = typeof _ === "function" ? _ : d3_chord_src_constant(+_), ribbon) : sourceRadius;\n  };\n  ribbon.sourceRadius = function (_) {\n    return arguments.length ? (sourceRadius = typeof _ === "function" ? _ : d3_chord_src_constant(+_), ribbon) : sourceRadius;\n  };\n  ribbon.targetRadius = function (_) {\n    return arguments.length ? (targetRadius = typeof _ === "function" ? _ : d3_chord_src_constant(+_), ribbon) : targetRadius;\n  };\n  ribbon.startAngle = function (_) {\n    return arguments.length ? (startAngle = typeof _ === "function" ? _ : d3_chord_src_constant(+_), ribbon) : startAngle;\n  };\n  ribbon.endAngle = function (_) {\n    return arguments.length ? (endAngle = typeof _ === "function" ? _ : d3_chord_src_constant(+_), ribbon) : endAngle;\n  };\n  ribbon.padAngle = function (_) {\n    return arguments.length ? (padAngle = typeof _ === "function" ? _ : d3_chord_src_constant(+_), ribbon) : padAngle;\n  };\n  ribbon.source = function (_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n  ribbon.target = function (_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n  ribbon.context = function (_) {\n    return arguments.length ? (context = _ == null ? null : _, ribbon) : context;\n  };\n  return ribbon;\n}\n/* harmony default export */ function src_ribbon() {\n  return ribbon();\n}\nfunction ribbonArrow() {\n  return ribbon(defaultArrowheadRadius);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-chord/src/index.js\n\n\n;// CONCATENATED MODULE: ./node_modules/d3-color/src/math.js\nconst radians = Math.PI / 180;\nconst math_degrees = 180 / Math.PI;\n;// CONCATENATED MODULE: ./node_modules/d3-color/src/lab.js\n\n\n\n\n// https://observablehq.com/@mbostock/lab-and-rgb\nconst K = 18,\n  Xn = 0.96422,\n  Yn = 1,\n  Zn = 0.82521,\n  t0 = 4 / 29,\n  t1 = 6 / 29,\n  t2 = 3 * t1 * t1,\n  t3 = t1 * t1 * t1;\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) return hcl2lab(o);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n    g = rgb2lrgb(o.g),\n    b = rgb2lrgb(o.b),\n    y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn),\n    x,\n    z;\n  if (r === g && g === b) x = z = y;else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\nfunction gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\nsrc_define(Lab, lab, extend(Color, {\n  brighter(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb() {\n    var y = (this.l + 16) / 116,\n      x = isNaN(this.a) ? y : y + this.a / 500,\n      z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(lrgb2rgb(3.1338561 * x - 1.6168667 * y - 0.4906146 * z), lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z), lrgb2rgb(0.0719453 * x - 0.2289914 * y + 1.4052427 * z), this.opacity);\n  }\n}));\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0 < o.l && o.l < 100 ? 0 : NaN, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * math_degrees;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\nfunction lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\nfunction hcl2lab(o) {\n  if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n  var h = o.h * radians;\n  return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n}\nsrc_define(Hcl, hcl, extend(Color, {\n  brighter(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb() {\n    return hcl2lab(this).rgb();\n  }\n}));\n;// CONCATENATED MODULE: ./node_modules/d3-color/src/cubehelix.js\n\n\n\nvar A = -0.14861,\n  B = +1.78277,\n  C = -0.29227,\n  D = -0.90649,\n  E = +1.97294,\n  ED = E * D,\n  EB = E * B,\n  BC_DA = B * C - D * A;\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n    g = o.g / 255,\n    b = o.b / 255,\n    l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n    bl = b - l,\n    k = (E * (g - l) - C * bl) / D,\n    s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)),\n    // NaN if l=0 or l=1\n    h = s ? Math.atan2(k, bl) * math_degrees - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\nfunction cubehelix_cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\nsrc_define(Cubehelix, cubehelix_cubehelix, extend(Color, {\n  brighter(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * radians,\n      l = +this.l,\n      a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n      cosh = Math.cos(h),\n      sinh = Math.sin(h);\n    return new Rgb(255 * (l + a * (A * cosh + B * sinh)), 255 * (l + a * (C * cosh + D * sinh)), 255 * (l + a * (E * cosh)), this.opacity);\n  }\n}));\n;// CONCATENATED MODULE: ./node_modules/d3-color/src/index.js\n\n\n\n;// CONCATENATED MODULE: ./node_modules/d3-contour/src/array.js\nvar src_array_array = Array.prototype;\nvar src_array_slice = src_array_array.slice;\n;// CONCATENATED MODULE: ./node_modules/d3-contour/src/ascending.js\n/* harmony default export */ function src_ascending(a, b) {\n  return a - b;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-contour/src/area.js\n/* harmony default export */ function src_area(ring) {\n  var i = 0,\n    n = ring.length,\n    area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];\n  while (++i < n) area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];\n  return area;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-contour/src/constant.js\n/* harmony default export */ const d3_contour_src_constant = (x => () => x);\n;// CONCATENATED MODULE: ./node_modules/d3-contour/src/contains.js\n/* harmony default export */ function contains(ring, hole) {\n  var i = -1,\n    n = hole.length,\n    c;\n  while (++i < n) if (c = ringContains(ring, hole[i])) return c;\n  return 0;\n}\nfunction ringContains(ring, point) {\n  var x = point[0],\n    y = point[1],\n    contains = -1;\n  for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {\n    var pi = ring[i],\n      xi = pi[0],\n      yi = pi[1],\n      pj = ring[j],\n      xj = pj[0],\n      yj = pj[1];\n    if (segmentContains(pi, pj, point)) return 0;\n    if (yi > y !== yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi) contains = -contains;\n  }\n  return contains;\n}\nfunction segmentContains(a, b, c) {\n  var i;\n  return collinear(a, b, c) && within(a[i = +(a[0] === b[0])], c[i], b[i]);\n}\nfunction collinear(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) === (c[0] - a[0]) * (b[1] - a[1]);\n}\nfunction within(p, q, r) {\n  return p <= q && q <= r || r <= q && q <= p;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-contour/src/noop.js\n/* harmony default export */ function src_noop() {}\n;// CONCATENATED MODULE: ./node_modules/d3-contour/src/contours.js\n\n\n\n\n\n\n\nvar cases = [[], [[[1.0, 1.5], [0.5, 1.0]]], [[[1.5, 1.0], [1.0, 1.5]]], [[[1.5, 1.0], [0.5, 1.0]]], [[[1.0, 0.5], [1.5, 1.0]]], [[[1.0, 1.5], [0.5, 1.0]], [[1.0, 0.5], [1.5, 1.0]]], [[[1.0, 0.5], [1.0, 1.5]]], [[[1.0, 0.5], [0.5, 1.0]]], [[[0.5, 1.0], [1.0, 0.5]]], [[[1.0, 1.5], [1.0, 0.5]]], [[[0.5, 1.0], [1.0, 0.5]], [[1.5, 1.0], [1.0, 1.5]]], [[[1.5, 1.0], [1.0, 0.5]]], [[[0.5, 1.0], [1.5, 1.0]]], [[[1.0, 1.5], [1.5, 1.0]]], [[[0.5, 1.0], [1.0, 1.5]]], []];\n/* harmony default export */ function src_contours() {\n  var dx = 1,\n    dy = 1,\n    threshold = thresholdSturges,\n    smooth = smoothLinear;\n  function contours(values) {\n    var tz = threshold(values);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      const e = extent(values, finite);\n      tz = ticks(...nice(e[0], e[1], tz), tz);\n      while (tz[tz.length - 1] >= e[1]) tz.pop();\n      while (tz[1] < e[0]) tz.shift();\n    } else {\n      tz = tz.slice().sort(src_ascending);\n    }\n    return tz.map(value => contour(values, value));\n  }\n\n  // Accumulate, smooth contour rings, assign holes to exterior rings.\n  // Based on https://github.com/mbostock/shapefile/blob/v0.6.2/shp/polygon.js\n  function contour(values, value) {\n    const v = value == null ? NaN : +value;\n    if (isNaN(v)) throw new Error(`invalid value: ${value}`);\n    var polygons = [],\n      holes = [];\n    isorings(values, v, function (ring) {\n      smooth(ring, values, v);\n      if (src_area(ring) > 0) polygons.push([ring]);else holes.push(ring);\n    });\n    holes.forEach(function (hole) {\n      for (var i = 0, n = polygons.length, polygon; i < n; ++i) {\n        if (contains((polygon = polygons[i])[0], hole) !== -1) {\n          polygon.push(hole);\n          return;\n        }\n      }\n    });\n    return {\n      type: "MultiPolygon",\n      value: value,\n      coordinates: polygons\n    };\n  }\n\n  // Marching squares with isolines stitched into rings.\n  // Based on https://github.com/topojson/topojson-client/blob/v3.0.0/src/stitch.js\n  function isorings(values, value, callback) {\n    var fragmentByStart = new Array(),\n      fragmentByEnd = new Array(),\n      x,\n      y,\n      t0,\n      t1,\n      t2,\n      t3;\n\n    // Special case for the first row (y = -1, t2 = t3 = 0).\n    x = y = -1;\n    t1 = above(values[0], value);\n    cases[t1 << 1].forEach(stitch);\n    while (++x < dx - 1) {\n      t0 = t1, t1 = above(values[x + 1], value);\n      cases[t0 | t1 << 1].forEach(stitch);\n    }\n    cases[t1 << 0].forEach(stitch);\n\n    // General case for the intermediate rows.\n    while (++y < dy - 1) {\n      x = -1;\n      t1 = above(values[y * dx + dx], value);\n      t2 = above(values[y * dx], value);\n      cases[t1 << 1 | t2 << 2].forEach(stitch);\n      while (++x < dx - 1) {\n        t0 = t1, t1 = above(values[y * dx + dx + x + 1], value);\n        t3 = t2, t2 = above(values[y * dx + x + 1], value);\n        cases[t0 | t1 << 1 | t2 << 2 | t3 << 3].forEach(stitch);\n      }\n      cases[t1 | t2 << 3].forEach(stitch);\n    }\n\n    // Special case for the last row (y = dy - 1, t0 = t1 = 0).\n    x = -1;\n    t2 = values[y * dx] >= value;\n    cases[t2 << 2].forEach(stitch);\n    while (++x < dx - 1) {\n      t3 = t2, t2 = above(values[y * dx + x + 1], value);\n      cases[t2 << 2 | t3 << 3].forEach(stitch);\n    }\n    cases[t2 << 3].forEach(stitch);\n    function stitch(line) {\n      var start = [line[0][0] + x, line[0][1] + y],\n        end = [line[1][0] + x, line[1][1] + y],\n        startIndex = index(start),\n        endIndex = index(end),\n        f,\n        g;\n      if (f = fragmentByEnd[startIndex]) {\n        if (g = fragmentByStart[endIndex]) {\n          delete fragmentByEnd[f.end];\n          delete fragmentByStart[g.start];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[f.start] = fragmentByEnd[g.end] = {\n              start: f.start,\n              end: g.end,\n              ring: f.ring.concat(g.ring)\n            };\n          }\n        } else {\n          delete fragmentByEnd[f.end];\n          f.ring.push(end);\n          fragmentByEnd[f.end = endIndex] = f;\n        }\n      } else if (f = fragmentByStart[endIndex]) {\n        if (g = fragmentByEnd[startIndex]) {\n          delete fragmentByStart[f.start];\n          delete fragmentByEnd[g.end];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[g.start] = fragmentByEnd[f.end] = {\n              start: g.start,\n              end: f.end,\n              ring: g.ring.concat(f.ring)\n            };\n          }\n        } else {\n          delete fragmentByStart[f.start];\n          f.ring.unshift(start);\n          fragmentByStart[f.start = startIndex] = f;\n        }\n      } else {\n        fragmentByStart[startIndex] = fragmentByEnd[endIndex] = {\n          start: startIndex,\n          end: endIndex,\n          ring: [start, end]\n        };\n      }\n    }\n  }\n  function index(point) {\n    return point[0] * 2 + point[1] * (dx + 1) * 4;\n  }\n  function smoothLinear(ring, values, value) {\n    ring.forEach(function (point) {\n      var x = point[0],\n        y = point[1],\n        xt = x | 0,\n        yt = y | 0,\n        v1 = valid(values[yt * dx + xt]);\n      if (x > 0 && x < dx && xt === x) {\n        point[0] = smooth1(x, valid(values[yt * dx + xt - 1]), v1, value);\n      }\n      if (y > 0 && y < dy && yt === y) {\n        point[1] = smooth1(y, valid(values[(yt - 1) * dx + xt]), v1, value);\n      }\n    });\n  }\n  contours.contour = contour;\n  contours.size = function (_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = Math.floor(_[0]),\n      _1 = Math.floor(_[1]);\n    if (!(_0 >= 0 && _1 >= 0)) throw new Error("invalid size");\n    return dx = _0, dy = _1, contours;\n  };\n  contours.thresholds = function (_) {\n    return arguments.length ? (threshold = typeof _ === "function" ? _ : Array.isArray(_) ? d3_contour_src_constant(src_array_slice.call(_)) : d3_contour_src_constant(_), contours) : threshold;\n  };\n  contours.smooth = function (_) {\n    return arguments.length ? (smooth = _ ? smoothLinear : src_noop, contours) : smooth === smoothLinear;\n  };\n  return contours;\n}\n\n// When computing the extent, ignore infinite values (as well as invalid ones).\nfunction finite(x) {\n  return isFinite(x) ? x : NaN;\n}\n\n// Is the (possibly invalid) x greater than or equal to the (known valid) value?\n// Treat any invalid value as below negative infinity.\nfunction above(x, value) {\n  return x == null ? false : +x >= value;\n}\n\n// During smoothing, treat any invalid value as negative infinity.\nfunction valid(v) {\n  return v == null || isNaN(v = +v) ? -Infinity : v;\n}\nfunction smooth1(x, v0, v1, value) {\n  const a = value - v0;\n  const b = v1 - v0;\n  const d = isFinite(a) || isFinite(b) ? a / b : Math.sign(a) / Math.sign(b);\n  return isNaN(d) ? x : x + d - 0.5;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-contour/src/density.js\n\n\n\n\nfunction defaultX(d) {\n  return d[0];\n}\nfunction defaultY(d) {\n  return d[1];\n}\nfunction defaultWeight() {\n  return 1;\n}\n/* harmony default export */ function density() {\n  var x = defaultX,\n    y = defaultY,\n    weight = defaultWeight,\n    dx = 960,\n    dy = 500,\n    r = 20,\n    // blur radius\n    k = 2,\n    // log2(grid cell size)\n    o = r * 3,\n    // grid offset, to pad for blur\n    n = dx + o * 2 >> k,\n    // grid width\n    m = dy + o * 2 >> k,\n    // grid height\n    threshold = d3_contour_src_constant(20);\n  function grid(data) {\n    var values = new Float32Array(n * m),\n      pow2k = Math.pow(2, -k),\n      i = -1;\n    for (const d of data) {\n      var xi = (x(d, ++i, data) + o) * pow2k,\n        yi = (y(d, i, data) + o) * pow2k,\n        wi = +weight(d, i, data);\n      if (wi && xi >= 0 && xi < n && yi >= 0 && yi < m) {\n        var x0 = Math.floor(xi),\n          y0 = Math.floor(yi),\n          xt = xi - x0 - 0.5,\n          yt = yi - y0 - 0.5;\n        values[x0 + y0 * n] += (1 - xt) * (1 - yt) * wi;\n        values[x0 + 1 + y0 * n] += xt * (1 - yt) * wi;\n        values[x0 + 1 + (y0 + 1) * n] += xt * yt * wi;\n        values[x0 + (y0 + 1) * n] += (1 - xt) * yt * wi;\n      }\n    }\n    blur2({\n      data: values,\n      width: n,\n      height: m\n    }, r * pow2k);\n    return values;\n  }\n  function density(data) {\n    var values = grid(data),\n      tz = threshold(values),\n      pow4k = Math.pow(2, 2 * k);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = ticks(Number.MIN_VALUE, max(values) / pow4k, tz);\n    }\n    return src_contours().size([n, m]).thresholds(tz.map(d => d * pow4k))(values).map((c, i) => (c.value = +tz[i], transform(c)));\n  }\n  density.contours = function (data) {\n    var values = grid(data),\n      contours = src_contours().size([n, m]),\n      pow4k = Math.pow(2, 2 * k),\n      contour = value => {\n        value = +value;\n        var c = transform(contours.contour(values, value * pow4k));\n        c.value = value; // preserve exact threshold value\n        return c;\n      };\n    Object.defineProperty(contour, "max", {\n      get: () => max(values) / pow4k\n    });\n    return contour;\n  };\n  function transform(geometry) {\n    geometry.coordinates.forEach(transformPolygon);\n    return geometry;\n  }\n  function transformPolygon(coordinates) {\n    coordinates.forEach(transformRing);\n  }\n  function transformRing(coordinates) {\n    coordinates.forEach(transformPoint);\n  }\n\n  // TODO Optimize.\n  function transformPoint(coordinates) {\n    coordinates[0] = coordinates[0] * Math.pow(2, k) - o;\n    coordinates[1] = coordinates[1] * Math.pow(2, k) - o;\n  }\n  function resize() {\n    o = r * 3;\n    n = dx + o * 2 >> k;\n    m = dy + o * 2 >> k;\n    return density;\n  }\n  density.x = function (_) {\n    return arguments.length ? (x = typeof _ === "function" ? _ : d3_contour_src_constant(+_), density) : x;\n  };\n  density.y = function (_) {\n    return arguments.length ? (y = typeof _ === "function" ? _ : d3_contour_src_constant(+_), density) : y;\n  };\n  density.weight = function (_) {\n    return arguments.length ? (weight = typeof _ === "function" ? _ : d3_contour_src_constant(+_), density) : weight;\n  };\n  density.size = function (_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = +_[0],\n      _1 = +_[1];\n    if (!(_0 >= 0 && _1 >= 0)) throw new Error("invalid size");\n    return dx = _0, dy = _1, resize();\n  };\n  density.cellSize = function (_) {\n    if (!arguments.length) return 1 << k;\n    if (!((_ = +_) >= 1)) throw new Error("invalid cell size");\n    return k = Math.floor(Math.log(_) / Math.LN2), resize();\n  };\n  density.thresholds = function (_) {\n    return arguments.length ? (threshold = typeof _ === "function" ? _ : Array.isArray(_) ? d3_contour_src_constant(src_array_slice.call(_)) : d3_contour_src_constant(_), density) : threshold;\n  };\n  density.bandwidth = function (_) {\n    if (!arguments.length) return Math.sqrt(r * (r + 1));\n    if (!((_ = +_) >= 0)) throw new Error("invalid bandwidth");\n    return r = (Math.sqrt(4 * _ * _ + 1) - 1) / 2, resize();\n  };\n  return density;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-contour/src/index.js\n\n\n;// CONCATENATED MODULE: ./node_modules/robust-predicates/esm/util.js\nconst util_epsilon = 1.1102230246251565e-16;\nconst util_splitter = 134217729;\nconst util_resulterrbound = (3 + 8 * util_epsilon) * util_epsilon;\n\n// fast_expansion_sum_zeroelim routine from oritinal code\nfunction util_sum(elen, e, flen, f, h) {\n  let Q, Qnew, hh, bvirt;\n  let enow = e[0];\n  let fnow = f[0];\n  let eindex = 0;\n  let findex = 0;\n  if (fnow > enow === fnow > -enow) {\n    Q = enow;\n    enow = e[++eindex];\n  } else {\n    Q = fnow;\n    fnow = f[++findex];\n  }\n  let hindex = 0;\n  if (eindex < elen && findex < flen) {\n    if (fnow > enow === fnow > -enow) {\n      Qnew = enow + Q;\n      hh = Q - (Qnew - enow);\n      enow = e[++eindex];\n    } else {\n      Qnew = fnow + Q;\n      hh = Q - (Qnew - fnow);\n      fnow = f[++findex];\n    }\n    Q = Qnew;\n    if (hh !== 0) {\n      h[hindex++] = hh;\n    }\n    while (eindex < elen && findex < flen) {\n      if (fnow > enow === fnow > -enow) {\n        Qnew = Q + enow;\n        bvirt = Qnew - Q;\n        hh = Q - (Qnew - bvirt) + (enow - bvirt);\n        enow = e[++eindex];\n      } else {\n        Qnew = Q + fnow;\n        bvirt = Qnew - Q;\n        hh = Q - (Qnew - bvirt) + (fnow - bvirt);\n        fnow = f[++findex];\n      }\n      Q = Qnew;\n      if (hh !== 0) {\n        h[hindex++] = hh;\n      }\n    }\n  }\n  while (eindex < elen) {\n    Qnew = Q + enow;\n    bvirt = Qnew - Q;\n    hh = Q - (Qnew - bvirt) + (enow - bvirt);\n    enow = e[++eindex];\n    Q = Qnew;\n    if (hh !== 0) {\n      h[hindex++] = hh;\n    }\n  }\n  while (findex < flen) {\n    Qnew = Q + fnow;\n    bvirt = Qnew - Q;\n    hh = Q - (Qnew - bvirt) + (fnow - bvirt);\n    fnow = f[++findex];\n    Q = Qnew;\n    if (hh !== 0) {\n      h[hindex++] = hh;\n    }\n  }\n  if (Q !== 0 || hindex === 0) {\n    h[hindex++] = Q;\n  }\n  return hindex;\n}\nfunction util_sum_three(alen, a, blen, b, clen, c, tmp, out) {\n  return util_sum(util_sum(alen, a, blen, b, tmp), tmp, clen, c, out);\n}\n\n// scale_expansion_zeroelim routine from oritinal code\nfunction util_scale(elen, e, b, h) {\n  let Q, sum, hh, product1, product0;\n  let bvirt, c, ahi, alo, bhi, blo;\n  c = util_splitter * b;\n  bhi = c - (c - b);\n  blo = b - bhi;\n  let enow = e[0];\n  Q = enow * b;\n  c = util_splitter * enow;\n  ahi = c - (c - enow);\n  alo = enow - ahi;\n  hh = alo * blo - (Q - ahi * bhi - alo * bhi - ahi * blo);\n  let hindex = 0;\n  if (hh !== 0) {\n    h[hindex++] = hh;\n  }\n  for (let i = 1; i < elen; i++) {\n    enow = e[i];\n    product1 = enow * b;\n    c = util_splitter * enow;\n    ahi = c - (c - enow);\n    alo = enow - ahi;\n    product0 = alo * blo - (product1 - ahi * bhi - alo * bhi - ahi * blo);\n    sum = Q + product0;\n    bvirt = sum - Q;\n    hh = Q - (sum - bvirt) + (product0 - bvirt);\n    if (hh !== 0) {\n      h[hindex++] = hh;\n    }\n    Q = product1 + sum;\n    hh = sum - (Q - product1);\n    if (hh !== 0) {\n      h[hindex++] = hh;\n    }\n  }\n  if (Q !== 0 || hindex === 0) {\n    h[hindex++] = Q;\n  }\n  return hindex;\n}\nfunction util_negate(elen, e) {\n  for (let i = 0; i < elen; i++) e[i] = -e[i];\n  return elen;\n}\nfunction util_estimate(elen, e) {\n  let Q = e[0];\n  for (let i = 1; i < elen; i++) Q += e[i];\n  return Q;\n}\nfunction vec(n) {\n  return new Float64Array(n);\n}\n;// CONCATENATED MODULE: ./node_modules/robust-predicates/esm/orient2d.js\n\nconst ccwerrboundA = (3 + 16 * util_epsilon) * util_epsilon;\nconst ccwerrboundB = (2 + 12 * util_epsilon) * util_epsilon;\nconst ccwerrboundC = (9 + 64 * util_epsilon) * util_epsilon * util_epsilon;\nconst orient2d_B = vec(4);\nconst C1 = vec(8);\nconst C2 = vec(12);\nconst orient2d_D = vec(16);\nconst u = vec(4);\nfunction orient2dadapt(ax, ay, bx, by, cx, cy, detsum) {\n  let acxtail, acytail, bcxtail, bcytail;\n  let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n  const acx = ax - cx;\n  const bcx = bx - cx;\n  const acy = ay - cy;\n  const bcy = by - cy;\n  s1 = acx * bcy;\n  c = util_splitter * acx;\n  ahi = c - (c - acx);\n  alo = acx - ahi;\n  c = util_splitter * bcy;\n  bhi = c - (c - bcy);\n  blo = bcy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = acy * bcx;\n  c = util_splitter * acy;\n  ahi = c - (c - acy);\n  alo = acy - ahi;\n  c = util_splitter * bcx;\n  bhi = c - (c - bcx);\n  blo = bcx - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  orient2d_B[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  orient2d_B[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  orient2d_B[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  orient2d_B[3] = u3;\n  let det = util_estimate(4, orient2d_B);\n  let errbound = ccwerrboundB * detsum;\n  if (det >= errbound || -det >= errbound) {\n    return det;\n  }\n  bvirt = ax - acx;\n  acxtail = ax - (acx + bvirt) + (bvirt - cx);\n  bvirt = bx - bcx;\n  bcxtail = bx - (bcx + bvirt) + (bvirt - cx);\n  bvirt = ay - acy;\n  acytail = ay - (acy + bvirt) + (bvirt - cy);\n  bvirt = by - bcy;\n  bcytail = by - (bcy + bvirt) + (bvirt - cy);\n  if (acxtail === 0 && acytail === 0 && bcxtail === 0 && bcytail === 0) {\n    return det;\n  }\n  errbound = ccwerrboundC * detsum + util_resulterrbound * Math.abs(det);\n  det += acx * bcytail + bcy * acxtail - (acy * bcxtail + bcx * acytail);\n  if (det >= errbound || -det >= errbound) return det;\n  s1 = acxtail * bcy;\n  c = util_splitter * acxtail;\n  ahi = c - (c - acxtail);\n  alo = acxtail - ahi;\n  c = util_splitter * bcy;\n  bhi = c - (c - bcy);\n  blo = bcy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = acytail * bcx;\n  c = util_splitter * acytail;\n  ahi = c - (c - acytail);\n  alo = acytail - ahi;\n  c = util_splitter * bcx;\n  bhi = c - (c - bcx);\n  blo = bcx - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  u[3] = u3;\n  const C1len = util_sum(4, orient2d_B, 4, u, C1);\n  s1 = acx * bcytail;\n  c = util_splitter * acx;\n  ahi = c - (c - acx);\n  alo = acx - ahi;\n  c = util_splitter * bcytail;\n  bhi = c - (c - bcytail);\n  blo = bcytail - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = acy * bcxtail;\n  c = util_splitter * acy;\n  ahi = c - (c - acy);\n  alo = acy - ahi;\n  c = util_splitter * bcxtail;\n  bhi = c - (c - bcxtail);\n  blo = bcxtail - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  u[3] = u3;\n  const C2len = util_sum(C1len, C1, 4, u, C2);\n  s1 = acxtail * bcytail;\n  c = util_splitter * acxtail;\n  ahi = c - (c - acxtail);\n  alo = acxtail - ahi;\n  c = util_splitter * bcytail;\n  bhi = c - (c - bcytail);\n  blo = bcytail - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = acytail * bcxtail;\n  c = util_splitter * acytail;\n  ahi = c - (c - acytail);\n  alo = acytail - ahi;\n  c = util_splitter * bcxtail;\n  bhi = c - (c - bcxtail);\n  blo = bcxtail - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  u[3] = u3;\n  const Dlen = util_sum(C2len, C2, 4, u, orient2d_D);\n  return orient2d_D[Dlen - 1];\n}\nfunction orient2d(ax, ay, bx, by, cx, cy) {\n  const detleft = (ay - cy) * (bx - cx);\n  const detright = (ax - cx) * (by - cy);\n  const det = detleft - detright;\n  if (detleft === 0 || detright === 0 || detleft > 0 !== detright > 0) return det;\n  const detsum = Math.abs(detleft + detright);\n  if (Math.abs(det) >= ccwerrboundA * detsum) return det;\n  return -orient2dadapt(ax, ay, bx, by, cx, cy, detsum);\n}\nfunction orient2dfast(ax, ay, bx, by, cx, cy) {\n  return (ay - cy) * (bx - cx) - (ax - cx) * (by - cy);\n}\n;// CONCATENATED MODULE: ./node_modules/robust-predicates/esm/orient3d.js\n\nconst o3derrboundA = (7 + 56 * util_epsilon) * util_epsilon;\nconst o3derrboundB = (3 + 28 * util_epsilon) * util_epsilon;\nconst o3derrboundC = (26 + 288 * util_epsilon) * util_epsilon * util_epsilon;\nconst bc = vec(4);\nconst ca = vec(4);\nconst ab = vec(4);\nconst at_b = vec(4);\nconst at_c = vec(4);\nconst bt_c = vec(4);\nconst bt_a = vec(4);\nconst ct_a = vec(4);\nconst ct_b = vec(4);\nconst bct = vec(8);\nconst cat = vec(8);\nconst abt = vec(8);\nconst orient3d_u = vec(4);\nconst _8 = vec(8);\nconst _8b = vec(8);\nconst _16 = vec(8);\nconst _12 = vec(12);\nlet fin = vec(192);\nlet fin2 = vec(192);\nfunction finadd(finlen, alen, a) {\n  finlen = sum(finlen, fin, alen, a, fin2);\n  const tmp = fin;\n  fin = fin2;\n  fin2 = tmp;\n  return finlen;\n}\nfunction tailinit(xtail, ytail, ax, ay, bx, by, a, b) {\n  let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, t1, t0, u3, negate;\n  if (xtail === 0) {\n    if (ytail === 0) {\n      a[0] = 0;\n      b[0] = 0;\n      return 1;\n    } else {\n      negate = -ytail;\n      s1 = negate * ax;\n      c = splitter * negate;\n      ahi = c - (c - negate);\n      alo = negate - ahi;\n      c = splitter * ax;\n      bhi = c - (c - ax);\n      blo = ax - bhi;\n      a[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      a[1] = s1;\n      s1 = ytail * bx;\n      c = splitter * ytail;\n      ahi = c - (c - ytail);\n      alo = ytail - ahi;\n      c = splitter * bx;\n      bhi = c - (c - bx);\n      blo = bx - bhi;\n      b[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      b[1] = s1;\n      return 2;\n    }\n  } else {\n    if (ytail === 0) {\n      s1 = xtail * ay;\n      c = splitter * xtail;\n      ahi = c - (c - xtail);\n      alo = xtail - ahi;\n      c = splitter * ay;\n      bhi = c - (c - ay);\n      blo = ay - bhi;\n      a[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      a[1] = s1;\n      negate = -xtail;\n      s1 = negate * by;\n      c = splitter * negate;\n      ahi = c - (c - negate);\n      alo = negate - ahi;\n      c = splitter * by;\n      bhi = c - (c - by);\n      blo = by - bhi;\n      b[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      b[1] = s1;\n      return 2;\n    } else {\n      s1 = xtail * ay;\n      c = splitter * xtail;\n      ahi = c - (c - xtail);\n      alo = xtail - ahi;\n      c = splitter * ay;\n      bhi = c - (c - ay);\n      blo = ay - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = ytail * ax;\n      c = splitter * ytail;\n      ahi = c - (c - ytail);\n      alo = ytail - ahi;\n      c = splitter * ax;\n      bhi = c - (c - ax);\n      blo = ax - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 - t0;\n      bvirt = s0 - _i;\n      a[0] = s0 - (_i + bvirt) + (bvirt - t0);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 - t1;\n      bvirt = _0 - _i;\n      a[1] = _0 - (_i + bvirt) + (bvirt - t1);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      a[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      a[3] = u3;\n      s1 = ytail * bx;\n      c = splitter * ytail;\n      ahi = c - (c - ytail);\n      alo = ytail - ahi;\n      c = splitter * bx;\n      bhi = c - (c - bx);\n      blo = bx - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = xtail * by;\n      c = splitter * xtail;\n      ahi = c - (c - xtail);\n      alo = xtail - ahi;\n      c = splitter * by;\n      bhi = c - (c - by);\n      blo = by - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 - t0;\n      bvirt = s0 - _i;\n      b[0] = s0 - (_i + bvirt) + (bvirt - t0);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 - t1;\n      bvirt = _0 - _i;\n      b[1] = _0 - (_i + bvirt) + (bvirt - t1);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      b[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      b[3] = u3;\n      return 4;\n    }\n  }\n}\nfunction tailadd(finlen, a, b, k, z) {\n  let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, u3;\n  s1 = a * b;\n  c = splitter * a;\n  ahi = c - (c - a);\n  alo = a - ahi;\n  c = splitter * b;\n  bhi = c - (c - b);\n  blo = b - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  c = splitter * k;\n  bhi = c - (c - k);\n  blo = k - bhi;\n  _i = s0 * k;\n  c = splitter * s0;\n  ahi = c - (c - s0);\n  alo = s0 - ahi;\n  orient3d_u[0] = alo * blo - (_i - ahi * bhi - alo * bhi - ahi * blo);\n  _j = s1 * k;\n  c = splitter * s1;\n  ahi = c - (c - s1);\n  alo = s1 - ahi;\n  _0 = alo * blo - (_j - ahi * bhi - alo * bhi - ahi * blo);\n  _k = _i + _0;\n  bvirt = _k - _i;\n  orient3d_u[1] = _i - (_k - bvirt) + (_0 - bvirt);\n  u3 = _j + _k;\n  orient3d_u[2] = _k - (u3 - _j);\n  orient3d_u[3] = u3;\n  finlen = finadd(finlen, 4, orient3d_u);\n  if (z !== 0) {\n    c = splitter * z;\n    bhi = c - (c - z);\n    blo = z - bhi;\n    _i = s0 * z;\n    c = splitter * s0;\n    ahi = c - (c - s0);\n    alo = s0 - ahi;\n    orient3d_u[0] = alo * blo - (_i - ahi * bhi - alo * bhi - ahi * blo);\n    _j = s1 * z;\n    c = splitter * s1;\n    ahi = c - (c - s1);\n    alo = s1 - ahi;\n    _0 = alo * blo - (_j - ahi * bhi - alo * bhi - ahi * blo);\n    _k = _i + _0;\n    bvirt = _k - _i;\n    orient3d_u[1] = _i - (_k - bvirt) + (_0 - bvirt);\n    u3 = _j + _k;\n    orient3d_u[2] = _k - (u3 - _j);\n    orient3d_u[3] = u3;\n    finlen = finadd(finlen, 4, orient3d_u);\n  }\n  return finlen;\n}\nfunction orient3dadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, permanent) {\n  let finlen;\n  let adxtail, bdxtail, cdxtail;\n  let adytail, bdytail, cdytail;\n  let adztail, bdztail, cdztail;\n  let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, t1, t0, u3;\n  const adx = ax - dx;\n  const bdx = bx - dx;\n  const cdx = cx - dx;\n  const ady = ay - dy;\n  const bdy = by - dy;\n  const cdy = cy - dy;\n  const adz = az - dz;\n  const bdz = bz - dz;\n  const cdz = cz - dz;\n  s1 = bdx * cdy;\n  c = splitter * bdx;\n  ahi = c - (c - bdx);\n  alo = bdx - ahi;\n  c = splitter * cdy;\n  bhi = c - (c - cdy);\n  blo = cdy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = cdx * bdy;\n  c = splitter * cdx;\n  ahi = c - (c - cdx);\n  alo = cdx - ahi;\n  c = splitter * bdy;\n  bhi = c - (c - bdy);\n  blo = bdy - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  bc[3] = u3;\n  s1 = cdx * ady;\n  c = splitter * cdx;\n  ahi = c - (c - cdx);\n  alo = cdx - ahi;\n  c = splitter * ady;\n  bhi = c - (c - ady);\n  blo = ady - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = adx * cdy;\n  c = splitter * adx;\n  ahi = c - (c - adx);\n  alo = adx - ahi;\n  c = splitter * cdy;\n  bhi = c - (c - cdy);\n  blo = cdy - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ca[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ca[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  ca[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  ca[3] = u3;\n  s1 = adx * bdy;\n  c = splitter * adx;\n  ahi = c - (c - adx);\n  alo = adx - ahi;\n  c = splitter * bdy;\n  bhi = c - (c - bdy);\n  blo = bdy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = bdx * ady;\n  c = splitter * bdx;\n  ahi = c - (c - bdx);\n  alo = bdx - ahi;\n  c = splitter * ady;\n  bhi = c - (c - ady);\n  blo = ady - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  ab[3] = u3;\n  finlen = sum(sum(scale(4, bc, adz, _8), _8, scale(4, ca, bdz, _8b), _8b, _16), _16, scale(4, ab, cdz, _8), _8, fin);\n  let det = estimate(finlen, fin);\n  let errbound = o3derrboundB * permanent;\n  if (det >= errbound || -det >= errbound) {\n    return det;\n  }\n  bvirt = ax - adx;\n  adxtail = ax - (adx + bvirt) + (bvirt - dx);\n  bvirt = bx - bdx;\n  bdxtail = bx - (bdx + bvirt) + (bvirt - dx);\n  bvirt = cx - cdx;\n  cdxtail = cx - (cdx + bvirt) + (bvirt - dx);\n  bvirt = ay - ady;\n  adytail = ay - (ady + bvirt) + (bvirt - dy);\n  bvirt = by - bdy;\n  bdytail = by - (bdy + bvirt) + (bvirt - dy);\n  bvirt = cy - cdy;\n  cdytail = cy - (cdy + bvirt) + (bvirt - dy);\n  bvirt = az - adz;\n  adztail = az - (adz + bvirt) + (bvirt - dz);\n  bvirt = bz - bdz;\n  bdztail = bz - (bdz + bvirt) + (bvirt - dz);\n  bvirt = cz - cdz;\n  cdztail = cz - (cdz + bvirt) + (bvirt - dz);\n  if (adxtail === 0 && bdxtail === 0 && cdxtail === 0 && adytail === 0 && bdytail === 0 && cdytail === 0 && adztail === 0 && bdztail === 0 && cdztail === 0) {\n    return det;\n  }\n  errbound = o3derrboundC * permanent + resulterrbound * Math.abs(det);\n  det += adz * (bdx * cdytail + cdy * bdxtail - (bdy * cdxtail + cdx * bdytail)) + adztail * (bdx * cdy - bdy * cdx) + bdz * (cdx * adytail + ady * cdxtail - (cdy * adxtail + adx * cdytail)) + bdztail * (cdx * ady - cdy * adx) + cdz * (adx * bdytail + bdy * adxtail - (ady * bdxtail + bdx * adytail)) + cdztail * (adx * bdy - ady * bdx);\n  if (det >= errbound || -det >= errbound) {\n    return det;\n  }\n  const at_len = tailinit(adxtail, adytail, bdx, bdy, cdx, cdy, at_b, at_c);\n  const bt_len = tailinit(bdxtail, bdytail, cdx, cdy, adx, ady, bt_c, bt_a);\n  const ct_len = tailinit(cdxtail, cdytail, adx, ady, bdx, bdy, ct_a, ct_b);\n  const bctlen = sum(bt_len, bt_c, ct_len, ct_b, bct);\n  finlen = finadd(finlen, scale(bctlen, bct, adz, _16), _16);\n  const catlen = sum(ct_len, ct_a, at_len, at_c, cat);\n  finlen = finadd(finlen, scale(catlen, cat, bdz, _16), _16);\n  const abtlen = sum(at_len, at_b, bt_len, bt_a, abt);\n  finlen = finadd(finlen, scale(abtlen, abt, cdz, _16), _16);\n  if (adztail !== 0) {\n    finlen = finadd(finlen, scale(4, bc, adztail, _12), _12);\n    finlen = finadd(finlen, scale(bctlen, bct, adztail, _16), _16);\n  }\n  if (bdztail !== 0) {\n    finlen = finadd(finlen, scale(4, ca, bdztail, _12), _12);\n    finlen = finadd(finlen, scale(catlen, cat, bdztail, _16), _16);\n  }\n  if (cdztail !== 0) {\n    finlen = finadd(finlen, scale(4, ab, cdztail, _12), _12);\n    finlen = finadd(finlen, scale(abtlen, abt, cdztail, _16), _16);\n  }\n  if (adxtail !== 0) {\n    if (bdytail !== 0) {\n      finlen = tailadd(finlen, adxtail, bdytail, cdz, cdztail);\n    }\n    if (cdytail !== 0) {\n      finlen = tailadd(finlen, -adxtail, cdytail, bdz, bdztail);\n    }\n  }\n  if (bdxtail !== 0) {\n    if (cdytail !== 0) {\n      finlen = tailadd(finlen, bdxtail, cdytail, adz, adztail);\n    }\n    if (adytail !== 0) {\n      finlen = tailadd(finlen, -bdxtail, adytail, cdz, cdztail);\n    }\n  }\n  if (cdxtail !== 0) {\n    if (adytail !== 0) {\n      finlen = tailadd(finlen, cdxtail, adytail, bdz, bdztail);\n    }\n    if (bdytail !== 0) {\n      finlen = tailadd(finlen, -cdxtail, bdytail, adz, adztail);\n    }\n  }\n  return fin[finlen - 1];\n}\nfunction orient3d(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz) {\n  const adx = ax - dx;\n  const bdx = bx - dx;\n  const cdx = cx - dx;\n  const ady = ay - dy;\n  const bdy = by - dy;\n  const cdy = cy - dy;\n  const adz = az - dz;\n  const bdz = bz - dz;\n  const cdz = cz - dz;\n  const bdxcdy = bdx * cdy;\n  const cdxbdy = cdx * bdy;\n  const cdxady = cdx * ady;\n  const adxcdy = adx * cdy;\n  const adxbdy = adx * bdy;\n  const bdxady = bdx * ady;\n  const det = adz * (bdxcdy - cdxbdy) + bdz * (cdxady - adxcdy) + cdz * (adxbdy - bdxady);\n  const permanent = (Math.abs(bdxcdy) + Math.abs(cdxbdy)) * Math.abs(adz) + (Math.abs(cdxady) + Math.abs(adxcdy)) * Math.abs(bdz) + (Math.abs(adxbdy) + Math.abs(bdxady)) * Math.abs(cdz);\n  const errbound = o3derrboundA * permanent;\n  if (det > errbound || -det > errbound) {\n    return det;\n  }\n  return orient3dadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, permanent);\n}\nfunction orient3dfast(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz) {\n  const adx = ax - dx;\n  const bdx = bx - dx;\n  const cdx = cx - dx;\n  const ady = ay - dy;\n  const bdy = by - dy;\n  const cdy = cy - dy;\n  const adz = az - dz;\n  const bdz = bz - dz;\n  const cdz = cz - dz;\n  return adx * (bdy * cdz - bdz * cdy) + bdx * (cdy * adz - cdz * ady) + cdx * (ady * bdz - adz * bdy);\n}\n;// CONCATENATED MODULE: ./node_modules/robust-predicates/esm/incircle.js\n\nconst iccerrboundA = (10 + 96 * util_epsilon) * util_epsilon;\nconst iccerrboundB = (4 + 48 * util_epsilon) * util_epsilon;\nconst iccerrboundC = (44 + 576 * util_epsilon) * util_epsilon * util_epsilon;\nconst incircle_bc = vec(4);\nconst incircle_ca = vec(4);\nconst incircle_ab = vec(4);\nconst aa = vec(4);\nconst bb = vec(4);\nconst cc = vec(4);\nconst incircle_u = vec(4);\nconst v = vec(4);\nconst axtbc = vec(8);\nconst aytbc = vec(8);\nconst bxtca = vec(8);\nconst bytca = vec(8);\nconst cxtab = vec(8);\nconst cytab = vec(8);\nconst incircle_abt = vec(8);\nconst incircle_bct = vec(8);\nconst incircle_cat = vec(8);\nconst abtt = vec(4);\nconst bctt = vec(4);\nconst catt = vec(4);\nconst incircle_8 = vec(8);\nconst incircle_16 = vec(16);\nconst _16b = vec(16);\nconst _16c = vec(16);\nconst _32 = vec(32);\nconst _32b = vec(32);\nconst _48 = vec(48);\nconst _64 = vec(64);\nlet incircle_fin = vec(1152);\nlet incircle_fin2 = vec(1152);\nfunction incircle_finadd(finlen, a, alen) {\n  finlen = sum(finlen, incircle_fin, a, alen, incircle_fin2);\n  const tmp = incircle_fin;\n  incircle_fin = incircle_fin2;\n  incircle_fin2 = tmp;\n  return finlen;\n}\nfunction incircleadapt(ax, ay, bx, by, cx, cy, dx, dy, permanent) {\n  let finlen;\n  let adxtail, bdxtail, cdxtail, adytail, bdytail, cdytail;\n  let axtbclen, aytbclen, bxtcalen, bytcalen, cxtablen, cytablen;\n  let abtlen, bctlen, catlen;\n  let abttlen, bcttlen, cattlen;\n  let n1, n0;\n  let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n  const adx = ax - dx;\n  const bdx = bx - dx;\n  const cdx = cx - dx;\n  const ady = ay - dy;\n  const bdy = by - dy;\n  const cdy = cy - dy;\n  s1 = bdx * cdy;\n  c = splitter * bdx;\n  ahi = c - (c - bdx);\n  alo = bdx - ahi;\n  c = splitter * cdy;\n  bhi = c - (c - cdy);\n  blo = cdy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = cdx * bdy;\n  c = splitter * cdx;\n  ahi = c - (c - cdx);\n  alo = cdx - ahi;\n  c = splitter * bdy;\n  bhi = c - (c - bdy);\n  blo = bdy - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  incircle_bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  incircle_bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  incircle_bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  incircle_bc[3] = u3;\n  s1 = cdx * ady;\n  c = splitter * cdx;\n  ahi = c - (c - cdx);\n  alo = cdx - ahi;\n  c = splitter * ady;\n  bhi = c - (c - ady);\n  blo = ady - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = adx * cdy;\n  c = splitter * adx;\n  ahi = c - (c - adx);\n  alo = adx - ahi;\n  c = splitter * cdy;\n  bhi = c - (c - cdy);\n  blo = cdy - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  incircle_ca[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  incircle_ca[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  incircle_ca[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  incircle_ca[3] = u3;\n  s1 = adx * bdy;\n  c = splitter * adx;\n  ahi = c - (c - adx);\n  alo = adx - ahi;\n  c = splitter * bdy;\n  bhi = c - (c - bdy);\n  blo = bdy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = bdx * ady;\n  c = splitter * bdx;\n  ahi = c - (c - bdx);\n  alo = bdx - ahi;\n  c = splitter * ady;\n  bhi = c - (c - ady);\n  blo = ady - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  incircle_ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  incircle_ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  incircle_ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  incircle_ab[3] = u3;\n  finlen = sum(sum(sum(scale(scale(4, incircle_bc, adx, incircle_8), incircle_8, adx, incircle_16), incircle_16, scale(scale(4, incircle_bc, ady, incircle_8), incircle_8, ady, _16b), _16b, _32), _32, sum(scale(scale(4, incircle_ca, bdx, incircle_8), incircle_8, bdx, incircle_16), incircle_16, scale(scale(4, incircle_ca, bdy, incircle_8), incircle_8, bdy, _16b), _16b, _32b), _32b, _64), _64, sum(scale(scale(4, incircle_ab, cdx, incircle_8), incircle_8, cdx, incircle_16), incircle_16, scale(scale(4, incircle_ab, cdy, incircle_8), incircle_8, cdy, _16b), _16b, _32), _32, incircle_fin);\n  let det = estimate(finlen, incircle_fin);\n  let errbound = iccerrboundB * permanent;\n  if (det >= errbound || -det >= errbound) {\n    return det;\n  }\n  bvirt = ax - adx;\n  adxtail = ax - (adx + bvirt) + (bvirt - dx);\n  bvirt = ay - ady;\n  adytail = ay - (ady + bvirt) + (bvirt - dy);\n  bvirt = bx - bdx;\n  bdxtail = bx - (bdx + bvirt) + (bvirt - dx);\n  bvirt = by - bdy;\n  bdytail = by - (bdy + bvirt) + (bvirt - dy);\n  bvirt = cx - cdx;\n  cdxtail = cx - (cdx + bvirt) + (bvirt - dx);\n  bvirt = cy - cdy;\n  cdytail = cy - (cdy + bvirt) + (bvirt - dy);\n  if (adxtail === 0 && bdxtail === 0 && cdxtail === 0 && adytail === 0 && bdytail === 0 && cdytail === 0) {\n    return det;\n  }\n  errbound = iccerrboundC * permanent + resulterrbound * Math.abs(det);\n  det += (adx * adx + ady * ady) * (bdx * cdytail + cdy * bdxtail - (bdy * cdxtail + cdx * bdytail)) + 2 * (adx * adxtail + ady * adytail) * (bdx * cdy - bdy * cdx) + ((bdx * bdx + bdy * bdy) * (cdx * adytail + ady * cdxtail - (cdy * adxtail + adx * cdytail)) + 2 * (bdx * bdxtail + bdy * bdytail) * (cdx * ady - cdy * adx)) + ((cdx * cdx + cdy * cdy) * (adx * bdytail + bdy * adxtail - (ady * bdxtail + bdx * adytail)) + 2 * (cdx * cdxtail + cdy * cdytail) * (adx * bdy - ady * bdx));\n  if (det >= errbound || -det >= errbound) {\n    return det;\n  }\n  if (bdxtail !== 0 || bdytail !== 0 || cdxtail !== 0 || cdytail !== 0) {\n    s1 = adx * adx;\n    c = splitter * adx;\n    ahi = c - (c - adx);\n    alo = adx - ahi;\n    s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\n    t1 = ady * ady;\n    c = splitter * ady;\n    ahi = c - (c - ady);\n    alo = ady - ahi;\n    t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\n    _i = s0 + t0;\n    bvirt = _i - s0;\n    aa[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 + t1;\n    bvirt = _i - _0;\n    aa[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    aa[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    aa[3] = u3;\n  }\n  if (cdxtail !== 0 || cdytail !== 0 || adxtail !== 0 || adytail !== 0) {\n    s1 = bdx * bdx;\n    c = splitter * bdx;\n    ahi = c - (c - bdx);\n    alo = bdx - ahi;\n    s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\n    t1 = bdy * bdy;\n    c = splitter * bdy;\n    ahi = c - (c - bdy);\n    alo = bdy - ahi;\n    t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\n    _i = s0 + t0;\n    bvirt = _i - s0;\n    bb[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 + t1;\n    bvirt = _i - _0;\n    bb[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    bb[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    bb[3] = u3;\n  }\n  if (adxtail !== 0 || adytail !== 0 || bdxtail !== 0 || bdytail !== 0) {\n    s1 = cdx * cdx;\n    c = splitter * cdx;\n    ahi = c - (c - cdx);\n    alo = cdx - ahi;\n    s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\n    t1 = cdy * cdy;\n    c = splitter * cdy;\n    ahi = c - (c - cdy);\n    alo = cdy - ahi;\n    t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\n    _i = s0 + t0;\n    bvirt = _i - s0;\n    cc[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 + t1;\n    bvirt = _i - _0;\n    cc[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    cc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    cc[3] = u3;\n  }\n  if (adxtail !== 0) {\n    axtbclen = scale(4, incircle_bc, adxtail, axtbc);\n    finlen = incircle_finadd(finlen, sum_three(scale(axtbclen, axtbc, 2 * adx, incircle_16), incircle_16, scale(scale(4, cc, adxtail, incircle_8), incircle_8, bdy, _16b), _16b, scale(scale(4, bb, adxtail, incircle_8), incircle_8, -cdy, _16c), _16c, _32, _48), _48);\n  }\n  if (adytail !== 0) {\n    aytbclen = scale(4, incircle_bc, adytail, aytbc);\n    finlen = incircle_finadd(finlen, sum_three(scale(aytbclen, aytbc, 2 * ady, incircle_16), incircle_16, scale(scale(4, bb, adytail, incircle_8), incircle_8, cdx, _16b), _16b, scale(scale(4, cc, adytail, incircle_8), incircle_8, -bdx, _16c), _16c, _32, _48), _48);\n  }\n  if (bdxtail !== 0) {\n    bxtcalen = scale(4, incircle_ca, bdxtail, bxtca);\n    finlen = incircle_finadd(finlen, sum_three(scale(bxtcalen, bxtca, 2 * bdx, incircle_16), incircle_16, scale(scale(4, aa, bdxtail, incircle_8), incircle_8, cdy, _16b), _16b, scale(scale(4, cc, bdxtail, incircle_8), incircle_8, -ady, _16c), _16c, _32, _48), _48);\n  }\n  if (bdytail !== 0) {\n    bytcalen = scale(4, incircle_ca, bdytail, bytca);\n    finlen = incircle_finadd(finlen, sum_three(scale(bytcalen, bytca, 2 * bdy, incircle_16), incircle_16, scale(scale(4, cc, bdytail, incircle_8), incircle_8, adx, _16b), _16b, scale(scale(4, aa, bdytail, incircle_8), incircle_8, -cdx, _16c), _16c, _32, _48), _48);\n  }\n  if (cdxtail !== 0) {\n    cxtablen = scale(4, incircle_ab, cdxtail, cxtab);\n    finlen = incircle_finadd(finlen, sum_three(scale(cxtablen, cxtab, 2 * cdx, incircle_16), incircle_16, scale(scale(4, bb, cdxtail, incircle_8), incircle_8, ady, _16b), _16b, scale(scale(4, aa, cdxtail, incircle_8), incircle_8, -bdy, _16c), _16c, _32, _48), _48);\n  }\n  if (cdytail !== 0) {\n    cytablen = scale(4, incircle_ab, cdytail, cytab);\n    finlen = incircle_finadd(finlen, sum_three(scale(cytablen, cytab, 2 * cdy, incircle_16), incircle_16, scale(scale(4, aa, cdytail, incircle_8), incircle_8, bdx, _16b), _16b, scale(scale(4, bb, cdytail, incircle_8), incircle_8, -adx, _16c), _16c, _32, _48), _48);\n  }\n  if (adxtail !== 0 || adytail !== 0) {\n    if (bdxtail !== 0 || bdytail !== 0 || cdxtail !== 0 || cdytail !== 0) {\n      s1 = bdxtail * cdy;\n      c = splitter * bdxtail;\n      ahi = c - (c - bdxtail);\n      alo = bdxtail - ahi;\n      c = splitter * cdy;\n      bhi = c - (c - cdy);\n      blo = cdy - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = bdx * cdytail;\n      c = splitter * bdx;\n      ahi = c - (c - bdx);\n      alo = bdx - ahi;\n      c = splitter * cdytail;\n      bhi = c - (c - cdytail);\n      blo = cdytail - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 + t0;\n      bvirt = _i - s0;\n      incircle_u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 + t1;\n      bvirt = _i - _0;\n      incircle_u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      incircle_u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      incircle_u[3] = u3;\n      s1 = cdxtail * -bdy;\n      c = splitter * cdxtail;\n      ahi = c - (c - cdxtail);\n      alo = cdxtail - ahi;\n      c = splitter * -bdy;\n      bhi = c - (c - -bdy);\n      blo = -bdy - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = cdx * -bdytail;\n      c = splitter * cdx;\n      ahi = c - (c - cdx);\n      alo = cdx - ahi;\n      c = splitter * -bdytail;\n      bhi = c - (c - -bdytail);\n      blo = -bdytail - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 + t0;\n      bvirt = _i - s0;\n      v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 + t1;\n      bvirt = _i - _0;\n      v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      v[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      v[3] = u3;\n      bctlen = sum(4, incircle_u, 4, v, incircle_bct);\n      s1 = bdxtail * cdytail;\n      c = splitter * bdxtail;\n      ahi = c - (c - bdxtail);\n      alo = bdxtail - ahi;\n      c = splitter * cdytail;\n      bhi = c - (c - cdytail);\n      blo = cdytail - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = cdxtail * bdytail;\n      c = splitter * cdxtail;\n      ahi = c - (c - cdxtail);\n      alo = cdxtail - ahi;\n      c = splitter * bdytail;\n      bhi = c - (c - bdytail);\n      blo = bdytail - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 - t0;\n      bvirt = s0 - _i;\n      bctt[0] = s0 - (_i + bvirt) + (bvirt - t0);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 - t1;\n      bvirt = _0 - _i;\n      bctt[1] = _0 - (_i + bvirt) + (bvirt - t1);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      bctt[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      bctt[3] = u3;\n      bcttlen = 4;\n    } else {\n      incircle_bct[0] = 0;\n      bctlen = 1;\n      bctt[0] = 0;\n      bcttlen = 1;\n    }\n    if (adxtail !== 0) {\n      const len = scale(bctlen, incircle_bct, adxtail, _16c);\n      finlen = incircle_finadd(finlen, sum(scale(axtbclen, axtbc, adxtail, incircle_16), incircle_16, scale(len, _16c, 2 * adx, _32), _32, _48), _48);\n      const len2 = scale(bcttlen, bctt, adxtail, incircle_8);\n      finlen = incircle_finadd(finlen, sum_three(scale(len2, incircle_8, 2 * adx, incircle_16), incircle_16, scale(len2, incircle_8, adxtail, _16b), _16b, scale(len, _16c, adxtail, _32), _32, _32b, _64), _64);\n      if (bdytail !== 0) {\n        finlen = incircle_finadd(finlen, scale(scale(4, cc, adxtail, incircle_8), incircle_8, bdytail, incircle_16), incircle_16);\n      }\n      if (cdytail !== 0) {\n        finlen = incircle_finadd(finlen, scale(scale(4, bb, -adxtail, incircle_8), incircle_8, cdytail, incircle_16), incircle_16);\n      }\n    }\n    if (adytail !== 0) {\n      const len = scale(bctlen, incircle_bct, adytail, _16c);\n      finlen = incircle_finadd(finlen, sum(scale(aytbclen, aytbc, adytail, incircle_16), incircle_16, scale(len, _16c, 2 * ady, _32), _32, _48), _48);\n      const len2 = scale(bcttlen, bctt, adytail, incircle_8);\n      finlen = incircle_finadd(finlen, sum_three(scale(len2, incircle_8, 2 * ady, incircle_16), incircle_16, scale(len2, incircle_8, adytail, _16b), _16b, scale(len, _16c, adytail, _32), _32, _32b, _64), _64);\n    }\n  }\n  if (bdxtail !== 0 || bdytail !== 0) {\n    if (cdxtail !== 0 || cdytail !== 0 || adxtail !== 0 || adytail !== 0) {\n      s1 = cdxtail * ady;\n      c = splitter * cdxtail;\n      ahi = c - (c - cdxtail);\n      alo = cdxtail - ahi;\n      c = splitter * ady;\n      bhi = c - (c - ady);\n      blo = ady - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = cdx * adytail;\n      c = splitter * cdx;\n      ahi = c - (c - cdx);\n      alo = cdx - ahi;\n      c = splitter * adytail;\n      bhi = c - (c - adytail);\n      blo = adytail - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 + t0;\n      bvirt = _i - s0;\n      incircle_u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 + t1;\n      bvirt = _i - _0;\n      incircle_u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      incircle_u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      incircle_u[3] = u3;\n      n1 = -cdy;\n      n0 = -cdytail;\n      s1 = adxtail * n1;\n      c = splitter * adxtail;\n      ahi = c - (c - adxtail);\n      alo = adxtail - ahi;\n      c = splitter * n1;\n      bhi = c - (c - n1);\n      blo = n1 - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = adx * n0;\n      c = splitter * adx;\n      ahi = c - (c - adx);\n      alo = adx - ahi;\n      c = splitter * n0;\n      bhi = c - (c - n0);\n      blo = n0 - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 + t0;\n      bvirt = _i - s0;\n      v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 + t1;\n      bvirt = _i - _0;\n      v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      v[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      v[3] = u3;\n      catlen = sum(4, incircle_u, 4, v, incircle_cat);\n      s1 = cdxtail * adytail;\n      c = splitter * cdxtail;\n      ahi = c - (c - cdxtail);\n      alo = cdxtail - ahi;\n      c = splitter * adytail;\n      bhi = c - (c - adytail);\n      blo = adytail - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = adxtail * cdytail;\n      c = splitter * adxtail;\n      ahi = c - (c - adxtail);\n      alo = adxtail - ahi;\n      c = splitter * cdytail;\n      bhi = c - (c - cdytail);\n      blo = cdytail - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 - t0;\n      bvirt = s0 - _i;\n      catt[0] = s0 - (_i + bvirt) + (bvirt - t0);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 - t1;\n      bvirt = _0 - _i;\n      catt[1] = _0 - (_i + bvirt) + (bvirt - t1);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      catt[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      catt[3] = u3;\n      cattlen = 4;\n    } else {\n      incircle_cat[0] = 0;\n      catlen = 1;\n      catt[0] = 0;\n      cattlen = 1;\n    }\n    if (bdxtail !== 0) {\n      const len = scale(catlen, incircle_cat, bdxtail, _16c);\n      finlen = incircle_finadd(finlen, sum(scale(bxtcalen, bxtca, bdxtail, incircle_16), incircle_16, scale(len, _16c, 2 * bdx, _32), _32, _48), _48);\n      const len2 = scale(cattlen, catt, bdxtail, incircle_8);\n      finlen = incircle_finadd(finlen, sum_three(scale(len2, incircle_8, 2 * bdx, incircle_16), incircle_16, scale(len2, incircle_8, bdxtail, _16b), _16b, scale(len, _16c, bdxtail, _32), _32, _32b, _64), _64);\n      if (cdytail !== 0) {\n        finlen = incircle_finadd(finlen, scale(scale(4, aa, bdxtail, incircle_8), incircle_8, cdytail, incircle_16), incircle_16);\n      }\n      if (adytail !== 0) {\n        finlen = incircle_finadd(finlen, scale(scale(4, cc, -bdxtail, incircle_8), incircle_8, adytail, incircle_16), incircle_16);\n      }\n    }\n    if (bdytail !== 0) {\n      const len = scale(catlen, incircle_cat, bdytail, _16c);\n      finlen = incircle_finadd(finlen, sum(scale(bytcalen, bytca, bdytail, incircle_16), incircle_16, scale(len, _16c, 2 * bdy, _32), _32, _48), _48);\n      const len2 = scale(cattlen, catt, bdytail, incircle_8);\n      finlen = incircle_finadd(finlen, sum_three(scale(len2, incircle_8, 2 * bdy, incircle_16), incircle_16, scale(len2, incircle_8, bdytail, _16b), _16b, scale(len, _16c, bdytail, _32), _32, _32b, _64), _64);\n    }\n  }\n  if (cdxtail !== 0 || cdytail !== 0) {\n    if (adxtail !== 0 || adytail !== 0 || bdxtail !== 0 || bdytail !== 0) {\n      s1 = adxtail * bdy;\n      c = splitter * adxtail;\n      ahi = c - (c - adxtail);\n      alo = adxtail - ahi;\n      c = splitter * bdy;\n      bhi = c - (c - bdy);\n      blo = bdy - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = adx * bdytail;\n      c = splitter * adx;\n      ahi = c - (c - adx);\n      alo = adx - ahi;\n      c = splitter * bdytail;\n      bhi = c - (c - bdytail);\n      blo = bdytail - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 + t0;\n      bvirt = _i - s0;\n      incircle_u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 + t1;\n      bvirt = _i - _0;\n      incircle_u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      incircle_u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      incircle_u[3] = u3;\n      n1 = -ady;\n      n0 = -adytail;\n      s1 = bdxtail * n1;\n      c = splitter * bdxtail;\n      ahi = c - (c - bdxtail);\n      alo = bdxtail - ahi;\n      c = splitter * n1;\n      bhi = c - (c - n1);\n      blo = n1 - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = bdx * n0;\n      c = splitter * bdx;\n      ahi = c - (c - bdx);\n      alo = bdx - ahi;\n      c = splitter * n0;\n      bhi = c - (c - n0);\n      blo = n0 - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 + t0;\n      bvirt = _i - s0;\n      v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 + t1;\n      bvirt = _i - _0;\n      v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      v[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      v[3] = u3;\n      abtlen = sum(4, incircle_u, 4, v, incircle_abt);\n      s1 = adxtail * bdytail;\n      c = splitter * adxtail;\n      ahi = c - (c - adxtail);\n      alo = adxtail - ahi;\n      c = splitter * bdytail;\n      bhi = c - (c - bdytail);\n      blo = bdytail - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = bdxtail * adytail;\n      c = splitter * bdxtail;\n      ahi = c - (c - bdxtail);\n      alo = bdxtail - ahi;\n      c = splitter * adytail;\n      bhi = c - (c - adytail);\n      blo = adytail - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 - t0;\n      bvirt = s0 - _i;\n      abtt[0] = s0 - (_i + bvirt) + (bvirt - t0);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 - t1;\n      bvirt = _0 - _i;\n      abtt[1] = _0 - (_i + bvirt) + (bvirt - t1);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      abtt[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      abtt[3] = u3;\n      abttlen = 4;\n    } else {\n      incircle_abt[0] = 0;\n      abtlen = 1;\n      abtt[0] = 0;\n      abttlen = 1;\n    }\n    if (cdxtail !== 0) {\n      const len = scale(abtlen, incircle_abt, cdxtail, _16c);\n      finlen = incircle_finadd(finlen, sum(scale(cxtablen, cxtab, cdxtail, incircle_16), incircle_16, scale(len, _16c, 2 * cdx, _32), _32, _48), _48);\n      const len2 = scale(abttlen, abtt, cdxtail, incircle_8);\n      finlen = incircle_finadd(finlen, sum_three(scale(len2, incircle_8, 2 * cdx, incircle_16), incircle_16, scale(len2, incircle_8, cdxtail, _16b), _16b, scale(len, _16c, cdxtail, _32), _32, _32b, _64), _64);\n      if (adytail !== 0) {\n        finlen = incircle_finadd(finlen, scale(scale(4, bb, cdxtail, incircle_8), incircle_8, adytail, incircle_16), incircle_16);\n      }\n      if (bdytail !== 0) {\n        finlen = incircle_finadd(finlen, scale(scale(4, aa, -cdxtail, incircle_8), incircle_8, bdytail, incircle_16), incircle_16);\n      }\n    }\n    if (cdytail !== 0) {\n      const len = scale(abtlen, incircle_abt, cdytail, _16c);\n      finlen = incircle_finadd(finlen, sum(scale(cytablen, cytab, cdytail, incircle_16), incircle_16, scale(len, _16c, 2 * cdy, _32), _32, _48), _48);\n      const len2 = scale(abttlen, abtt, cdytail, incircle_8);\n      finlen = incircle_finadd(finlen, sum_three(scale(len2, incircle_8, 2 * cdy, incircle_16), incircle_16, scale(len2, incircle_8, cdytail, _16b), _16b, scale(len, _16c, cdytail, _32), _32, _32b, _64), _64);\n    }\n  }\n  return incircle_fin[finlen - 1];\n}\nfunction incircle(ax, ay, bx, by, cx, cy, dx, dy) {\n  const adx = ax - dx;\n  const bdx = bx - dx;\n  const cdx = cx - dx;\n  const ady = ay - dy;\n  const bdy = by - dy;\n  const cdy = cy - dy;\n  const bdxcdy = bdx * cdy;\n  const cdxbdy = cdx * bdy;\n  const alift = adx * adx + ady * ady;\n  const cdxady = cdx * ady;\n  const adxcdy = adx * cdy;\n  const blift = bdx * bdx + bdy * bdy;\n  const adxbdy = adx * bdy;\n  const bdxady = bdx * ady;\n  const clift = cdx * cdx + cdy * cdy;\n  const det = alift * (bdxcdy - cdxbdy) + blift * (cdxady - adxcdy) + clift * (adxbdy - bdxady);\n  const permanent = (Math.abs(bdxcdy) + Math.abs(cdxbdy)) * alift + (Math.abs(cdxady) + Math.abs(adxcdy)) * blift + (Math.abs(adxbdy) + Math.abs(bdxady)) * clift;\n  const errbound = iccerrboundA * permanent;\n  if (det > errbound || -det > errbound) {\n    return det;\n  }\n  return incircleadapt(ax, ay, bx, by, cx, cy, dx, dy, permanent);\n}\nfunction incirclefast(ax, ay, bx, by, cx, cy, dx, dy) {\n  const adx = ax - dx;\n  const ady = ay - dy;\n  const bdx = bx - dx;\n  const bdy = by - dy;\n  const cdx = cx - dx;\n  const cdy = cy - dy;\n  const abdet = adx * bdy - bdx * ady;\n  const bcdet = bdx * cdy - cdx * bdy;\n  const cadet = cdx * ady - adx * cdy;\n  const alift = adx * adx + ady * ady;\n  const blift = bdx * bdx + bdy * bdy;\n  const clift = cdx * cdx + cdy * cdy;\n  return alift * bcdet + blift * cadet + clift * abdet;\n}\n;// CONCATENATED MODULE: ./node_modules/robust-predicates/esm/insphere.js\n\nconst isperrboundA = (16 + 224 * util_epsilon) * util_epsilon;\nconst isperrboundB = (5 + 72 * util_epsilon) * util_epsilon;\nconst isperrboundC = (71 + 1408 * util_epsilon) * util_epsilon * util_epsilon;\nconst insphere_ab = vec(4);\nconst insphere_bc = vec(4);\nconst cd = vec(4);\nconst de = vec(4);\nconst ea = vec(4);\nconst ac = vec(4);\nconst bd = vec(4);\nconst ce = vec(4);\nconst da = vec(4);\nconst eb = vec(4);\nconst abc = vec(24);\nconst bcd = vec(24);\nconst cde = vec(24);\nconst dea = vec(24);\nconst eab = vec(24);\nconst abd = vec(24);\nconst bce = vec(24);\nconst cda = vec(24);\nconst deb = vec(24);\nconst eac = vec(24);\nconst adet = vec(1152);\nconst bdet = vec(1152);\nconst cdet = vec(1152);\nconst ddet = vec(1152);\nconst edet = vec(1152);\nconst abdet = vec(2304);\nconst cddet = vec(2304);\nconst cdedet = vec(3456);\nconst deter = vec(5760);\nconst insphere_8 = vec(8);\nconst insphere_8b = vec(8);\nconst _8c = vec(8);\nconst insphere_16 = vec(16);\nconst _24 = vec(24);\nconst insphere_48 = vec(48);\nconst _48b = vec(48);\nconst _96 = vec(96);\nconst _192 = vec(192);\nconst _384x = vec(384);\nconst _384y = vec(384);\nconst _384z = vec(384);\nconst _768 = vec(768);\nfunction sum_three_scale(a, b, c, az, bz, cz, out) {\n  return sum_three(scale(4, a, az, insphere_8), insphere_8, scale(4, b, bz, insphere_8b), insphere_8b, scale(4, c, cz, _8c), _8c, insphere_16, out);\n}\nfunction liftexact(alen, a, blen, b, clen, c, dlen, d, x, y, z, out) {\n  const len = sum(sum(alen, a, blen, b, insphere_48), insphere_48, negate(sum(clen, c, dlen, d, _48b), _48b), _48b, _96);\n  return sum_three(scale(scale(len, _96, x, _192), _192, x, _384x), _384x, scale(scale(len, _96, y, _192), _192, y, _384y), _384y, scale(scale(len, _96, z, _192), _192, z, _384z), _384z, _768, out);\n}\nfunction insphereexact(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez) {\n  let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n  s1 = ax * by;\n  c = splitter * ax;\n  ahi = c - (c - ax);\n  alo = ax - ahi;\n  c = splitter * by;\n  bhi = c - (c - by);\n  blo = by - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = bx * ay;\n  c = splitter * bx;\n  ahi = c - (c - bx);\n  alo = bx - ahi;\n  c = splitter * ay;\n  bhi = c - (c - ay);\n  blo = ay - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  insphere_ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  insphere_ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  insphere_ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  insphere_ab[3] = u3;\n  s1 = bx * cy;\n  c = splitter * bx;\n  ahi = c - (c - bx);\n  alo = bx - ahi;\n  c = splitter * cy;\n  bhi = c - (c - cy);\n  blo = cy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = cx * by;\n  c = splitter * cx;\n  ahi = c - (c - cx);\n  alo = cx - ahi;\n  c = splitter * by;\n  bhi = c - (c - by);\n  blo = by - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  insphere_bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  insphere_bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  insphere_bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  insphere_bc[3] = u3;\n  s1 = cx * dy;\n  c = splitter * cx;\n  ahi = c - (c - cx);\n  alo = cx - ahi;\n  c = splitter * dy;\n  bhi = c - (c - dy);\n  blo = dy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = dx * cy;\n  c = splitter * dx;\n  ahi = c - (c - dx);\n  alo = dx - ahi;\n  c = splitter * cy;\n  bhi = c - (c - cy);\n  blo = cy - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  cd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  cd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  cd[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  cd[3] = u3;\n  s1 = dx * ey;\n  c = splitter * dx;\n  ahi = c - (c - dx);\n  alo = dx - ahi;\n  c = splitter * ey;\n  bhi = c - (c - ey);\n  blo = ey - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = ex * dy;\n  c = splitter * ex;\n  ahi = c - (c - ex);\n  alo = ex - ahi;\n  c = splitter * dy;\n  bhi = c - (c - dy);\n  blo = dy - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  de[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  de[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  de[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  de[3] = u3;\n  s1 = ex * ay;\n  c = splitter * ex;\n  ahi = c - (c - ex);\n  alo = ex - ahi;\n  c = splitter * ay;\n  bhi = c - (c - ay);\n  blo = ay - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = ax * ey;\n  c = splitter * ax;\n  ahi = c - (c - ax);\n  alo = ax - ahi;\n  c = splitter * ey;\n  bhi = c - (c - ey);\n  blo = ey - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ea[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ea[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  ea[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  ea[3] = u3;\n  s1 = ax * cy;\n  c = splitter * ax;\n  ahi = c - (c - ax);\n  alo = ax - ahi;\n  c = splitter * cy;\n  bhi = c - (c - cy);\n  blo = cy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = cx * ay;\n  c = splitter * cx;\n  ahi = c - (c - cx);\n  alo = cx - ahi;\n  c = splitter * ay;\n  bhi = c - (c - ay);\n  blo = ay - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ac[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ac[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  ac[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  ac[3] = u3;\n  s1 = bx * dy;\n  c = splitter * bx;\n  ahi = c - (c - bx);\n  alo = bx - ahi;\n  c = splitter * dy;\n  bhi = c - (c - dy);\n  blo = dy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = dx * by;\n  c = splitter * dx;\n  ahi = c - (c - dx);\n  alo = dx - ahi;\n  c = splitter * by;\n  bhi = c - (c - by);\n  blo = by - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  bd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  bd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  bd[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  bd[3] = u3;\n  s1 = cx * ey;\n  c = splitter * cx;\n  ahi = c - (c - cx);\n  alo = cx - ahi;\n  c = splitter * ey;\n  bhi = c - (c - ey);\n  blo = ey - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = ex * cy;\n  c = splitter * ex;\n  ahi = c - (c - ex);\n  alo = ex - ahi;\n  c = splitter * cy;\n  bhi = c - (c - cy);\n  blo = cy - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ce[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ce[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  ce[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  ce[3] = u3;\n  s1 = dx * ay;\n  c = splitter * dx;\n  ahi = c - (c - dx);\n  alo = dx - ahi;\n  c = splitter * ay;\n  bhi = c - (c - ay);\n  blo = ay - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = ax * dy;\n  c = splitter * ax;\n  ahi = c - (c - ax);\n  alo = ax - ahi;\n  c = splitter * dy;\n  bhi = c - (c - dy);\n  blo = dy - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  da[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  da[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  da[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  da[3] = u3;\n  s1 = ex * by;\n  c = splitter * ex;\n  ahi = c - (c - ex);\n  alo = ex - ahi;\n  c = splitter * by;\n  bhi = c - (c - by);\n  blo = by - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = bx * ey;\n  c = splitter * bx;\n  ahi = c - (c - bx);\n  alo = bx - ahi;\n  c = splitter * ey;\n  bhi = c - (c - ey);\n  blo = ey - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  eb[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  eb[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  eb[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  eb[3] = u3;\n  const abclen = sum_three_scale(insphere_ab, insphere_bc, ac, cz, az, -bz, abc);\n  const bcdlen = sum_three_scale(insphere_bc, cd, bd, dz, bz, -cz, bcd);\n  const cdelen = sum_three_scale(cd, de, ce, ez, cz, -dz, cde);\n  const dealen = sum_three_scale(de, ea, da, az, dz, -ez, dea);\n  const eablen = sum_three_scale(ea, insphere_ab, eb, bz, ez, -az, eab);\n  const abdlen = sum_three_scale(insphere_ab, bd, da, dz, az, bz, abd);\n  const bcelen = sum_three_scale(insphere_bc, ce, eb, ez, bz, cz, bce);\n  const cdalen = sum_three_scale(cd, da, ac, az, cz, dz, cda);\n  const deblen = sum_three_scale(de, eb, bd, bz, dz, ez, deb);\n  const eaclen = sum_three_scale(ea, ac, ce, cz, ez, az, eac);\n  const deterlen = sum_three(liftexact(cdelen, cde, bcelen, bce, deblen, deb, bcdlen, bcd, ax, ay, az, adet), adet, liftexact(dealen, dea, cdalen, cda, eaclen, eac, cdelen, cde, bx, by, bz, bdet), bdet, sum_three(liftexact(eablen, eab, deblen, deb, abdlen, abd, dealen, dea, cx, cy, cz, cdet), cdet, liftexact(abclen, abc, eaclen, eac, bcelen, bce, eablen, eab, dx, dy, dz, ddet), ddet, liftexact(bcdlen, bcd, abdlen, abd, cdalen, cda, abclen, abc, ex, ey, ez, edet), edet, cddet, cdedet), cdedet, abdet, deter);\n  return deter[deterlen - 1];\n}\nconst xdet = vec(96);\nconst ydet = vec(96);\nconst zdet = vec(96);\nconst insphere_fin = vec(1152);\nfunction liftadapt(a, b, c, az, bz, cz, x, y, z, out) {\n  const len = sum_three_scale(a, b, c, az, bz, cz, _24);\n  return sum_three(scale(scale(len, _24, x, insphere_48), insphere_48, x, xdet), xdet, scale(scale(len, _24, y, insphere_48), insphere_48, y, ydet), ydet, scale(scale(len, _24, z, insphere_48), insphere_48, z, zdet), zdet, _192, out);\n}\nfunction insphereadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez, permanent) {\n  let ab3, bc3, cd3, da3, ac3, bd3;\n  let aextail, bextail, cextail, dextail;\n  let aeytail, beytail, ceytail, deytail;\n  let aeztail, beztail, ceztail, deztail;\n  let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0;\n  const aex = ax - ex;\n  const bex = bx - ex;\n  const cex = cx - ex;\n  const dex = dx - ex;\n  const aey = ay - ey;\n  const bey = by - ey;\n  const cey = cy - ey;\n  const dey = dy - ey;\n  const aez = az - ez;\n  const bez = bz - ez;\n  const cez = cz - ez;\n  const dez = dz - ez;\n  s1 = aex * bey;\n  c = splitter * aex;\n  ahi = c - (c - aex);\n  alo = aex - ahi;\n  c = splitter * bey;\n  bhi = c - (c - bey);\n  blo = bey - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = bex * aey;\n  c = splitter * bex;\n  ahi = c - (c - bex);\n  alo = bex - ahi;\n  c = splitter * aey;\n  bhi = c - (c - aey);\n  blo = aey - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  insphere_ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  insphere_ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  ab3 = _j + _i;\n  bvirt = ab3 - _j;\n  insphere_ab[2] = _j - (ab3 - bvirt) + (_i - bvirt);\n  insphere_ab[3] = ab3;\n  s1 = bex * cey;\n  c = splitter * bex;\n  ahi = c - (c - bex);\n  alo = bex - ahi;\n  c = splitter * cey;\n  bhi = c - (c - cey);\n  blo = cey - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = cex * bey;\n  c = splitter * cex;\n  ahi = c - (c - cex);\n  alo = cex - ahi;\n  c = splitter * bey;\n  bhi = c - (c - bey);\n  blo = bey - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  insphere_bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  insphere_bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  bc3 = _j + _i;\n  bvirt = bc3 - _j;\n  insphere_bc[2] = _j - (bc3 - bvirt) + (_i - bvirt);\n  insphere_bc[3] = bc3;\n  s1 = cex * dey;\n  c = splitter * cex;\n  ahi = c - (c - cex);\n  alo = cex - ahi;\n  c = splitter * dey;\n  bhi = c - (c - dey);\n  blo = dey - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = dex * cey;\n  c = splitter * dex;\n  ahi = c - (c - dex);\n  alo = dex - ahi;\n  c = splitter * cey;\n  bhi = c - (c - cey);\n  blo = cey - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  cd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  cd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  cd3 = _j + _i;\n  bvirt = cd3 - _j;\n  cd[2] = _j - (cd3 - bvirt) + (_i - bvirt);\n  cd[3] = cd3;\n  s1 = dex * aey;\n  c = splitter * dex;\n  ahi = c - (c - dex);\n  alo = dex - ahi;\n  c = splitter * aey;\n  bhi = c - (c - aey);\n  blo = aey - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = aex * dey;\n  c = splitter * aex;\n  ahi = c - (c - aex);\n  alo = aex - ahi;\n  c = splitter * dey;\n  bhi = c - (c - dey);\n  blo = dey - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  da[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  da[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  da3 = _j + _i;\n  bvirt = da3 - _j;\n  da[2] = _j - (da3 - bvirt) + (_i - bvirt);\n  da[3] = da3;\n  s1 = aex * cey;\n  c = splitter * aex;\n  ahi = c - (c - aex);\n  alo = aex - ahi;\n  c = splitter * cey;\n  bhi = c - (c - cey);\n  blo = cey - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = cex * aey;\n  c = splitter * cex;\n  ahi = c - (c - cex);\n  alo = cex - ahi;\n  c = splitter * aey;\n  bhi = c - (c - aey);\n  blo = aey - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ac[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ac[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  ac3 = _j + _i;\n  bvirt = ac3 - _j;\n  ac[2] = _j - (ac3 - bvirt) + (_i - bvirt);\n  ac[3] = ac3;\n  s1 = bex * dey;\n  c = splitter * bex;\n  ahi = c - (c - bex);\n  alo = bex - ahi;\n  c = splitter * dey;\n  bhi = c - (c - dey);\n  blo = dey - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = dex * bey;\n  c = splitter * dex;\n  ahi = c - (c - dex);\n  alo = dex - ahi;\n  c = splitter * bey;\n  bhi = c - (c - bey);\n  blo = bey - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  bd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  bd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  bd3 = _j + _i;\n  bvirt = bd3 - _j;\n  bd[2] = _j - (bd3 - bvirt) + (_i - bvirt);\n  bd[3] = bd3;\n  const finlen = sum(sum(negate(liftadapt(insphere_bc, cd, bd, dez, bez, -cez, aex, aey, aez, adet), adet), adet, liftadapt(cd, da, ac, aez, cez, dez, bex, bey, bez, bdet), bdet, abdet), abdet, sum(negate(liftadapt(da, insphere_ab, bd, bez, dez, aez, cex, cey, cez, cdet), cdet), cdet, liftadapt(insphere_ab, insphere_bc, ac, cez, aez, -bez, dex, dey, dez, ddet), ddet, cddet), cddet, insphere_fin);\n  let det = estimate(finlen, insphere_fin);\n  let errbound = isperrboundB * permanent;\n  if (det >= errbound || -det >= errbound) {\n    return det;\n  }\n  bvirt = ax - aex;\n  aextail = ax - (aex + bvirt) + (bvirt - ex);\n  bvirt = ay - aey;\n  aeytail = ay - (aey + bvirt) + (bvirt - ey);\n  bvirt = az - aez;\n  aeztail = az - (aez + bvirt) + (bvirt - ez);\n  bvirt = bx - bex;\n  bextail = bx - (bex + bvirt) + (bvirt - ex);\n  bvirt = by - bey;\n  beytail = by - (bey + bvirt) + (bvirt - ey);\n  bvirt = bz - bez;\n  beztail = bz - (bez + bvirt) + (bvirt - ez);\n  bvirt = cx - cex;\n  cextail = cx - (cex + bvirt) + (bvirt - ex);\n  bvirt = cy - cey;\n  ceytail = cy - (cey + bvirt) + (bvirt - ey);\n  bvirt = cz - cez;\n  ceztail = cz - (cez + bvirt) + (bvirt - ez);\n  bvirt = dx - dex;\n  dextail = dx - (dex + bvirt) + (bvirt - ex);\n  bvirt = dy - dey;\n  deytail = dy - (dey + bvirt) + (bvirt - ey);\n  bvirt = dz - dez;\n  deztail = dz - (dez + bvirt) + (bvirt - ez);\n  if (aextail === 0 && aeytail === 0 && aeztail === 0 && bextail === 0 && beytail === 0 && beztail === 0 && cextail === 0 && ceytail === 0 && ceztail === 0 && dextail === 0 && deytail === 0 && deztail === 0) {\n    return det;\n  }\n  errbound = isperrboundC * permanent + resulterrbound * Math.abs(det);\n  const abeps = aex * beytail + bey * aextail - (aey * bextail + bex * aeytail);\n  const bceps = bex * ceytail + cey * bextail - (bey * cextail + cex * beytail);\n  const cdeps = cex * deytail + dey * cextail - (cey * dextail + dex * ceytail);\n  const daeps = dex * aeytail + aey * dextail - (dey * aextail + aex * deytail);\n  const aceps = aex * ceytail + cey * aextail - (aey * cextail + cex * aeytail);\n  const bdeps = bex * deytail + dey * bextail - (bey * dextail + dex * beytail);\n  det += (bex * bex + bey * bey + bez * bez) * (cez * daeps + dez * aceps + aez * cdeps + (ceztail * da3 + deztail * ac3 + aeztail * cd3)) + (dex * dex + dey * dey + dez * dez) * (aez * bceps - bez * aceps + cez * abeps + (aeztail * bc3 - beztail * ac3 + ceztail * ab3)) - ((aex * aex + aey * aey + aez * aez) * (bez * cdeps - cez * bdeps + dez * bceps + (beztail * cd3 - ceztail * bd3 + deztail * bc3)) + (cex * cex + cey * cey + cez * cez) * (dez * abeps + aez * bdeps + bez * daeps + (deztail * ab3 + aeztail * bd3 + beztail * da3))) + 2 * ((bex * bextail + bey * beytail + bez * beztail) * (cez * da3 + dez * ac3 + aez * cd3) + (dex * dextail + dey * deytail + dez * deztail) * (aez * bc3 - bez * ac3 + cez * ab3) - ((aex * aextail + aey * aeytail + aez * aeztail) * (bez * cd3 - cez * bd3 + dez * bc3) + (cex * cextail + cey * ceytail + cez * ceztail) * (dez * ab3 + aez * bd3 + bez * da3)));\n  if (det >= errbound || -det >= errbound) {\n    return det;\n  }\n  return insphereexact(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez);\n}\nfunction insphere(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez) {\n  const aex = ax - ex;\n  const bex = bx - ex;\n  const cex = cx - ex;\n  const dex = dx - ex;\n  const aey = ay - ey;\n  const bey = by - ey;\n  const cey = cy - ey;\n  const dey = dy - ey;\n  const aez = az - ez;\n  const bez = bz - ez;\n  const cez = cz - ez;\n  const dez = dz - ez;\n  const aexbey = aex * bey;\n  const bexaey = bex * aey;\n  const ab = aexbey - bexaey;\n  const bexcey = bex * cey;\n  const cexbey = cex * bey;\n  const bc = bexcey - cexbey;\n  const cexdey = cex * dey;\n  const dexcey = dex * cey;\n  const cd = cexdey - dexcey;\n  const dexaey = dex * aey;\n  const aexdey = aex * dey;\n  const da = dexaey - aexdey;\n  const aexcey = aex * cey;\n  const cexaey = cex * aey;\n  const ac = aexcey - cexaey;\n  const bexdey = bex * dey;\n  const dexbey = dex * bey;\n  const bd = bexdey - dexbey;\n  const abc = aez * bc - bez * ac + cez * ab;\n  const bcd = bez * cd - cez * bd + dez * bc;\n  const cda = cez * da + dez * ac + aez * cd;\n  const dab = dez * ab + aez * bd + bez * da;\n  const alift = aex * aex + aey * aey + aez * aez;\n  const blift = bex * bex + bey * bey + bez * bez;\n  const clift = cex * cex + cey * cey + cez * cez;\n  const dlift = dex * dex + dey * dey + dez * dez;\n  const det = clift * dab - dlift * abc + (alift * bcd - blift * cda);\n  const aezplus = Math.abs(aez);\n  const bezplus = Math.abs(bez);\n  const cezplus = Math.abs(cez);\n  const dezplus = Math.abs(dez);\n  const aexbeyplus = Math.abs(aexbey);\n  const bexaeyplus = Math.abs(bexaey);\n  const bexceyplus = Math.abs(bexcey);\n  const cexbeyplus = Math.abs(cexbey);\n  const cexdeyplus = Math.abs(cexdey);\n  const dexceyplus = Math.abs(dexcey);\n  const dexaeyplus = Math.abs(dexaey);\n  const aexdeyplus = Math.abs(aexdey);\n  const aexceyplus = Math.abs(aexcey);\n  const cexaeyplus = Math.abs(cexaey);\n  const bexdeyplus = Math.abs(bexdey);\n  const dexbeyplus = Math.abs(dexbey);\n  const permanent = ((cexdeyplus + dexceyplus) * bezplus + (dexbeyplus + bexdeyplus) * cezplus + (bexceyplus + cexbeyplus) * dezplus) * alift + ((dexaeyplus + aexdeyplus) * cezplus + (aexceyplus + cexaeyplus) * dezplus + (cexdeyplus + dexceyplus) * aezplus) * blift + ((aexbeyplus + bexaeyplus) * dezplus + (bexdeyplus + dexbeyplus) * aezplus + (dexaeyplus + aexdeyplus) * bezplus) * clift + ((bexceyplus + cexbeyplus) * aezplus + (cexaeyplus + aexceyplus) * bezplus + (aexbeyplus + bexaeyplus) * cezplus) * dlift;\n  const errbound = isperrboundA * permanent;\n  if (det > errbound || -det > errbound) {\n    return det;\n  }\n  return -insphereadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez, permanent);\n}\nfunction inspherefast(pax, pay, paz, pbx, pby, pbz, pcx, pcy, pcz, pdx, pdy, pdz, pex, pey, pez) {\n  const aex = pax - pex;\n  const bex = pbx - pex;\n  const cex = pcx - pex;\n  const dex = pdx - pex;\n  const aey = pay - pey;\n  const bey = pby - pey;\n  const cey = pcy - pey;\n  const dey = pdy - pey;\n  const aez = paz - pez;\n  const bez = pbz - pez;\n  const cez = pcz - pez;\n  const dez = pdz - pez;\n  const ab = aex * bey - bex * aey;\n  const bc = bex * cey - cex * bey;\n  const cd = cex * dey - dex * cey;\n  const da = dex * aey - aex * dey;\n  const ac = aex * cey - cex * aey;\n  const bd = bex * dey - dex * bey;\n  const abc = aez * bc - bez * ac + cez * ab;\n  const bcd = bez * cd - cez * bd + dez * bc;\n  const cda = cez * da + dez * ac + aez * cd;\n  const dab = dez * ab + aez * bd + bez * da;\n  const alift = aex * aex + aey * aey + aez * aez;\n  const blift = bex * bex + bey * bey + bez * bez;\n  const clift = cex * cex + cey * cey + cez * cez;\n  const dlift = dex * dex + dey * dey + dez * dez;\n  return clift * dab - dlift * abc + (alift * bcd - blift * cda);\n}\n;// CONCATENATED MODULE: ./node_modules/robust-predicates/index.js\n\n\n\n\n;// CONCATENATED MODULE: ./node_modules/delaunator/index.js\nconst EPSILON = Math.pow(2, -52);\nconst EDGE_STACK = new Uint32Array(512);\n\nclass Delaunator {\n  static from(points, getX = defaultGetX, getY = defaultGetY) {\n    const n = points.length;\n    const coords = new Float64Array(n * 2);\n    for (let i = 0; i < n; i++) {\n      const p = points[i];\n      coords[2 * i] = getX(p);\n      coords[2 * i + 1] = getY(p);\n    }\n    return new Delaunator(coords);\n  }\n  constructor(coords) {\n    const n = coords.length >> 1;\n    if (n > 0 && typeof coords[0] !== \'number\') throw new Error(\'Expected coords to contain numbers.\');\n    this.coords = coords;\n\n    // arrays that will store the triangulation graph\n    const maxTriangles = Math.max(2 * n - 5, 0);\n    this._triangles = new Uint32Array(maxTriangles * 3);\n    this._halfedges = new Int32Array(maxTriangles * 3);\n\n    // temporary arrays for tracking the edges of the advancing convex hull\n    this._hashSize = Math.ceil(Math.sqrt(n));\n    this._hullPrev = new Uint32Array(n); // edge to prev edge\n    this._hullNext = new Uint32Array(n); // edge to next edge\n    this._hullTri = new Uint32Array(n); // edge to adjacent triangle\n    this._hullHash = new Int32Array(this._hashSize).fill(-1); // angular edge hash\n\n    // temporary arrays for sorting points\n    this._ids = new Uint32Array(n);\n    this._dists = new Float64Array(n);\n    this.update();\n  }\n  update() {\n    const {\n      coords,\n      _hullPrev: hullPrev,\n      _hullNext: hullNext,\n      _hullTri: hullTri,\n      _hullHash: hullHash\n    } = this;\n    const n = coords.length >> 1;\n\n    // populate an array of point indices; calculate input data bbox\n    let minX = Infinity;\n    let minY = Infinity;\n    let maxX = -Infinity;\n    let maxY = -Infinity;\n    for (let i = 0; i < n; i++) {\n      const x = coords[2 * i];\n      const y = coords[2 * i + 1];\n      if (x < minX) minX = x;\n      if (y < minY) minY = y;\n      if (x > maxX) maxX = x;\n      if (y > maxY) maxY = y;\n      this._ids[i] = i;\n    }\n    const cx = (minX + maxX) / 2;\n    const cy = (minY + maxY) / 2;\n    let minDist = Infinity;\n    let i0, i1, i2;\n\n    // pick a seed point close to the center\n    for (let i = 0; i < n; i++) {\n      const d = dist(cx, cy, coords[2 * i], coords[2 * i + 1]);\n      if (d < minDist) {\n        i0 = i;\n        minDist = d;\n      }\n    }\n    const i0x = coords[2 * i0];\n    const i0y = coords[2 * i0 + 1];\n    minDist = Infinity;\n\n    // find the point closest to the seed\n    for (let i = 0; i < n; i++) {\n      if (i === i0) continue;\n      const d = dist(i0x, i0y, coords[2 * i], coords[2 * i + 1]);\n      if (d < minDist && d > 0) {\n        i1 = i;\n        minDist = d;\n      }\n    }\n    let i1x = coords[2 * i1];\n    let i1y = coords[2 * i1 + 1];\n    let minRadius = Infinity;\n\n    // find the third point which forms the smallest circumcircle with the first two\n    for (let i = 0; i < n; i++) {\n      if (i === i0 || i === i1) continue;\n      const r = circumradius(i0x, i0y, i1x, i1y, coords[2 * i], coords[2 * i + 1]);\n      if (r < minRadius) {\n        i2 = i;\n        minRadius = r;\n      }\n    }\n    let i2x = coords[2 * i2];\n    let i2y = coords[2 * i2 + 1];\n    if (minRadius === Infinity) {\n      // order collinear points by dx (or dy if all x are identical)\n      // and return the list as a hull\n      for (let i = 0; i < n; i++) {\n        this._dists[i] = coords[2 * i] - coords[0] || coords[2 * i + 1] - coords[1];\n      }\n      quicksort(this._ids, this._dists, 0, n - 1);\n      const hull = new Uint32Array(n);\n      let j = 0;\n      for (let i = 0, d0 = -Infinity; i < n; i++) {\n        const id = this._ids[i];\n        if (this._dists[id] > d0) {\n          hull[j++] = id;\n          d0 = this._dists[id];\n        }\n      }\n      this.hull = hull.subarray(0, j);\n      this.triangles = new Uint32Array(0);\n      this.halfedges = new Uint32Array(0);\n      return;\n    }\n\n    // swap the order of the seed points for counter-clockwise orientation\n    if (orient2d(i0x, i0y, i1x, i1y, i2x, i2y) < 0) {\n      const i = i1;\n      const x = i1x;\n      const y = i1y;\n      i1 = i2;\n      i1x = i2x;\n      i1y = i2y;\n      i2 = i;\n      i2x = x;\n      i2y = y;\n    }\n    const center = circumcenter(i0x, i0y, i1x, i1y, i2x, i2y);\n    this._cx = center.x;\n    this._cy = center.y;\n    for (let i = 0; i < n; i++) {\n      this._dists[i] = dist(coords[2 * i], coords[2 * i + 1], center.x, center.y);\n    }\n\n    // sort the points by distance from the seed triangle circumcenter\n    quicksort(this._ids, this._dists, 0, n - 1);\n\n    // set up the seed triangle as the starting hull\n    this._hullStart = i0;\n    let hullSize = 3;\n    hullNext[i0] = hullPrev[i2] = i1;\n    hullNext[i1] = hullPrev[i0] = i2;\n    hullNext[i2] = hullPrev[i1] = i0;\n    hullTri[i0] = 0;\n    hullTri[i1] = 1;\n    hullTri[i2] = 2;\n    hullHash.fill(-1);\n    hullHash[this._hashKey(i0x, i0y)] = i0;\n    hullHash[this._hashKey(i1x, i1y)] = i1;\n    hullHash[this._hashKey(i2x, i2y)] = i2;\n    this.trianglesLen = 0;\n    this._addTriangle(i0, i1, i2, -1, -1, -1);\n    for (let k = 0, xp, yp; k < this._ids.length; k++) {\n      const i = this._ids[k];\n      const x = coords[2 * i];\n      const y = coords[2 * i + 1];\n\n      // skip near-duplicate points\n      if (k > 0 && Math.abs(x - xp) <= EPSILON && Math.abs(y - yp) <= EPSILON) continue;\n      xp = x;\n      yp = y;\n\n      // skip seed triangle points\n      if (i === i0 || i === i1 || i === i2) continue;\n\n      // find a visible edge on the convex hull using edge hash\n      let start = 0;\n      for (let j = 0, key = this._hashKey(x, y); j < this._hashSize; j++) {\n        start = hullHash[(key + j) % this._hashSize];\n        if (start !== -1 && start !== hullNext[start]) break;\n      }\n      start = hullPrev[start];\n      let e = start,\n        q;\n      while (q = hullNext[e], orient2d(x, y, coords[2 * e], coords[2 * e + 1], coords[2 * q], coords[2 * q + 1]) >= 0) {\n        e = q;\n        if (e === start) {\n          e = -1;\n          break;\n        }\n      }\n      if (e === -1) continue; // likely a near-duplicate point; skip it\n\n      // add the first triangle from the point\n      let t = this._addTriangle(e, i, hullNext[e], -1, -1, hullTri[e]);\n\n      // recursively flip triangles from the point until they satisfy the Delaunay condition\n      hullTri[i] = this._legalize(t + 2);\n      hullTri[e] = t; // keep track of boundary triangles on the hull\n      hullSize++;\n\n      // walk forward through the hull, adding more triangles and flipping recursively\n      let n = hullNext[e];\n      while (q = hullNext[n], orient2d(x, y, coords[2 * n], coords[2 * n + 1], coords[2 * q], coords[2 * q + 1]) < 0) {\n        t = this._addTriangle(n, i, q, hullTri[i], -1, hullTri[n]);\n        hullTri[i] = this._legalize(t + 2);\n        hullNext[n] = n; // mark as removed\n        hullSize--;\n        n = q;\n      }\n\n      // walk backward from the other side, adding more triangles and flipping\n      if (e === start) {\n        while (q = hullPrev[e], orient2d(x, y, coords[2 * q], coords[2 * q + 1], coords[2 * e], coords[2 * e + 1]) < 0) {\n          t = this._addTriangle(q, i, e, -1, hullTri[e], hullTri[q]);\n          this._legalize(t + 2);\n          hullTri[q] = t;\n          hullNext[e] = e; // mark as removed\n          hullSize--;\n          e = q;\n        }\n      }\n\n      // update the hull indices\n      this._hullStart = hullPrev[i] = e;\n      hullNext[e] = hullPrev[n] = i;\n      hullNext[i] = n;\n\n      // save the two new edges in the hash table\n      hullHash[this._hashKey(x, y)] = i;\n      hullHash[this._hashKey(coords[2 * e], coords[2 * e + 1])] = e;\n    }\n    this.hull = new Uint32Array(hullSize);\n    for (let i = 0, e = this._hullStart; i < hullSize; i++) {\n      this.hull[i] = e;\n      e = hullNext[e];\n    }\n\n    // trim typed triangle mesh arrays\n    this.triangles = this._triangles.subarray(0, this.trianglesLen);\n    this.halfedges = this._halfedges.subarray(0, this.trianglesLen);\n  }\n  _hashKey(x, y) {\n    return Math.floor(pseudoAngle(x - this._cx, y - this._cy) * this._hashSize) % this._hashSize;\n  }\n  _legalize(a) {\n    const {\n      _triangles: triangles,\n      _halfedges: halfedges,\n      coords\n    } = this;\n    let i = 0;\n    let ar = 0;\n\n    // recursion eliminated with a fixed-size stack\n    while (true) {\n      const b = halfedges[a];\n\n      /* if the pair of triangles doesn\'t satisfy the Delaunay condition\n       * (p1 is inside the circumcircle of [p0, pl, pr]), flip them,\n       * then do the same check/flip recursively for the new pair of triangles\n       *\n       *           pl                    pl\n       *          /||\\                  /  \\\n       *       al/ || \\bl            al/    \\a\n       *        /  ||  \\              /      \\\n       *       /  a||b  \\    flip    /___ar___\\\n       *     p0\\   ||   /p1   =>   p0\\---bl---/p1\n       *        \\  ||  /              \\      /\n       *       ar\\ || /br             b\\    /br\n       *          \\||/                  \\  /\n       *           pr                    pr\n       */\n      const a0 = a - a % 3;\n      ar = a0 + (a + 2) % 3;\n      if (b === -1) {\n        // convex hull edge\n        if (i === 0) break;\n        a = EDGE_STACK[--i];\n        continue;\n      }\n      const b0 = b - b % 3;\n      const al = a0 + (a + 1) % 3;\n      const bl = b0 + (b + 2) % 3;\n      const p0 = triangles[ar];\n      const pr = triangles[a];\n      const pl = triangles[al];\n      const p1 = triangles[bl];\n      const illegal = inCircle(coords[2 * p0], coords[2 * p0 + 1], coords[2 * pr], coords[2 * pr + 1], coords[2 * pl], coords[2 * pl + 1], coords[2 * p1], coords[2 * p1 + 1]);\n      if (illegal) {\n        triangles[a] = p1;\n        triangles[b] = p0;\n        const hbl = halfedges[bl];\n\n        // edge swapped on the other side of the hull (rare); fix the halfedge reference\n        if (hbl === -1) {\n          let e = this._hullStart;\n          do {\n            if (this._hullTri[e] === bl) {\n              this._hullTri[e] = a;\n              break;\n            }\n            e = this._hullPrev[e];\n          } while (e !== this._hullStart);\n        }\n        this._link(a, hbl);\n        this._link(b, halfedges[ar]);\n        this._link(ar, bl);\n        const br = b0 + (b + 1) % 3;\n\n        // don\'t worry about hitting the cap: it can only happen on extremely degenerate input\n        if (i < EDGE_STACK.length) {\n          EDGE_STACK[i++] = br;\n        }\n      } else {\n        if (i === 0) break;\n        a = EDGE_STACK[--i];\n      }\n    }\n    return ar;\n  }\n  _link(a, b) {\n    this._halfedges[a] = b;\n    if (b !== -1) this._halfedges[b] = a;\n  }\n\n  // add a new triangle given vertex indices and adjacent half-edge ids\n  _addTriangle(i0, i1, i2, a, b, c) {\n    const t = this.trianglesLen;\n    this._triangles[t] = i0;\n    this._triangles[t + 1] = i1;\n    this._triangles[t + 2] = i2;\n    this._link(t, a);\n    this._link(t + 1, b);\n    this._link(t + 2, c);\n    this.trianglesLen += 3;\n    return t;\n  }\n}\n\n// monotonically increases with real angle, but doesn\'t need expensive trigonometry\nfunction pseudoAngle(dx, dy) {\n  const p = dx / (Math.abs(dx) + Math.abs(dy));\n  return (dy > 0 ? 3 - p : 1 + p) / 4; // [0..1]\n}\n\nfunction dist(ax, ay, bx, by) {\n  const dx = ax - bx;\n  const dy = ay - by;\n  return dx * dx + dy * dy;\n}\nfunction inCircle(ax, ay, bx, by, cx, cy, px, py) {\n  const dx = ax - px;\n  const dy = ay - py;\n  const ex = bx - px;\n  const ey = by - py;\n  const fx = cx - px;\n  const fy = cy - py;\n  const ap = dx * dx + dy * dy;\n  const bp = ex * ex + ey * ey;\n  const cp = fx * fx + fy * fy;\n  return dx * (ey * cp - bp * fy) - dy * (ex * cp - bp * fx) + ap * (ex * fy - ey * fx) < 0;\n}\nfunction circumradius(ax, ay, bx, by, cx, cy) {\n  const dx = bx - ax;\n  const dy = by - ay;\n  const ex = cx - ax;\n  const ey = cy - ay;\n  const bl = dx * dx + dy * dy;\n  const cl = ex * ex + ey * ey;\n  const d = 0.5 / (dx * ey - dy * ex);\n  const x = (ey * bl - dy * cl) * d;\n  const y = (dx * cl - ex * bl) * d;\n  return x * x + y * y;\n}\nfunction circumcenter(ax, ay, bx, by, cx, cy) {\n  const dx = bx - ax;\n  const dy = by - ay;\n  const ex = cx - ax;\n  const ey = cy - ay;\n  const bl = dx * dx + dy * dy;\n  const cl = ex * ex + ey * ey;\n  const d = 0.5 / (dx * ey - dy * ex);\n  const x = ax + (ey * bl - dy * cl) * d;\n  const y = ay + (dx * cl - ex * bl) * d;\n  return {\n    x,\n    y\n  };\n}\nfunction quicksort(ids, dists, left, right) {\n  if (right - left <= 20) {\n    for (let i = left + 1; i <= right; i++) {\n      const temp = ids[i];\n      const tempDist = dists[temp];\n      let j = i - 1;\n      while (j >= left && dists[ids[j]] > tempDist) ids[j + 1] = ids[j--];\n      ids[j + 1] = temp;\n    }\n  } else {\n    const median = left + right >> 1;\n    let i = left + 1;\n    let j = right;\n    delaunator_swap(ids, median, i);\n    if (dists[ids[left]] > dists[ids[right]]) delaunator_swap(ids, left, right);\n    if (dists[ids[i]] > dists[ids[right]]) delaunator_swap(ids, i, right);\n    if (dists[ids[left]] > dists[ids[i]]) delaunator_swap(ids, left, i);\n    const temp = ids[i];\n    const tempDist = dists[temp];\n    while (true) {\n      do i++; while (dists[ids[i]] < tempDist);\n      do j--; while (dists[ids[j]] > tempDist);\n      if (j < i) break;\n      delaunator_swap(ids, i, j);\n    }\n    ids[left + 1] = ids[j];\n    ids[j] = temp;\n    if (right - i + 1 >= j - left) {\n      quicksort(ids, dists, i, right);\n      quicksort(ids, dists, left, j - 1);\n    } else {\n      quicksort(ids, dists, left, j - 1);\n      quicksort(ids, dists, i, right);\n    }\n  }\n}\nfunction delaunator_swap(arr, i, j) {\n  const tmp = arr[i];\n  arr[i] = arr[j];\n  arr[j] = tmp;\n}\nfunction defaultGetX(p) {\n  return p[0];\n}\nfunction defaultGetY(p) {\n  return p[1];\n}\n;// CONCATENATED MODULE: ./node_modules/d3-delaunay/src/path.js\nconst src_path_epsilon = 1e-6;\nclass path_Path {\n  constructor() {\n    this._x0 = this._y0 =\n    // start of current subpath\n    this._x1 = this._y1 = null; // end of current subpath\n    this._ = "";\n  }\n  moveTo(x, y) {\n    this._ += `M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}`;\n  }\n  closePath() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += "Z";\n    }\n  }\n  lineTo(x, y) {\n    this._ += `L${this._x1 = +x},${this._y1 = +y}`;\n  }\n  arc(x, y, r) {\n    x = +x, y = +y, r = +r;\n    const x0 = x + r;\n    const y0 = y;\n    if (r < 0) throw new Error("negative radius");\n    if (this._x1 === null) this._ += `M${x0},${y0}`;else if (Math.abs(this._x1 - x0) > src_path_epsilon || Math.abs(this._y1 - y0) > src_path_epsilon) this._ += "L" + x0 + "," + y0;\n    if (!r) return;\n    this._ += `A${r},${r},0,1,1,${x - r},${y}A${r},${r},0,1,1,${this._x1 = x0},${this._y1 = y0}`;\n  }\n  rect(x, y, w, h) {\n    this._ += `M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}h${+w}v${+h}h${-w}Z`;\n  }\n  value() {\n    return this._ || null;\n  }\n}\n;// CONCATENATED MODULE: ./node_modules/d3-delaunay/src/polygon.js\nclass Polygon {\n  constructor() {\n    this._ = [];\n  }\n  moveTo(x, y) {\n    this._.push([x, y]);\n  }\n  closePath() {\n    this._.push(this._[0].slice());\n  }\n  lineTo(x, y) {\n    this._.push([x, y]);\n  }\n  value() {\n    return this._.length ? this._ : null;\n  }\n}\n;// CONCATENATED MODULE: ./node_modules/d3-delaunay/src/voronoi.js\n\n\nclass Voronoi {\n  constructor(delaunay, [xmin, ymin, xmax, ymax] = [0, 0, 960, 500]) {\n    if (!((xmax = +xmax) >= (xmin = +xmin)) || !((ymax = +ymax) >= (ymin = +ymin))) throw new Error("invalid bounds");\n    this.delaunay = delaunay;\n    this._circumcenters = new Float64Array(delaunay.points.length * 2);\n    this.vectors = new Float64Array(delaunay.points.length * 2);\n    this.xmax = xmax, this.xmin = xmin;\n    this.ymax = ymax, this.ymin = ymin;\n    this._init();\n  }\n  update() {\n    this.delaunay.update();\n    this._init();\n    return this;\n  }\n  _init() {\n    const {\n      delaunay: {\n        points,\n        hull,\n        triangles\n      },\n      vectors\n    } = this;\n\n    // Compute circumcenters.\n    const circumcenters = this.circumcenters = this._circumcenters.subarray(0, triangles.length / 3 * 2);\n    for (let i = 0, j = 0, n = triangles.length, x, y; i < n; i += 3, j += 2) {\n      const t1 = triangles[i] * 2;\n      const t2 = triangles[i + 1] * 2;\n      const t3 = triangles[i + 2] * 2;\n      const x1 = points[t1];\n      const y1 = points[t1 + 1];\n      const x2 = points[t2];\n      const y2 = points[t2 + 1];\n      const x3 = points[t3];\n      const y3 = points[t3 + 1];\n      const dx = x2 - x1;\n      const dy = y2 - y1;\n      const ex = x3 - x1;\n      const ey = y3 - y1;\n      const ab = (dx * ey - dy * ex) * 2;\n      if (Math.abs(ab) < 1e-9) {\n        // degenerate case (collinear diagram)\n        // almost equal points (degenerate triangle)\n        // the circumcenter is at the infinity, in a\n        // direction that is:\n        // 1. orthogonal to the halfedge.\n        let a = 1e9;\n        // 2. points away from the center; since the list of triangles starts\n        // in the center, the first point of the first triangle\n        // will be our reference\n        const r = triangles[0] * 2;\n        a *= Math.sign((points[r] - x1) * ey - (points[r + 1] - y1) * ex);\n        x = (x1 + x3) / 2 - a * ey;\n        y = (y1 + y3) / 2 + a * ex;\n      } else {\n        const d = 1 / ab;\n        const bl = dx * dx + dy * dy;\n        const cl = ex * ex + ey * ey;\n        x = x1 + (ey * bl - dy * cl) * d;\n        y = y1 + (dx * cl - ex * bl) * d;\n      }\n      circumcenters[j] = x;\n      circumcenters[j + 1] = y;\n    }\n\n    // Compute exterior cell rays.\n    let h = hull[hull.length - 1];\n    let p0,\n      p1 = h * 4;\n    let x0,\n      x1 = points[2 * h];\n    let y0,\n      y1 = points[2 * h + 1];\n    vectors.fill(0);\n    for (let i = 0; i < hull.length; ++i) {\n      h = hull[i];\n      p0 = p1, x0 = x1, y0 = y1;\n      p1 = h * 4, x1 = points[2 * h], y1 = points[2 * h + 1];\n      vectors[p0 + 2] = vectors[p1] = y0 - y1;\n      vectors[p0 + 3] = vectors[p1 + 1] = x1 - x0;\n    }\n  }\n  render(context) {\n    const buffer = context == null ? context = new path_Path() : undefined;\n    const {\n      delaunay: {\n        halfedges,\n        inedges,\n        hull\n      },\n      circumcenters,\n      vectors\n    } = this;\n    if (hull.length <= 1) return null;\n    for (let i = 0, n = halfedges.length; i < n; ++i) {\n      const j = halfedges[i];\n      if (j < i) continue;\n      const ti = Math.floor(i / 3) * 2;\n      const tj = Math.floor(j / 3) * 2;\n      const xi = circumcenters[ti];\n      const yi = circumcenters[ti + 1];\n      const xj = circumcenters[tj];\n      const yj = circumcenters[tj + 1];\n      this._renderSegment(xi, yi, xj, yj, context);\n    }\n    let h0,\n      h1 = hull[hull.length - 1];\n    for (let i = 0; i < hull.length; ++i) {\n      h0 = h1, h1 = hull[i];\n      const t = Math.floor(inedges[h1] / 3) * 2;\n      const x = circumcenters[t];\n      const y = circumcenters[t + 1];\n      const v = h0 * 4;\n      const p = this._project(x, y, vectors[v + 2], vectors[v + 3]);\n      if (p) this._renderSegment(x, y, p[0], p[1], context);\n    }\n    return buffer && buffer.value();\n  }\n  renderBounds(context) {\n    const buffer = context == null ? context = new path_Path() : undefined;\n    context.rect(this.xmin, this.ymin, this.xmax - this.xmin, this.ymax - this.ymin);\n    return buffer && buffer.value();\n  }\n  renderCell(i, context) {\n    const buffer = context == null ? context = new path_Path() : undefined;\n    const points = this._clip(i);\n    if (points === null || !points.length) return;\n    context.moveTo(points[0], points[1]);\n    let n = points.length;\n    while (points[0] === points[n - 2] && points[1] === points[n - 1] && n > 1) n -= 2;\n    for (let i = 2; i < n; i += 2) {\n      if (points[i] !== points[i - 2] || points[i + 1] !== points[i - 1]) context.lineTo(points[i], points[i + 1]);\n    }\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  *cellPolygons() {\n    const {\n      delaunay: {\n        points\n      }\n    } = this;\n    for (let i = 0, n = points.length / 2; i < n; ++i) {\n      const cell = this.cellPolygon(i);\n      if (cell) cell.index = i, yield cell;\n    }\n  }\n  cellPolygon(i) {\n    const polygon = new Polygon();\n    this.renderCell(i, polygon);\n    return polygon.value();\n  }\n  _renderSegment(x0, y0, x1, y1, context) {\n    let S;\n    const c0 = this._regioncode(x0, y0);\n    const c1 = this._regioncode(x1, y1);\n    if (c0 === 0 && c1 === 0) {\n      context.moveTo(x0, y0);\n      context.lineTo(x1, y1);\n    } else if (S = this._clipSegment(x0, y0, x1, y1, c0, c1)) {\n      context.moveTo(S[0], S[1]);\n      context.lineTo(S[2], S[3]);\n    }\n  }\n  contains(i, x, y) {\n    if ((x = +x, x !== x) || (y = +y, y !== y)) return false;\n    return this.delaunay._step(i, x, y) === i;\n  }\n  *neighbors(i) {\n    const ci = this._clip(i);\n    if (ci) for (const j of this.delaunay.neighbors(i)) {\n      const cj = this._clip(j);\n      // find the common edge\n      if (cj) loop: for (let ai = 0, li = ci.length; ai < li; ai += 2) {\n        for (let aj = 0, lj = cj.length; aj < lj; aj += 2) {\n          if (ci[ai] == cj[aj] && ci[ai + 1] == cj[aj + 1] && ci[(ai + 2) % li] == cj[(aj + lj - 2) % lj] && ci[(ai + 3) % li] == cj[(aj + lj - 1) % lj]) {\n            yield j;\n            break loop;\n          }\n        }\n      }\n    }\n  }\n  _cell(i) {\n    const {\n      circumcenters,\n      delaunay: {\n        inedges,\n        halfedges,\n        triangles\n      }\n    } = this;\n    const e0 = inedges[i];\n    if (e0 === -1) return null; // coincident point\n    const points = [];\n    let e = e0;\n    do {\n      const t = Math.floor(e / 3);\n      points.push(circumcenters[t * 2], circumcenters[t * 2 + 1]);\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) break; // bad triangulation\n      e = halfedges[e];\n    } while (e !== e0 && e !== -1);\n    return points;\n  }\n  _clip(i) {\n    // degenerate case (1 valid point: return the box)\n    if (i === 0 && this.delaunay.hull.length === 1) {\n      return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\n    }\n    const points = this._cell(i);\n    if (points === null) return null;\n    const {\n      vectors: V\n    } = this;\n    const v = i * 4;\n    return V[v] || V[v + 1] ? this._clipInfinite(i, points, V[v], V[v + 1], V[v + 2], V[v + 3]) : this._clipFinite(i, points);\n  }\n  _clipFinite(i, points) {\n    const n = points.length;\n    let P = null;\n    let x0,\n      y0,\n      x1 = points[n - 2],\n      y1 = points[n - 1];\n    let c0,\n      c1 = this._regioncode(x1, y1);\n    let e0,\n      e1 = 0;\n    for (let j = 0; j < n; j += 2) {\n      x0 = x1, y0 = y1, x1 = points[j], y1 = points[j + 1];\n      c0 = c1, c1 = this._regioncode(x1, y1);\n      if (c0 === 0 && c1 === 0) {\n        e0 = e1, e1 = 0;\n        if (P) P.push(x1, y1);else P = [x1, y1];\n      } else {\n        let S, sx0, sy0, sx1, sy1;\n        if (c0 === 0) {\n          if ((S = this._clipSegment(x0, y0, x1, y1, c0, c1)) === null) continue;\n          [sx0, sy0, sx1, sy1] = S;\n        } else {\n          if ((S = this._clipSegment(x1, y1, x0, y0, c1, c0)) === null) continue;\n          [sx1, sy1, sx0, sy0] = S;\n          e0 = e1, e1 = this._edgecode(sx0, sy0);\n          if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n          if (P) P.push(sx0, sy0);else P = [sx0, sy0];\n        }\n        e0 = e1, e1 = this._edgecode(sx1, sy1);\n        if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n        if (P) P.push(sx1, sy1);else P = [sx1, sy1];\n      }\n    }\n    if (P) {\n      e0 = e1, e1 = this._edgecode(P[0], P[1]);\n      if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n    } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\n      return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\n    }\n    return P;\n  }\n  _clipSegment(x0, y0, x1, y1, c0, c1) {\n    while (true) {\n      if (c0 === 0 && c1 === 0) return [x0, y0, x1, y1];\n      if (c0 & c1) return null;\n      let x,\n        y,\n        c = c0 || c1;\n      if (c & 0b1000) x = x0 + (x1 - x0) * (this.ymax - y0) / (y1 - y0), y = this.ymax;else if (c & 0b0100) x = x0 + (x1 - x0) * (this.ymin - y0) / (y1 - y0), y = this.ymin;else if (c & 0b0010) y = y0 + (y1 - y0) * (this.xmax - x0) / (x1 - x0), x = this.xmax;else y = y0 + (y1 - y0) * (this.xmin - x0) / (x1 - x0), x = this.xmin;\n      if (c0) x0 = x, y0 = y, c0 = this._regioncode(x0, y0);else x1 = x, y1 = y, c1 = this._regioncode(x1, y1);\n    }\n  }\n  _clipInfinite(i, points, vx0, vy0, vxn, vyn) {\n    let P = Array.from(points),\n      p;\n    if (p = this._project(P[0], P[1], vx0, vy0)) P.unshift(p[0], p[1]);\n    if (p = this._project(P[P.length - 2], P[P.length - 1], vxn, vyn)) P.push(p[0], p[1]);\n    if (P = this._clipFinite(i, P)) {\n      for (let j = 0, n = P.length, c0, c1 = this._edgecode(P[n - 2], P[n - 1]); j < n; j += 2) {\n        c0 = c1, c1 = this._edgecode(P[j], P[j + 1]);\n        if (c0 && c1) j = this._edge(i, c0, c1, P, j), n = P.length;\n      }\n    } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\n      P = [this.xmin, this.ymin, this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax];\n    }\n    return P;\n  }\n  _edge(i, e0, e1, P, j) {\n    while (e0 !== e1) {\n      let x, y;\n      switch (e0) {\n        case 0b0101:\n          e0 = 0b0100;\n          continue;\n        // top-left\n        case 0b0100:\n          e0 = 0b0110, x = this.xmax, y = this.ymin;\n          break;\n        // top\n        case 0b0110:\n          e0 = 0b0010;\n          continue;\n        // top-right\n        case 0b0010:\n          e0 = 0b1010, x = this.xmax, y = this.ymax;\n          break;\n        // right\n        case 0b1010:\n          e0 = 0b1000;\n          continue;\n        // bottom-right\n        case 0b1000:\n          e0 = 0b1001, x = this.xmin, y = this.ymax;\n          break;\n        // bottom\n        case 0b1001:\n          e0 = 0b0001;\n          continue;\n        // bottom-left\n        case 0b0001:\n          e0 = 0b0101, x = this.xmin, y = this.ymin;\n          break;\n        // left\n      }\n      // Note: this implicitly checks for out of bounds: if P[j] or P[j+1] are\n      // undefined, the conditional statement will be executed.\n      if ((P[j] !== x || P[j + 1] !== y) && this.contains(i, x, y)) {\n        P.splice(j, 0, x, y), j += 2;\n      }\n    }\n    if (P.length > 4) {\n      for (let i = 0; i < P.length; i += 2) {\n        const j = (i + 2) % P.length,\n          k = (i + 4) % P.length;\n        if (P[i] === P[j] && P[j] === P[k] || P[i + 1] === P[j + 1] && P[j + 1] === P[k + 1]) P.splice(j, 2), i -= 2;\n      }\n    }\n    return j;\n  }\n  _project(x0, y0, vx, vy) {\n    let t = Infinity,\n      c,\n      x,\n      y;\n    if (vy < 0) {\n      // top\n      if (y0 <= this.ymin) return null;\n      if ((c = (this.ymin - y0) / vy) < t) y = this.ymin, x = x0 + (t = c) * vx;\n    } else if (vy > 0) {\n      // bottom\n      if (y0 >= this.ymax) return null;\n      if ((c = (this.ymax - y0) / vy) < t) y = this.ymax, x = x0 + (t = c) * vx;\n    }\n    if (vx > 0) {\n      // right\n      if (x0 >= this.xmax) return null;\n      if ((c = (this.xmax - x0) / vx) < t) x = this.xmax, y = y0 + (t = c) * vy;\n    } else if (vx < 0) {\n      // left\n      if (x0 <= this.xmin) return null;\n      if ((c = (this.xmin - x0) / vx) < t) x = this.xmin, y = y0 + (t = c) * vy;\n    }\n    return [x, y];\n  }\n  _edgecode(x, y) {\n    return (x === this.xmin ? 0b0001 : x === this.xmax ? 0b0010 : 0b0000) | (y === this.ymin ? 0b0100 : y === this.ymax ? 0b1000 : 0b0000);\n  }\n  _regioncode(x, y) {\n    return (x < this.xmin ? 0b0001 : x > this.xmax ? 0b0010 : 0b0000) | (y < this.ymin ? 0b0100 : y > this.ymax ? 0b1000 : 0b0000);\n  }\n}\n;// CONCATENATED MODULE: ./node_modules/d3-delaunay/src/delaunay.js\n\n\n\n\nconst delaunay_tau = 2 * Math.PI,\n  pow = Math.pow;\nfunction pointX(p) {\n  return p[0];\n}\nfunction pointY(p) {\n  return p[1];\n}\n\n// A triangulation is collinear if all its triangles have a non-null area\nfunction delaunay_collinear(d) {\n  const {\n    triangles,\n    coords\n  } = d;\n  for (let i = 0; i < triangles.length; i += 3) {\n    const a = 2 * triangles[i],\n      b = 2 * triangles[i + 1],\n      c = 2 * triangles[i + 2],\n      cross = (coords[c] - coords[a]) * (coords[b + 1] - coords[a + 1]) - (coords[b] - coords[a]) * (coords[c + 1] - coords[a + 1]);\n    if (cross > 1e-10) return false;\n  }\n  return true;\n}\nfunction jitter(x, y, r) {\n  return [x + Math.sin(x + y) * r, y + Math.cos(x - y) * r];\n}\nclass Delaunay {\n  static from(points, fx = pointX, fy = pointY, that) {\n    return new Delaunay("length" in points ? flatArray(points, fx, fy, that) : Float64Array.from(flatIterable(points, fx, fy, that)));\n  }\n  constructor(points) {\n    this._delaunator = new Delaunator(points);\n    this.inedges = new Int32Array(points.length / 2);\n    this._hullIndex = new Int32Array(points.length / 2);\n    this.points = this._delaunator.coords;\n    this._init();\n  }\n  update() {\n    this._delaunator.update();\n    this._init();\n    return this;\n  }\n  _init() {\n    const d = this._delaunator,\n      points = this.points;\n\n    // check for collinear\n    if (d.hull && d.hull.length > 2 && delaunay_collinear(d)) {\n      this.collinear = Int32Array.from({\n        length: points.length / 2\n      }, (_, i) => i).sort((i, j) => points[2 * i] - points[2 * j] || points[2 * i + 1] - points[2 * j + 1]); // for exact neighbors\n      const e = this.collinear[0],\n        f = this.collinear[this.collinear.length - 1],\n        bounds = [points[2 * e], points[2 * e + 1], points[2 * f], points[2 * f + 1]],\n        r = 1e-8 * Math.hypot(bounds[3] - bounds[1], bounds[2] - bounds[0]);\n      for (let i = 0, n = points.length / 2; i < n; ++i) {\n        const p = jitter(points[2 * i], points[2 * i + 1], r);\n        points[2 * i] = p[0];\n        points[2 * i + 1] = p[1];\n      }\n      this._delaunator = new Delaunator(points);\n    } else {\n      delete this.collinear;\n    }\n    const halfedges = this.halfedges = this._delaunator.halfedges;\n    const hull = this.hull = this._delaunator.hull;\n    const triangles = this.triangles = this._delaunator.triangles;\n    const inedges = this.inedges.fill(-1);\n    const hullIndex = this._hullIndex.fill(-1);\n\n    // Compute an index from each point to an (arbitrary) incoming halfedge\n    // Used to give the first neighbor of each point; for this reason,\n    // on the hull we give priority to exterior halfedges\n    for (let e = 0, n = halfedges.length; e < n; ++e) {\n      const p = triangles[e % 3 === 2 ? e - 2 : e + 1];\n      if (halfedges[e] === -1 || inedges[p] === -1) inedges[p] = e;\n    }\n    for (let i = 0, n = hull.length; i < n; ++i) {\n      hullIndex[hull[i]] = i;\n    }\n\n    // degenerate case: 1 or 2 (distinct) points\n    if (hull.length <= 2 && hull.length > 0) {\n      this.triangles = new Int32Array(3).fill(-1);\n      this.halfedges = new Int32Array(3).fill(-1);\n      this.triangles[0] = hull[0];\n      inedges[hull[0]] = 1;\n      if (hull.length === 2) {\n        inedges[hull[1]] = 0;\n        this.triangles[1] = hull[1];\n        this.triangles[2] = hull[1];\n      }\n    }\n  }\n  voronoi(bounds) {\n    return new Voronoi(this, bounds);\n  }\n  *neighbors(i) {\n    const {\n      inedges,\n      hull,\n      _hullIndex,\n      halfedges,\n      triangles,\n      collinear\n    } = this;\n\n    // degenerate case with several collinear points\n    if (collinear) {\n      const l = collinear.indexOf(i);\n      if (l > 0) yield collinear[l - 1];\n      if (l < collinear.length - 1) yield collinear[l + 1];\n      return;\n    }\n    const e0 = inedges[i];\n    if (e0 === -1) return; // coincident point\n    let e = e0,\n      p0 = -1;\n    do {\n      yield p0 = triangles[e];\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) return; // bad triangulation\n      e = halfedges[e];\n      if (e === -1) {\n        const p = hull[(_hullIndex[i] + 1) % hull.length];\n        if (p !== p0) yield p;\n        return;\n      }\n    } while (e !== e0);\n  }\n  find(x, y, i = 0) {\n    if ((x = +x, x !== x) || (y = +y, y !== y)) return -1;\n    const i0 = i;\n    let c;\n    while ((c = this._step(i, x, y)) >= 0 && c !== i && c !== i0) i = c;\n    return c;\n  }\n  _step(i, x, y) {\n    const {\n      inedges,\n      hull,\n      _hullIndex,\n      halfedges,\n      triangles,\n      points\n    } = this;\n    if (inedges[i] === -1 || !points.length) return (i + 1) % (points.length >> 1);\n    let c = i;\n    let dc = pow(x - points[i * 2], 2) + pow(y - points[i * 2 + 1], 2);\n    const e0 = inedges[i];\n    let e = e0;\n    do {\n      let t = triangles[e];\n      const dt = pow(x - points[t * 2], 2) + pow(y - points[t * 2 + 1], 2);\n      if (dt < dc) dc = dt, c = t;\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) break; // bad triangulation\n      e = halfedges[e];\n      if (e === -1) {\n        e = hull[(_hullIndex[i] + 1) % hull.length];\n        if (e !== t) {\n          if (pow(x - points[e * 2], 2) + pow(y - points[e * 2 + 1], 2) < dc) return e;\n        }\n        break;\n      }\n    } while (e !== e0);\n    return c;\n  }\n  render(context) {\n    const buffer = context == null ? context = new path_Path() : undefined;\n    const {\n      points,\n      halfedges,\n      triangles\n    } = this;\n    for (let i = 0, n = halfedges.length; i < n; ++i) {\n      const j = halfedges[i];\n      if (j < i) continue;\n      const ti = triangles[i] * 2;\n      const tj = triangles[j] * 2;\n      context.moveTo(points[ti], points[ti + 1]);\n      context.lineTo(points[tj], points[tj + 1]);\n    }\n    this.renderHull(context);\n    return buffer && buffer.value();\n  }\n  renderPoints(context, r) {\n    if (r === undefined && (!context || typeof context.moveTo !== "function")) r = context, context = null;\n    r = r == undefined ? 2 : +r;\n    const buffer = context == null ? context = new path_Path() : undefined;\n    const {\n      points\n    } = this;\n    for (let i = 0, n = points.length; i < n; i += 2) {\n      const x = points[i],\n        y = points[i + 1];\n      context.moveTo(x + r, y);\n      context.arc(x, y, r, 0, delaunay_tau);\n    }\n    return buffer && buffer.value();\n  }\n  renderHull(context) {\n    const buffer = context == null ? context = new path_Path() : undefined;\n    const {\n      hull,\n      points\n    } = this;\n    const h = hull[0] * 2,\n      n = hull.length;\n    context.moveTo(points[h], points[h + 1]);\n    for (let i = 1; i < n; ++i) {\n      const h = 2 * hull[i];\n      context.lineTo(points[h], points[h + 1]);\n    }\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  hullPolygon() {\n    const polygon = new Polygon();\n    this.renderHull(polygon);\n    return polygon.value();\n  }\n  renderTriangle(i, context) {\n    const buffer = context == null ? context = new path_Path() : undefined;\n    const {\n      points,\n      triangles\n    } = this;\n    const t0 = triangles[i *= 3] * 2;\n    const t1 = triangles[i + 1] * 2;\n    const t2 = triangles[i + 2] * 2;\n    context.moveTo(points[t0], points[t0 + 1]);\n    context.lineTo(points[t1], points[t1 + 1]);\n    context.lineTo(points[t2], points[t2 + 1]);\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  *trianglePolygons() {\n    const {\n      triangles\n    } = this;\n    for (let i = 0, n = triangles.length / 3; i < n; ++i) {\n      yield this.trianglePolygon(i);\n    }\n  }\n  trianglePolygon(i) {\n    const polygon = new Polygon();\n    this.renderTriangle(i, polygon);\n    return polygon.value();\n  }\n}\nfunction flatArray(points, fx, fy, that) {\n  const n = points.length;\n  const array = new Float64Array(n * 2);\n  for (let i = 0; i < n; ++i) {\n    const p = points[i];\n    array[i * 2] = fx.call(that, p, i, points);\n    array[i * 2 + 1] = fy.call(that, p, i, points);\n  }\n  return array;\n}\nfunction* flatIterable(points, fx, fy, that) {\n  let i = 0;\n  for (const p of points) {\n    yield fx.call(that, p, i, points);\n    yield fy.call(that, p, i, points);\n    ++i;\n  }\n}\n;// CONCATENATED MODULE: ./node_modules/d3-delaunay/src/index.js\n\n\n;// CONCATENATED MODULE: ./node_modules/d3-dispatch/src/index.js\n\n;// CONCATENATED MODULE: ./node_modules/d3-drag/src/constant.js\n/* harmony default export */ const d3_drag_src_constant = (x => () => x);\n;// CONCATENATED MODULE: ./node_modules/d3-drag/src/event.js\nfunction DragEvent(type, {\n  sourceEvent,\n  subject,\n  target,\n  identifier,\n  active,\n  x,\n  y,\n  dx,\n  dy,\n  dispatch\n}) {\n  Object.defineProperties(this, {\n    type: {\n      value: type,\n      enumerable: true,\n      configurable: true\n    },\n    sourceEvent: {\n      value: sourceEvent,\n      enumerable: true,\n      configurable: true\n    },\n    subject: {\n      value: subject,\n      enumerable: true,\n      configurable: true\n    },\n    target: {\n      value: target,\n      enumerable: true,\n      configurable: true\n    },\n    identifier: {\n      value: identifier,\n      enumerable: true,\n      configurable: true\n    },\n    active: {\n      value: active,\n      enumerable: true,\n      configurable: true\n    },\n    x: {\n      value: x,\n      enumerable: true,\n      configurable: true\n    },\n    y: {\n      value: y,\n      enumerable: true,\n      configurable: true\n    },\n    dx: {\n      value: dx,\n      enumerable: true,\n      configurable: true\n    },\n    dy: {\n      value: dy,\n      enumerable: true,\n      configurable: true\n    },\n    _: {\n      value: dispatch\n    }\n  });\n}\nDragEvent.prototype.on = function () {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n;// CONCATENATED MODULE: ./node_modules/d3-drag/src/drag.js\n\n\n\n\n\n\n\n// Ignore right-click, since that should open the context menu.\nfunction drag_defaultFilter(event) {\n  return !event.ctrlKey && !event.button;\n}\nfunction defaultContainer() {\n  return this.parentNode;\n}\nfunction defaultSubject(event, d) {\n  return d == null ? {\n    x: event.x,\n    y: event.y\n  } : d;\n}\nfunction drag_defaultTouchable() {\n  return navigator.maxTouchPoints || "ontouchstart" in this;\n}\n/* harmony default export */ function drag() {\n  var filter = drag_defaultFilter,\n    container = defaultContainer,\n    subject = defaultSubject,\n    touchable = drag_defaultTouchable,\n    gestures = {},\n    listeners = src_dispatch("start", "drag", "end"),\n    active = 0,\n    mousedownx,\n    mousedowny,\n    mousemoving,\n    touchending,\n    clickDistance2 = 0;\n  function drag(selection) {\n    selection.on("mousedown.drag", mousedowned).filter(touchable).on("touchstart.drag", touchstarted).on("touchmove.drag", touchmoved, nonpassive).on("touchend.drag touchcancel.drag", touchended).style("touch-action", "none").style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");\n  }\n  function mousedowned(event, d) {\n    if (touchending || !filter.call(this, event, d)) return;\n    var gesture = beforestart(this, container.call(this, event, d), event, d, "mouse");\n    if (!gesture) return;\n    src_select(event.view).on("mousemove.drag", mousemoved, nonpassivecapture).on("mouseup.drag", mouseupped, nonpassivecapture);\n    nodrag(event.view);\n    nopropagation(event);\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture("start", event);\n  }\n  function mousemoved(event) {\n    noevent(event);\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx,\n        dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse("drag", event);\n  }\n  function mouseupped(event) {\n    src_select(event.view).on("mousemove.drag mouseup.drag", null);\n    yesdrag(event.view, mousemoving);\n    noevent(event);\n    gestures.mouse("end", event);\n  }\n  function touchstarted(event, d) {\n    if (!filter.call(this, event, d)) return;\n    var touches = event.changedTouches,\n      c = container.call(this, event, d),\n      n = touches.length,\n      i,\n      gesture;\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(this, c, event, d, touches[i].identifier, touches[i])) {\n        nopropagation(event);\n        gesture("start", event, touches[i]);\n      }\n    }\n  }\n  function touchmoved(event) {\n    var touches = event.changedTouches,\n      n = touches.length,\n      i,\n      gesture;\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent(event);\n        gesture("drag", event, touches[i]);\n      }\n    }\n  }\n  function touchended(event) {\n    var touches = event.changedTouches,\n      n = touches.length,\n      i,\n      gesture;\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function () {\n      touchending = null;\n    }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation(event);\n        gesture("end", event, touches[i]);\n      }\n    }\n  }\n  function beforestart(that, container, event, d, identifier, touch) {\n    var dispatch = listeners.copy(),\n      p = pointer(touch || event, container),\n      dx,\n      dy,\n      s;\n    if ((s = subject.call(that, new DragEvent("beforestart", {\n      sourceEvent: event,\n      target: drag,\n      identifier,\n      active,\n      x: p[0],\n      y: p[1],\n      dx: 0,\n      dy: 0,\n      dispatch\n    }), d)) == null) return;\n    dx = s.x - p[0] || 0;\n    dy = s.y - p[1] || 0;\n    return function gesture(type, event, touch) {\n      var p0 = p,\n        n;\n      switch (type) {\n        case "start":\n          gestures[identifier] = gesture, n = active++;\n          break;\n        case "end":\n          delete gestures[identifier], --active;\n        // falls through\n        case "drag":\n          p = pointer(touch || event, container), n = active;\n          break;\n      }\n      dispatch.call(type, that, new DragEvent(type, {\n        sourceEvent: event,\n        subject: s,\n        target: drag,\n        identifier,\n        active: n,\n        x: p[0] + dx,\n        y: p[1] + dy,\n        dx: p[0] - p0[0],\n        dy: p[1] - p0[1],\n        dispatch\n      }), d);\n    };\n  }\n  drag.filter = function (_) {\n    return arguments.length ? (filter = typeof _ === "function" ? _ : d3_drag_src_constant(!!_), drag) : filter;\n  };\n  drag.container = function (_) {\n    return arguments.length ? (container = typeof _ === "function" ? _ : d3_drag_src_constant(_), drag) : container;\n  };\n  drag.subject = function (_) {\n    return arguments.length ? (subject = typeof _ === "function" ? _ : d3_drag_src_constant(_), drag) : subject;\n  };\n  drag.touchable = function (_) {\n    return arguments.length ? (touchable = typeof _ === "function" ? _ : d3_drag_src_constant(!!_), drag) : touchable;\n  };\n  drag.on = function () {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n  drag.clickDistance = function (_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n  return drag;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-drag/src/index.js\n\n\n;// CONCATENATED MODULE: ./node_modules/d3-dsv/src/dsv.js\nvar EOL = {},\n  EOF = {},\n  QUOTE = 34,\n  NEWLINE = 10,\n  RETURN = 13;\nfunction objectConverter(columns) {\n  return new Function("d", "return {" + columns.map(function (name, i) {\n    return JSON.stringify(name) + ": d[" + i + "] || \\"\\"";\n  }).join(",") + "}");\n}\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function (row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n    columns = [];\n  rows.forEach(function (row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n  return columns;\n}\nfunction pad(value, width) {\n  var s = value + "",\n    length = s.length;\n  return length < width ? new Array(width - length + 1).join(0) + s : s;\n}\nfunction formatYear(year) {\n  return year < 0 ? "-" + pad(-year, 6) : year > 9999 ? "+" + pad(year, 6) : pad(year, 4);\n}\nfunction formatDate(date) {\n  var hours = date.getUTCHours(),\n    minutes = date.getUTCMinutes(),\n    seconds = date.getUTCSeconds(),\n    milliseconds = date.getUTCMilliseconds();\n  return isNaN(date) ? "Invalid Date" : formatYear(date.getUTCFullYear(), 4) + "-" + pad(date.getUTCMonth() + 1, 2) + "-" + pad(date.getUTCDate(), 2) + (milliseconds ? "T" + pad(hours, 2) + ":" + pad(minutes, 2) + ":" + pad(seconds, 2) + "." + pad(milliseconds, 3) + "Z" : seconds ? "T" + pad(hours, 2) + ":" + pad(minutes, 2) + ":" + pad(seconds, 2) + "Z" : minutes || hours ? "T" + pad(hours, 2) + ":" + pad(minutes, 2) + "Z" : "");\n}\n/* harmony default export */ function dsv(delimiter) {\n  var reFormat = new RegExp("[\\"" + delimiter + "\\n\\r]"),\n    DELIMITER = delimiter.charCodeAt(0);\n  function parse(text, f) {\n    var convert,\n      columns,\n      rows = parseRows(text, function (row, i) {\n        if (convert) return convert(row, i - 1);\n        columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n      });\n    rows.columns = columns || [];\n    return rows;\n  }\n  function parseRows(text, f) {\n    var rows = [],\n      // output rows\n      N = text.length,\n      I = 0,\n      // current character index\n      n = 0,\n      // current line number\n      t,\n      // current token\n      eof = N <= 0,\n      // current token followed by EOF?\n      eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i,\n        j = I,\n        c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;else if (c === RETURN) {\n          eol = true;\n          if (text.charCodeAt(I) === NEWLINE) ++I;\n        }\n        return text.slice(j + 1, i - 1).replace(/""/g, "\\"");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;else if (c === RETURN) {\n          eol = true;\n          if (text.charCodeAt(I) === NEWLINE) ++I;\n        } else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n    return rows;\n  }\n  function preformatBody(rows, columns) {\n    return rows.map(function (row) {\n      return columns.map(function (column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    });\n  }\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join("\\n");\n  }\n  function formatBody(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return preformatBody(rows, columns).join("\\n");\n  }\n  function formatRows(rows) {\n    return rows.map(formatRow).join("\\n");\n  }\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n  function formatValue(value) {\n    return value == null ? "" : value instanceof Date ? formatDate(value) : reFormat.test(value += "") ? "\\"" + value.replace(/"/g, "\\"\\"") + "\\"" : value;\n  }\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatBody: formatBody,\n    formatRows: formatRows,\n    formatRow: formatRow,\n    formatValue: formatValue\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/d3-dsv/src/csv.js\n\nvar csv = dsv(",");\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatBody = csv.formatBody;\nvar csvFormatRows = csv.formatRows;\nvar csvFormatRow = csv.formatRow;\nvar csvFormatValue = csv.formatValue;\n;// CONCATENATED MODULE: ./node_modules/d3-dsv/src/tsv.js\n\nvar tsv = dsv("\\t");\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatBody = tsv.formatBody;\nvar tsvFormatRows = tsv.formatRows;\nvar tsvFormatRow = tsv.formatRow;\nvar tsvFormatValue = tsv.formatValue;\n;// CONCATENATED MODULE: ./node_modules/d3-dsv/src/autoType.js\nfunction autoType(object) {\n  for (var key in object) {\n    var value = object[key].trim(),\n      number,\n      m;\n    if (!value) value = null;else if (value === "true") value = true;else if (value === "false") value = false;else if (value === "NaN") value = NaN;else if (!isNaN(number = +value)) value = number;else if (m = value.match(/^([-+]\\d{2})?\\d{4}(-\\d{2}(-\\d{2})?)?(T\\d{2}:\\d{2}(:\\d{2}(\\.\\d{3})?)?(Z|[-+]\\d{2}:\\d{2})?)?$/)) {\n      if (fixtz && !!m[4] && !m[7]) value = value.replace(/-/g, "/").replace(/T/, " ");\n      value = new Date(value);\n    } else continue;\n    object[key] = value;\n  }\n  return object;\n}\n\n// https://github.com/d3/d3-dsv/issues/45\nconst fixtz = new Date("2019-01-01T00:00").getHours() || new Date("2019-07-01T00:00").getHours();\n;// CONCATENATED MODULE: ./node_modules/d3-dsv/src/index.js\n\n\n\n\n;// CONCATENATED MODULE: ./node_modules/d3-ease/src/linear.js\nconst linear_linear = t => +t;\n;// CONCATENATED MODULE: ./node_modules/d3-ease/src/quad.js\nfunction quadIn(t) {\n  return t * t;\n}\nfunction quadOut(t) {\n  return t * (2 - t);\n}\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-ease/src/poly.js\nvar exponent = 3;\nvar polyIn = function custom(e) {\n  e = +e;\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n  polyIn.exponent = custom;\n  return polyIn;\n}(exponent);\nvar polyOut = function custom(e) {\n  e = +e;\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n  polyOut.exponent = custom;\n  return polyOut;\n}(exponent);\nvar polyInOut = function custom(e) {\n  e = +e;\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n  polyInOut.exponent = custom;\n  return polyInOut;\n}(exponent);\n;// CONCATENATED MODULE: ./node_modules/d3-ease/src/sin.js\nvar sin_pi = Math.PI,\n  sin_halfPi = sin_pi / 2;\nfunction sinIn(t) {\n  return +t === 1 ? 1 : 1 - Math.cos(t * sin_halfPi);\n}\nfunction sinOut(t) {\n  return Math.sin(t * sin_halfPi);\n}\nfunction sinInOut(t) {\n  return (1 - Math.cos(sin_pi * t)) / 2;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-ease/src/math.js\n// tpmt is two power minus ten times t scaled to [0,1]\nfunction tpmt(x) {\n  return (Math.pow(2, -10 * x) - 0.0009765625) * 1.0009775171065494;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-ease/src/exp.js\n\nfunction expIn(t) {\n  return tpmt(1 - +t);\n}\nfunction expOut(t) {\n  return 1 - tpmt(t);\n}\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? tpmt(1 - t) : 2 - tpmt(t - 1)) / 2;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-ease/src/circle.js\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-ease/src/bounce.js\nvar b1 = 4 / 11,\n  b2 = 6 / 11,\n  b3 = 8 / 11,\n  b4 = 3 / 4,\n  b5 = 9 / 11,\n  b6 = 10 / 11,\n  b7 = 15 / 16,\n  b8 = 21 / 22,\n  b9 = 63 / 64,\n  b0 = 1 / b1 / b1;\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-ease/src/back.js\nvar overshoot = 1.70158;\nvar backIn = function custom(s) {\n  s = +s;\n  function backIn(t) {\n    return (t = +t) * t * (s * (t - 1) + t);\n  }\n  backIn.overshoot = custom;\n  return backIn;\n}(overshoot);\nvar backOut = function custom(s) {\n  s = +s;\n  function backOut(t) {\n    return --t * t * ((t + 1) * s + t) + 1;\n  }\n  backOut.overshoot = custom;\n  return backOut;\n}(overshoot);\nvar backInOut = function custom(s) {\n  s = +s;\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n  backInOut.overshoot = custom;\n  return backInOut;\n}(overshoot);\n;// CONCATENATED MODULE: ./node_modules/d3-ease/src/elastic.js\n\nvar elastic_tau = 2 * Math.PI,\n  amplitude = 1,\n  period = 0.3;\nvar elasticIn = function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= elastic_tau);\n  function elasticIn(t) {\n    return a * tpmt(- --t) * Math.sin((s - t) / p);\n  }\n  elasticIn.amplitude = function (a) {\n    return custom(a, p * elastic_tau);\n  };\n  elasticIn.period = function (p) {\n    return custom(a, p);\n  };\n  return elasticIn;\n}(amplitude, period);\nvar elasticOut = function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= elastic_tau);\n  function elasticOut(t) {\n    return 1 - a * tpmt(t = +t) * Math.sin((t + s) / p);\n  }\n  elasticOut.amplitude = function (a) {\n    return custom(a, p * elastic_tau);\n  };\n  elasticOut.period = function (p) {\n    return custom(a, p);\n  };\n  return elasticOut;\n}(amplitude, period);\nvar elasticInOut = function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= elastic_tau);\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0 ? a * tpmt(-t) * Math.sin((s - t) / p) : 2 - a * tpmt(t) * Math.sin((s + t) / p)) / 2;\n  }\n  elasticInOut.amplitude = function (a) {\n    return custom(a, p * elastic_tau);\n  };\n  elasticInOut.period = function (p) {\n    return custom(a, p);\n  };\n  return elasticInOut;\n}(amplitude, period);\n;// CONCATENATED MODULE: ./node_modules/d3-ease/src/index.js\n\n\n\n\n\n\n\n\n\n\n;// CONCATENATED MODULE: ./node_modules/d3-fetch/src/blob.js\nfunction responseBlob(response) {\n  if (!response.ok) throw new Error(response.status + " " + response.statusText);\n  return response.blob();\n}\n/* harmony default export */ function blob(input, init) {\n  return fetch(input, init).then(responseBlob);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-fetch/src/buffer.js\nfunction responseArrayBuffer(response) {\n  if (!response.ok) throw new Error(response.status + " " + response.statusText);\n  return response.arrayBuffer();\n}\n/* harmony default export */ function buffer(input, init) {\n  return fetch(input, init).then(responseArrayBuffer);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-fetch/src/text.js\nfunction responseText(response) {\n  if (!response.ok) throw new Error(response.status + " " + response.statusText);\n  return response.text();\n}\n/* harmony default export */ function src_text(input, init) {\n  return fetch(input, init).then(responseText);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-fetch/src/dsv.js\n\n\nfunction dsvParse(parse) {\n  return function (input, init, row) {\n    if (arguments.length === 2 && typeof init === "function") row = init, init = undefined;\n    return src_text(input, init).then(function (response) {\n      return parse(response, row);\n    });\n  };\n}\nfunction dsv_dsv(delimiter, input, init, row) {\n  if (arguments.length === 3 && typeof init === "function") row = init, init = undefined;\n  var format = dsv(delimiter);\n  return src_text(input, init).then(function (response) {\n    return format.parse(response, row);\n  });\n}\nvar dsv_csv = dsvParse(csvParse);\nvar dsv_tsv = dsvParse(tsvParse);\n;// CONCATENATED MODULE: ./node_modules/d3-fetch/src/image.js\n/* harmony default export */ function src_image(input, init) {\n  return new Promise(function (resolve, reject) {\n    var image = new Image();\n    for (var key in init) image[key] = init[key];\n    image.onerror = reject;\n    image.onload = function () {\n      resolve(image);\n    };\n    image.src = input;\n  });\n}\n;// CONCATENATED MODULE: ./node_modules/d3-fetch/src/json.js\nfunction responseJson(response) {\n  if (!response.ok) throw new Error(response.status + " " + response.statusText);\n  if (response.status === 204 || response.status === 205) return;\n  return response.json();\n}\n/* harmony default export */ function json(input, init) {\n  return fetch(input, init).then(responseJson);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-fetch/src/xml.js\n\nfunction parser(type) {\n  return (input, init) => src_text(input, init).then(text => new DOMParser().parseFromString(text, type));\n}\n/* harmony default export */ const xml = (parser("application/xml"));\nvar xml_html = parser("text/html");\nvar svg = parser("image/svg+xml");\n;// CONCATENATED MODULE: ./node_modules/d3-fetch/src/index.js\n\n\n\n\n\n\n\n;// CONCATENATED MODULE: ./node_modules/d3-force/src/center.js\n/* harmony default export */ function src_center(x, y) {\n  var nodes,\n    strength = 1;\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n  function force() {\n    var i,\n      n = nodes.length,\n      node,\n      sx = 0,\n      sy = 0;\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n    for (sx = (sx / n - x) * strength, sy = (sy / n - y) * strength, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n  force.initialize = function (_) {\n    nodes = _;\n  };\n  force.x = function (_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n  force.y = function (_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n  force.strength = function (_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n  return force;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-quadtree/src/add.js\n/* harmony default export */ function add(d) {\n  const x = +this._x.call(null, d),\n    y = +this._y.call(null, d);\n  return add_add(this.cover(x, y), x, y, d);\n}\nfunction add_add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n    node = tree._root,\n    leaf = {\n      data: d\n    },\n    x0 = tree._x0,\n    y0 = tree._y0,\n    x1 = tree._x1,\n    y1 = tree._y1,\n    xm,\n    ym,\n    xp,\n    yp,\n    right,\n    bottom,\n    i,\n    j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | xp >= xm));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\nfunction addAll(data) {\n  var d,\n    i,\n    n = data.length,\n    x,\n    y,\n    xz = new Array(n),\n    yz = new Array(n),\n    x0 = Infinity,\n    y0 = Infinity,\n    x1 = -Infinity,\n    y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, abort.\n  if (x0 > x1 || y0 > y1) return this;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add_add(this, xz[i], yz[i], data[i]);\n  }\n  return this;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-quadtree/src/cover.js\n/* harmony default export */ function cover(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n    y0 = this._y0,\n    x1 = this._x1,\n    y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else {\n    var z = x1 - x0 || 1,\n      node = this._root,\n      parent,\n      i;\n    while (x0 > x || x >= x1 || y0 > y || y >= y1) {\n      i = (y < y0) << 1 | x < x0;\n      parent = new Array(4), parent[i] = node, node = parent, z *= 2;\n      switch (i) {\n        case 0:\n          x1 = x0 + z, y1 = y0 + z;\n          break;\n        case 1:\n          x0 = x1 - z, y1 = y0 + z;\n          break;\n        case 2:\n          x1 = x0 + z, y0 = y1 - z;\n          break;\n        case 3:\n          x0 = x1 - z, y0 = y1 - z;\n          break;\n      }\n    }\n    if (this._root && this._root.length) this._root = node;\n  }\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-quadtree/src/data.js\n/* harmony default export */ function src_data() {\n  var data = [];\n  this.visit(function (node) {\n    if (!node.length) do data.push(node.data); while (node = node.next);\n  });\n  return data;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-quadtree/src/extent.js\n/* harmony default export */ function src_extent(_) {\n  return arguments.length ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1]) : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n;// CONCATENATED MODULE: ./node_modules/d3-quadtree/src/quad.js\n/* harmony default export */ function quad(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-quadtree/src/find.js\n\n/* harmony default export */ function src_find(x, y, radius) {\n  var data,\n    x0 = this._x0,\n    y0 = this._y0,\n    x1,\n    y1,\n    x2,\n    y2,\n    x3 = this._x1,\n    y3 = this._y1,\n    quads = [],\n    node = this._root,\n    q,\n    i;\n  if (node) quads.push(new quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n  while (q = quads.pop()) {\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node) || (x1 = q.x0) > x3 || (y1 = q.y0) > y3 || (x2 = q.x1) < x0 || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n        ym = (y1 + y2) / 2;\n      quads.push(new quad(node[3], xm, ym, x2, y2), new quad(node[2], x1, ym, xm, y2), new quad(node[1], xm, y1, x2, ym), new quad(node[0], x1, y1, xm, ym));\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | x >= xm) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n        dy = y - +this._y.call(null, node.data),\n        d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n  return data;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-quadtree/src/remove.js\n/* harmony default export */ function src_remove(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n    node = this._root,\n    retainer,\n    previous,\n    next,\n    x0 = this._x0,\n    y0 = this._y0,\n    x1 = this._x1,\n    y1 = this._y1,\n    x,\n    y,\n    xm,\n    ym,\n    right,\n    bottom,\n    i,\n    j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[i + 1 & 3] || parent[i + 2 & 3] || parent[i + 3 & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return next ? previous.next = next : delete previous.next, this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3]) && node === (parent[3] || parent[2] || parent[1] || parent[0]) && !node.length) {\n    if (retainer) retainer[j] = node;else this._root = node;\n  }\n  return this;\n}\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-quadtree/src/root.js\n/* harmony default export */ function src_root() {\n  return this._root;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-quadtree/src/size.js\n/* harmony default export */ function src_size() {\n  var size = 0;\n  this.visit(function (node) {\n    if (!node.length) do ++size; while (node = node.next);\n  });\n  return size;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-quadtree/src/visit.js\n\n/* harmony default export */ function visit(callback) {\n  var quads = [],\n    q,\n    node = this._root,\n    child,\n    x0,\n    y0,\n    x1,\n    y1;\n  if (node) quads.push(new quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2,\n        ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-quadtree/src/visitAfter.js\n\n/* harmony default export */ function visitAfter(callback) {\n  var quads = [],\n    next = [],\n    q;\n  if (this._root) quads.push(new quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child,\n        x0 = q.x0,\n        y0 = q.y0,\n        x1 = q.x1,\n        y1 = q.y1,\n        xm = (x0 + x1) / 2,\n        ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-quadtree/src/x.js\nfunction x_defaultX(d) {\n  return d[0];\n}\n/* harmony default export */ function x(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-quadtree/src/y.js\nfunction y_defaultY(d) {\n  return d[1];\n}\n/* harmony default export */ function y(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-quadtree/src/quadtree.js\n\n\n\n\n\n\n\n\n\n\n\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? x_defaultX : x, y == null ? y_defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\nfunction leaf_copy(leaf) {\n  var copy = {\n      data: leaf.data\n    },\n    next = copy;\n  while (leaf = leaf.next) next = next.next = {\n    data: leaf.data\n  };\n  return copy;\n}\nvar treeProto = quadtree.prototype = Quadtree.prototype;\ntreeProto.copy = function () {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n    node = this._root,\n    nodes,\n    child;\n  if (!node) return copy;\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n  nodes = [{\n    source: node,\n    target: copy._root = new Array(4)\n  }];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({\n          source: child,\n          target: node.target[i] = new Array(4)\n        });else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n  return copy;\n};\ntreeProto.add = add;\ntreeProto.addAll = addAll;\ntreeProto.cover = cover;\ntreeProto.data = src_data;\ntreeProto.extent = src_extent;\ntreeProto.find = src_find;\ntreeProto.remove = src_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = src_root;\ntreeProto.size = src_size;\ntreeProto.visit = visit;\ntreeProto.visitAfter = visitAfter;\ntreeProto.x = x;\ntreeProto.y = y;\n;// CONCATENATED MODULE: ./node_modules/d3-force/src/constant.js\n/* harmony default export */ function d3_force_src_constant(x) {\n  return function () {\n    return x;\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/d3-force/src/jiggle.js\n/* harmony default export */ function jiggle(random) {\n  return (random() - 0.5) * 1e-6;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-force/src/collide.js\n\n\n\nfunction collide_x(d) {\n  return d.x + d.vx;\n}\nfunction collide_y(d) {\n  return d.y + d.vy;\n}\n/* harmony default export */ function collide(radius) {\n  var nodes,\n    radii,\n    random,\n    strength = 1,\n    iterations = 1;\n  if (typeof radius !== "function") radius = d3_force_src_constant(radius == null ? 1 : +radius);\n  function force() {\n    var i,\n      n = nodes.length,\n      tree,\n      node,\n      xi,\n      yi,\n      ri,\n      ri2;\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, collide_x, collide_y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data,\n        rj = quad.r,\n        r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n            y = yi - data.y - data.vy,\n            l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(random), l += x * x;\n            if (y === 0) y = jiggle(random), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n  function initialize() {\n    if (!nodes) return;\n    var i,\n      n = nodes.length,\n      node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n  force.initialize = function (_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n  force.iterations = function (_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n  force.strength = function (_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n  force.radius = function (_) {\n    return arguments.length ? (radius = typeof _ === "function" ? _ : d3_force_src_constant(+_), initialize(), force) : radius;\n  };\n  return force;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-force/src/link.js\n\n\nfunction link_index(d) {\n  return d.index;\n}\nfunction link_find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error("node not found: " + nodeId);\n  return node;\n}\n/* harmony default export */ function src_link(links) {\n  var id = link_index,\n    strength = defaultStrength,\n    strengths,\n    distance = d3_force_src_constant(30),\n    distances,\n    nodes,\n    count,\n    bias,\n    random,\n    iterations = 1;\n  if (links == null) links = [];\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle(random);\n        y = target.y + target.vy - source.y - source.vy || jiggle(random);\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n  function initialize() {\n    if (!nodes) return;\n    var i,\n      n = nodes.length,\n      m = links.length,\n      nodeById = new Map(nodes.map((d, i) => [id(d, i, nodes), d])),\n      link;\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== "object") link.source = link_find(nodeById, link.source);\n      if (typeof link.target !== "object") link.target = link_find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n  function initializeStrength() {\n    if (!nodes) return;\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n  function initializeDistance() {\n    if (!nodes) return;\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n  force.initialize = function (_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n  force.links = function (_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n  force.id = function (_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n  force.iterations = function (_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n  force.strength = function (_) {\n    return arguments.length ? (strength = typeof _ === "function" ? _ : d3_force_src_constant(+_), initializeStrength(), force) : strength;\n  };\n  force.distance = function (_) {\n    return arguments.length ? (distance = typeof _ === "function" ? _ : d3_force_src_constant(+_), initializeDistance(), force) : distance;\n  };\n  return force;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-force/src/lcg.js\n// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use\nconst a = 1664525;\nconst c = 1013904223;\nconst m = 4294967296; // 2^32\n\n/* harmony default export */ function lcg() {\n  let s = 1;\n  return () => (s = (a * s + c) % m) / m;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-force/src/simulation.js\n\n\n\nfunction simulation_x(d) {\n  return d.x;\n}\nfunction simulation_y(d) {\n  return d.y;\n}\nvar initialRadius = 10,\n  initialAngle = Math.PI * (3 - Math.sqrt(5));\n/* harmony default export */ function simulation(nodes) {\n  var simulation,\n    alpha = 1,\n    alphaMin = 0.001,\n    alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n    alphaTarget = 0,\n    velocityDecay = 0.6,\n    forces = new Map(),\n    stepper = timer(step),\n    event = src_dispatch("tick", "end"),\n    random = lcg();\n  if (nodes == null) nodes = [];\n  function step() {\n    tick();\n    event.call("tick", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call("end", simulation);\n    }\n  }\n  function tick(iterations) {\n    var i,\n      n = nodes.length,\n      node;\n    if (iterations === undefined) iterations = 1;\n    for (var k = 0; k < iterations; ++k) {\n      alpha += (alphaTarget - alpha) * alphaDecay;\n      forces.forEach(function (force) {\n        force(alpha);\n      });\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        if (node.fx == null) node.x += node.vx *= velocityDecay;else node.x = node.fx, node.vx = 0;\n        if (node.fy == null) node.y += node.vy *= velocityDecay;else node.y = node.fy, node.vy = 0;\n      }\n    }\n    return simulation;\n  }\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (node.fx != null) node.x = node.fx;\n      if (node.fy != null) node.y = node.fy;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(0.5 + i),\n          angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes, random);\n    return force;\n  }\n  initializeNodes();\n  return simulation = {\n    tick: tick,\n    restart: function () {\n      return stepper.restart(step), simulation;\n    },\n    stop: function () {\n      return stepper.stop(), simulation;\n    },\n    nodes: function (_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.forEach(initializeForce), simulation) : nodes;\n    },\n    alpha: function (_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n    alphaMin: function (_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n    alphaDecay: function (_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n    alphaTarget: function (_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n    velocityDecay: function (_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n    randomSource: function (_) {\n      return arguments.length ? (random = _, forces.forEach(initializeForce), simulation) : random;\n    },\n    force: function (name, _) {\n      return arguments.length > 1 ? (_ == null ? forces.delete(name) : forces.set(name, initializeForce(_)), simulation) : forces.get(name);\n    },\n    find: function (x, y, radius) {\n      var i = 0,\n        n = nodes.length,\n        dx,\n        dy,\n        d2,\n        node,\n        closest;\n      if (radius == null) radius = Infinity;else radius *= radius;\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n      return closest;\n    },\n    on: function (name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/d3-force/src/manyBody.js\n\n\n\n\n/* harmony default export */ function manyBody() {\n  var nodes,\n    node,\n    random,\n    alpha,\n    strength = d3_force_src_constant(-30),\n    strengths,\n    distanceMin2 = 1,\n    distanceMax2 = Infinity,\n    theta2 = 0.81;\n  function force(_) {\n    var i,\n      n = nodes.length,\n      tree = quadtree(nodes, simulation_x, simulation_y).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n  function initialize() {\n    if (!nodes) return;\n    var i,\n      n = nodes.length,\n      node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n  function accumulate(quad) {\n    var strength = 0,\n      q,\n      c,\n      weight = 0,\n      x,\n      y,\n      i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index]; while (q = q.next);\n    }\n    quad.value = strength;\n  }\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n    var x = quad.x - node.x,\n      y = quad.y - node.y,\n      w = x2 - x1,\n      l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(random), l += x * x;\n        if (y === 0) y = jiggle(random), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(random), l += x * x;\n      if (y === 0) y = jiggle(random), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n  force.initialize = function (_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n  force.strength = function (_) {\n    return arguments.length ? (strength = typeof _ === "function" ? _ : d3_force_src_constant(+_), initialize(), force) : strength;\n  };\n  force.distanceMin = function (_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n  force.distanceMax = function (_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n  force.theta = function (_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n  return force;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-force/src/radial.js\n\n/* harmony default export */ function radial(radius, x, y) {\n  var nodes,\n    strength = d3_force_src_constant(0.1),\n    strengths,\n    radiuses;\n  if (typeof radius !== "function") radius = d3_force_src_constant(+radius);\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n  function force(alpha) {\n    for (var i = 0, n = nodes.length; i < n; ++i) {\n      var node = nodes[i],\n        dx = node.x - x || 1e-6,\n        dy = node.y - y || 1e-6,\n        r = Math.sqrt(dx * dx + dy * dy),\n        k = (radiuses[i] - r) * strengths[i] * alpha / r;\n      node.vx += dx * k;\n      node.vy += dy * k;\n    }\n  }\n  function initialize() {\n    if (!nodes) return;\n    var i,\n      n = nodes.length;\n    strengths = new Array(n);\n    radiuses = new Array(n);\n    for (i = 0; i < n; ++i) {\n      radiuses[i] = +radius(nodes[i], i, nodes);\n      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n  force.initialize = function (_) {\n    nodes = _, initialize();\n  };\n  force.strength = function (_) {\n    return arguments.length ? (strength = typeof _ === "function" ? _ : d3_force_src_constant(+_), initialize(), force) : strength;\n  };\n  force.radius = function (_) {\n    return arguments.length ? (radius = typeof _ === "function" ? _ : d3_force_src_constant(+_), initialize(), force) : radius;\n  };\n  force.x = function (_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n  force.y = function (_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n  return force;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-force/src/x.js\n\n/* harmony default export */ function src_x(x) {\n  var strength = d3_force_src_constant(0.1),\n    nodes,\n    strengths,\n    xz;\n  if (typeof x !== "function") x = d3_force_src_constant(x == null ? 0 : +x);\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n  function initialize() {\n    if (!nodes) return;\n    var i,\n      n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n  force.initialize = function (_) {\n    nodes = _;\n    initialize();\n  };\n  force.strength = function (_) {\n    return arguments.length ? (strength = typeof _ === "function" ? _ : d3_force_src_constant(+_), initialize(), force) : strength;\n  };\n  force.x = function (_) {\n    return arguments.length ? (x = typeof _ === "function" ? _ : d3_force_src_constant(+_), initialize(), force) : x;\n  };\n  return force;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-force/src/y.js\n\n/* harmony default export */ function src_y(y) {\n  var strength = d3_force_src_constant(0.1),\n    nodes,\n    strengths,\n    yz;\n  if (typeof y !== "function") y = d3_force_src_constant(y == null ? 0 : +y);\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n  function initialize() {\n    if (!nodes) return;\n    var i,\n      n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n  force.initialize = function (_) {\n    nodes = _;\n    initialize();\n  };\n  force.strength = function (_) {\n    return arguments.length ? (strength = typeof _ === "function" ? _ : d3_force_src_constant(+_), initialize(), force) : strength;\n  };\n  force.y = function (_) {\n    return arguments.length ? (y = typeof _ === "function" ? _ : d3_force_src_constant(+_), initialize(), force) : y;\n  };\n  return force;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-force/src/index.js\n\n\n\n\n\n\n\n\n;// CONCATENATED MODULE: ./node_modules/d3-format/src/formatDecimal.js\n/* harmony default export */ function formatDecimal(x) {\n  return Math.abs(x = Math.round(x)) >= 1e21 ? x.toLocaleString("en").replace(/,/g, "") : x.toString(10);\n}\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimalParts(1.23) returns ["123", 0].\nfunction formatDecimalParts(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf("e")) < 0) return null; // NaN, ±Infinity\n  var i,\n    coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient, +x.slice(i + 1)];\n}\n;// CONCATENATED MODULE: ./node_modules/d3-format/src/exponent.js\n\n/* harmony default export */ function src_exponent(x) {\n  return x = formatDecimalParts(Math.abs(x)), x ? x[1] : NaN;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-format/src/formatGroup.js\n/* harmony default export */ function formatGroup(grouping, thousands) {\n  return function (value, width) {\n    var i = value.length,\n      t = [],\n      j = 0,\n      g = grouping[0],\n      length = 0;\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n    return t.reverse().join(thousands);\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/d3-format/src/formatNumerals.js\n/* harmony default export */ function formatNumerals(numerals) {\n  return function (value) {\n    return value.replace(/[0-9]/g, function (i) {\n      return numerals[+i];\n    });\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/d3-format/src/formatSpecifier.js\n// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\nfunction formatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error("invalid format: " + specifier);\n  var match;\n  return new FormatSpecifier({\n    fill: match[1],\n    align: match[2],\n    sign: match[3],\n    symbol: match[4],\n    zero: match[5],\n    width: match[6],\n    comma: match[7],\n    precision: match[8] && match[8].slice(1),\n    trim: match[9],\n    type: match[10]\n  });\n}\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  this.fill = specifier.fill === undefined ? " " : specifier.fill + "";\n  this.align = specifier.align === undefined ? ">" : specifier.align + "";\n  this.sign = specifier.sign === undefined ? "-" : specifier.sign + "";\n  this.symbol = specifier.symbol === undefined ? "" : specifier.symbol + "";\n  this.zero = !!specifier.zero;\n  this.width = specifier.width === undefined ? undefined : +specifier.width;\n  this.comma = !!specifier.comma;\n  this.precision = specifier.precision === undefined ? undefined : +specifier.precision;\n  this.trim = !!specifier.trim;\n  this.type = specifier.type === undefined ? "" : specifier.type + "";\n}\nFormatSpecifier.prototype.toString = function () {\n  return this.fill + this.align + this.sign + this.symbol + (this.zero ? "0" : "") + (this.width === undefined ? "" : Math.max(1, this.width | 0)) + (this.comma ? "," : "") + (this.precision === undefined ? "" : "." + Math.max(0, this.precision | 0)) + (this.trim ? "~" : "") + this.type;\n};\n;// CONCATENATED MODULE: ./node_modules/d3-format/src/formatTrim.js\n// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\n/* harmony default export */ function formatTrim(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case ".":\n        i0 = i1 = i;\n        break;\n      case "0":\n        if (i0 === 0) i0 = i;\n        i1 = i;\n        break;\n      default:\n        if (!+s[i]) break out;\n        if (i0 > 0) i0 = 0;\n        break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-format/src/formatPrefixAuto.js\n\nvar prefixExponent;\n/* harmony default export */ function formatPrefixAuto(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + "";\n  var coefficient = d[0],\n    exponent = d[1],\n    i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n    n = coefficient.length;\n  return i === n ? coefficient : i > n ? coefficient + new Array(i - n + 1).join("0") : i > 0 ? coefficient.slice(0, i) + "." + coefficient.slice(i) : "0." + new Array(1 - i).join("0") + formatDecimalParts(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n;// CONCATENATED MODULE: ./node_modules/d3-format/src/formatRounded.js\n\n/* harmony default export */ function formatRounded(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + "";\n  var coefficient = d[0],\n    exponent = d[1];\n  return exponent < 0 ? "0." + new Array(-exponent).join("0") + coefficient : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + "." + coefficient.slice(exponent + 1) : coefficient + new Array(exponent - coefficient.length + 2).join("0");\n}\n;// CONCATENATED MODULE: ./node_modules/d3-format/src/formatTypes.js\n\n\n\n/* harmony default export */ const formatTypes = ({\n  "%": (x, p) => (x * 100).toFixed(p),\n  "b": x => Math.round(x).toString(2),\n  "c": x => x + "",\n  "d": formatDecimal,\n  "e": (x, p) => x.toExponential(p),\n  "f": (x, p) => x.toFixed(p),\n  "g": (x, p) => x.toPrecision(p),\n  "o": x => Math.round(x).toString(8),\n  "p": (x, p) => formatRounded(x * 100, p),\n  "r": formatRounded,\n  "s": formatPrefixAuto,\n  "X": x => Math.round(x).toString(16).toUpperCase(),\n  "x": x => Math.round(x).toString(16)\n});\n;// CONCATENATED MODULE: ./node_modules/d3-format/src/identity.js\n/* harmony default export */ function d3_format_src_identity(x) {\n  return x;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-format/src/locale.js\n\n\n\n\n\n\n\n\nvar locale_map = Array.prototype.map,\n  prefixes = ["y", "z", "a", "f", "p", "n", "µ", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y"];\n/* harmony default export */ function locale(locale) {\n  var group = locale.grouping === undefined || locale.thousands === undefined ? d3_format_src_identity : formatGroup(locale_map.call(locale.grouping, Number), locale.thousands + ""),\n    currencyPrefix = locale.currency === undefined ? "" : locale.currency[0] + "",\n    currencySuffix = locale.currency === undefined ? "" : locale.currency[1] + "",\n    decimal = locale.decimal === undefined ? "." : locale.decimal + "",\n    numerals = locale.numerals === undefined ? d3_format_src_identity : formatNumerals(locale_map.call(locale.numerals, String)),\n    percent = locale.percent === undefined ? "%" : locale.percent + "",\n    minus = locale.minus === undefined ? "−" : locale.minus + "",\n    nan = locale.nan === undefined ? "NaN" : locale.nan + "";\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n    var fill = specifier.fill,\n      align = specifier.align,\n      sign = specifier.sign,\n      symbol = specifier.symbol,\n      zero = specifier.zero,\n      width = specifier.width,\n      comma = specifier.comma,\n      precision = specifier.precision,\n      trim = specifier.trim,\n      type = specifier.type;\n\n    // The "n" type is an alias for ",g".\n    if (type === "n") comma = true, type = "g";\n\n    // The "" type, and any invalid type, is an alias for ".12~g".\n    else if (!formatTypes[type]) precision === undefined && (precision = 12), trim = true, type = "g";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || fill === "0" && align === "=") zero = true, fill = "0", align = "=";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === "$" ? currencyPrefix : symbol === "#" && /[boxX]/.test(type) ? "0" + type.toLowerCase() : "",\n      suffix = symbol === "$" ? currencySuffix : /[%p]/.test(type) ? percent : "";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n      maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision === undefined ? 6 : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision)) : Math.max(0, Math.min(20, precision));\n    function format(value) {\n      var valuePrefix = prefix,\n        valueSuffix = suffix,\n        i,\n        n,\n        c;\n      if (type === "c") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = "";\n      } else {\n        value = +value;\n\n        // Determine the sign. -0 is not less than 0, but 1 / -0 is!\n        var valueNegative = value < 0 || 1 / value < 0;\n\n        // Perform the initial formatting.\n        value = isNaN(value) ? nan : formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.\n        if (valueNegative && +value === 0 && sign !== "+") valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? sign === "(" ? sign : minus : sign === "-" || sign === "(" ? "" : sign) + valuePrefix;\n        valueSuffix = (type === "s" ? prefixes[8 + prefixExponent / 3] : "") + valueSuffix + (valueNegative && sign === "(" ? ")" : "");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not "0", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n        padding = length < width ? new Array(width - length + 1).join(fill) : "";\n\n      // If the fill character is "0", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = "";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case "<":\n          value = valuePrefix + value + valueSuffix + padding;\n          break;\n        case "=":\n          value = valuePrefix + padding + value + valueSuffix;\n          break;\n        case "^":\n          value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n          break;\n        default:\n          value = padding + valuePrefix + value + valueSuffix;\n          break;\n      }\n      return numerals(value);\n    }\n    format.toString = function () {\n      return specifier + "";\n    };\n    return format;\n  }\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = "f", specifier)),\n      e = Math.max(-8, Math.min(8, Math.floor(src_exponent(value) / 3))) * 3,\n      k = Math.pow(10, -e),\n      prefix = prefixes[8 + e / 3];\n    return function (value) {\n      return f(k * value) + prefix;\n    };\n  }\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/d3-format/src/defaultLocale.js\n\nvar defaultLocale_locale;\nvar format;\nvar formatPrefix;\ndefaultLocale({\n  thousands: ",",\n  grouping: [3],\n  currency: ["$", ""]\n});\nfunction defaultLocale(definition) {\n  defaultLocale_locale = locale(definition);\n  format = defaultLocale_locale.format;\n  formatPrefix = defaultLocale_locale.formatPrefix;\n  return defaultLocale_locale;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-format/src/precisionFixed.js\n\n/* harmony default export */ function precisionFixed(step) {\n  return Math.max(0, -src_exponent(Math.abs(step)));\n}\n;// CONCATENATED MODULE: ./node_modules/d3-format/src/precisionPrefix.js\n\n/* harmony default export */ function precisionPrefix(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(src_exponent(value) / 3))) * 3 - src_exponent(Math.abs(step)));\n}\n;// CONCATENATED MODULE: ./node_modules/d3-format/src/precisionRound.js\n\n/* harmony default export */ function precisionRound(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, src_exponent(max) - src_exponent(step)) + 1;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-format/src/index.js\n\n\n\n\n\n\n;// CONCATENATED MODULE: ./node_modules/d3-geo/src/math.js\nvar src_math_epsilon = 1e-6;\nvar epsilon2 = 1e-12;\nvar math_pi = Math.PI;\nvar math_halfPi = math_pi / 2;\nvar quarterPi = math_pi / 4;\nvar math_tau = math_pi * 2;\nvar src_math_degrees = 180 / math_pi;\nvar math_radians = math_pi / 180;\nvar src_math_abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar math_cos = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\nvar floor = Math.floor;\nvar hypot = Math.hypot;\nvar log = Math.log;\nvar math_pow = Math.pow;\nvar math_sin = Math.sin;\nvar sign = Math.sign || function (x) {\n  return x > 0 ? 1 : x < 0 ? -1 : 0;\n};\nvar sqrt = Math.sqrt;\nvar tan = Math.tan;\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? math_pi : Math.acos(x);\n}\nfunction asin(x) {\n  return x > 1 ? math_halfPi : x < -1 ? -math_halfPi : Math.asin(x);\n}\nfunction haversin(x) {\n  return (x = math_sin(x / 2)) * x;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-geo/src/noop.js\nfunction noop_noop() {}\n;// CONCATENATED MODULE: ./node_modules/d3-geo/src/stream.js\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\nvar streamObjectType = {\n  Feature: function (object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function (object, stream) {\n    var features = object.features,\n      i = -1,\n      n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\nvar streamGeometryType = {\n  Sphere: function (object, stream) {\n    stream.sphere();\n  },\n  Point: function (object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function (object, stream) {\n    var coordinates = object.coordinates,\n      i = -1,\n      n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function (object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function (object, stream) {\n    var coordinates = object.coordinates,\n      i = -1,\n      n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function (object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function (object, stream) {\n    var coordinates = object.coordinates,\n      i = -1,\n      n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function (object, stream) {\n    var geometries = object.geometries,\n      i = -1,\n      n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1,\n    n = coordinates.length - closed,\n    coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\nfunction streamPolygon(coordinates, stream) {\n  var i = -1,\n    n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n/* harmony default export */ function stream(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n;// CONCATENATED MODULE: ./node_modules/d3-geo/src/area.js\n\n\n\n\nvar areaRingSum = new Adder();\n\n// hello?\n\nvar areaSum = new Adder(),\n  lambda00,\n  phi00,\n  lambda0,\n  cosPhi0,\n  sinPhi0;\nvar areaStream = {\n  point: noop_noop,\n  lineStart: noop_noop,\n  lineEnd: noop_noop,\n  polygonStart: function () {\n    areaRingSum = new Adder();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function () {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? math_tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop_noop;\n  },\n  sphere: function () {\n    areaSum.add(math_tau);\n  }\n};\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= math_radians, phi *= math_radians;\n  lambda0 = lambda, cosPhi0 = math_cos(phi = phi / 2 + quarterPi), sinPhi0 = math_sin(phi);\n}\nfunction areaPoint(lambda, phi) {\n  lambda *= math_radians, phi *= math_radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n    sdLambda = dLambda >= 0 ? 1 : -1,\n    adLambda = sdLambda * dLambda,\n    cosPhi = math_cos(phi),\n    sinPhi = math_sin(phi),\n    k = sinPhi0 * sinPhi,\n    u = cosPhi0 * cosPhi + k * math_cos(adLambda),\n    v = k * sdLambda * math_sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n/* harmony default export */ function d3_geo_src_area(object) {\n  areaSum = new Adder();\n  stream(object, areaStream);\n  return areaSum * 2;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-geo/src/cartesian.js\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\nfunction cartesian(spherical) {\n  var lambda = spherical[0],\n    phi = spherical[1],\n    cosPhi = math_cos(phi);\n  return [cosPhi * math_cos(lambda), cosPhi * math_sin(lambda), math_sin(phi)];\n}\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-geo/src/bounds.js\n\n\n\n\n\nvar bounds_lambda0, phi0, lambda1, phi1,\n  // bounds\n  lambda2,\n  // previous lambda-coordinate\n  bounds_lambda00, bounds_phi00,\n  // first point\n  p0,\n  // previous 3D point\n  deltaSum, ranges, bounds_range;\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function () {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum = new Adder();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function () {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) bounds_lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);else if (deltaSum > src_math_epsilon) phi1 = 90;else if (deltaSum < -src_math_epsilon) phi0 = -90;\n    bounds_range[0] = bounds_lambda0, bounds_range[1] = lambda1;\n  },\n  sphere: function () {\n    bounds_lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n  }\n};\nfunction boundsPoint(lambda, phi) {\n  ranges.push(bounds_range = [bounds_lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * math_radians, phi * math_radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n      equatorial = [normal[1], -normal[0], 0],\n      inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n      sign = delta > 0 ? 1 : -1,\n      lambdai = inflection[0] * src_math_degrees * sign,\n      phii,\n      antimeridian = src_math_abs(delta) > 180;\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * src_math_degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * src_math_degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(bounds_lambda0, lambda) > angle(bounds_lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(bounds_lambda0, lambda1)) bounds_lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= bounds_lambda0) {\n        if (lambda < bounds_lambda0) bounds_lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(bounds_lambda0, lambda) > angle(bounds_lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(bounds_lambda0, lambda1)) bounds_lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(bounds_range = [bounds_lambda0 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\nfunction boundsLineEnd() {\n  bounds_range[0] = bounds_lambda0, bounds_range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(src_math_abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    bounds_lambda00 = lambda, bounds_phi00 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\nfunction boundsRingEnd() {\n  boundsRingPoint(bounds_lambda00, bounds_phi00);\n  areaStream.lineEnd();\n  if (src_math_abs(deltaSum) > src_math_epsilon) bounds_lambda0 = -(lambda1 = 180);\n  bounds_range[0] = bounds_lambda0, bounds_range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n/* harmony default export */ function bounds(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n  phi1 = lambda1 = -(bounds_lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, bounds_lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n  ranges = bounds_range = null;\n  return bounds_lambda0 === Infinity || phi0 === Infinity ? [[NaN, NaN], [NaN, NaN]] : [[bounds_lambda0, phi0], [lambda1, phi1]];\n}\n;// CONCATENATED MODULE: ./node_modules/d3-geo/src/centroid.js\n\n\n\n\nvar W0, W1, X0, Y0, Z0, X1, Y1, Z1, X2, Y2, Z2, centroid_lambda00, centroid_phi00,\n  // first point\n  x0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop_noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function () {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function () {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= math_radians, phi *= math_radians;\n  var cosPhi = math_cos(phi);\n  centroidPointCartesian(cosPhi * math_cos(lambda), cosPhi * math_sin(lambda), math_sin(phi));\n}\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= math_radians, phi *= math_radians;\n  var cosPhi = math_cos(phi);\n  x0 = cosPhi * math_cos(lambda);\n  y0 = cosPhi * math_sin(lambda);\n  z0 = math_sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= math_radians, phi *= math_radians;\n  var cosPhi = math_cos(phi),\n    x = cosPhi * math_cos(lambda),\n    y = cosPhi * math_sin(lambda),\n    z = math_sin(phi),\n    w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\nfunction centroidRingEnd() {\n  centroidRingPoint(centroid_lambda00, centroid_phi00);\n  centroidStream.point = centroidPoint;\n}\nfunction centroidRingPointFirst(lambda, phi) {\n  centroid_lambda00 = lambda, centroid_phi00 = phi;\n  lambda *= math_radians, phi *= math_radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = math_cos(phi);\n  x0 = cosPhi * math_cos(lambda);\n  y0 = cosPhi * math_sin(lambda);\n  z0 = math_sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= math_radians, phi *= math_radians;\n  var cosPhi = math_cos(phi),\n    x = cosPhi * math_cos(lambda),\n    y = cosPhi * math_sin(lambda),\n    z = math_sin(phi),\n    cx = y0 * z - z0 * y,\n    cy = z0 * x - x0 * z,\n    cz = x0 * y - y0 * x,\n    m = hypot(cx, cy, cz),\n    w = asin(m),\n    // line weight = angle\n    v = m && -w / m; // area weight multiplier\n  X2.add(v * cx);\n  Y2.add(v * cy);\n  Z2.add(v * cz);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n/* harmony default export */ function centroid(object) {\n  W0 = W1 = X0 = Y0 = Z0 = X1 = Y1 = Z1 = 0;\n  X2 = new Adder();\n  Y2 = new Adder();\n  Z2 = new Adder();\n  stream(object, centroidStream);\n  var x = +X2,\n    y = +Y2,\n    z = +Z2,\n    m = hypot(x, y, z);\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < src_math_epsilon) x = X0, y = Y0, z = Z0;\n    m = hypot(x, y, z);\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2) return [NaN, NaN];\n  }\n  return [atan2(y, x) * src_math_degrees, asin(z / m) * src_math_degrees];\n}\n;// CONCATENATED MODULE: ./node_modules/d3-geo/src/constant.js\n/* harmony default export */ function d3_geo_src_constant(x) {\n  return function () {\n    return x;\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/d3-geo/src/compose.js\n/* harmony default export */ function compose(a, b) {\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n  if (a.invert && b.invert) compose.invert = function (x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n  return compose;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-geo/src/rotation.js\n\n\nfunction rotationIdentity(lambda, phi) {\n  if (src_math_abs(lambda) > math_pi) lambda -= Math.round(lambda / math_tau) * math_tau;\n  return [lambda, phi];\n}\nrotationIdentity.invert = rotationIdentity;\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= math_tau) ? deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma)) : rotationLambda(deltaLambda) : deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma) : rotationIdentity;\n}\nfunction forwardRotationLambda(deltaLambda) {\n  return function (lambda, phi) {\n    lambda += deltaLambda;\n    if (src_math_abs(lambda) > math_pi) lambda -= Math.round(lambda / math_tau) * math_tau;\n    return [lambda, phi];\n  };\n}\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = math_cos(deltaPhi),\n    sinDeltaPhi = math_sin(deltaPhi),\n    cosDeltaGamma = math_cos(deltaGamma),\n    sinDeltaGamma = math_sin(deltaGamma);\n  function rotation(lambda, phi) {\n    var cosPhi = math_cos(phi),\n      x = math_cos(lambda) * cosPhi,\n      y = math_sin(lambda) * cosPhi,\n      z = math_sin(phi),\n      k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi), asin(k * cosDeltaGamma + y * sinDeltaGamma)];\n  }\n  rotation.invert = function (lambda, phi) {\n    var cosPhi = math_cos(phi),\n      x = math_cos(lambda) * cosPhi,\n      y = math_sin(lambda) * cosPhi,\n      z = math_sin(phi),\n      k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi), asin(k * cosDeltaPhi - x * sinDeltaPhi)];\n  };\n  return rotation;\n}\n/* harmony default export */ function rotation(rotate) {\n  rotate = rotateRadians(rotate[0] * math_radians, rotate[1] * math_radians, rotate.length > 2 ? rotate[2] * math_radians : 0);\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * math_radians, coordinates[1] * math_radians);\n    return coordinates[0] *= src_math_degrees, coordinates[1] *= src_math_degrees, coordinates;\n  }\n  forward.invert = function (coordinates) {\n    coordinates = rotate.invert(coordinates[0] * math_radians, coordinates[1] * math_radians);\n    return coordinates[0] *= src_math_degrees, coordinates[1] *= src_math_degrees, coordinates;\n  };\n  return forward;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-geo/src/circle.js\n\n\n\n\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = math_cos(radius),\n    sinRadius = math_sin(radius),\n    step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * math_tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * math_tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * math_cos(t), -sinRadius * math_sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + math_tau - src_math_epsilon) % math_tau;\n}\n/* harmony default export */ function circle() {\n  var center = d3_geo_src_constant([0, 0]),\n    radius = d3_geo_src_constant(90),\n    precision = d3_geo_src_constant(6),\n    ring,\n    rotate,\n    stream = {\n      point: point\n    };\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= src_math_degrees, x[1] *= src_math_degrees;\n  }\n  function circle() {\n    var c = center.apply(this, arguments),\n      r = radius.apply(this, arguments) * math_radians,\n      p = precision.apply(this, arguments) * math_radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * math_radians, -c[1] * math_radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {\n      type: "Polygon",\n      coordinates: [ring]\n    };\n    ring = rotate = null;\n    return c;\n  }\n  circle.center = function (_) {\n    return arguments.length ? (center = typeof _ === "function" ? _ : d3_geo_src_constant([+_[0], +_[1]]), circle) : center;\n  };\n  circle.radius = function (_) {\n    return arguments.length ? (radius = typeof _ === "function" ? _ : d3_geo_src_constant(+_), circle) : radius;\n  };\n  circle.precision = function (_) {\n    return arguments.length ? (precision = typeof _ === "function" ? _ : d3_geo_src_constant(+_), circle) : precision;\n  };\n  return circle;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-geo/src/clip/buffer.js\n\n/* harmony default export */ function clip_buffer() {\n  var lines = [],\n    line;\n  return {\n    point: function (x, y, m) {\n      line.push([x, y, m]);\n    },\n    lineStart: function () {\n      lines.push(line = []);\n    },\n    lineEnd: noop_noop,\n    rejoin: function () {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function () {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/d3-geo/src/pointEqual.js\n\n/* harmony default export */ function pointEqual(a, b) {\n  return src_math_abs(a[0] - b[0]) < src_math_epsilon && src_math_abs(a[1] - b[1]) < src_math_epsilon;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-geo/src/clip/rejoin.js\n\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\n/* harmony default export */ function rejoin(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n    clip = [],\n    i,\n    n;\n  segments.forEach(function (segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n,\n      p0 = segment[0],\n      p1 = segment[n],\n      x;\n    if (pointEqual(p0, p1)) {\n      if (!p0[2] && !p1[2]) {\n        stream.lineStart();\n        for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n        stream.lineEnd();\n        return;\n      }\n      // handle degenerate cases by moving the point\n      p1[0] += 2 * src_math_epsilon;\n    }\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n  if (!subject.length) return;\n  clip.sort(compareIntersection);\n  rejoin_link(subject);\n  rejoin_link(clip);\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n  var start = subject[0],\n    points,\n    point;\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n      isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\nfunction rejoin_link(array) {\n  if (!(n = array.length)) return;\n  var n,\n    i = 0,\n    a = array[0],\n    b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-geo/src/polygonContains.js\n\n\n\nfunction longitude(point) {\n  return src_math_abs(point[0]) <= math_pi ? point[0] : sign(point[0]) * ((src_math_abs(point[0]) + math_pi) % math_tau - math_pi);\n}\n/* harmony default export */ function polygonContains(polygon, point) {\n  var lambda = longitude(point),\n    phi = point[1],\n    sinPhi = math_sin(phi),\n    normal = [math_sin(lambda), -math_cos(lambda), 0],\n    angle = 0,\n    winding = 0;\n  var sum = new Adder();\n  if (sinPhi === 1) phi = math_halfPi + src_math_epsilon;else if (sinPhi === -1) phi = -math_halfPi - src_math_epsilon;\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n      m,\n      point0 = ring[m - 1],\n      lambda0 = longitude(point0),\n      phi0 = point0[1] / 2 + quarterPi,\n      sinPhi0 = math_sin(phi0),\n      cosPhi0 = math_cos(phi0);\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n        lambda1 = longitude(point1),\n        phi1 = point1[1] / 2 + quarterPi,\n        sinPhi1 = math_sin(phi1),\n        cosPhi1 = math_cos(phi1),\n        delta = lambda1 - lambda0,\n        sign = delta >= 0 ? 1 : -1,\n        absDelta = sign * delta,\n        antimeridian = absDelta > math_pi,\n        k = sinPhi0 * sinPhi1;\n      sum.add(atan2(k * sign * math_sin(absDelta), cosPhi0 * cosPhi1 + k * math_cos(absDelta)));\n      angle += antimeridian ? delta + sign * math_tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -src_math_epsilon || angle < src_math_epsilon && sum < -epsilon2) ^ winding & 1;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-geo/src/clip/index.js\n\n\n\n\n\n/* harmony default export */ function clip(pointVisible, clipLine, interpolate, start) {\n  return function (sink) {\n    var line = clipLine(sink),\n      ringBuffer = clip_buffer(),\n      ringSink = clipLine(ringBuffer),\n      polygonStarted = false,\n      polygon,\n      segments,\n      ring;\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function () {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function () {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          rejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function () {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n      var clean = ringSink.clean(),\n        ringSegments = ringBuffer.result(),\n        i,\n        n = ringSegments.length,\n        m,\n        segment,\n        point;\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n      segments.push(ringSegments.filter(validSegment));\n    }\n    return clip;\n  };\n}\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - math_halfPi - src_math_epsilon : math_halfPi - a[1]) - ((b = b.x)[0] < 0 ? b[1] - math_halfPi - src_math_epsilon : math_halfPi - b[1]);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-geo/src/clip/antimeridian.js\n\n\n/* harmony default export */ const antimeridian = (clip(function () {\n  return true;\n}, clipAntimeridianLine, clipAntimeridianInterpolate, [-math_pi, -math_halfPi]));\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n    phi0 = NaN,\n    sign0 = NaN,\n    clean; // no intersections\n\n  return {\n    lineStart: function () {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function (lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? math_pi : -math_pi,\n        delta = src_math_abs(lambda1 - lambda0);\n      if (src_math_abs(delta - math_pi) < src_math_epsilon) {\n        // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? math_halfPi : -math_halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= math_pi) {\n        // line crosses antimeridian\n        if (src_math_abs(lambda0 - sign0) < src_math_epsilon) lambda0 -= sign0 * src_math_epsilon; // handle degeneracies\n        if (src_math_abs(lambda1 - sign1) < src_math_epsilon) lambda1 -= sign1 * src_math_epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function () {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function () {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n    cosPhi1,\n    sinLambda0Lambda1 = math_sin(lambda0 - lambda1);\n  return src_math_abs(sinLambda0Lambda1) > src_math_epsilon ? atan((math_sin(phi0) * (cosPhi1 = math_cos(phi1)) * math_sin(lambda1) - math_sin(phi1) * (cosPhi0 = math_cos(phi0)) * math_sin(lambda0)) / (cosPhi0 * cosPhi1 * sinLambda0Lambda1)) : (phi0 + phi1) / 2;\n}\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * math_halfPi;\n    stream.point(-math_pi, phi);\n    stream.point(0, phi);\n    stream.point(math_pi, phi);\n    stream.point(math_pi, 0);\n    stream.point(math_pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-math_pi, -phi);\n    stream.point(-math_pi, 0);\n    stream.point(-math_pi, phi);\n  } else if (src_math_abs(from[0] - to[0]) > src_math_epsilon) {\n    var lambda = from[0] < to[0] ? math_pi : -math_pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n;// CONCATENATED MODULE: ./node_modules/d3-geo/src/clip/circle.js\n\n\n\n\n\n/* harmony default export */ function clip_circle(radius) {\n  var cr = math_cos(radius),\n    delta = 6 * math_radians,\n    smallRadius = cr > 0,\n    notHemisphere = src_math_abs(cr) > src_math_epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n  function visible(lambda, phi) {\n    return math_cos(lambda) * math_cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0,\n      // previous point\n      c0,\n      // code for previous point\n      v0,\n      // visibility of previous point\n      v00,\n      // visibility of first point\n      clean; // no intersections\n    return {\n      lineStart: function () {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function (lambda, phi) {\n        var point1 = [lambda, phi],\n          point2,\n          v = visible(lambda, phi),\n          c = smallRadius ? v ? 0 : code(lambda, phi) : v ? code(lambda + (lambda < 0 ? math_pi : -math_pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) point1[2] = 1;\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1], 2);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1], 3);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function () {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function () {\n        return clean | (v00 && v0) << 1;\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n      pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0],\n      // normal\n      n2 = cartesianCross(pa, pb),\n      n2n2 = cartesianDot(n2, n2),\n      n1n2 = n2[0],\n      // cartesianDot(n1, n2),\n      determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n    var c1 = cr * n2n2 / determinant,\n      c2 = -cr * n1n2 / determinant,\n      n1xn2 = cartesianCross(n1, n2),\n      A = cartesianScale(n1, c1),\n      B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n      w = cartesianDot(A, u),\n      uu = cartesianDot(u, u),\n      t2 = w * w - uu * (cartesianDot(A, A) - 1);\n    if (t2 < 0) return;\n    var t = sqrt(t2),\n      q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n      lambda1 = b[0],\n      phi0 = a[1],\n      phi1 = b[1],\n      z;\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n    var delta = lambda1 - lambda0,\n      polar = src_math_abs(delta - math_pi) < src_math_epsilon,\n      meridian = polar || delta < src_math_epsilon;\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian ? polar ? phi0 + phi1 > 0 ^ q[1] < (src_math_abs(q[0] - lambda0) < src_math_epsilon ? phi0 : phi1) : phi0 <= q[1] && q[1] <= phi1 : delta > math_pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle\'s bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : math_pi - radius,\n      code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-math_pi, radius - math_pi]);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-geo/src/clip/line.js\n/* harmony default export */ function line(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n    ay = a[1],\n    bx = b[0],\n    by = b[1],\n    t0 = 0,\n    t1 = 1,\n    dx = bx - ax,\n    dy = by - ay,\n    r;\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-geo/src/clip/rectangle.js\n\n\n\n\n\nvar clipMax = 1e9,\n  clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipRectangle(x0, y0, x1, y1) {\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n  function interpolate(from, to, direction, stream) {\n    var a = 0,\n      a1 = 0;\n    if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0); while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n  function corner(p, direction) {\n    return src_math_abs(p[0] - x0) < src_math_epsilon ? direction > 0 ? 0 : 3 : src_math_abs(p[0] - x1) < src_math_epsilon ? direction > 0 ? 2 : 1 : src_math_abs(p[1] - y0) < src_math_epsilon ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n      cb = corner(b, 1);\n    return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n  }\n  return function (stream) {\n    var activeStream = stream,\n      bufferStream = clip_buffer(),\n      segments,\n      polygon,\n      ring,\n      x__,\n      y__,\n      v__,\n      // first point\n      x_,\n      y_,\n      v_,\n      // previous point\n      first,\n      clean;\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n    function polygonInside() {\n      var winding = 0;\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) {\n            if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding;\n          } else {\n            if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding;\n          }\n        }\n      }\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n    function polygonEnd() {\n      var startInside = polygonInside(),\n        cleanInside = clean && startInside,\n        visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          rejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n            b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (line(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n    return clipStream;\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/d3-geo/src/clip/extent.js\n\n/* harmony default export */ function clip_extent() {\n  var x0 = 0,\n    y0 = 0,\n    x1 = 960,\n    y1 = 500,\n    cache,\n    cacheStream,\n    clip;\n  return clip = {\n    stream: function (stream) {\n      return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function (_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/d3-geo/src/length.js\n\n\n\n\nvar lengthSum, length_lambda0, length_sinPhi0, length_cosPhi0;\nvar lengthStream = {\n  sphere: noop_noop,\n  point: noop_noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop_noop,\n  polygonStart: noop_noop,\n  polygonEnd: noop_noop\n};\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop_noop;\n}\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= math_radians, phi *= math_radians;\n  length_lambda0 = lambda, length_sinPhi0 = math_sin(phi), length_cosPhi0 = math_cos(phi);\n  lengthStream.point = lengthPoint;\n}\nfunction lengthPoint(lambda, phi) {\n  lambda *= math_radians, phi *= math_radians;\n  var sinPhi = math_sin(phi),\n    cosPhi = math_cos(phi),\n    delta = src_math_abs(lambda - length_lambda0),\n    cosDelta = math_cos(delta),\n    sinDelta = math_sin(delta),\n    x = cosPhi * sinDelta,\n    y = length_cosPhi0 * sinPhi - length_sinPhi0 * cosPhi * cosDelta,\n    z = length_sinPhi0 * sinPhi + length_cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  length_lambda0 = lambda, length_sinPhi0 = sinPhi, length_cosPhi0 = cosPhi;\n}\n/* harmony default export */ function src_length(object) {\n  lengthSum = new Adder();\n  stream(object, lengthStream);\n  return +lengthSum;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-geo/src/distance.js\n\nvar coordinates = [null, null],\n  distance_object = {\n    type: "LineString",\n    coordinates: coordinates\n  };\n/* harmony default export */ function distance(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return src_length(distance_object);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-geo/src/contains.js\n\n\n\nvar containsObjectType = {\n  Feature: function (object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function (object, point) {\n    var features = object.features,\n      i = -1,\n      n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\nvar containsGeometryType = {\n  Sphere: function () {\n    return true;\n  },\n  Point: function (object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function (object, point) {\n    var coordinates = object.coordinates,\n      i = -1,\n      n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function (object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function (object, point) {\n    var coordinates = object.coordinates,\n      i = -1,\n      n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function (object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function (object, point) {\n    var coordinates = object.coordinates,\n      i = -1,\n      n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function (object, point) {\n    var geometries = object.geometries,\n      i = -1,\n      n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type) ? containsGeometryType[geometry.type](geometry, point) : false;\n}\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\nfunction containsLine(coordinates, point) {\n  var ao, bo, ab;\n  for (var i = 0, n = coordinates.length; i < n; i++) {\n    bo = distance(coordinates[i], point);\n    if (bo === 0) return true;\n    if (i > 0) {\n      ab = distance(coordinates[i], coordinates[i - 1]);\n      if (ab > 0 && ao <= ab && bo <= ab && (ao + bo - ab) * (1 - Math.pow((ao - bo) / ab, 2)) < epsilon2 * ab) return true;\n    }\n    ao = bo;\n  }\n  return false;\n}\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\nfunction pointRadians(point) {\n  return [point[0] * math_radians, point[1] * math_radians];\n}\n/* harmony default export */ function src_contains(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type) ? containsObjectType[object.type] : containsGeometry)(object, point);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-geo/src/graticule.js\n\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - src_math_epsilon, dy).concat(y1);\n  return function (x) {\n    return y.map(function (y) {\n      return [x, y];\n    });\n  };\n}\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - src_math_epsilon, dx).concat(x1);\n  return function (y) {\n    return x.map(function (x) {\n      return [x, y];\n    });\n  };\n}\nfunction graticule() {\n  var x1,\n    x0,\n    X1,\n    X0,\n    y1,\n    y0,\n    Y1,\n    Y0,\n    dx = 10,\n    dy = dx,\n    DX = 90,\n    DY = 360,\n    x,\n    y,\n    X,\n    Y,\n    precision = 2.5;\n  function graticule() {\n    return {\n      type: "MultiLineString",\n      coordinates: lines()\n    };\n  }\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X).concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function (x) {\n      return src_math_abs(x % DX) > src_math_epsilon;\n    }).map(x)).concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function (y) {\n      return src_math_abs(y % DY) > src_math_epsilon;\n    }).map(y));\n  }\n  graticule.lines = function () {\n    return lines().map(function (coordinates) {\n      return {\n        type: "LineString",\n        coordinates: coordinates\n      };\n    });\n  };\n  graticule.outline = function () {\n    return {\n      type: "Polygon",\n      coordinates: [X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1))]\n    };\n  };\n  graticule.extent = function (_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n  graticule.extentMajor = function (_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n  graticule.extentMinor = function (_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n  graticule.step = function (_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n  graticule.stepMajor = function (_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n  graticule.stepMinor = function (_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n  graticule.precision = function (_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n  return graticule.extentMajor([[-180, -90 + src_math_epsilon], [180, 90 - src_math_epsilon]]).extentMinor([[-180, -80 - src_math_epsilon], [180, 80 + src_math_epsilon]]);\n}\nfunction graticule10() {\n  return graticule()();\n}\n;// CONCATENATED MODULE: ./node_modules/d3-geo/src/interpolate.js\n\n/* harmony default export */ function src_interpolate(a, b) {\n  var x0 = a[0] * math_radians,\n    y0 = a[1] * math_radians,\n    x1 = b[0] * math_radians,\n    y1 = b[1] * math_radians,\n    cy0 = math_cos(y0),\n    sy0 = math_sin(y0),\n    cy1 = math_cos(y1),\n    sy1 = math_sin(y1),\n    kx0 = cy0 * math_cos(x0),\n    ky0 = cy0 * math_sin(x0),\n    kx1 = cy1 * math_cos(x1),\n    ky1 = cy1 * math_sin(x1),\n    d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n    k = math_sin(d);\n  var interpolate = d ? function (t) {\n    var B = math_sin(t *= d) / k,\n      A = math_sin(d - t) / k,\n      x = A * kx0 + B * kx1,\n      y = A * ky0 + B * ky1,\n      z = A * sy0 + B * sy1;\n    return [atan2(y, x) * src_math_degrees, atan2(z, sqrt(x * x + y * y)) * src_math_degrees];\n  } : function () {\n    return [x0 * src_math_degrees, y0 * src_math_degrees];\n  };\n  interpolate.distance = d;\n  return interpolate;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-geo/src/identity.js\n/* harmony default export */ const d3_geo_src_identity = (x => x);\n;// CONCATENATED MODULE: ./node_modules/d3-geo/src/path/area.js\n\n\n\nvar area_areaSum = new Adder(),\n  area_areaRingSum = new Adder(),\n  x00,\n  y00,\n  area_x0,\n  area_y0;\nvar area_areaStream = {\n  point: noop_noop,\n  lineStart: noop_noop,\n  lineEnd: noop_noop,\n  polygonStart: function () {\n    area_areaStream.lineStart = area_areaRingStart;\n    area_areaStream.lineEnd = area_areaRingEnd;\n  },\n  polygonEnd: function () {\n    area_areaStream.lineStart = area_areaStream.lineEnd = area_areaStream.point = noop_noop;\n    area_areaSum.add(src_math_abs(area_areaRingSum));\n    area_areaRingSum = new Adder();\n  },\n  result: function () {\n    var area = area_areaSum / 2;\n    area_areaSum = new Adder();\n    return area;\n  }\n};\nfunction area_areaRingStart() {\n  area_areaStream.point = area_areaPointFirst;\n}\nfunction area_areaPointFirst(x, y) {\n  area_areaStream.point = area_areaPoint;\n  x00 = area_x0 = x, y00 = area_y0 = y;\n}\nfunction area_areaPoint(x, y) {\n  area_areaRingSum.add(area_y0 * x - area_x0 * y);\n  area_x0 = x, area_y0 = y;\n}\nfunction area_areaRingEnd() {\n  area_areaPoint(x00, y00);\n}\n/* harmony default export */ const path_area = (area_areaStream);\n;// CONCATENATED MODULE: ./node_modules/d3-geo/src/path/bounds.js\n\nvar bounds_x0 = Infinity,\n  bounds_y0 = bounds_x0,\n  x1 = -bounds_x0,\n  y1 = x1;\nvar bounds_boundsStream = {\n  point: bounds_boundsPoint,\n  lineStart: noop_noop,\n  lineEnd: noop_noop,\n  polygonStart: noop_noop,\n  polygonEnd: noop_noop,\n  result: function () {\n    var bounds = [[bounds_x0, bounds_y0], [x1, y1]];\n    x1 = y1 = -(bounds_y0 = bounds_x0 = Infinity);\n    return bounds;\n  }\n};\nfunction bounds_boundsPoint(x, y) {\n  if (x < bounds_x0) bounds_x0 = x;\n  if (x > x1) x1 = x;\n  if (y < bounds_y0) bounds_y0 = y;\n  if (y > y1) y1 = y;\n}\n/* harmony default export */ const path_bounds = (bounds_boundsStream);\n;// CONCATENATED MODULE: ./node_modules/d3-geo/src/path/centroid.js\n\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar centroid_X0 = 0,\n  centroid_Y0 = 0,\n  centroid_Z0 = 0,\n  centroid_X1 = 0,\n  centroid_Y1 = 0,\n  centroid_Z1 = 0,\n  centroid_X2 = 0,\n  centroid_Y2 = 0,\n  centroid_Z2 = 0,\n  centroid_x00,\n  centroid_y00,\n  centroid_x0,\n  centroid_y0;\nvar centroid_centroidStream = {\n  point: centroid_centroidPoint,\n  lineStart: centroid_centroidLineStart,\n  lineEnd: centroid_centroidLineEnd,\n  polygonStart: function () {\n    centroid_centroidStream.lineStart = centroid_centroidRingStart;\n    centroid_centroidStream.lineEnd = centroid_centroidRingEnd;\n  },\n  polygonEnd: function () {\n    centroid_centroidStream.point = centroid_centroidPoint;\n    centroid_centroidStream.lineStart = centroid_centroidLineStart;\n    centroid_centroidStream.lineEnd = centroid_centroidLineEnd;\n  },\n  result: function () {\n    var centroid = centroid_Z2 ? [centroid_X2 / centroid_Z2, centroid_Y2 / centroid_Z2] : centroid_Z1 ? [centroid_X1 / centroid_Z1, centroid_Y1 / centroid_Z1] : centroid_Z0 ? [centroid_X0 / centroid_Z0, centroid_Y0 / centroid_Z0] : [NaN, NaN];\n    centroid_X0 = centroid_Y0 = centroid_Z0 = centroid_X1 = centroid_Y1 = centroid_Z1 = centroid_X2 = centroid_Y2 = centroid_Z2 = 0;\n    return centroid;\n  }\n};\nfunction centroid_centroidPoint(x, y) {\n  centroid_X0 += x;\n  centroid_Y0 += y;\n  ++centroid_Z0;\n}\nfunction centroid_centroidLineStart() {\n  centroid_centroidStream.point = centroidPointFirstLine;\n}\nfunction centroidPointFirstLine(x, y) {\n  centroid_centroidStream.point = centroidPointLine;\n  centroid_centroidPoint(centroid_x0 = x, centroid_y0 = y);\n}\nfunction centroidPointLine(x, y) {\n  var dx = x - centroid_x0,\n    dy = y - centroid_y0,\n    z = sqrt(dx * dx + dy * dy);\n  centroid_X1 += z * (centroid_x0 + x) / 2;\n  centroid_Y1 += z * (centroid_y0 + y) / 2;\n  centroid_Z1 += z;\n  centroid_centroidPoint(centroid_x0 = x, centroid_y0 = y);\n}\nfunction centroid_centroidLineEnd() {\n  centroid_centroidStream.point = centroid_centroidPoint;\n}\nfunction centroid_centroidRingStart() {\n  centroid_centroidStream.point = centroidPointFirstRing;\n}\nfunction centroid_centroidRingEnd() {\n  centroidPointRing(centroid_x00, centroid_y00);\n}\nfunction centroidPointFirstRing(x, y) {\n  centroid_centroidStream.point = centroidPointRing;\n  centroid_centroidPoint(centroid_x00 = centroid_x0 = x, centroid_y00 = centroid_y0 = y);\n}\nfunction centroidPointRing(x, y) {\n  var dx = x - centroid_x0,\n    dy = y - centroid_y0,\n    z = sqrt(dx * dx + dy * dy);\n  centroid_X1 += z * (centroid_x0 + x) / 2;\n  centroid_Y1 += z * (centroid_y0 + y) / 2;\n  centroid_Z1 += z;\n  z = centroid_y0 * x - centroid_x0 * y;\n  centroid_X2 += z * (centroid_x0 + x);\n  centroid_Y2 += z * (centroid_y0 + y);\n  centroid_Z2 += z * 3;\n  centroid_centroidPoint(centroid_x0 = x, centroid_y0 = y);\n}\n/* harmony default export */ const path_centroid = (centroid_centroidStream);\n;// CONCATENATED MODULE: ./node_modules/d3-geo/src/path/context.js\n\n\nfunction PathContext(context) {\n  this._context = context;\n}\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function (_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function () {\n    this._line = 0;\n  },\n  polygonEnd: function () {\n    this._line = NaN;\n  },\n  lineStart: function () {\n    this._point = 0;\n  },\n  lineEnd: function () {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function (x, y) {\n    switch (this._point) {\n      case 0:\n        {\n          this._context.moveTo(x, y);\n          this._point = 1;\n          break;\n        }\n      case 1:\n        {\n          this._context.lineTo(x, y);\n          break;\n        }\n      default:\n        {\n          this._context.moveTo(x + this._radius, y);\n          this._context.arc(x, y, this._radius, 0, math_tau);\n          break;\n        }\n    }\n  },\n  result: noop_noop\n};\n;// CONCATENATED MODULE: ./node_modules/d3-geo/src/path/measure.js\n\n\n\nvar measure_lengthSum = new Adder(),\n  lengthRing,\n  measure_x00,\n  measure_y00,\n  measure_x0,\n  measure_y0;\nvar measure_lengthStream = {\n  point: noop_noop,\n  lineStart: function () {\n    measure_lengthStream.point = measure_lengthPointFirst;\n  },\n  lineEnd: function () {\n    if (lengthRing) measure_lengthPoint(measure_x00, measure_y00);\n    measure_lengthStream.point = noop_noop;\n  },\n  polygonStart: function () {\n    lengthRing = true;\n  },\n  polygonEnd: function () {\n    lengthRing = null;\n  },\n  result: function () {\n    var length = +measure_lengthSum;\n    measure_lengthSum = new Adder();\n    return length;\n  }\n};\nfunction measure_lengthPointFirst(x, y) {\n  measure_lengthStream.point = measure_lengthPoint;\n  measure_x00 = measure_x0 = x, measure_y00 = measure_y0 = y;\n}\nfunction measure_lengthPoint(x, y) {\n  measure_x0 -= x, measure_y0 -= y;\n  measure_lengthSum.add(sqrt(measure_x0 * measure_x0 + measure_y0 * measure_y0));\n  measure_x0 = x, measure_y0 = y;\n}\n/* harmony default export */ const measure = (measure_lengthStream);\n;// CONCATENATED MODULE: ./node_modules/d3-geo/src/path/string.js\n// Simple caching for constant-radius points.\nlet cacheDigits, cacheAppend, cacheRadius, cacheCircle;\nclass PathString {\n  constructor(digits) {\n    this._append = digits == null ? string_append : string_appendRound(digits);\n    this._radius = 4.5;\n    this._ = "";\n  }\n  pointRadius(_) {\n    this._radius = +_;\n    return this;\n  }\n  polygonStart() {\n    this._line = 0;\n  }\n  polygonEnd() {\n    this._line = NaN;\n  }\n  lineStart() {\n    this._point = 0;\n  }\n  lineEnd() {\n    if (this._line === 0) this._ += "Z";\n    this._point = NaN;\n  }\n  point(x, y) {\n    switch (this._point) {\n      case 0:\n        {\n          this._append`M${x},${y}`;\n          this._point = 1;\n          break;\n        }\n      case 1:\n        {\n          this._append`L${x},${y}`;\n          break;\n        }\n      default:\n        {\n          this._append`M${x},${y}`;\n          if (this._radius !== cacheRadius || this._append !== cacheAppend) {\n            const r = this._radius;\n            const s = this._;\n            this._ = ""; // stash the old string so we can cache the circle path fragment\n            this._append`m0,${r}a${r},${r} 0 1,1 0,${-2 * r}a${r},${r} 0 1,1 0,${2 * r}z`;\n            cacheRadius = r;\n            cacheAppend = this._append;\n            cacheCircle = this._;\n            this._ = s;\n          }\n          this._ += cacheCircle;\n          break;\n        }\n    }\n  }\n  result() {\n    const result = this._;\n    this._ = "";\n    return result.length ? result : null;\n  }\n}\nfunction string_append(strings) {\n  let i = 1;\n  this._ += strings[0];\n  for (const j = strings.length; i < j; ++i) {\n    this._ += arguments[i] + strings[i];\n  }\n}\nfunction string_appendRound(digits) {\n  const d = Math.floor(digits);\n  if (!(d >= 0)) throw new RangeError(`invalid digits: ${digits}`);\n  if (d > 15) return string_append;\n  if (d !== cacheDigits) {\n    const k = 10 ** d;\n    cacheDigits = d;\n    cacheAppend = function append(strings) {\n      let i = 1;\n      this._ += strings[0];\n      for (const j = strings.length; i < j; ++i) {\n        this._ += Math.round(arguments[i] * k) / k + strings[i];\n      }\n    };\n  }\n  return cacheAppend;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-geo/src/path/index.js\n\n\n\n\n\n\n\n\n/* harmony default export */ function src_path(projection, context) {\n  let digits = 3,\n    pointRadius = 4.5,\n    projectionStream,\n    contextStream;\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === "function") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n  path.area = function (object) {\n    stream(object, projectionStream(path_area));\n    return path_area.result();\n  };\n  path.measure = function (object) {\n    stream(object, projectionStream(measure));\n    return measure.result();\n  };\n  path.bounds = function (object) {\n    stream(object, projectionStream(path_bounds));\n    return path_bounds.result();\n  };\n  path.centroid = function (object) {\n    stream(object, projectionStream(path_centroid));\n    return path_centroid.result();\n  };\n  path.projection = function (_) {\n    if (!arguments.length) return projection;\n    projectionStream = _ == null ? (projection = null, d3_geo_src_identity) : (projection = _).stream;\n    return path;\n  };\n  path.context = function (_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString(digits)) : new PathContext(context = _);\n    if (typeof pointRadius !== "function") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n  path.pointRadius = function (_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === "function" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n  path.digits = function (_) {\n    if (!arguments.length) return digits;\n    if (_ == null) digits = null;else {\n      const d = Math.floor(_);\n      if (!(d >= 0)) throw new RangeError(`invalid digits: ${_}`);\n      digits = d;\n    }\n    if (context === null) contextStream = new PathString(digits);\n    return path;\n  };\n  return path.projection(projection).digits(digits).context(context);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-geo/src/transform.js\n/* harmony default export */ function transform(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\nfunction transformer(methods) {\n  return function (stream) {\n    var s = new TransformStream();\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\nfunction TransformStream() {}\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function (x, y) {\n    this.stream.point(x, y);\n  },\n  sphere: function () {\n    this.stream.sphere();\n  },\n  lineStart: function () {\n    this.stream.lineStart();\n  },\n  lineEnd: function () {\n    this.stream.lineEnd();\n  },\n  polygonStart: function () {\n    this.stream.polygonStart();\n  },\n  polygonEnd: function () {\n    this.stream.polygonEnd();\n  }\n};\n;// CONCATENATED MODULE: ./node_modules/d3-geo/src/projection/fit.js\n\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  stream(object, projection.stream(path_bounds));\n  fitBounds(path_bounds.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\nfunction fitExtent(projection, extent, object) {\n  return fit(projection, function (b) {\n    var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\nfunction fitWidth(projection, width, object) {\n  return fit(projection, function (b) {\n    var w = +width,\n      k = w / (b[1][0] - b[0][0]),\n      x = (w - k * (b[1][0] + b[0][0])) / 2,\n      y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\nfunction fitHeight(projection, height, object) {\n  return fit(projection, function (b) {\n    var h = +height,\n      k = h / (b[1][1] - b[0][1]),\n      x = -k * b[0][0],\n      y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-geo/src/projection/resample.js\n\n\n\nvar maxDepth = 16,\n  // maximum depth of subdivision\n  cosMinDistance = math_cos(30 * math_radians); // cos(minimum angular distance)\n\n/* harmony default export */ function resample(project, delta2) {\n  return +delta2 ? resample_resample(project, delta2) : resampleNone(project);\n}\nfunction resampleNone(project) {\n  return transformer({\n    point: function (x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\nfunction resample_resample(project, delta2) {\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n      dy = y1 - y0,\n      d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n        b = b0 + b1,\n        c = c0 + c1,\n        m = sqrt(a * a + b * b + c * c),\n        phi2 = asin(c /= m),\n        lambda2 = src_math_abs(src_math_abs(c) - 1) < src_math_epsilon || src_math_abs(lambda0 - lambda1) < src_math_epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n        p = project(lambda2, phi2),\n        x2 = p[0],\n        y2 = p[1],\n        dx2 = x2 - x0,\n        dy2 = y2 - y0,\n        dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n      || src_math_abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n      || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n        // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function (stream) {\n    var lambda00, x00, y00, a00, b00, c00,\n      // first point\n      lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function () {\n        stream.polygonStart();\n        resampleStream.lineStart = ringStart;\n      },\n      polygonEnd: function () {\n        stream.polygonEnd();\n        resampleStream.lineStart = lineStart;\n      }\n    };\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]),\n        p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n    return resampleStream;\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/d3-geo/src/projection/index.js\n\n\n\n\n\n\n\n\n\n\nvar transformRadians = transformer({\n  point: function (x, y) {\n    this.stream.point(x * math_radians, y * math_radians);\n  }\n});\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function (x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\nfunction scaleTranslate(k, dx, dy, sx, sy) {\n  function transform(x, y) {\n    x *= sx;\n    y *= sy;\n    return [dx + k * x, dy - k * y];\n  }\n  transform.invert = function (x, y) {\n    return [(x - dx) / k * sx, (dy - y) / k * sy];\n  };\n  return transform;\n}\nfunction scaleTranslateRotate(k, dx, dy, sx, sy, alpha) {\n  if (!alpha) return scaleTranslate(k, dx, dy, sx, sy);\n  var cosAlpha = math_cos(alpha),\n    sinAlpha = math_sin(alpha),\n    a = cosAlpha * k,\n    b = sinAlpha * k,\n    ai = cosAlpha / k,\n    bi = sinAlpha / k,\n    ci = (sinAlpha * dy - cosAlpha * dx) / k,\n    fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform(x, y) {\n    x *= sx;\n    y *= sy;\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform.invert = function (x, y) {\n    return [sx * (ai * x - bi * y + ci), sy * (fi - bi * x - ai * y)];\n  };\n  return transform;\n}\nfunction projection(project) {\n  return projectionMutator(function () {\n    return project;\n  })();\n}\nfunction projectionMutator(projectAt) {\n  var project,\n    k = 150,\n    // scale\n    x = 480,\n    y = 250,\n    // translate\n    lambda = 0,\n    phi = 0,\n    // center\n    deltaLambda = 0,\n    deltaPhi = 0,\n    deltaGamma = 0,\n    rotate,\n    // pre-rotate\n    alpha = 0,\n    // post-rotate angle\n    sx = 1,\n    // reflectX\n    sy = 1,\n    // reflectX\n    theta = null,\n    preclip = antimeridian,\n    // pre-clip angle\n    x0 = null,\n    y0,\n    x1,\n    y1,\n    postclip = d3_geo_src_identity,\n    // post-clip extent\n    delta2 = 0.5,\n    // precision\n    projectResample,\n    projectTransform,\n    projectRotateTransform,\n    cache,\n    cacheStream;\n  function projection(point) {\n    return projectRotateTransform(point[0] * math_radians, point[1] * math_radians);\n  }\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * src_math_degrees, point[1] * src_math_degrees];\n  }\n  projection.stream = function (stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n  projection.preclip = function (_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n  projection.postclip = function (_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n  projection.clipAngle = function (_) {\n    return arguments.length ? (preclip = +_ ? clip_circle(theta = _ * math_radians) : (theta = null, antimeridian), reset()) : theta * src_math_degrees;\n  };\n  projection.clipExtent = function (_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, d3_geo_src_identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n  projection.scale = function (_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n  projection.translate = function (_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n  projection.center = function (_) {\n    return arguments.length ? (lambda = _[0] % 360 * math_radians, phi = _[1] % 360 * math_radians, recenter()) : [lambda * src_math_degrees, phi * src_math_degrees];\n  };\n  projection.rotate = function (_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * math_radians, deltaPhi = _[1] % 360 * math_radians, deltaGamma = _.length > 2 ? _[2] % 360 * math_radians : 0, recenter()) : [deltaLambda * src_math_degrees, deltaPhi * src_math_degrees, deltaGamma * src_math_degrees];\n  };\n  projection.angle = function (_) {\n    return arguments.length ? (alpha = _ % 360 * math_radians, recenter()) : alpha * src_math_degrees;\n  };\n  projection.reflectX = function (_) {\n    return arguments.length ? (sx = _ ? -1 : 1, recenter()) : sx < 0;\n  };\n  projection.reflectY = function (_) {\n    return arguments.length ? (sy = _ ? -1 : 1, recenter()) : sy < 0;\n  };\n  projection.precision = function (_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n  projection.fitExtent = function (extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n  projection.fitSize = function (size, object) {\n    return fitSize(projection, size, object);\n  };\n  projection.fitWidth = function (width, object) {\n    return fitWidth(projection, width, object);\n  };\n  projection.fitHeight = function (height, object) {\n    return fitHeight(projection, height, object);\n  };\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, sx, sy, alpha).apply(null, project(lambda, phi)),\n      transform = scaleTranslateRotate(k, x - center[0], y - center[1], sx, sy, alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n  return function () {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/d3-geo/src/projection/conic.js\n\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n    phi1 = math_pi / 3,\n    m = projectionMutator(projectAt),\n    p = m(phi0, phi1);\n  p.parallels = function (_) {\n    return arguments.length ? m(phi0 = _[0] * math_radians, phi1 = _[1] * math_radians) : [phi0 * src_math_degrees, phi1 * src_math_degrees];\n  };\n  return p;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-geo/src/projection/cylindricalEqualArea.js\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = math_cos(phi0);\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, math_sin(phi) / cosPhi0];\n  }\n  forward.invert = function (x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n  return forward;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-geo/src/projection/conicEqualArea.js\n\n\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = math_sin(y0),\n    n = (sy0 + math_sin(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (src_math_abs(n) < src_math_epsilon) return cylindricalEqualAreaRaw(y0);\n  var c = 1 + sy0 * (2 * n - sy0),\n    r0 = sqrt(c) / n;\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * math_sin(y)) / n;\n    return [r * math_sin(x *= n), r0 - r * math_cos(x)];\n  }\n  project.invert = function (x, y) {\n    var r0y = r0 - y,\n      l = atan2(x, src_math_abs(r0y)) * sign(r0y);\n    if (r0y * n < 0) l -= math_pi * sign(x) * sign(r0y);\n    return [l / n, asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n  return project;\n}\n/* harmony default export */ function conicEqualArea() {\n  return conicProjection(conicEqualAreaRaw).scale(155.424).center([0, 33.6442]);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-geo/src/projection/albers.js\n\n/* harmony default export */ function albers() {\n  return conicEqualArea().parallels([29.5, 45.5]).scale(1070).translate([480, 250]).rotate([96, 0]).center([-0.6, 38.7]);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-geo/src/projection/albersUsa.js\n\n\n\n\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function (x, y) {\n      var i = -1;\n      while (++i < n) streams[i].point(x, y);\n    },\n    sphere: function () {\n      var i = -1;\n      while (++i < n) streams[i].sphere();\n    },\n    lineStart: function () {\n      var i = -1;\n      while (++i < n) streams[i].lineStart();\n    },\n    lineEnd: function () {\n      var i = -1;\n      while (++i < n) streams[i].lineEnd();\n    },\n    polygonStart: function () {\n      var i = -1;\n      while (++i < n) streams[i].polygonStart();\n    },\n    polygonEnd: function () {\n      var i = -1;\n      while (++i < n) streams[i].polygonEnd();\n    }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\n/* harmony default export */ function albersUsa() {\n  var cache,\n    cacheStream,\n    lower48 = albers(),\n    lower48Point,\n    alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]),\n    alaskaPoint,\n    // EPSG:3338\n    hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]),\n    hawaiiPoint,\n    // ESRI:102007\n    point,\n    pointStream = {\n      point: function (x, y) {\n        point = [x, y];\n      }\n    };\n  function albersUsa(coordinates) {\n    var x = coordinates[0],\n      y = coordinates[1];\n    return point = null, (lower48Point.point(x, y), point) || (alaskaPoint.point(x, y), point) || (hawaiiPoint.point(x, y), point);\n  }\n  albersUsa.invert = function (coordinates) {\n    var k = lower48.scale(),\n      t = lower48.translate(),\n      x = (coordinates[0] - t[0]) / k,\n      y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii : lower48).invert(coordinates);\n  };\n  albersUsa.stream = function (stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n  albersUsa.precision = function (_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n  albersUsa.scale = function (_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n  albersUsa.translate = function (_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(),\n      x = +_[0],\n      y = +_[1];\n    lower48Point = lower48.translate(_).clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]]).stream(pointStream);\n    alaskaPoint = alaska.translate([x - 0.307 * k, y + 0.201 * k]).clipExtent([[x - 0.425 * k + src_math_epsilon, y + 0.120 * k + src_math_epsilon], [x - 0.214 * k - src_math_epsilon, y + 0.234 * k - src_math_epsilon]]).stream(pointStream);\n    hawaiiPoint = hawaii.translate([x - 0.205 * k, y + 0.212 * k]).clipExtent([[x - 0.214 * k + src_math_epsilon, y + 0.166 * k + src_math_epsilon], [x - 0.115 * k - src_math_epsilon, y + 0.234 * k - src_math_epsilon]]).stream(pointStream);\n    return reset();\n  };\n  albersUsa.fitExtent = function (extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n  albersUsa.fitSize = function (size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n  albersUsa.fitWidth = function (width, object) {\n    return fitWidth(albersUsa, width, object);\n  };\n  albersUsa.fitHeight = function (height, object) {\n    return fitHeight(albersUsa, height, object);\n  };\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n  return albersUsa.scale(1070);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-geo/src/projection/azimuthal.js\n\nfunction azimuthalRaw(scale) {\n  return function (x, y) {\n    var cx = math_cos(x),\n      cy = math_cos(y),\n      k = scale(cx * cy);\n    if (k === Infinity) return [2, 0];\n    return [k * cy * math_sin(x), k * math_sin(y)];\n  };\n}\nfunction azimuthalInvert(angle) {\n  return function (x, y) {\n    var z = sqrt(x * x + y * y),\n      c = angle(z),\n      sc = math_sin(c),\n      cc = math_cos(c);\n    return [atan2(x * sc, z * cc), asin(z && y * sc / z)];\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/d3-geo/src/projection/azimuthalEqualArea.js\n\n\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function (cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function (z) {\n  return 2 * asin(z / 2);\n});\n/* harmony default export */ function azimuthalEqualArea() {\n  return projection(azimuthalEqualAreaRaw).scale(124.75).clipAngle(180 - 1e-3);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-geo/src/projection/azimuthalEquidistant.js\n\n\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function (c) {\n  return (c = acos(c)) && c / math_sin(c);\n});\nazimuthalEquidistantRaw.invert = azimuthalInvert(function (z) {\n  return z;\n});\n/* harmony default export */ function azimuthalEquidistant() {\n  return projection(azimuthalEquidistantRaw).scale(79.4188).clipAngle(180 - 1e-3);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-geo/src/projection/mercator.js\n\n\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((math_halfPi + phi) / 2))];\n}\nmercatorRaw.invert = function (x, y) {\n  return [x, 2 * atan(exp(y)) - math_halfPi];\n};\n/* harmony default export */ function mercator() {\n  return mercatorProjection(mercatorRaw).scale(961 / math_tau);\n}\nfunction mercatorProjection(project) {\n  var m = projection(project),\n    center = m.center,\n    scale = m.scale,\n    translate = m.translate,\n    clipExtent = m.clipExtent,\n    x0 = null,\n    y0,\n    x1,\n    y1; // clip extent\n\n  m.scale = function (_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n  m.translate = function (_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n  m.center = function (_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n  m.clipExtent = function (_) {\n    return arguments.length ? (_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n  function reclip() {\n    var k = math_pi * scale(),\n      t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]] : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n  return reclip();\n}\n;// CONCATENATED MODULE: ./node_modules/d3-geo/src/projection/conicConformal.js\n\n\n\nfunction tany(y) {\n  return tan((math_halfPi + y) / 2);\n}\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = math_cos(y0),\n    n = y0 === y1 ? math_sin(y0) : log(cy0 / math_cos(y1)) / log(tany(y1) / tany(y0)),\n    f = cy0 * math_pow(tany(y0), n) / n;\n  if (!n) return mercatorRaw;\n  function project(x, y) {\n    if (f > 0) {\n      if (y < -math_halfPi + src_math_epsilon) y = -math_halfPi + src_math_epsilon;\n    } else {\n      if (y > math_halfPi - src_math_epsilon) y = math_halfPi - src_math_epsilon;\n    }\n    var r = f / math_pow(tany(y), n);\n    return [r * math_sin(n * x), f - r * math_cos(n * x)];\n  }\n  project.invert = function (x, y) {\n    var fy = f - y,\n      r = sign(n) * sqrt(x * x + fy * fy),\n      l = atan2(x, src_math_abs(fy)) * sign(fy);\n    if (fy * n < 0) l -= math_pi * sign(x) * sign(fy);\n    return [l / n, 2 * atan(math_pow(f / r, 1 / n)) - math_halfPi];\n  };\n  return project;\n}\n/* harmony default export */ function conicConformal() {\n  return conicProjection(conicConformalRaw).scale(109.5).parallels([30, 30]);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-geo/src/projection/equirectangular.js\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\nequirectangularRaw.invert = equirectangularRaw;\n/* harmony default export */ function equirectangular() {\n  return projection(equirectangularRaw).scale(152.63);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-geo/src/projection/conicEquidistant.js\n\n\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = math_cos(y0),\n    n = y0 === y1 ? math_sin(y0) : (cy0 - math_cos(y1)) / (y1 - y0),\n    g = cy0 / n + y0;\n  if (src_math_abs(n) < src_math_epsilon) return equirectangularRaw;\n  function project(x, y) {\n    var gy = g - y,\n      nx = n * x;\n    return [gy * math_sin(nx), g - gy * math_cos(nx)];\n  }\n  project.invert = function (x, y) {\n    var gy = g - y,\n      l = atan2(x, src_math_abs(gy)) * sign(gy);\n    if (gy * n < 0) l -= math_pi * sign(x) * sign(gy);\n    return [l / n, g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n  return project;\n}\n/* harmony default export */ function conicEquidistant() {\n  return conicProjection(conicEquidistantRaw).scale(131.154).center([0, 13.9389]);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-geo/src/projection/equalEarth.js\n\n\nvar A1 = 1.340264,\n  A2 = -0.081106,\n  A3 = 0.000893,\n  A4 = 0.003796,\n  M = sqrt(3) / 2,\n  iterations = 12;\nfunction equalEarthRaw(lambda, phi) {\n  var l = asin(M * math_sin(phi)),\n    l2 = l * l,\n    l6 = l2 * l2 * l2;\n  return [lambda * math_cos(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))), l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))];\n}\nequalEarthRaw.invert = function (x, y) {\n  var l = y,\n    l2 = l * l,\n    l6 = l2 * l2 * l2;\n  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {\n    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;\n    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);\n    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;\n    if (src_math_abs(delta) < epsilon2) break;\n  }\n  return [M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / math_cos(l), asin(math_sin(l) / M)];\n};\n/* harmony default export */ function equalEarth() {\n  return projection(equalEarthRaw).scale(177.158);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-geo/src/projection/gnomonic.js\n\n\n\nfunction gnomonicRaw(x, y) {\n  var cy = math_cos(y),\n    k = math_cos(x) * cy;\n  return [cy * math_sin(x) / k, math_sin(y) / k];\n}\ngnomonicRaw.invert = azimuthalInvert(atan);\n/* harmony default export */ function gnomonic() {\n  return projection(gnomonicRaw).scale(144.049).clipAngle(60);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-geo/src/projection/identity.js\n\n\n\n\n\n/* harmony default export */ function projection_identity() {\n  var k = 1,\n    tx = 0,\n    ty = 0,\n    sx = 1,\n    sy = 1,\n    // scale, translate and reflect\n    alpha = 0,\n    ca,\n    sa,\n    // angle\n    x0 = null,\n    y0,\n    x1,\n    y1,\n    // clip extent\n    kx = 1,\n    ky = 1,\n    transform = transformer({\n      point: function (x, y) {\n        var p = projection([x, y]);\n        this.stream.point(p[0], p[1]);\n      }\n    }),\n    postclip = d3_geo_src_identity,\n    cache,\n    cacheStream;\n  function reset() {\n    kx = k * sx;\n    ky = k * sy;\n    cache = cacheStream = null;\n    return projection;\n  }\n  function projection(p) {\n    var x = p[0] * kx,\n      y = p[1] * ky;\n    if (alpha) {\n      var t = y * ca - x * sa;\n      x = x * ca + y * sa;\n      y = t;\n    }\n    return [x + tx, y + ty];\n  }\n  projection.invert = function (p) {\n    var x = p[0] - tx,\n      y = p[1] - ty;\n    if (alpha) {\n      var t = y * ca + x * sa;\n      x = x * ca - y * sa;\n      y = t;\n    }\n    return [x / kx, y / ky];\n  };\n  projection.stream = function (stream) {\n    return cache && cacheStream === stream ? cache : cache = transform(postclip(cacheStream = stream));\n  };\n  projection.postclip = function (_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n  projection.clipExtent = function (_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, d3_geo_src_identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n  projection.scale = function (_) {\n    return arguments.length ? (k = +_, reset()) : k;\n  };\n  projection.translate = function (_) {\n    return arguments.length ? (tx = +_[0], ty = +_[1], reset()) : [tx, ty];\n  };\n  projection.angle = function (_) {\n    return arguments.length ? (alpha = _ % 360 * math_radians, sa = math_sin(alpha), ca = math_cos(alpha), reset()) : alpha * src_math_degrees;\n  };\n  projection.reflectX = function (_) {\n    return arguments.length ? (sx = _ ? -1 : 1, reset()) : sx < 0;\n  };\n  projection.reflectY = function (_) {\n    return arguments.length ? (sy = _ ? -1 : 1, reset()) : sy < 0;\n  };\n  projection.fitExtent = function (extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n  projection.fitSize = function (size, object) {\n    return fitSize(projection, size, object);\n  };\n  projection.fitWidth = function (width, object) {\n    return fitWidth(projection, width, object);\n  };\n  projection.fitHeight = function (height, object) {\n    return fitHeight(projection, height, object);\n  };\n  return projection;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-geo/src/projection/naturalEarth1.js\n\n\nfunction naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi,\n    phi4 = phi2 * phi2;\n  return [lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))), phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))];\n}\nnaturalEarth1Raw.invert = function (x, y) {\n  var phi = y,\n    i = 25,\n    delta;\n  do {\n    var phi2 = phi * phi,\n      phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) / (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (src_math_abs(delta) > src_math_epsilon && --i > 0);\n  return [x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))), phi];\n};\n/* harmony default export */ function naturalEarth1() {\n  return projection(naturalEarth1Raw).scale(175.295);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-geo/src/projection/orthographic.js\n\n\n\nfunction orthographicRaw(x, y) {\n  return [math_cos(y) * math_sin(x), math_sin(y)];\n}\northographicRaw.invert = azimuthalInvert(asin);\n/* harmony default export */ function orthographic() {\n  return projection(orthographicRaw).scale(249.5).clipAngle(90 + src_math_epsilon);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-geo/src/projection/stereographic.js\n\n\n\nfunction stereographicRaw(x, y) {\n  var cy = math_cos(y),\n    k = 1 + math_cos(x) * cy;\n  return [cy * math_sin(x) / k, math_sin(y) / k];\n}\nstereographicRaw.invert = azimuthalInvert(function (z) {\n  return 2 * atan(z);\n});\n/* harmony default export */ function stereographic() {\n  return projection(stereographicRaw).scale(250).clipAngle(142);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-geo/src/projection/transverseMercator.js\n\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log(tan((math_halfPi + phi) / 2)), -lambda];\n}\ntransverseMercatorRaw.invert = function (x, y) {\n  return [-y, 2 * atan(exp(x)) - math_halfPi];\n};\n/* harmony default export */ function transverseMercator() {\n  var m = mercatorProjection(transverseMercatorRaw),\n    center = m.center,\n    rotate = m.rotate;\n  m.center = function (_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n  m.rotate = function (_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n  return rotate([0, 0, 90]).scale(159.155);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-geo/src/index.js\n\n\n\n\n\n\n // DEPRECATED! Use d3.geoIdentity().clipExtent(…).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/cluster.js\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n/* harmony default export */ function cluster() {\n  var separation = defaultSeparation,\n    dx = 1,\n    dy = 1,\n    nodeSize = false;\n  function cluster(root) {\n    var previousNode,\n      x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function (node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n    var left = leafLeft(root),\n      right = leafRight(root),\n      x0 = left.x - separation(left, right) / 2,\n      x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function (node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function (node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n  cluster.separation = function (x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n  cluster.size = function (x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : nodeSize ? null : [dx, dy];\n  };\n  cluster.nodeSize = function (x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : nodeSize ? [dx, dy] : null;\n  };\n  return cluster;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/hierarchy/count.js\nfunction count_count(node) {\n  var sum = 0,\n    children = node.children,\n    i = children && children.length;\n  if (!i) sum = 1;else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n/* harmony default export */ function hierarchy_count() {\n  return this.eachAfter(count_count);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/hierarchy/each.js\n/* harmony default export */ function hierarchy_each(callback, that) {\n  let index = -1;\n  for (const node of this) {\n    callback.call(that, node, ++index, this);\n  }\n  return this;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/hierarchy/eachBefore.js\n/* harmony default export */ function eachBefore(callback, that) {\n  var node = this,\n    nodes = [node],\n    children,\n    i,\n    index = -1;\n  while (node = nodes.pop()) {\n    callback.call(that, node, ++index, this);\n    if (children = node.children) {\n      for (i = children.length - 1; i >= 0; --i) {\n        nodes.push(children[i]);\n      }\n    }\n  }\n  return this;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/hierarchy/eachAfter.js\n/* harmony default export */ function eachAfter(callback, that) {\n  var node = this,\n    nodes = [node],\n    next = [],\n    children,\n    i,\n    n,\n    index = -1;\n  while (node = nodes.pop()) {\n    next.push(node);\n    if (children = node.children) {\n      for (i = 0, n = children.length; i < n; ++i) {\n        nodes.push(children[i]);\n      }\n    }\n  }\n  while (node = next.pop()) {\n    callback.call(that, node, ++index, this);\n  }\n  return this;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/hierarchy/find.js\n/* harmony default export */ function hierarchy_find(callback, that) {\n  let index = -1;\n  for (const node of this) {\n    if (callback.call(that, node, ++index, this)) {\n      return node;\n    }\n  }\n}\n;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/hierarchy/sum.js\n/* harmony default export */ function hierarchy_sum(value) {\n  return this.eachAfter(function (node) {\n    var sum = +value(node.data) || 0,\n      children = node.children,\n      i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/hierarchy/sort.js\n/* harmony default export */ function hierarchy_sort(compare) {\n  return this.eachBefore(function (node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/hierarchy/path.js\n/* harmony default export */ function hierarchy_path(end) {\n  var start = this,\n    ancestor = leastCommonAncestor(start, end),\n    nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n    bNodes = b.ancestors(),\n    c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/hierarchy/ancestors.js\n/* harmony default export */ function ancestors() {\n  var node = this,\n    nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/hierarchy/descendants.js\n/* harmony default export */ function descendants() {\n  return Array.from(this);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/hierarchy/leaves.js\n/* harmony default export */ function leaves() {\n  var leaves = [];\n  this.eachBefore(function (node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/hierarchy/links.js\n/* harmony default export */ function links() {\n  var root = this,\n    links = [];\n  root.each(function (node) {\n    if (node !== root) {\n      // Don’t include the root’s parent, if any.\n      links.push({\n        source: node.parent,\n        target: node\n      });\n    }\n  });\n  return links;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/hierarchy/iterator.js\n/* harmony default export */ function* hierarchy_iterator() {\n  var node = this,\n    current,\n    next = [node],\n    children,\n    i,\n    n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      yield node;\n      if (children = node.children) {\n        for (i = 0, n = children.length; i < n; ++i) {\n          next.push(children[i]);\n        }\n      }\n    }\n  } while (next.length);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/hierarchy/index.js\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction hierarchy(data, children) {\n  if (data instanceof Map) {\n    data = [undefined, data];\n    if (children === undefined) children = mapChildren;\n  } else if (children === undefined) {\n    children = objectChildren;\n  }\n  var root = new Node(data),\n    node,\n    nodes = [root],\n    child,\n    childs,\n    i,\n    n;\n  while (node = nodes.pop()) {\n    if ((childs = children(node.data)) && (n = (childs = Array.from(childs)).length)) {\n      node.children = childs;\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = childs[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n  return root.eachBefore(computeHeight);\n}\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\nfunction objectChildren(d) {\n  return d.children;\n}\nfunction mapChildren(d) {\n  return Array.isArray(d) ? d[1] : null;\n}\nfunction copyData(node) {\n  if (node.data.value !== undefined) node.value = node.data.value;\n  node.data = node.data.data;\n}\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height; while ((node = node.parent) && node.height < ++height);\n}\nfunction Node(data) {\n  this.data = data;\n  this.depth = this.height = 0;\n  this.parent = null;\n}\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: hierarchy_count,\n  each: hierarchy_each,\n  eachAfter: eachAfter,\n  eachBefore: eachBefore,\n  find: hierarchy_find,\n  sum: hierarchy_sum,\n  sort: hierarchy_sort,\n  path: hierarchy_path,\n  ancestors: ancestors,\n  descendants: descendants,\n  leaves: leaves,\n  links: links,\n  copy: node_copy,\n  [Symbol.iterator]: hierarchy_iterator\n};\n;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/accessors.js\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\nfunction required(f) {\n  if (typeof f !== "function") throw new Error();\n  return f;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/constant.js\nfunction constantZero() {\n  return 0;\n}\n/* harmony default export */ function d3_hierarchy_src_constant(x) {\n  return function () {\n    return x;\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/lcg.js\n// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use\nconst lcg_a = 1664525;\nconst lcg_c = 1013904223;\nconst lcg_m = 4294967296; // 2^32\n\n/* harmony default export */ function src_lcg() {\n  let s = 1;\n  return () => (s = (lcg_a * s + lcg_c) % lcg_m) / lcg_m;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/array.js\n/* harmony default export */ function d3_hierarchy_src_array(x) {\n  return typeof x === "object" && "length" in x ? x // Array, TypedArray, NodeList, array-like\n  : Array.from(x); // Map, Set, iterable, string, or anything else\n}\n\nfunction array_shuffle(array, random) {\n  let m = array.length,\n    t,\n    i;\n  while (m) {\n    i = random() * m-- | 0;\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n  return array;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/pack/enclose.js\n\n\n/* harmony default export */ function enclose(circles) {\n  return packEncloseRandom(circles, src_lcg());\n}\nfunction packEncloseRandom(circles, random) {\n  var i = 0,\n    n = (circles = array_shuffle(Array.from(circles), random)).length,\n    B = [],\n    p,\n    e;\n  while (i < n) {\n    p = circles[i];\n    if (e && enclosesWeak(e, p)) ++i;else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n  }\n  return e;\n}\nfunction extendBasis(B, p) {\n  var i, j;\n  if (enclosesWeakAll(p, B)) return [p];\n\n  // If we get here then B must have at least one element.\n  for (i = 0; i < B.length; ++i) {\n    if (enclosesNot(p, B[i]) && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n      return [B[i], p];\n    }\n  }\n\n  // If we get here then B must have at least two elements.\n  for (i = 0; i < B.length - 1; ++i) {\n    for (j = i + 1; j < B.length; ++j) {\n      if (enclosesNot(encloseBasis2(B[i], B[j]), p) && enclosesNot(encloseBasis2(B[i], p), B[j]) && enclosesNot(encloseBasis2(B[j], p), B[i]) && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n        return [B[i], B[j], p];\n      }\n    }\n  }\n\n  // If we get here then something is very wrong.\n  throw new Error();\n}\nfunction enclosesNot(a, b) {\n  var dr = a.r - b.r,\n    dx = b.x - a.x,\n    dy = b.y - a.y;\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\n}\nfunction enclosesWeak(a, b) {\n  var dr = a.r - b.r + Math.max(a.r, b.r, 1) * 1e-9,\n    dx = b.x - a.x,\n    dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\nfunction enclosesWeakAll(a, B) {\n  for (var i = 0; i < B.length; ++i) {\n    if (!enclosesWeak(a, B[i])) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction encloseBasis(B) {\n  switch (B.length) {\n    case 1:\n      return encloseBasis1(B[0]);\n    case 2:\n      return encloseBasis2(B[0], B[1]);\n    case 3:\n      return encloseBasis3(B[0], B[1], B[2]);\n  }\n}\nfunction encloseBasis1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\nfunction encloseBasis2(a, b) {\n  var x1 = a.x,\n    y1 = a.y,\n    r1 = a.r,\n    x2 = b.x,\n    y2 = b.y,\n    r2 = b.r,\n    x21 = x2 - x1,\n    y21 = y2 - y1,\n    r21 = r2 - r1,\n    l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\nfunction encloseBasis3(a, b, c) {\n  var x1 = a.x,\n    y1 = a.y,\n    r1 = a.r,\n    x2 = b.x,\n    y2 = b.y,\n    r2 = b.r,\n    x3 = c.x,\n    y3 = c.y,\n    r3 = c.r,\n    a2 = x1 - x2,\n    a3 = x1 - x3,\n    b2 = y1 - y2,\n    b3 = y1 - y3,\n    c2 = r2 - r1,\n    c3 = r3 - r1,\n    d1 = x1 * x1 + y1 * y1 - r1 * r1,\n    d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n    d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n    ab = a3 * b2 - a2 * b3,\n    xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n    xb = (b3 * c2 - b2 * c3) / ab,\n    ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n    yb = (a2 * c3 - a3 * c2) / ab,\n    A = xb * xb + yb * yb - 1,\n    B = 2 * (r1 + xa * xb + ya * yb),\n    C = xa * xa + ya * ya - r1 * r1,\n    r = -(Math.abs(A) > 1e-6 ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n  return {\n    x: x1 + xa + xb * r,\n    y: y1 + ya + yb * r,\n    r: r\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/pack/siblings.js\n\n\n\nfunction place(b, a, c) {\n  var dx = b.x - a.x,\n    x,\n    a2,\n    dy = b.y - a.y,\n    y,\n    b2,\n    d2 = dx * dx + dy * dy;\n  if (d2) {\n    a2 = a.r + c.r, a2 *= a2;\n    b2 = b.r + c.r, b2 *= b2;\n    if (a2 > b2) {\n      x = (d2 + b2 - a2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));\n      c.x = b.x - x * dx - y * dy;\n      c.y = b.y - x * dy + y * dx;\n    } else {\n      x = (d2 + a2 - b2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));\n      c.x = a.x + x * dx - y * dy;\n      c.y = a.y + x * dy + y * dx;\n    }\n  } else {\n    c.x = a.x + c.r;\n    c.y = a.y;\n  }\n}\nfunction intersects(a, b) {\n  var dr = a.r + b.r - 1e-6,\n    dx = b.x - a.x,\n    dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\nfunction score(node) {\n  var a = node._,\n    b = node.next._,\n    ab = a.r + b.r,\n    dx = (a.x * b.r + b.x * a.r) / ab,\n    dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\nfunction siblings_Node(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\nfunction packSiblingsRandom(circles, random) {\n  if (!(n = (circles = d3_hierarchy_src_array(circles)).length)) return 0;\n  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new siblings_Node(a), b = new siblings_Node(b), c = new siblings_Node(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new siblings_Node(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = score(a);\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b;\n  while ((c = c.next) !== b) a.push(c._);\n  c = packEncloseRandom(a, random);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n  return c.r;\n}\n/* harmony default export */ function siblings(circles) {\n  packSiblingsRandom(circles, src_lcg());\n  return circles;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/pack/index.js\n\n\n\n\nfunction pack_defaultRadius(d) {\n  return Math.sqrt(d.value);\n}\n/* harmony default export */ function pack() {\n  var radius = null,\n    dx = 1,\n    dy = 1,\n    padding = constantZero;\n  function pack(root) {\n    const random = src_lcg();\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius)).eachAfter(packChildrenRandom(padding, 0.5, random)).eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(pack_defaultRadius)).eachAfter(packChildrenRandom(constantZero, 1, random)).eachAfter(packChildrenRandom(padding, root.r / Math.min(dx, dy), random)).eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n  pack.radius = function (x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n  pack.size = function (x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n  pack.padding = function (x) {\n    return arguments.length ? (padding = typeof x === "function" ? x : d3_hierarchy_src_constant(+x), pack) : padding;\n  };\n  return pack;\n}\nfunction radiusLeaf(radius) {\n  return function (node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\nfunction packChildrenRandom(padding, k, random) {\n  return function (node) {\n    if (children = node.children) {\n      var children,\n        i,\n        n = children.length,\n        r = padding(node) * k || 0,\n        e;\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packSiblingsRandom(children, random);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\nfunction translateChild(k) {\n  return function (node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/treemap/round.js\n/* harmony default export */ function treemap_round(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/treemap/dice.js\n/* harmony default export */ function dice(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n    node,\n    i = -1,\n    n = nodes.length,\n    k = parent.value && (x1 - x0) / parent.value;\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n}\n;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/partition.js\n\n\n/* harmony default export */ function partition() {\n  var dx = 1,\n    dy = 1,\n    padding = 0,\n    round = false;\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 = root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(treemap_round);\n    return root;\n  }\n  function positionNode(dy, n) {\n    return function (node) {\n      if (node.children) {\n        dice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n        y0 = node.y0,\n        x1 = node.x1 - padding,\n        y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n  partition.round = function (x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n  partition.size = function (x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n  partition.padding = function (x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n  return partition;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/stratify.js\n\n\nvar preroot = {\n    depth: -1\n  },\n  ambiguous = {},\n  imputed = {};\nfunction defaultId(d) {\n  return d.id;\n}\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n/* harmony default export */ function stratify() {\n  var id = defaultId,\n    parentId = defaultParentId,\n    path;\n  function stratify(data) {\n    var nodes = Array.from(data),\n      currentId = id,\n      currentParentId = parentId,\n      n,\n      d,\n      i,\n      root,\n      parent,\n      node,\n      nodeId,\n      nodeKey,\n      nodeByKey = new Map();\n    if (path != null) {\n      const I = nodes.map((d, i) => normalize(path(d, i, data)));\n      const P = I.map(parentof);\n      const S = new Set(I).add("");\n      for (const i of P) {\n        if (!S.has(i)) {\n          S.add(i);\n          I.push(i);\n          P.push(parentof(i));\n          nodes.push(imputed);\n        }\n      }\n      currentId = (_, i) => I[i];\n      currentParentId = (_, i) => P[i];\n    }\n    for (i = 0, n = nodes.length; i < n; ++i) {\n      d = nodes[i], node = nodes[i] = new Node(d);\n      if ((nodeId = currentId(d, i, data)) != null && (nodeId += "")) {\n        nodeKey = node.id = nodeId;\n        nodeByKey.set(nodeKey, nodeByKey.has(nodeKey) ? ambiguous : node);\n      }\n      if ((nodeId = currentParentId(d, i, data)) != null && (nodeId += "")) {\n        node.parent = nodeId;\n      }\n    }\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (nodeId = node.parent) {\n        parent = nodeByKey.get(nodeId);\n        if (!parent) throw new Error("missing: " + nodeId);\n        if (parent === ambiguous) throw new Error("ambiguous: " + nodeId);\n        if (parent.children) parent.children.push(node);else parent.children = [node];\n        node.parent = parent;\n      } else {\n        if (root) throw new Error("multiple roots");\n        root = node;\n      }\n    }\n    if (!root) throw new Error("no root");\n\n    // When imputing internal nodes, only introduce roots if needed.\n    // Then replace the imputed marker data with null.\n    if (path != null) {\n      while (root.data === imputed && root.children.length === 1) {\n        root = root.children[0], --n;\n      }\n      for (let i = nodes.length - 1; i >= 0; --i) {\n        node = nodes[i];\n        if (node.data !== imputed) break;\n        node.data = null;\n      }\n    }\n    root.parent = preroot;\n    root.eachBefore(function (node) {\n      node.depth = node.parent.depth + 1;\n      --n;\n    }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error("cycle");\n    return root;\n  }\n  stratify.id = function (x) {\n    return arguments.length ? (id = optional(x), stratify) : id;\n  };\n  stratify.parentId = function (x) {\n    return arguments.length ? (parentId = optional(x), stratify) : parentId;\n  };\n  stratify.path = function (x) {\n    return arguments.length ? (path = optional(x), stratify) : path;\n  };\n  return stratify;\n}\n\n// To normalize a path, we coerce to a string, strip the trailing slash if any\n// (as long as the trailing slash is not immediately preceded by another slash),\n// and add leading slash if missing.\nfunction normalize(path) {\n  path = `${path}`;\n  let i = path.length;\n  if (slash(path, i - 1) && !slash(path, i - 2)) path = path.slice(0, -1);\n  return path[0] === "/" ? path : `/${path}`;\n}\n\n// Walk backwards to find the first slash that is not the leading slash, e.g.:\n// "/foo/bar" ⇥ "/foo", "/foo" ⇥ "/", "/" ↦ "". (The root is special-cased\n// because the id of the root must be a truthy value.)\nfunction parentof(path) {\n  let i = path.length;\n  if (i < 2) return "";\n  while (--i > 1) if (slash(path, i)) break;\n  return path.slice(0, i);\n}\n\n// Slashes can be escaped; to determine whether a slash is a path delimiter, we\n// count the number of preceding backslashes escaping the forward slash: an odd\n// number indicates an escaped forward slash.\nfunction slash(path, i) {\n  if (path[i] === "/") {\n    let k = 0;\n    while (i > 0 && path[--i] === "\\\\") ++k;\n    if ((k & 1) === 0) return true;\n  }\n  return false;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/tree.js\n\nfunction tree_defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n    change = 0,\n    children = v.children,\n    i = children.length,\n    w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n    node,\n    nodes = [tree],\n    child,\n    children,\n    i,\n    n;\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford "tidy" algorithm\n/* harmony default export */ function tree() {\n  var separation = tree_defaultSeparation,\n    dx = 1,\n    dy = 1,\n    nodeSize = null;\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n        right = root,\n        bottom = root;\n      root.eachBefore(function (node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n        tx = s - left.x,\n        kx = dx / (right.x + s + tx),\n        ky = dy / (bottom.depth || 1);\n      root.eachBefore(function (node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n      siblings = v.parent.children,\n      w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n        vop = v,\n        vim = w,\n        vom = vip.parent.children[0],\n        sip = vip.m,\n        sop = vop.m,\n        sim = vim.m,\n        som = vom.m,\n        shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n  tree.separation = function (x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n  tree.size = function (x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : nodeSize ? null : [dx, dy];\n  };\n  tree.nodeSize = function (x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : nodeSize ? [dx, dy] : null;\n  };\n  return tree;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/treemap/slice.js\n/* harmony default export */ function treemap_slice(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n    node,\n    i = -1,\n    n = nodes.length,\n    k = parent.value && (y1 - y0) / parent.value;\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n}\n;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/treemap/squarify.js\n\n\nvar phi = (1 + Math.sqrt(5)) / 2;\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n    nodes = parent.children,\n    row,\n    nodeValue,\n    i0 = 0,\n    i1 = 0,\n    n = nodes.length,\n    dx,\n    dy,\n    value = parent.value,\n    sumValue,\n    minValue,\n    maxValue,\n    newRatio,\n    minRatio,\n    alpha,\n    beta;\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) {\n        sumValue -= nodeValue;\n        break;\n      }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {\n      value: sumValue,\n      dice: dx < dy,\n      children: nodes.slice(i0, i1)\n    });\n    if (row.dice) dice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);else treemap_slice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n  return rows;\n}\n/* harmony default export */ const squarify = ((function custom(ratio) {\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n  squarify.ratio = function (x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n  return squarify;\n})(phi));\n;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/treemap/index.js\n\n\n\n\n/* harmony default export */ function treemap() {\n  var tile = squarify,\n    round = false,\n    dx = 1,\n    dy = 1,\n    paddingStack = [0],\n    paddingInner = constantZero,\n    paddingTop = constantZero,\n    paddingRight = constantZero,\n    paddingBottom = constantZero,\n    paddingLeft = constantZero;\n  function treemap(root) {\n    root.x0 = root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(treemap_round);\n    return root;\n  }\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n      x0 = node.x0 + p,\n      y0 = node.y0 + p,\n      x1 = node.x1 - p,\n      y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n  treemap.round = function (x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n  treemap.size = function (x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n  treemap.tile = function (x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n  treemap.padding = function (x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n  treemap.paddingInner = function (x) {\n    return arguments.length ? (paddingInner = typeof x === "function" ? x : d3_hierarchy_src_constant(+x), treemap) : paddingInner;\n  };\n  treemap.paddingOuter = function (x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n  treemap.paddingTop = function (x) {\n    return arguments.length ? (paddingTop = typeof x === "function" ? x : d3_hierarchy_src_constant(+x), treemap) : paddingTop;\n  };\n  treemap.paddingRight = function (x) {\n    return arguments.length ? (paddingRight = typeof x === "function" ? x : d3_hierarchy_src_constant(+x), treemap) : paddingRight;\n  };\n  treemap.paddingBottom = function (x) {\n    return arguments.length ? (paddingBottom = typeof x === "function" ? x : d3_hierarchy_src_constant(+x), treemap) : paddingBottom;\n  };\n  treemap.paddingLeft = function (x) {\n    return arguments.length ? (paddingLeft = typeof x === "function" ? x : d3_hierarchy_src_constant(+x), treemap) : paddingLeft;\n  };\n  return treemap;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/treemap/binary.js\n/* harmony default export */ function binary(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n    i,\n    n = nodes.length,\n    sum,\n    sums = new Array(n + 1);\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n  partition(0, n, parent.value, x0, y0, x1, y1);\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n    var valueOffset = sums[i],\n      valueTarget = value / 2 + valueOffset,\n      k = i + 1,\n      hi = j - 1;\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;else hi = mid;\n    }\n    if (valueTarget - sums[k - 1] < sums[k] - valueTarget && i + 1 < k) --k;\n    var valueLeft = sums[k] - valueOffset,\n      valueRight = value - valueLeft;\n    if (x1 - x0 > y1 - y0) {\n      var xk = value ? (x0 * valueRight + x1 * valueLeft) / value : x1;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = value ? (y0 * valueRight + y1 * valueLeft) / value : y1;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n}\n;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/treemap/sliceDice.js\n\n\n/* harmony default export */ function sliceDice(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemap_slice : dice)(parent, x0, y0, x1, y1);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/treemap/resquarify.js\n\n\n\n/* harmony default export */ const resquarify = ((function custom(ratio) {\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && rows.ratio === ratio) {\n      var rows,\n        row,\n        nodes,\n        i,\n        j = -1,\n        n,\n        m = rows.length,\n        value = parent.value;\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) dice(row, x0, y0, x1, value ? y0 += (y1 - y0) * row.value / value : y1);else treemap_slice(row, x0, y0, value ? x0 += (x1 - x0) * row.value / value : x1, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n  resquarify.ratio = function (x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n  return resquarify;\n})(phi));\n;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/index.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n;// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/discrete.js\n/* harmony default export */ function discrete(range) {\n  var n = range.length;\n  return function (t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/hue.js\n\n/* harmony default export */ function src_hue(a, b) {\n  var i = hue(+a, +b);\n  return function (t) {\n    var x = i(t);\n    return x - 360 * Math.floor(x / 360);\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/round.js\n/* harmony default export */ function round(a, b) {\n  return a = +a, b = +b, function (t) {\n    return Math.round(a * (1 - t) + b * t);\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/zoom.js\nvar zoom_epsilon2 = 1e-12;\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n/* harmony default export */ const src_zoom = ((function zoomRho(rho, rho2, rho4) {\n  // p0 = [ux0, uy0, w0]\n  // p1 = [ux1, uy1, w1]\n  function zoom(p0, p1) {\n    var ux0 = p0[0],\n      uy0 = p0[1],\n      w0 = p0[2],\n      ux1 = p1[0],\n      uy1 = p1[1],\n      w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n    // Special case for u0 ≅ u1.\n    if (d2 < zoom_epsilon2) {\n      S = Math.log(w1 / w0) / rho;\n      i = function (t) {\n        return [ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(rho * t * S)];\n      };\n    }\n\n    // General case.\n    else {\n      var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / rho;\n      i = function (t) {\n        var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n        return [ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / cosh(rho * s + r0)];\n      };\n    }\n    i.duration = S * 1000 * rho / Math.SQRT2;\n    return i;\n  }\n  zoom.rho = function (_) {\n    var _1 = Math.max(1e-3, +_),\n      _2 = _1 * _1,\n      _4 = _2 * _2;\n    return zoomRho(_1, _2, _4);\n  };\n  return zoom;\n})(Math.SQRT2, 2, 4));\n;// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/hsl.js\n\n\nfunction hsl_hsl(hue) {\n  return function (start, end) {\n    var h = hue((start = hsl(start)).h, (end = hsl(end)).h),\n      s = nogamma(start.s, end.s),\n      l = nogamma(start.l, end.l),\n      opacity = nogamma(start.opacity, end.opacity);\n    return function (t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + "";\n    };\n  };\n}\n/* harmony default export */ const src_hsl = (hsl_hsl(hue));\nvar hslLong = hsl_hsl(nogamma);\n;// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/lab.js\n\n\nfunction lab_lab(start, end) {\n  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n    a = nogamma(start.a, end.a),\n    b = nogamma(start.b, end.b),\n    opacity = nogamma(start.opacity, end.opacity);\n  return function (t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + "";\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/hcl.js\n\n\nfunction hcl_hcl(hue) {\n  return function (start, end) {\n    var h = hue((start = hcl(start)).h, (end = hcl(end)).h),\n      c = nogamma(start.c, end.c),\n      l = nogamma(start.l, end.l),\n      opacity = nogamma(start.opacity, end.opacity);\n    return function (t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + "";\n    };\n  };\n}\n/* harmony default export */ const src_hcl = (hcl_hcl(hue));\nvar hclLong = hcl_hcl(nogamma);\n;// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/cubehelix.js\n\n\nfunction cubehelix(hue) {\n  return function cubehelixGamma(y) {\n    y = +y;\n    function cubehelix(start, end) {\n      var h = hue((start = cubehelix_cubehelix(start)).h, (end = cubehelix_cubehelix(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n      return function (t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + "";\n      };\n    }\n    cubehelix.gamma = cubehelixGamma;\n    return cubehelix;\n  }(1);\n}\n/* harmony default export */ const src_cubehelix = (cubehelix(hue));\nvar cubehelixLong = cubehelix(nogamma);\n;// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/piecewise.js\n\nfunction piecewise(interpolate, values) {\n  if (values === undefined) values = interpolate, interpolate = value;\n  var i = 0,\n    n = values.length - 1,\n    v = values[0],\n    I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function (t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/quantize.js\n/* harmony default export */ function quantize(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/index.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n;// CONCATENATED MODULE: ./node_modules/d3-path/src/index.js\n\n;// CONCATENATED MODULE: ./node_modules/d3-polygon/src/area.js\n/* harmony default export */ function d3_polygon_src_area(polygon) {\n  var i = -1,\n    n = polygon.length,\n    a,\n    b = polygon[n - 1],\n    area = 0;\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n  return area / 2;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-polygon/src/centroid.js\n/* harmony default export */ function src_centroid(polygon) {\n  var i = -1,\n    n = polygon.length,\n    x = 0,\n    y = 0,\n    a,\n    b = polygon[n - 1],\n    c,\n    k = 0;\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n  return k *= 3, [x / k, y / k];\n}\n;// CONCATENATED MODULE: ./node_modules/d3-polygon/src/cross.js\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\n/* harmony default export */ function src_cross(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-polygon/src/hull.js\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  const n = points.length,\n    indexes = [0, 1];\n  let size = 2,\n    i;\n  for (i = 2; i < n; ++i) {\n    while (size > 1 && src_cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n  return indexes.slice(0, size); // remove popped points\n}\n\n/* harmony default export */ function hull(points) {\n  if ((n = points.length) < 3) return null;\n  var i,\n    n,\n    sortedPoints = new Array(n),\n    flippedPoints = new Array(n);\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n    lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n    skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n    hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n  return hull;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-polygon/src/contains.js\n/* harmony default export */ function d3_polygon_src_contains(polygon, point) {\n  var n = polygon.length,\n    p = polygon[n - 1],\n    x = point[0],\n    y = point[1],\n    x0 = p[0],\n    y0 = p[1],\n    x1,\n    y1,\n    inside = false;\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (y1 > y !== y0 > y && x < (x0 - x1) * (y - y1) / (y0 - y1) + x1) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n  return inside;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-polygon/src/length.js\n/* harmony default export */ function d3_polygon_src_length(polygon) {\n  var i = -1,\n    n = polygon.length,\n    b = polygon[n - 1],\n    xa,\n    ya,\n    xb = b[0],\n    yb = b[1],\n    perimeter = 0;\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.hypot(xa, ya);\n  }\n  return perimeter;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-polygon/src/index.js\n\n\n\n\n\n;// CONCATENATED MODULE: ./node_modules/d3-quadtree/src/index.js\n\n;// CONCATENATED MODULE: ./node_modules/d3-random/src/defaultSource.js\n/* harmony default export */ const src_defaultSource = (Math.random);\n;// CONCATENATED MODULE: ./node_modules/d3-random/src/uniform.js\n\n/* harmony default export */ const uniform = ((function sourceRandomUniform(source) {\n  function randomUniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;else max -= min;\n    return function () {\n      return source() * max + min;\n    };\n  }\n  randomUniform.source = sourceRandomUniform;\n  return randomUniform;\n})(src_defaultSource));\n;// CONCATENATED MODULE: ./node_modules/d3-random/src/int.js\n\n/* harmony default export */ const src_int = ((function sourceRandomInt(source) {\n  function randomInt(min, max) {\n    if (arguments.length < 2) max = min, min = 0;\n    min = Math.floor(min);\n    max = Math.floor(max) - min;\n    return function () {\n      return Math.floor(source() * max + min);\n    };\n  }\n  randomInt.source = sourceRandomInt;\n  return randomInt;\n})(src_defaultSource));\n;// CONCATENATED MODULE: ./node_modules/d3-random/src/normal.js\n\n/* harmony default export */ const normal = ((function sourceRandomNormal(source) {\n  function randomNormal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function () {\n      var y;\n\n      // If available, use the second previously-generated uniform random.\n      if (x != null) y = x, x = null;\n\n      // Otherwise, generate a new x and y.\n      else do {\n        x = source() * 2 - 1;\n        y = source() * 2 - 1;\n        r = x * x + y * y;\n      } while (!r || r > 1);\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n  randomNormal.source = sourceRandomNormal;\n  return randomNormal;\n})(src_defaultSource));\n;// CONCATENATED MODULE: ./node_modules/d3-random/src/logNormal.js\n\n\n/* harmony default export */ const logNormal = ((function sourceRandomLogNormal(source) {\n  var N = normal.source(source);\n  function randomLogNormal() {\n    var randomNormal = N.apply(this, arguments);\n    return function () {\n      return Math.exp(randomNormal());\n    };\n  }\n  randomLogNormal.source = sourceRandomLogNormal;\n  return randomLogNormal;\n})(src_defaultSource));\n;// CONCATENATED MODULE: ./node_modules/d3-random/src/irwinHall.js\n\n/* harmony default export */ const irwinHall = ((function sourceRandomIrwinHall(source) {\n  function randomIrwinHall(n) {\n    if ((n = +n) <= 0) return () => 0;\n    return function () {\n      for (var sum = 0, i = n; i > 1; --i) sum += source();\n      return sum + i * source();\n    };\n  }\n  randomIrwinHall.source = sourceRandomIrwinHall;\n  return randomIrwinHall;\n})(src_defaultSource));\n;// CONCATENATED MODULE: ./node_modules/d3-random/src/bates.js\n\n\n/* harmony default export */ const bates = ((function sourceRandomBates(source) {\n  var I = irwinHall.source(source);\n  function randomBates(n) {\n    // use limiting distribution at n === 0\n    if ((n = +n) === 0) return source;\n    var randomIrwinHall = I(n);\n    return function () {\n      return randomIrwinHall() / n;\n    };\n  }\n  randomBates.source = sourceRandomBates;\n  return randomBates;\n})(src_defaultSource));\n;// CONCATENATED MODULE: ./node_modules/d3-random/src/exponential.js\n\n/* harmony default export */ const src_exponential = ((function sourceRandomExponential(source) {\n  function randomExponential(lambda) {\n    return function () {\n      return -Math.log1p(-source()) / lambda;\n    };\n  }\n  randomExponential.source = sourceRandomExponential;\n  return randomExponential;\n})(src_defaultSource));\n;// CONCATENATED MODULE: ./node_modules/d3-random/src/pareto.js\n\n/* harmony default export */ const pareto = ((function sourceRandomPareto(source) {\n  function randomPareto(alpha) {\n    if ((alpha = +alpha) < 0) throw new RangeError("invalid alpha");\n    alpha = 1 / -alpha;\n    return function () {\n      return Math.pow(1 - source(), alpha);\n    };\n  }\n  randomPareto.source = sourceRandomPareto;\n  return randomPareto;\n})(src_defaultSource));\n;// CONCATENATED MODULE: ./node_modules/d3-random/src/bernoulli.js\n\n/* harmony default export */ const bernoulli = ((function sourceRandomBernoulli(source) {\n  function randomBernoulli(p) {\n    if ((p = +p) < 0 || p > 1) throw new RangeError("invalid p");\n    return function () {\n      return Math.floor(source() + p);\n    };\n  }\n  randomBernoulli.source = sourceRandomBernoulli;\n  return randomBernoulli;\n})(src_defaultSource));\n;// CONCATENATED MODULE: ./node_modules/d3-random/src/geometric.js\n\n/* harmony default export */ const geometric = ((function sourceRandomGeometric(source) {\n  function randomGeometric(p) {\n    if ((p = +p) < 0 || p > 1) throw new RangeError("invalid p");\n    if (p === 0) return () => Infinity;\n    if (p === 1) return () => 1;\n    p = Math.log1p(-p);\n    return function () {\n      return 1 + Math.floor(Math.log1p(-source()) / p);\n    };\n  }\n  randomGeometric.source = sourceRandomGeometric;\n  return randomGeometric;\n})(src_defaultSource));\n;// CONCATENATED MODULE: ./node_modules/d3-random/src/gamma.js\n\n\n/* harmony default export */ const src_gamma = ((function sourceRandomGamma(source) {\n  var randomNormal = normal.source(source)();\n  function randomGamma(k, theta) {\n    if ((k = +k) < 0) throw new RangeError("invalid k");\n    // degenerate distribution if k === 0\n    if (k === 0) return () => 0;\n    theta = theta == null ? 1 : +theta;\n    // exponential distribution if k === 1\n    if (k === 1) return () => -Math.log1p(-source()) * theta;\n    var d = (k < 1 ? k + 1 : k) - 1 / 3,\n      c = 1 / (3 * Math.sqrt(d)),\n      multiplier = k < 1 ? () => Math.pow(source(), 1 / k) : () => 1;\n    return function () {\n      do {\n        do {\n          var x = randomNormal(),\n            v = 1 + c * x;\n        } while (v <= 0);\n        v *= v * v;\n        var u = 1 - source();\n      } while (u >= 1 - 0.0331 * x * x * x * x && Math.log(u) >= 0.5 * x * x + d * (1 - v + Math.log(v)));\n      return d * v * multiplier() * theta;\n    };\n  }\n  randomGamma.source = sourceRandomGamma;\n  return randomGamma;\n})(src_defaultSource));\n;// CONCATENATED MODULE: ./node_modules/d3-random/src/beta.js\n\n\n/* harmony default export */ const beta = ((function sourceRandomBeta(source) {\n  var G = src_gamma.source(source);\n  function randomBeta(alpha, beta) {\n    var X = G(alpha),\n      Y = G(beta);\n    return function () {\n      var x = X();\n      return x === 0 ? 0 : x / (x + Y());\n    };\n  }\n  randomBeta.source = sourceRandomBeta;\n  return randomBeta;\n})(src_defaultSource));\n;// CONCATENATED MODULE: ./node_modules/d3-random/src/binomial.js\n\n\n\n/* harmony default export */ const binomial = ((function sourceRandomBinomial(source) {\n  var G = geometric.source(source),\n    B = beta.source(source);\n  function randomBinomial(n, p) {\n    n = +n;\n    if ((p = +p) >= 1) return () => n;\n    if (p <= 0) return () => 0;\n    return function () {\n      var acc = 0,\n        nn = n,\n        pp = p;\n      while (nn * pp > 16 && nn * (1 - pp) > 16) {\n        var i = Math.floor((nn + 1) * pp),\n          y = B(i, nn - i + 1)();\n        if (y <= pp) {\n          acc += i;\n          nn -= i;\n          pp = (pp - y) / (1 - y);\n        } else {\n          nn = i - 1;\n          pp /= y;\n        }\n      }\n      var sign = pp < 0.5,\n        pFinal = sign ? pp : 1 - pp,\n        g = G(pFinal);\n      for (var s = g(), k = 0; s <= nn; ++k) s += g();\n      return acc + (sign ? k : nn - k);\n    };\n  }\n  randomBinomial.source = sourceRandomBinomial;\n  return randomBinomial;\n})(src_defaultSource));\n;// CONCATENATED MODULE: ./node_modules/d3-random/src/weibull.js\n\n/* harmony default export */ const weibull = ((function sourceRandomWeibull(source) {\n  function randomWeibull(k, a, b) {\n    var outerFunc;\n    if ((k = +k) === 0) {\n      outerFunc = x => -Math.log(x);\n    } else {\n      k = 1 / k;\n      outerFunc = x => Math.pow(x, k);\n    }\n    a = a == null ? 0 : +a;\n    b = b == null ? 1 : +b;\n    return function () {\n      return a + b * outerFunc(-Math.log1p(-source()));\n    };\n  }\n  randomWeibull.source = sourceRandomWeibull;\n  return randomWeibull;\n})(src_defaultSource));\n;// CONCATENATED MODULE: ./node_modules/d3-random/src/cauchy.js\n\n/* harmony default export */ const cauchy = ((function sourceRandomCauchy(source) {\n  function randomCauchy(a, b) {\n    a = a == null ? 0 : +a;\n    b = b == null ? 1 : +b;\n    return function () {\n      return a + b * Math.tan(Math.PI * source());\n    };\n  }\n  randomCauchy.source = sourceRandomCauchy;\n  return randomCauchy;\n})(src_defaultSource));\n;// CONCATENATED MODULE: ./node_modules/d3-random/src/logistic.js\n\n/* harmony default export */ const logistic = ((function sourceRandomLogistic(source) {\n  function randomLogistic(a, b) {\n    a = a == null ? 0 : +a;\n    b = b == null ? 1 : +b;\n    return function () {\n      var u = source();\n      return a + b * Math.log(u / (1 - u));\n    };\n  }\n  randomLogistic.source = sourceRandomLogistic;\n  return randomLogistic;\n})(src_defaultSource));\n;// CONCATENATED MODULE: ./node_modules/d3-random/src/poisson.js\n\n\n\n/* harmony default export */ const poisson = ((function sourceRandomPoisson(source) {\n  var G = src_gamma.source(source),\n    B = binomial.source(source);\n  function randomPoisson(lambda) {\n    return function () {\n      var acc = 0,\n        l = lambda;\n      while (l > 16) {\n        var n = Math.floor(0.875 * l),\n          t = G(n)();\n        if (t > l) return acc + B(n - 1, l / t)();\n        acc += n;\n        l -= t;\n      }\n      for (var s = -Math.log1p(-source()), k = 0; s <= l; ++k) s -= Math.log1p(-source());\n      return acc + k;\n    };\n  }\n  randomPoisson.source = sourceRandomPoisson;\n  return randomPoisson;\n})(src_defaultSource));\n;// CONCATENATED MODULE: ./node_modules/d3-random/src/lcg.js\n// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use\nconst mul = 0x19660D;\nconst inc = 0x3C6EF35F;\nconst eps = 1 / 0x100000000;\nfunction lcg_lcg(seed = Math.random()) {\n  let state = (0 <= seed && seed < 1 ? seed / eps : Math.abs(seed)) | 0;\n  return () => (state = mul * state + inc | 0, eps * (state >>> 0));\n}\n;// CONCATENATED MODULE: ./node_modules/d3-random/src/index.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n;// CONCATENATED MODULE: ./node_modules/d3-scale/src/init.js\nfunction initRange(domain, range) {\n  switch (arguments.length) {\n    case 0:\n      break;\n    case 1:\n      this.range(domain);\n      break;\n    default:\n      this.range(range).domain(domain);\n      break;\n  }\n  return this;\n}\nfunction initInterpolator(domain, interpolator) {\n  switch (arguments.length) {\n    case 0:\n      break;\n    case 1:\n      {\n        if (typeof domain === "function") this.interpolator(domain);else this.range(domain);\n        break;\n      }\n    default:\n      {\n        this.domain(domain);\n        if (typeof interpolator === "function") this.interpolator(interpolator);else this.range(interpolator);\n        break;\n      }\n  }\n  return this;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-scale/src/ordinal.js\n\n\nconst implicit = Symbol("implicit");\nfunction ordinal() {\n  var index = new InternMap(),\n    domain = [],\n    range = [],\n    unknown = implicit;\n  function scale(d) {\n    let i = index.get(d);\n    if (i === undefined) {\n      if (unknown !== implicit) return unknown;\n      index.set(d, i = domain.push(d) - 1);\n    }\n    return range[i % range.length];\n  }\n  scale.domain = function (_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = new InternMap();\n    for (const value of _) {\n      if (index.has(value)) continue;\n      index.set(value, domain.push(value) - 1);\n    }\n    return scale;\n  };\n  scale.range = function (_) {\n    return arguments.length ? (range = Array.from(_), scale) : range.slice();\n  };\n  scale.unknown = function (_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n  scale.copy = function () {\n    return ordinal(domain, range).unknown(unknown);\n  };\n  initRange.apply(scale, arguments);\n  return scale;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-scale/src/band.js\n\n\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n    domain = scale.domain,\n    ordinalRange = scale.range,\n    r0 = 0,\n    r1 = 1,\n    step,\n    bandwidth,\n    round = false,\n    paddingInner = 0,\n    paddingOuter = 0,\n    align = 0.5;\n  delete scale.unknown;\n  function rescale() {\n    var n = domain().length,\n      reverse = r1 < r0,\n      start = reverse ? r1 : r0,\n      stop = reverse ? r0 : r1;\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = range(n).map(function (i) {\n      return start + step * i;\n    });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n  scale.domain = function (_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n  scale.range = function (_) {\n    return arguments.length ? ([r0, r1] = _, r0 = +r0, r1 = +r1, rescale()) : [r0, r1];\n  };\n  scale.rangeRound = function (_) {\n    return [r0, r1] = _, r0 = +r0, r1 = +r1, round = true, rescale();\n  };\n  scale.bandwidth = function () {\n    return bandwidth;\n  };\n  scale.step = function () {\n    return step;\n  };\n  scale.round = function (_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n  scale.padding = function (_) {\n    return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;\n  };\n  scale.paddingInner = function (_) {\n    return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;\n  };\n  scale.paddingOuter = function (_) {\n    return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;\n  };\n  scale.align = function (_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n  scale.copy = function () {\n    return band(domain(), [r0, r1]).round(round).paddingInner(paddingInner).paddingOuter(paddingOuter).align(align);\n  };\n  return initRange.apply(rescale(), arguments);\n}\nfunction pointish(scale) {\n  var copy = scale.copy;\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n  scale.copy = function () {\n    return pointish(copy());\n  };\n  return scale;\n}\nfunction point() {\n  return pointish(band.apply(null, arguments).paddingInner(1));\n}\n;// CONCATENATED MODULE: ./node_modules/d3-scale/src/constant.js\nfunction constants(x) {\n  return function () {\n    return x;\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/d3-scale/src/number.js\nfunction number_number(x) {\n  return +x;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-scale/src/continuous.js\n\n\n\n\nvar unit = [0, 1];\nfunction continuous_identity(x) {\n  return x;\n}\nfunction continuous_normalize(a, b) {\n  return (b -= a = +a) ? function (x) {\n    return (x - a) / b;\n  } : constants(isNaN(b) ? NaN : 0.5);\n}\nfunction clamper(a, b) {\n  var t;\n  if (a > b) t = a, a = b, b = t;\n  return function (x) {\n    return Math.max(a, Math.min(b, x));\n  };\n}\n\n// normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].\nfunction bimap(domain, range, interpolate) {\n  var d0 = domain[0],\n    d1 = domain[1],\n    r0 = range[0],\n    r1 = range[1];\n  if (d1 < d0) d0 = continuous_normalize(d1, d0), r0 = interpolate(r1, r0);else d0 = continuous_normalize(d0, d1), r0 = interpolate(r0, r1);\n  return function (x) {\n    return r0(d0(x));\n  };\n}\nfunction polymap(domain, range, interpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n    d = new Array(j),\n    r = new Array(j),\n    i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n  while (++i < j) {\n    d[i] = continuous_normalize(domain[i], domain[i + 1]);\n    r[i] = interpolate(range[i], range[i + 1]);\n  }\n  return function (x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\nfunction copy(source, target) {\n  return target.domain(source.domain()).range(source.range()).interpolate(source.interpolate()).clamp(source.clamp()).unknown(source.unknown());\n}\nfunction continuous_transformer() {\n  var domain = unit,\n    range = unit,\n    interpolate = value,\n    transform,\n    untransform,\n    unknown,\n    clamp = continuous_identity,\n    piecewise,\n    output,\n    input;\n  function rescale() {\n    var n = Math.min(domain.length, range.length);\n    if (clamp !== continuous_identity) clamp = clamper(domain[0], domain[n - 1]);\n    piecewise = n > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n  function scale(x) {\n    return x == null || isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));\n  }\n  scale.invert = function (y) {\n    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), src_number)))(y)));\n  };\n  scale.domain = function (_) {\n    return arguments.length ? (domain = Array.from(_, number_number), rescale()) : domain.slice();\n  };\n  scale.range = function (_) {\n    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();\n  };\n  scale.rangeRound = function (_) {\n    return range = Array.from(_), interpolate = round, rescale();\n  };\n  scale.clamp = function (_) {\n    return arguments.length ? (clamp = _ ? true : continuous_identity, rescale()) : clamp !== continuous_identity;\n  };\n  scale.interpolate = function (_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n  scale.unknown = function (_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n  return function (t, u) {\n    transform = t, untransform = u;\n    return rescale();\n  };\n}\nfunction continuous() {\n  return continuous_transformer()(continuous_identity, continuous_identity);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-scale/src/tickFormat.js\n\n\nfunction tickFormat(start, stop, count, specifier) {\n  var step = tickStep(start, stop, count),\n    precision;\n  specifier = formatSpecifier(specifier == null ? ",f" : specifier);\n  switch (specifier.type) {\n    case "s":\n      {\n        var value = Math.max(Math.abs(start), Math.abs(stop));\n        if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n        return formatPrefix(specifier, value);\n      }\n    case "":\n    case "e":\n    case "g":\n    case "p":\n    case "r":\n      {\n        if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === "e");\n        break;\n      }\n    case "f":\n    case "%":\n      {\n        if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === "%") * 2;\n        break;\n      }\n  }\n  return format(specifier);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-scale/src/linear.js\n\n\n\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n  scale.ticks = function (count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n  scale.tickFormat = function (count, specifier) {\n    var d = domain();\n    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);\n  };\n  scale.nice = function (count) {\n    if (count == null) count = 10;\n    var d = domain();\n    var i0 = 0;\n    var i1 = d.length - 1;\n    var start = d[i0];\n    var stop = d[i1];\n    var prestep;\n    var step;\n    var maxIter = 10;\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n    while (maxIter-- > 0) {\n      step = tickIncrement(start, stop, count);\n      if (step === prestep) {\n        d[i0] = start;\n        d[i1] = stop;\n        return domain(d);\n      } else if (step > 0) {\n        start = Math.floor(start / step) * step;\n        stop = Math.ceil(stop / step) * step;\n      } else if (step < 0) {\n        start = Math.ceil(start * step) / step;\n        stop = Math.floor(stop * step) / step;\n      } else {\n        break;\n      }\n      prestep = step;\n    }\n    return scale;\n  };\n  return scale;\n}\nfunction src_linear_linear() {\n  var scale = continuous();\n  scale.copy = function () {\n    return copy(scale, src_linear_linear());\n  };\n  initRange.apply(scale, arguments);\n  return linearish(scale);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-scale/src/identity.js\n\n\nfunction identity_identity(domain) {\n  var unknown;\n  function scale(x) {\n    return x == null || isNaN(x = +x) ? unknown : x;\n  }\n  scale.invert = scale;\n  scale.domain = scale.range = function (_) {\n    return arguments.length ? (domain = Array.from(_, number_number), scale) : domain.slice();\n  };\n  scale.unknown = function (_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n  scale.copy = function () {\n    return identity_identity(domain).unknown(unknown);\n  };\n  domain = arguments.length ? Array.from(domain, number_number) : [0, 1];\n  return linearish(scale);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-scale/src/nice.js\nfunction nice_nice(domain, interval) {\n  domain = domain.slice();\n  var i0 = 0,\n    i1 = domain.length - 1,\n    x0 = domain[i0],\n    x1 = domain[i1],\n    t;\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-scale/src/log.js\n\n\n\n\n\nfunction transformLog(x) {\n  return Math.log(x);\n}\nfunction transformExp(x) {\n  return Math.exp(x);\n}\nfunction transformLogn(x) {\n  return -Math.log(-x);\n}\nfunction transformExpn(x) {\n  return -Math.exp(-x);\n}\nfunction pow10(x) {\n  return isFinite(x) ? +("1e" + x) : x < 0 ? 0 : x;\n}\nfunction powp(base) {\n  return base === 10 ? pow10 : base === Math.E ? Math.exp : x => Math.pow(base, x);\n}\nfunction logp(base) {\n  return base === Math.E ? Math.log : base === 10 && Math.log10 || base === 2 && Math.log2 || (base = Math.log(base), x => Math.log(x) / base);\n}\nfunction reflect(f) {\n  return (x, k) => -f(-x, k);\n}\nfunction loggish(transform) {\n  const scale = transform(transformLog, transformExp);\n  const domain = scale.domain;\n  let base = 10;\n  let logs;\n  let pows;\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) {\n      logs = reflect(logs), pows = reflect(pows);\n      transform(transformLogn, transformExpn);\n    } else {\n      transform(transformLog, transformExp);\n    }\n    return scale;\n  }\n  scale.base = function (_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n  scale.domain = function (_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n  scale.ticks = count => {\n    const d = domain();\n    let u = d[0];\n    let v = d[d.length - 1];\n    const r = v < u;\n    if (r) [u, v] = [v, u];\n    let i = logs(u);\n    let j = logs(v);\n    let k;\n    let t;\n    const n = count == null ? 10 : +count;\n    let z = [];\n    if (!(base % 1) && j - i < n) {\n      i = Math.floor(i), j = Math.ceil(j);\n      if (u > 0) for (; i <= j; ++i) {\n        for (k = 1; k < base; ++k) {\n          t = i < 0 ? k / pows(-i) : k * pows(i);\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i <= j; ++i) {\n        for (k = base - 1; k >= 1; --k) {\n          t = i > 0 ? k / pows(-i) : k * pows(i);\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n      if (z.length * 2 < n) z = ticks(u, v, n);\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n    return r ? z.reverse() : z;\n  };\n  scale.tickFormat = (count, specifier) => {\n    if (count == null) count = 10;\n    if (specifier == null) specifier = base === 10 ? "s" : ",";\n    if (typeof specifier !== "function") {\n      if (!(base % 1) && (specifier = formatSpecifier(specifier)).precision == null) specifier.trim = true;\n      specifier = format(specifier);\n    }\n    if (count === Infinity) return specifier;\n    const k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return d => {\n      let i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : "";\n    };\n  };\n  scale.nice = () => {\n    return domain(nice_nice(domain(), {\n      floor: x => pows(Math.floor(logs(x))),\n      ceil: x => pows(Math.ceil(logs(x)))\n    }));\n  };\n  return scale;\n}\nfunction log_log() {\n  const scale = loggish(continuous_transformer()).domain([1, 10]);\n  scale.copy = () => copy(scale, log_log()).base(scale.base());\n  initRange.apply(scale, arguments);\n  return scale;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-scale/src/symlog.js\n\n\n\nfunction transformSymlog(c) {\n  return function (x) {\n    return Math.sign(x) * Math.log1p(Math.abs(x / c));\n  };\n}\nfunction transformSymexp(c) {\n  return function (x) {\n    return Math.sign(x) * Math.expm1(Math.abs(x)) * c;\n  };\n}\nfunction symlogish(transform) {\n  var c = 1,\n    scale = transform(transformSymlog(c), transformSymexp(c));\n  scale.constant = function (_) {\n    return arguments.length ? transform(transformSymlog(c = +_), transformSymexp(c)) : c;\n  };\n  return linearish(scale);\n}\nfunction symlog() {\n  var scale = symlogish(continuous_transformer());\n  scale.copy = function () {\n    return copy(scale, symlog()).constant(scale.constant());\n  };\n  return initRange.apply(scale, arguments);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-scale/src/pow.js\n\n\n\nfunction transformPow(exponent) {\n  return function (x) {\n    return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n  };\n}\nfunction transformSqrt(x) {\n  return x < 0 ? -Math.sqrt(-x) : Math.sqrt(x);\n}\nfunction transformSquare(x) {\n  return x < 0 ? -x * x : x * x;\n}\nfunction powish(transform) {\n  var scale = transform(continuous_identity, continuous_identity),\n    exponent = 1;\n  function rescale() {\n    return exponent === 1 ? transform(continuous_identity, continuous_identity) : exponent === 0.5 ? transform(transformSqrt, transformSquare) : transform(transformPow(exponent), transformPow(1 / exponent));\n  }\n  scale.exponent = function (_) {\n    return arguments.length ? (exponent = +_, rescale()) : exponent;\n  };\n  return linearish(scale);\n}\nfunction pow_pow() {\n  var scale = powish(continuous_transformer());\n  scale.copy = function () {\n    return copy(scale, pow_pow()).exponent(scale.exponent());\n  };\n  initRange.apply(scale, arguments);\n  return scale;\n}\nfunction pow_sqrt() {\n  return pow_pow.apply(null, arguments).exponent(0.5);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-scale/src/radial.js\n\n\n\n\nfunction square(x) {\n  return Math.sign(x) * x * x;\n}\nfunction unsquare(x) {\n  return Math.sign(x) * Math.sqrt(Math.abs(x));\n}\nfunction radial_radial() {\n  var squared = continuous(),\n    range = [0, 1],\n    round = false,\n    unknown;\n  function scale(x) {\n    var y = unsquare(squared(x));\n    return isNaN(y) ? unknown : round ? Math.round(y) : y;\n  }\n  scale.invert = function (y) {\n    return squared.invert(square(y));\n  };\n  scale.domain = function (_) {\n    return arguments.length ? (squared.domain(_), scale) : squared.domain();\n  };\n  scale.range = function (_) {\n    return arguments.length ? (squared.range((range = Array.from(_, number_number)).map(square)), scale) : range.slice();\n  };\n  scale.rangeRound = function (_) {\n    return scale.range(_).round(true);\n  };\n  scale.round = function (_) {\n    return arguments.length ? (round = !!_, scale) : round;\n  };\n  scale.clamp = function (_) {\n    return arguments.length ? (squared.clamp(_), scale) : squared.clamp();\n  };\n  scale.unknown = function (_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n  scale.copy = function () {\n    return radial_radial(squared.domain(), range).round(round).clamp(squared.clamp()).unknown(unknown);\n  };\n  initRange.apply(scale, arguments);\n  return linearish(scale);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-scale/src/quantile.js\n\n\nfunction quantile_quantile() {\n  var domain = [],\n    range = [],\n    thresholds = [],\n    unknown;\n  function rescale() {\n    var i = 0,\n      n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = quantileSorted(domain, i / n);\n    return scale;\n  }\n  function scale(x) {\n    return x == null || isNaN(x = +x) ? unknown : range[bisect(thresholds, x)];\n  }\n  scale.invertExtent = function (y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [i > 0 ? thresholds[i - 1] : domain[0], i < thresholds.length ? thresholds[i] : domain[domain.length - 1]];\n  };\n  scale.domain = function (_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (let d of _) if (d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n  scale.range = function (_) {\n    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();\n  };\n  scale.unknown = function (_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n  scale.quantiles = function () {\n    return thresholds.slice();\n  };\n  scale.copy = function () {\n    return quantile_quantile().domain(domain).range(range).unknown(unknown);\n  };\n  return initRange.apply(scale, arguments);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-scale/src/quantize.js\n\n\n\nfunction quantize_quantize() {\n  var x0 = 0,\n    x1 = 1,\n    n = 1,\n    domain = [0.5],\n    range = [0, 1],\n    unknown;\n  function scale(x) {\n    return x != null && x <= x ? range[bisect(domain, x, 0, n)] : unknown;\n  }\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n  scale.domain = function (_) {\n    return arguments.length ? ([x0, x1] = _, x0 = +x0, x1 = +x1, rescale()) : [x0, x1];\n  };\n  scale.range = function (_) {\n    return arguments.length ? (n = (range = Array.from(_)).length - 1, rescale()) : range.slice();\n  };\n  scale.invertExtent = function (y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : i < 1 ? [x0, domain[0]] : i >= n ? [domain[n - 1], x1] : [domain[i - 1], domain[i]];\n  };\n  scale.unknown = function (_) {\n    return arguments.length ? (unknown = _, scale) : scale;\n  };\n  scale.thresholds = function () {\n    return domain.slice();\n  };\n  scale.copy = function () {\n    return quantize_quantize().domain([x0, x1]).range(range).unknown(unknown);\n  };\n  return initRange.apply(linearish(scale), arguments);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-scale/src/threshold.js\n\n\nfunction threshold() {\n  var domain = [0.5],\n    range = [0, 1],\n    unknown,\n    n = 1;\n  function scale(x) {\n    return x != null && x <= x ? range[bisect(domain, x, 0, n)] : unknown;\n  }\n  scale.domain = function (_) {\n    return arguments.length ? (domain = Array.from(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n  scale.range = function (_) {\n    return arguments.length ? (range = Array.from(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n  scale.invertExtent = function (y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n  scale.unknown = function (_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n  scale.copy = function () {\n    return threshold().domain(domain).range(range).unknown(unknown);\n  };\n  return initRange.apply(scale, arguments);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-time/src/duration.js\nconst durationSecond = 1000;\nconst durationMinute = durationSecond * 60;\nconst durationHour = durationMinute * 60;\nconst durationDay = durationHour * 24;\nconst durationWeek = durationDay * 7;\nconst durationMonth = durationDay * 30;\nconst durationYear = durationDay * 365;\n;// CONCATENATED MODULE: ./node_modules/d3-time/src/interval.js\nconst interval_t0 = new Date(),\n  interval_t1 = new Date();\nfunction timeInterval(floori, offseti, count, field) {\n  function interval(date) {\n    return floori(date = arguments.length === 0 ? new Date() : new Date(+date)), date;\n  }\n  interval.floor = date => {\n    return floori(date = new Date(+date)), date;\n  };\n  interval.ceil = date => {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n  interval.round = date => {\n    const d0 = interval(date),\n      d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n  interval.offset = (date, step) => {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n  interval.range = (start, stop, step) => {\n    const range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    let previous;\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start); while (previous < start && start < stop);\n    return range;\n  };\n  interval.filter = test => {\n    return timeInterval(date => {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, (date, step) => {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = (start, end) => {\n      interval_t0.setTime(+start), interval_t1.setTime(+end);\n      floori(interval_t0), floori(interval_t1);\n      return Math.floor(count(interval_t0, interval_t1));\n    };\n    interval.every = step => {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null : !(step > 1) ? interval : interval.filter(field ? d => field(d) % step === 0 : d => interval.count(0, d) % step === 0);\n    };\n  }\n  return interval;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-time/src/millisecond.js\n\nconst millisecond = timeInterval(() => {\n  // noop\n}, (date, step) => {\n  date.setTime(+date + step);\n}, (start, end) => {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = k => {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return timeInterval(date => {\n    date.setTime(Math.floor(date / k) * k);\n  }, (date, step) => {\n    date.setTime(+date + step * k);\n  }, (start, end) => {\n    return (end - start) / k;\n  });\n};\nconst milliseconds = millisecond.range;\n;// CONCATENATED MODULE: ./node_modules/d3-time/src/second.js\n\n\nconst second = timeInterval(date => {\n  date.setTime(date - date.getMilliseconds());\n}, (date, step) => {\n  date.setTime(+date + step * durationSecond);\n}, (start, end) => {\n  return (end - start) / durationSecond;\n}, date => {\n  return date.getUTCSeconds();\n});\nconst seconds = second.range;\n;// CONCATENATED MODULE: ./node_modules/d3-time/src/minute.js\n\n\nconst timeMinute = timeInterval(date => {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);\n}, (date, step) => {\n  date.setTime(+date + step * durationMinute);\n}, (start, end) => {\n  return (end - start) / durationMinute;\n}, date => {\n  return date.getMinutes();\n});\nconst timeMinutes = timeMinute.range;\nconst utcMinute = timeInterval(date => {\n  date.setUTCSeconds(0, 0);\n}, (date, step) => {\n  date.setTime(+date + step * durationMinute);\n}, (start, end) => {\n  return (end - start) / durationMinute;\n}, date => {\n  return date.getUTCMinutes();\n});\nconst utcMinutes = utcMinute.range;\n;// CONCATENATED MODULE: ./node_modules/d3-time/src/hour.js\n\n\nconst timeHour = timeInterval(date => {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);\n}, (date, step) => {\n  date.setTime(+date + step * durationHour);\n}, (start, end) => {\n  return (end - start) / durationHour;\n}, date => {\n  return date.getHours();\n});\nconst timeHours = timeHour.range;\nconst utcHour = timeInterval(date => {\n  date.setUTCMinutes(0, 0, 0);\n}, (date, step) => {\n  date.setTime(+date + step * durationHour);\n}, (start, end) => {\n  return (end - start) / durationHour;\n}, date => {\n  return date.getUTCHours();\n});\nconst utcHours = utcHour.range;\n;// CONCATENATED MODULE: ./node_modules/d3-time/src/day.js\n\n\nconst timeDay = timeInterval(date => date.setHours(0, 0, 0, 0), (date, step) => date.setDate(date.getDate() + step), (start, end) => (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay, date => date.getDate() - 1);\nconst timeDays = timeDay.range;\nconst utcDay = timeInterval(date => {\n  date.setUTCHours(0, 0, 0, 0);\n}, (date, step) => {\n  date.setUTCDate(date.getUTCDate() + step);\n}, (start, end) => {\n  return (end - start) / durationDay;\n}, date => {\n  return date.getUTCDate() - 1;\n});\nconst utcDays = utcDay.range;\nconst unixDay = timeInterval(date => {\n  date.setUTCHours(0, 0, 0, 0);\n}, (date, step) => {\n  date.setUTCDate(date.getUTCDate() + step);\n}, (start, end) => {\n  return (end - start) / durationDay;\n}, date => {\n  return Math.floor(date / durationDay);\n});\nconst unixDays = unixDay.range;\n;// CONCATENATED MODULE: ./node_modules/d3-time/src/week.js\n\n\nfunction timeWeekday(i) {\n  return timeInterval(date => {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, (date, step) => {\n    date.setDate(date.getDate() + step * 7);\n  }, (start, end) => {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\nconst timeSunday = timeWeekday(0);\nconst timeMonday = timeWeekday(1);\nconst timeTuesday = timeWeekday(2);\nconst timeWednesday = timeWeekday(3);\nconst timeThursday = timeWeekday(4);\nconst timeFriday = timeWeekday(5);\nconst timeSaturday = timeWeekday(6);\nconst timeSundays = timeSunday.range;\nconst timeMondays = timeMonday.range;\nconst timeTuesdays = timeTuesday.range;\nconst timeWednesdays = timeWednesday.range;\nconst timeThursdays = timeThursday.range;\nconst timeFridays = timeFriday.range;\nconst timeSaturdays = timeSaturday.range;\nfunction utcWeekday(i) {\n  return timeInterval(date => {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, (date, step) => {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, (start, end) => {\n    return (end - start) / durationWeek;\n  });\n}\nconst utcSunday = utcWeekday(0);\nconst utcMonday = utcWeekday(1);\nconst utcTuesday = utcWeekday(2);\nconst utcWednesday = utcWeekday(3);\nconst utcThursday = utcWeekday(4);\nconst utcFriday = utcWeekday(5);\nconst utcSaturday = utcWeekday(6);\nconst utcSundays = utcSunday.range;\nconst utcMondays = utcMonday.range;\nconst utcTuesdays = utcTuesday.range;\nconst utcWednesdays = utcWednesday.range;\nconst utcThursdays = utcThursday.range;\nconst utcFridays = utcFriday.range;\nconst utcSaturdays = utcSaturday.range;\n;// CONCATENATED MODULE: ./node_modules/d3-time/src/month.js\n\nconst timeMonth = timeInterval(date => {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, (date, step) => {\n  date.setMonth(date.getMonth() + step);\n}, (start, end) => {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, date => {\n  return date.getMonth();\n});\nconst timeMonths = timeMonth.range;\nconst utcMonth = timeInterval(date => {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, (date, step) => {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, (start, end) => {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, date => {\n  return date.getUTCMonth();\n});\nconst utcMonths = utcMonth.range;\n;// CONCATENATED MODULE: ./node_modules/d3-time/src/year.js\n\nconst timeYear = timeInterval(date => {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, (date, step) => {\n  date.setFullYear(date.getFullYear() + step);\n}, (start, end) => {\n  return end.getFullYear() - start.getFullYear();\n}, date => {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\ntimeYear.every = k => {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : timeInterval(date => {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, (date, step) => {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\nconst timeYears = timeYear.range;\nconst utcYear = timeInterval(date => {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, (date, step) => {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, (start, end) => {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, date => {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = k => {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : timeInterval(date => {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, (date, step) => {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\nconst utcYears = utcYear.range;\n;// CONCATENATED MODULE: ./node_modules/d3-time/src/ticks.js\n\n\n\n\n\n\n\n\n\n\nfunction ticker(year, month, week, day, hour, minute) {\n  const tickIntervals = [[second, 1, durationSecond], [second, 5, 5 * durationSecond], [second, 15, 15 * durationSecond], [second, 30, 30 * durationSecond], [minute, 1, durationMinute], [minute, 5, 5 * durationMinute], [minute, 15, 15 * durationMinute], [minute, 30, 30 * durationMinute], [hour, 1, durationHour], [hour, 3, 3 * durationHour], [hour, 6, 6 * durationHour], [hour, 12, 12 * durationHour], [day, 1, durationDay], [day, 2, 2 * durationDay], [week, 1, durationWeek], [month, 1, durationMonth], [month, 3, 3 * durationMonth], [year, 1, durationYear]];\n  function ticks(start, stop, count) {\n    const reverse = stop < start;\n    if (reverse) [start, stop] = [stop, start];\n    const interval = count && typeof count.range === "function" ? count : tickInterval(start, stop, count);\n    const ticks = interval ? interval.range(start, +stop + 1) : []; // inclusive stop\n    return reverse ? ticks.reverse() : ticks;\n  }\n  function tickInterval(start, stop, count) {\n    const target = Math.abs(stop - start) / count;\n    const i = bisector(([,, step]) => step).right(tickIntervals, target);\n    if (i === tickIntervals.length) return year.every(tickStep(start / durationYear, stop / durationYear, count));\n    if (i === 0) return millisecond.every(Math.max(tickStep(start, stop, count), 1));\n    const [t, step] = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n    return t.every(step);\n  }\n  return [ticks, tickInterval];\n}\nconst [utcTicks, utcTickInterval] = ticker(utcYear, utcMonth, utcSunday, unixDay, utcHour, utcMinute);\nconst [timeTicks, timeTickInterval] = ticker(timeYear, timeMonth, timeSunday, timeDay, timeHour, timeMinute);\n\n;// CONCATENATED MODULE: ./node_modules/d3-time-format/src/locale.js\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\nfunction newDate(y, m, d) {\n  return {\n    y: y,\n    m: m,\n    d: d,\n    H: 0,\n    M: 0,\n    S: 0,\n    L: 0\n  };\n}\nfunction formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n    locale_date = locale.date,\n    locale_time = locale.time,\n    locale_periods = locale.periods,\n    locale_weekdays = locale.days,\n    locale_shortWeekdays = locale.shortDays,\n    locale_months = locale.months,\n    locale_shortMonths = locale.shortMonths;\n  var periodRe = formatRe(locale_periods),\n    periodLookup = formatLookup(locale_periods),\n    weekdayRe = formatRe(locale_weekdays),\n    weekdayLookup = formatLookup(locale_weekdays),\n    shortWeekdayRe = formatRe(locale_shortWeekdays),\n    shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n    monthRe = formatRe(locale_months),\n    monthLookup = formatLookup(locale_months),\n    shortMonthRe = formatRe(locale_shortMonths),\n    shortMonthLookup = formatLookup(locale_shortMonths);\n  var formats = {\n    "a": formatShortWeekday,\n    "A": formatWeekday,\n    "b": formatShortMonth,\n    "B": formatMonth,\n    "c": null,\n    "d": formatDayOfMonth,\n    "e": formatDayOfMonth,\n    "f": formatMicroseconds,\n    "g": formatYearISO,\n    "G": formatFullYearISO,\n    "H": formatHour24,\n    "I": formatHour12,\n    "j": formatDayOfYear,\n    "L": formatMilliseconds,\n    "m": formatMonthNumber,\n    "M": formatMinutes,\n    "p": formatPeriod,\n    "q": formatQuarter,\n    "Q": formatUnixTimestamp,\n    "s": formatUnixTimestampSeconds,\n    "S": formatSeconds,\n    "u": formatWeekdayNumberMonday,\n    "U": formatWeekNumberSunday,\n    "V": formatWeekNumberISO,\n    "w": formatWeekdayNumberSunday,\n    "W": formatWeekNumberMonday,\n    "x": null,\n    "X": null,\n    "y": locale_formatYear,\n    "Y": formatFullYear,\n    "Z": formatZone,\n    "%": formatLiteralPercent\n  };\n  var utcFormats = {\n    "a": formatUTCShortWeekday,\n    "A": formatUTCWeekday,\n    "b": formatUTCShortMonth,\n    "B": formatUTCMonth,\n    "c": null,\n    "d": formatUTCDayOfMonth,\n    "e": formatUTCDayOfMonth,\n    "f": formatUTCMicroseconds,\n    "g": formatUTCYearISO,\n    "G": formatUTCFullYearISO,\n    "H": formatUTCHour24,\n    "I": formatUTCHour12,\n    "j": formatUTCDayOfYear,\n    "L": formatUTCMilliseconds,\n    "m": formatUTCMonthNumber,\n    "M": formatUTCMinutes,\n    "p": formatUTCPeriod,\n    "q": formatUTCQuarter,\n    "Q": formatUnixTimestamp,\n    "s": formatUnixTimestampSeconds,\n    "S": formatUTCSeconds,\n    "u": formatUTCWeekdayNumberMonday,\n    "U": formatUTCWeekNumberSunday,\n    "V": formatUTCWeekNumberISO,\n    "w": formatUTCWeekdayNumberSunday,\n    "W": formatUTCWeekNumberMonday,\n    "x": null,\n    "X": null,\n    "y": formatUTCYear,\n    "Y": formatUTCFullYear,\n    "Z": formatUTCZone,\n    "%": formatLiteralPercent\n  };\n  var parses = {\n    "a": parseShortWeekday,\n    "A": parseWeekday,\n    "b": parseShortMonth,\n    "B": parseMonth,\n    "c": parseLocaleDateTime,\n    "d": parseDayOfMonth,\n    "e": parseDayOfMonth,\n    "f": parseMicroseconds,\n    "g": parseYear,\n    "G": parseFullYear,\n    "H": parseHour24,\n    "I": parseHour24,\n    "j": parseDayOfYear,\n    "L": parseMilliseconds,\n    "m": parseMonthNumber,\n    "M": parseMinutes,\n    "p": parsePeriod,\n    "q": parseQuarter,\n    "Q": parseUnixTimestamp,\n    "s": parseUnixTimestampSeconds,\n    "S": parseSeconds,\n    "u": parseWeekdayNumberMonday,\n    "U": parseWeekNumberSunday,\n    "V": parseWeekNumberISO,\n    "w": parseWeekdayNumberSunday,\n    "W": parseWeekNumberMonday,\n    "x": parseLocaleDate,\n    "X": parseLocaleTime,\n    "y": parseYear,\n    "Y": parseFullYear,\n    "Z": parseZone,\n    "%": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n  function newFormat(specifier, formats) {\n    return function (date) {\n      var string = [],\n        i = -1,\n        j = 0,\n        n = specifier.length,\n        c,\n        pad,\n        format;\n      if (!(date instanceof Date)) date = new Date(+date);\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);else pad = c === "e" ? " " : "0";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n      string.push(specifier.slice(j, i));\n      return string.join("");\n    };\n  }\n  function newParse(specifier, Z) {\n    return function (string) {\n      var d = newDate(1900, undefined, 1),\n        i = parseSpecifier(d, specifier, string += "", 0),\n        week,\n        day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if ("Q" in d) return new Date(d.Q);\n      if ("s" in d) return new Date(d.s * 1000 + ("L" in d ? d.L : 0));\n\n      // If this is utcParse, never use the local timezone.\n      if (Z && !("Z" in d)) d.Z = 0;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if ("p" in d) d.H = d.H % 12 + d.p * 12;\n\n      // If the month was not specified, inherit from the quarter.\n      if (d.m === undefined) d.m = "q" in d ? d.q : 0;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if ("V" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!("w" in d)) d.w = 1;\n        if ("Z" in d) {\n          week = utcDate(newDate(d.y, 0, 1)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = localDate(newDate(d.y, 0, 1)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if ("W" in d || "U" in d) {\n        if (!("w" in d)) d.w = "u" in d ? d.u % 7 : "W" in d ? 1 : 0;\n        day = "Z" in d ? utcDate(newDate(d.y, 0, 1)).getUTCDay() : localDate(newDate(d.y, 0, 1)).getDay();\n        d.m = 0;\n        d.d = "W" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if ("Z" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return localDate(d);\n    };\n  }\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n      n = specifier.length,\n      m = string.length,\n      c,\n      parse;\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || (j = parse(d, string, j)) < 0) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n    return j;\n  }\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n  function formatQuarter(d) {\n    return 1 + ~~(d.getMonth() / 3);\n  }\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n  function formatUTCQuarter(d) {\n    return 1 + ~~(d.getUTCMonth() / 3);\n  }\n  return {\n    format: function (specifier) {\n      var f = newFormat(specifier += "", formats);\n      f.toString = function () {\n        return specifier;\n      };\n      return f;\n    },\n    parse: function (specifier) {\n      var p = newParse(specifier += "", false);\n      p.toString = function () {\n        return specifier;\n      };\n      return p;\n    },\n    utcFormat: function (specifier) {\n      var f = newFormat(specifier += "", utcFormats);\n      f.toString = function () {\n        return specifier;\n      };\n      return f;\n    },\n    utcParse: function (specifier) {\n      var p = newParse(specifier += "", true);\n      p.toString = function () {\n        return specifier;\n      };\n      return p;\n    }\n  };\n}\nvar pads = {\n    "-": "",\n    "_": " ",\n    "0": "0"\n  },\n  numberRe = /^\\s*\\d+/,\n  // note: ignores next directive\n  percentRe = /^%/,\n  requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\nfunction locale_pad(value, fill, width) {\n  var sign = value < 0 ? "-" : "",\n    string = (sign ? -value : value) + "",\n    length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\nfunction requote(s) {\n  return s.replace(requoteRe, "\\\\$&");\n}\nfunction formatRe(names) {\n  return new RegExp("^(?:" + names.map(requote).join("|") + ")", "i");\n}\nfunction formatLookup(names) {\n  return new Map(names.map((name, i) => [name.toLowerCase(), i]));\n}\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || "00")), i + n[0].length) : -1;\n}\nfunction parseQuarter(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.q = n[0] * 3 - 3, i + n[0].length) : -1;\n}\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.s = +n[0], i + n[0].length) : -1;\n}\nfunction formatDayOfMonth(d, p) {\n  return locale_pad(d.getDate(), p, 2);\n}\nfunction formatHour24(d, p) {\n  return locale_pad(d.getHours(), p, 2);\n}\nfunction formatHour12(d, p) {\n  return locale_pad(d.getHours() % 12 || 12, p, 2);\n}\nfunction formatDayOfYear(d, p) {\n  return locale_pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\nfunction formatMilliseconds(d, p) {\n  return locale_pad(d.getMilliseconds(), p, 3);\n}\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + "000";\n}\nfunction formatMonthNumber(d, p) {\n  return locale_pad(d.getMonth() + 1, p, 2);\n}\nfunction formatMinutes(d, p) {\n  return locale_pad(d.getMinutes(), p, 2);\n}\nfunction formatSeconds(d, p) {\n  return locale_pad(d.getSeconds(), p, 2);\n}\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\nfunction formatWeekNumberSunday(d, p) {\n  return locale_pad(timeSunday.count(timeYear(d) - 1, d), p, 2);\n}\nfunction dISO(d) {\n  var day = d.getDay();\n  return day >= 4 || day === 0 ? timeThursday(d) : timeThursday.ceil(d);\n}\nfunction formatWeekNumberISO(d, p) {\n  d = dISO(d);\n  return locale_pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\nfunction formatWeekNumberMonday(d, p) {\n  return locale_pad(timeMonday.count(timeYear(d) - 1, d), p, 2);\n}\nfunction locale_formatYear(d, p) {\n  return locale_pad(d.getFullYear() % 100, p, 2);\n}\nfunction formatYearISO(d, p) {\n  d = dISO(d);\n  return locale_pad(d.getFullYear() % 100, p, 2);\n}\nfunction formatFullYear(d, p) {\n  return locale_pad(d.getFullYear() % 10000, p, 4);\n}\nfunction formatFullYearISO(d, p) {\n  var day = d.getDay();\n  d = day >= 4 || day === 0 ? timeThursday(d) : timeThursday.ceil(d);\n  return locale_pad(d.getFullYear() % 10000, p, 4);\n}\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? "-" : (z *= -1, "+")) + locale_pad(z / 60 | 0, "0", 2) + locale_pad(z % 60, "0", 2);\n}\nfunction formatUTCDayOfMonth(d, p) {\n  return locale_pad(d.getUTCDate(), p, 2);\n}\nfunction formatUTCHour24(d, p) {\n  return locale_pad(d.getUTCHours(), p, 2);\n}\nfunction formatUTCHour12(d, p) {\n  return locale_pad(d.getUTCHours() % 12 || 12, p, 2);\n}\nfunction formatUTCDayOfYear(d, p) {\n  return locale_pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\nfunction formatUTCMilliseconds(d, p) {\n  return locale_pad(d.getUTCMilliseconds(), p, 3);\n}\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + "000";\n}\nfunction formatUTCMonthNumber(d, p) {\n  return locale_pad(d.getUTCMonth() + 1, p, 2);\n}\nfunction formatUTCMinutes(d, p) {\n  return locale_pad(d.getUTCMinutes(), p, 2);\n}\nfunction formatUTCSeconds(d, p) {\n  return locale_pad(d.getUTCSeconds(), p, 2);\n}\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\nfunction formatUTCWeekNumberSunday(d, p) {\n  return locale_pad(utcSunday.count(utcYear(d) - 1, d), p, 2);\n}\nfunction UTCdISO(d) {\n  var day = d.getUTCDay();\n  return day >= 4 || day === 0 ? utcThursday(d) : utcThursday.ceil(d);\n}\nfunction formatUTCWeekNumberISO(d, p) {\n  d = UTCdISO(d);\n  return locale_pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\nfunction formatUTCWeekNumberMonday(d, p) {\n  return locale_pad(utcMonday.count(utcYear(d) - 1, d), p, 2);\n}\nfunction formatUTCYear(d, p) {\n  return locale_pad(d.getUTCFullYear() % 100, p, 2);\n}\nfunction formatUTCYearISO(d, p) {\n  d = UTCdISO(d);\n  return locale_pad(d.getUTCFullYear() % 100, p, 2);\n}\nfunction formatUTCFullYear(d, p) {\n  return locale_pad(d.getUTCFullYear() % 10000, p, 4);\n}\nfunction formatUTCFullYearISO(d, p) {\n  var day = d.getUTCDay();\n  d = day >= 4 || day === 0 ? utcThursday(d) : utcThursday.ceil(d);\n  return locale_pad(d.getUTCFullYear() % 10000, p, 4);\n}\nfunction formatUTCZone() {\n  return "+0000";\n}\nfunction formatLiteralPercent() {\n  return "%";\n}\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-time-format/src/defaultLocale.js\n\nvar src_defaultLocale_locale;\nvar timeFormat;\nvar timeParse;\nvar utcFormat;\nvar utcParse;\ndefaultLocale_defaultLocale({\n  dateTime: "%x, %X",\n  date: "%-m/%-d/%Y",\n  time: "%-I:%M:%S %p",\n  periods: ["AM", "PM"],\n  days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],\n  shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],\n  months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],\n  shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]\n});\nfunction defaultLocale_defaultLocale(definition) {\n  src_defaultLocale_locale = formatLocale(definition);\n  timeFormat = src_defaultLocale_locale.format;\n  timeParse = src_defaultLocale_locale.parse;\n  utcFormat = src_defaultLocale_locale.utcFormat;\n  utcParse = src_defaultLocale_locale.utcParse;\n  return src_defaultLocale_locale;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-scale/src/time.js\n\n\n\n\n\nfunction time_date(t) {\n  return new Date(t);\n}\nfunction time_number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\nfunction calendar(ticks, tickInterval, year, month, week, day, hour, minute, second, format) {\n  var scale = continuous(),\n    invert = scale.invert,\n    domain = scale.domain;\n  var formatMillisecond = format(".%L"),\n    formatSecond = format(":%S"),\n    formatMinute = format("%I:%M"),\n    formatHour = format("%I %p"),\n    formatDay = format("%a %d"),\n    formatWeek = format("%b %d"),\n    formatMonth = format("%B"),\n    formatYear = format("%Y");\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond : minute(date) < date ? formatSecond : hour(date) < date ? formatMinute : day(date) < date ? formatHour : month(date) < date ? week(date) < date ? formatDay : formatWeek : year(date) < date ? formatMonth : formatYear)(date);\n  }\n  scale.invert = function (y) {\n    return new Date(invert(y));\n  };\n  scale.domain = function (_) {\n    return arguments.length ? domain(Array.from(_, time_number)) : domain().map(time_date);\n  };\n  scale.ticks = function (interval) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], interval == null ? 10 : interval);\n  };\n  scale.tickFormat = function (count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n  scale.nice = function (interval) {\n    var d = domain();\n    if (!interval || typeof interval.range !== "function") interval = tickInterval(d[0], d[d.length - 1], interval == null ? 10 : interval);\n    return interval ? domain(nice_nice(d, interval)) : scale;\n  };\n  scale.copy = function () {\n    return copy(scale, calendar(ticks, tickInterval, year, month, week, day, hour, minute, second, format));\n  };\n  return scale;\n}\nfunction time() {\n  return initRange.apply(calendar(timeTicks, timeTickInterval, timeYear, timeMonth, timeSunday, timeDay, timeHour, timeMinute, second, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]), arguments);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-scale/src/utcTime.js\n\n\n\n\nfunction utcTime() {\n  return initRange.apply(calendar(utcTicks, utcTickInterval, utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]), arguments);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-scale/src/sequential.js\n\n\n\n\n\n\n\nfunction sequential_transformer() {\n  var x0 = 0,\n    x1 = 1,\n    t0,\n    t1,\n    k10,\n    transform,\n    interpolator = continuous_identity,\n    clamp = false,\n    unknown;\n  function scale(x) {\n    return x == null || isNaN(x = +x) ? unknown : interpolator(k10 === 0 ? 0.5 : (x = (transform(x) - t0) * k10, clamp ? Math.max(0, Math.min(1, x)) : x));\n  }\n  scale.domain = function (_) {\n    return arguments.length ? ([x0, x1] = _, t0 = transform(x0 = +x0), t1 = transform(x1 = +x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0), scale) : [x0, x1];\n  };\n  scale.clamp = function (_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n  scale.interpolator = function (_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n  function range(interpolate) {\n    return function (_) {\n      var r0, r1;\n      return arguments.length ? ([r0, r1] = _, interpolator = interpolate(r0, r1), scale) : [interpolator(0), interpolator(1)];\n    };\n  }\n  scale.range = range(value);\n  scale.rangeRound = range(round);\n  scale.unknown = function (_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n  return function (t) {\n    transform = t, t0 = t(x0), t1 = t(x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0);\n    return scale;\n  };\n}\nfunction sequential_copy(source, target) {\n  return target.domain(source.domain()).interpolator(source.interpolator()).clamp(source.clamp()).unknown(source.unknown());\n}\nfunction sequential() {\n  var scale = linearish(sequential_transformer()(continuous_identity));\n  scale.copy = function () {\n    return sequential_copy(scale, sequential());\n  };\n  return initInterpolator.apply(scale, arguments);\n}\nfunction sequentialLog() {\n  var scale = loggish(sequential_transformer()).domain([1, 10]);\n  scale.copy = function () {\n    return sequential_copy(scale, sequentialLog()).base(scale.base());\n  };\n  return initInterpolator.apply(scale, arguments);\n}\nfunction sequentialSymlog() {\n  var scale = symlogish(sequential_transformer());\n  scale.copy = function () {\n    return sequential_copy(scale, sequentialSymlog()).constant(scale.constant());\n  };\n  return initInterpolator.apply(scale, arguments);\n}\nfunction sequentialPow() {\n  var scale = powish(sequential_transformer());\n  scale.copy = function () {\n    return sequential_copy(scale, sequentialPow()).exponent(scale.exponent());\n  };\n  return initInterpolator.apply(scale, arguments);\n}\nfunction sequentialSqrt() {\n  return sequentialPow.apply(null, arguments).exponent(0.5);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-scale/src/sequentialQuantile.js\n\n\n\nfunction sequentialQuantile() {\n  var domain = [],\n    interpolator = continuous_identity;\n  function scale(x) {\n    if (x != null && !isNaN(x = +x)) return interpolator((bisect(domain, x, 1) - 1) / (domain.length - 1));\n  }\n  scale.domain = function (_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (let d of _) if (d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return scale;\n  };\n  scale.interpolator = function (_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n  scale.range = function () {\n    return domain.map((d, i) => interpolator(i / (domain.length - 1)));\n  };\n  scale.quantiles = function (n) {\n    return Array.from({\n      length: n + 1\n    }, (_, i) => quantile(domain, i / n));\n  };\n  scale.copy = function () {\n    return sequentialQuantile(interpolator).domain(domain);\n  };\n  return initInterpolator.apply(scale, arguments);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-scale/src/diverging.js\n\n\n\n\n\n\n\n\nfunction diverging_transformer() {\n  var x0 = 0,\n    x1 = 0.5,\n    x2 = 1,\n    s = 1,\n    t0,\n    t1,\n    t2,\n    k10,\n    k21,\n    interpolator = continuous_identity,\n    transform,\n    clamp = false,\n    unknown;\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : (x = 0.5 + ((x = +transform(x)) - t1) * (s * x < s * t1 ? k10 : k21), interpolator(clamp ? Math.max(0, Math.min(1, x)) : x));\n  }\n  scale.domain = function (_) {\n    return arguments.length ? ([x0, x1, x2] = _, t0 = transform(x0 = +x0), t1 = transform(x1 = +x1), t2 = transform(x2 = +x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), s = t1 < t0 ? -1 : 1, scale) : [x0, x1, x2];\n  };\n  scale.clamp = function (_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n  scale.interpolator = function (_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n  function range(interpolate) {\n    return function (_) {\n      var r0, r1, r2;\n      return arguments.length ? ([r0, r1, r2] = _, interpolator = piecewise(interpolate, [r0, r1, r2]), scale) : [interpolator(0), interpolator(0.5), interpolator(1)];\n    };\n  }\n  scale.range = range(value);\n  scale.rangeRound = range(round);\n  scale.unknown = function (_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n  return function (t) {\n    transform = t, t0 = t(x0), t1 = t(x1), t2 = t(x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), s = t1 < t0 ? -1 : 1;\n    return scale;\n  };\n}\nfunction diverging() {\n  var scale = linearish(diverging_transformer()(continuous_identity));\n  scale.copy = function () {\n    return sequential_copy(scale, diverging());\n  };\n  return initInterpolator.apply(scale, arguments);\n}\nfunction divergingLog() {\n  var scale = loggish(diverging_transformer()).domain([0.1, 1, 10]);\n  scale.copy = function () {\n    return sequential_copy(scale, divergingLog()).base(scale.base());\n  };\n  return initInterpolator.apply(scale, arguments);\n}\nfunction divergingSymlog() {\n  var scale = symlogish(diverging_transformer());\n  scale.copy = function () {\n    return sequential_copy(scale, divergingSymlog()).constant(scale.constant());\n  };\n  return initInterpolator.apply(scale, arguments);\n}\nfunction divergingPow() {\n  var scale = powish(diverging_transformer());\n  scale.copy = function () {\n    return sequential_copy(scale, divergingPow()).exponent(scale.exponent());\n  };\n  return initInterpolator.apply(scale, arguments);\n}\nfunction divergingSqrt() {\n  return divergingPow.apply(null, arguments).exponent(0.5);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-scale/src/index.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/colors.js\n/* harmony default export */ function colors(specifier) {\n  var n = specifier.length / 6 | 0,\n    colors = new Array(n),\n    i = 0;\n  while (i < n) colors[i] = "#" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/categorical/category10.js\n\n/* harmony default export */ const category10 = (colors("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf"));\n;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/categorical/Accent.js\n\n/* harmony default export */ const Accent = (colors("7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666"));\n;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/categorical/Dark2.js\n\n/* harmony default export */ const Dark2 = (colors("1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666"));\n;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/categorical/Paired.js\n\n/* harmony default export */ const Paired = (colors("a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928"));\n;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/categorical/Pastel1.js\n\n/* harmony default export */ const Pastel1 = (colors("fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2"));\n;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/categorical/Pastel2.js\n\n/* harmony default export */ const Pastel2 = (colors("b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc"));\n;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/categorical/Set1.js\n\n/* harmony default export */ const Set1 = (colors("e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999"));\n;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/categorical/Set2.js\n\n/* harmony default export */ const Set2 = (colors("66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3"));\n;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/categorical/Set3.js\n\n/* harmony default export */ const Set3 = (colors("8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f"));\n;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/categorical/Tableau10.js\n\n/* harmony default export */ const Tableau10 = (colors("4e79a7f28e2ce1575976b7b259a14fedc949af7aa1ff9da79c755fbab0ab"));\n;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/ramp.js\n\n/* harmony default export */ const ramp = (scheme => rgbBasis(scheme[scheme.length - 1]));\n;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/diverging/BrBG.js\n\n\nvar scheme = new Array(3).concat("d8b365f5f5f55ab4ac", "a6611adfc27d80cdc1018571", "a6611adfc27df5f5f580cdc1018571", "8c510ad8b365f6e8c3c7eae55ab4ac01665e", "8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e", "8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e", "8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e", "5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30", "5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30").map(colors);\n/* harmony default export */ const BrBG = (ramp(scheme));\n;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/diverging/PRGn.js\n\n\nvar PRGn_scheme = new Array(3).concat("af8dc3f7f7f77fbf7b", "7b3294c2a5cfa6dba0008837", "7b3294c2a5cff7f7f7a6dba0008837", "762a83af8dc3e7d4e8d9f0d37fbf7b1b7837", "762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837", "762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837", "762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837", "40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b", "40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b").map(colors);\n/* harmony default export */ const PRGn = (ramp(PRGn_scheme));\n;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/diverging/PiYG.js\n\n\nvar PiYG_scheme = new Array(3).concat("e9a3c9f7f7f7a1d76a", "d01c8bf1b6dab8e1864dac26", "d01c8bf1b6daf7f7f7b8e1864dac26", "c51b7de9a3c9fde0efe6f5d0a1d76a4d9221", "c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221", "c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221", "c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221", "8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419", "8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419").map(colors);\n/* harmony default export */ const PiYG = (ramp(PiYG_scheme));\n;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/diverging/PuOr.js\n\n\nvar PuOr_scheme = new Array(3).concat("998ec3f7f7f7f1a340", "5e3c99b2abd2fdb863e66101", "5e3c99b2abd2f7f7f7fdb863e66101", "542788998ec3d8daebfee0b6f1a340b35806", "542788998ec3d8daebf7f7f7fee0b6f1a340b35806", "5427888073acb2abd2d8daebfee0b6fdb863e08214b35806", "5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806", "2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08", "2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08").map(colors);\n/* harmony default export */ const PuOr = (ramp(PuOr_scheme));\n;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/diverging/RdBu.js\n\n\nvar RdBu_scheme = new Array(3).concat("ef8a62f7f7f767a9cf", "ca0020f4a58292c5de0571b0", "ca0020f4a582f7f7f792c5de0571b0", "b2182bef8a62fddbc7d1e5f067a9cf2166ac", "b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac", "b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac", "b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac", "67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061", "67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061").map(colors);\n/* harmony default export */ const RdBu = (ramp(RdBu_scheme));\n;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/diverging/RdGy.js\n\n\nvar RdGy_scheme = new Array(3).concat("ef8a62ffffff999999", "ca0020f4a582bababa404040", "ca0020f4a582ffffffbababa404040", "b2182bef8a62fddbc7e0e0e09999994d4d4d", "b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d", "b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d", "b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d", "67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a", "67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a").map(colors);\n/* harmony default export */ const RdGy = (ramp(RdGy_scheme));\n;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js\n\n\nvar RdYlBu_scheme = new Array(3).concat("fc8d59ffffbf91bfdb", "d7191cfdae61abd9e92c7bb6", "d7191cfdae61ffffbfabd9e92c7bb6", "d73027fc8d59fee090e0f3f891bfdb4575b4", "d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4", "d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4", "d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4", "a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695", "a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695").map(colors);\n/* harmony default export */ const RdYlBu = (ramp(RdYlBu_scheme));\n;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js\n\n\nvar RdYlGn_scheme = new Array(3).concat("fc8d59ffffbf91cf60", "d7191cfdae61a6d96a1a9641", "d7191cfdae61ffffbfa6d96a1a9641", "d73027fc8d59fee08bd9ef8b91cf601a9850", "d73027fc8d59fee08bffffbfd9ef8b91cf601a9850", "d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850", "d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850", "a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837", "a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837").map(colors);\n/* harmony default export */ const RdYlGn = (ramp(RdYlGn_scheme));\n;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/diverging/Spectral.js\n\n\nvar Spectral_scheme = new Array(3).concat("fc8d59ffffbf99d594", "d7191cfdae61abdda42b83ba", "d7191cfdae61ffffbfabdda42b83ba", "d53e4ffc8d59fee08be6f59899d5943288bd", "d53e4ffc8d59fee08bffffbfe6f59899d5943288bd", "d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd", "d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd", "9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2", "9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2").map(colors);\n/* harmony default export */ const Spectral = (ramp(Spectral_scheme));\n;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js\n\n\nvar BuGn_scheme = new Array(3).concat("e5f5f999d8c92ca25f", "edf8fbb2e2e266c2a4238b45", "edf8fbb2e2e266c2a42ca25f006d2c", "edf8fbccece699d8c966c2a42ca25f006d2c", "edf8fbccece699d8c966c2a441ae76238b45005824", "f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824", "f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b").map(colors);\n/* harmony default export */ const BuGn = (ramp(BuGn_scheme));\n;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js\n\n\nvar BuPu_scheme = new Array(3).concat("e0ecf49ebcda8856a7", "edf8fbb3cde38c96c688419d", "edf8fbb3cde38c96c68856a7810f7c", "edf8fbbfd3e69ebcda8c96c68856a7810f7c", "edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b", "f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b", "f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b").map(colors);\n/* harmony default export */ const BuPu = (ramp(BuPu_scheme));\n;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js\n\n\nvar GnBu_scheme = new Array(3).concat("e0f3dba8ddb543a2ca", "f0f9e8bae4bc7bccc42b8cbe", "f0f9e8bae4bc7bccc443a2ca0868ac", "f0f9e8ccebc5a8ddb57bccc443a2ca0868ac", "f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e", "f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e", "f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081").map(colors);\n/* harmony default export */ const GnBu = (ramp(GnBu_scheme));\n;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js\n\n\nvar OrRd_scheme = new Array(3).concat("fee8c8fdbb84e34a33", "fef0d9fdcc8afc8d59d7301f", "fef0d9fdcc8afc8d59e34a33b30000", "fef0d9fdd49efdbb84fc8d59e34a33b30000", "fef0d9fdd49efdbb84fc8d59ef6548d7301f990000", "fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000", "fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000").map(colors);\n/* harmony default export */ const OrRd = (ramp(OrRd_scheme));\n;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js\n\n\nvar PuBuGn_scheme = new Array(3).concat("ece2f0a6bddb1c9099", "f6eff7bdc9e167a9cf02818a", "f6eff7bdc9e167a9cf1c9099016c59", "f6eff7d0d1e6a6bddb67a9cf1c9099016c59", "f6eff7d0d1e6a6bddb67a9cf3690c002818a016450", "fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450", "fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636").map(colors);\n/* harmony default export */ const PuBuGn = (ramp(PuBuGn_scheme));\n;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js\n\n\nvar PuBu_scheme = new Array(3).concat("ece7f2a6bddb2b8cbe", "f1eef6bdc9e174a9cf0570b0", "f1eef6bdc9e174a9cf2b8cbe045a8d", "f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d", "f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b", "fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b", "fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858").map(colors);\n/* harmony default export */ const PuBu = (ramp(PuBu_scheme));\n;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js\n\n\nvar PuRd_scheme = new Array(3).concat("e7e1efc994c7dd1c77", "f1eef6d7b5d8df65b0ce1256", "f1eef6d7b5d8df65b0dd1c77980043", "f1eef6d4b9dac994c7df65b0dd1c77980043", "f1eef6d4b9dac994c7df65b0e7298ace125691003f", "f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f", "f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f").map(colors);\n/* harmony default export */ const PuRd = (ramp(PuRd_scheme));\n;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js\n\n\nvar RdPu_scheme = new Array(3).concat("fde0ddfa9fb5c51b8a", "feebe2fbb4b9f768a1ae017e", "feebe2fbb4b9f768a1c51b8a7a0177", "feebe2fcc5c0fa9fb5f768a1c51b8a7a0177", "feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177", "fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177", "fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a").map(colors);\n/* harmony default export */ const RdPu = (ramp(RdPu_scheme));\n;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js\n\n\nvar YlGnBu_scheme = new Array(3).concat("edf8b17fcdbb2c7fb8", "ffffcca1dab441b6c4225ea8", "ffffcca1dab441b6c42c7fb8253494", "ffffccc7e9b47fcdbb41b6c42c7fb8253494", "ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84", "ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84", "ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58").map(colors);\n/* harmony default export */ const YlGnBu = (ramp(YlGnBu_scheme));\n;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js\n\n\nvar YlGn_scheme = new Array(3).concat("f7fcb9addd8e31a354", "ffffccc2e69978c679238443", "ffffccc2e69978c67931a354006837", "ffffccd9f0a3addd8e78c67931a354006837", "ffffccd9f0a3addd8e78c67941ab5d238443005a32", "ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32", "ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529").map(colors);\n/* harmony default export */ const YlGn = (ramp(YlGn_scheme));\n;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js\n\n\nvar YlOrBr_scheme = new Array(3).concat("fff7bcfec44fd95f0e", "ffffd4fed98efe9929cc4c02", "ffffd4fed98efe9929d95f0e993404", "ffffd4fee391fec44ffe9929d95f0e993404", "ffffd4fee391fec44ffe9929ec7014cc4c028c2d04", "ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04", "ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506").map(colors);\n/* harmony default export */ const YlOrBr = (ramp(YlOrBr_scheme));\n;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js\n\n\nvar YlOrRd_scheme = new Array(3).concat("ffeda0feb24cf03b20", "ffffb2fecc5cfd8d3ce31a1c", "ffffb2fecc5cfd8d3cf03b20bd0026", "ffffb2fed976feb24cfd8d3cf03b20bd0026", "ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026", "ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026", "ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026").map(colors);\n/* harmony default export */ const YlOrRd = (ramp(YlOrRd_scheme));\n;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/sequential-single/Blues.js\n\n\nvar Blues_scheme = new Array(3).concat("deebf79ecae13182bd", "eff3ffbdd7e76baed62171b5", "eff3ffbdd7e76baed63182bd08519c", "eff3ffc6dbef9ecae16baed63182bd08519c", "eff3ffc6dbef9ecae16baed64292c62171b5084594", "f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594", "f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b").map(colors);\n/* harmony default export */ const Blues = (ramp(Blues_scheme));\n;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/sequential-single/Greens.js\n\n\nvar Greens_scheme = new Array(3).concat("e5f5e0a1d99b31a354", "edf8e9bae4b374c476238b45", "edf8e9bae4b374c47631a354006d2c", "edf8e9c7e9c0a1d99b74c47631a354006d2c", "edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32", "f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32", "f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b").map(colors);\n/* harmony default export */ const Greens = (ramp(Greens_scheme));\n;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/sequential-single/Greys.js\n\n\nvar Greys_scheme = new Array(3).concat("f0f0f0bdbdbd636363", "f7f7f7cccccc969696525252", "f7f7f7cccccc969696636363252525", "f7f7f7d9d9d9bdbdbd969696636363252525", "f7f7f7d9d9d9bdbdbd969696737373525252252525", "fffffff0f0f0d9d9d9bdbdbd969696737373525252252525", "fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000").map(colors);\n/* harmony default export */ const Greys = (ramp(Greys_scheme));\n;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/sequential-single/Purples.js\n\n\nvar Purples_scheme = new Array(3).concat("efedf5bcbddc756bb1", "f2f0f7cbc9e29e9ac86a51a3", "f2f0f7cbc9e29e9ac8756bb154278f", "f2f0f7dadaebbcbddc9e9ac8756bb154278f", "f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486", "fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486", "fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d").map(colors);\n/* harmony default export */ const Purples = (ramp(Purples_scheme));\n;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/sequential-single/Reds.js\n\n\nvar Reds_scheme = new Array(3).concat("fee0d2fc9272de2d26", "fee5d9fcae91fb6a4acb181d", "fee5d9fcae91fb6a4ade2d26a50f15", "fee5d9fcbba1fc9272fb6a4ade2d26a50f15", "fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d", "fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d", "fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d").map(colors);\n/* harmony default export */ const Reds = (ramp(Reds_scheme));\n;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js\n\n\nvar Oranges_scheme = new Array(3).concat("fee6cefdae6be6550d", "feeddefdbe85fd8d3cd94701", "feeddefdbe85fd8d3ce6550da63603", "feeddefdd0a2fdae6bfd8d3ce6550da63603", "feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04", "fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04", "fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704").map(colors);\n/* harmony default export */ const Oranges = (ramp(Oranges_scheme));\n;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/sequential-multi/cividis.js\n/* harmony default export */ function cividis(t) {\n  t = Math.max(0, Math.min(1, t));\n  return "rgb(" + Math.max(0, Math.min(255, Math.round(-4.54 - t * (35.34 - t * (2381.73 - t * (6402.7 - t * (7024.72 - t * 2710.57))))))) + ", " + Math.max(0, Math.min(255, Math.round(32.49 + t * (170.73 + t * (52.82 - t * (131.46 - t * (176.58 - t * 67.37))))))) + ", " + Math.max(0, Math.min(255, Math.round(81.24 + t * (442.36 - t * (2482.43 - t * (6167.24 - t * (6614.94 - t * 2475.67))))))) + ")";\n}\n;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js\n\n\n/* harmony default export */ const sequential_multi_cubehelix = (cubehelixLong(cubehelix_cubehelix(300, 0.5, 0.0), cubehelix_cubehelix(-240, 0.5, 1.0)));\n;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js\n\n\nvar warm = cubehelixLong(cubehelix_cubehelix(-100, 0.75, 0.35), cubehelix_cubehelix(80, 1.50, 0.8));\nvar cool = cubehelixLong(cubehelix_cubehelix(260, 0.75, 0.35), cubehelix_cubehelix(80, 1.50, 0.8));\nvar rainbow_c = cubehelix_cubehelix();\n/* harmony default export */ function rainbow(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow_c.h = 360 * t - 100;\n  rainbow_c.s = 1.5 - 1.5 * ts;\n  rainbow_c.l = 0.8 - 0.9 * ts;\n  return rainbow_c + "";\n}\n;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js\n\nvar sinebow_c = color_rgb(),\n  pi_1_3 = Math.PI / 3,\n  pi_2_3 = Math.PI * 2 / 3;\n/* harmony default export */ function sinebow(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  sinebow_c.r = 255 * (x = Math.sin(t)) * x;\n  sinebow_c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  sinebow_c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return sinebow_c + "";\n}\n;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/sequential-multi/turbo.js\n/* harmony default export */ function turbo(t) {\n  t = Math.max(0, Math.min(1, t));\n  return "rgb(" + Math.max(0, Math.min(255, Math.round(34.61 + t * (1172.33 - t * (10793.56 - t * (33300.12 - t * (38394.49 - t * 14825.05))))))) + ", " + Math.max(0, Math.min(255, Math.round(23.31 + t * (557.33 + t * (1225.33 - t * (3574.96 - t * (1073.77 + t * 707.56))))))) + ", " + Math.max(0, Math.min(255, Math.round(27.2 + t * (3211.1 - t * (15327.97 - t * (27814 - t * (22569.18 - t * 6838.66))))))) + ")";\n}\n;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js\n\nfunction viridis_ramp(range) {\n  var n = range.length;\n  return function (t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n/* harmony default export */ const viridis = (viridis_ramp(colors("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725")));\nvar magma = viridis_ramp(colors("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf"));\nvar inferno = viridis_ramp(colors("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4"));\nvar plasma = viridis_ramp(colors("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921"));\n;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/index.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n;// CONCATENATED MODULE: ./node_modules/d3-selection/src/create.js\n\n\n/* harmony default export */ function src_create(name) {\n  return src_select(creator(name).call(document.documentElement));\n}\n;// CONCATENATED MODULE: ./node_modules/d3-selection/src/local.js\nvar nextId = 0;\nfunction local_local() {\n  return new Local();\n}\nfunction Local() {\n  this._ = "@" + (++nextId).toString(36);\n}\nLocal.prototype = local_local.prototype = {\n  constructor: Local,\n  get: function (node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function (node, value) {\n    return node[this._] = value;\n  },\n  remove: function (node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function () {\n    return this._;\n  }\n};\n;// CONCATENATED MODULE: ./node_modules/d3-selection/src/pointers.js\n\n\n/* harmony default export */ function pointers(events, node) {\n  if (events.target) {\n    // i.e., instanceof Event, not TouchList or iterable\n    events = sourceEvent(events);\n    if (node === undefined) node = events.currentTarget;\n    events = events.touches || [events];\n  }\n  return Array.from(events, event => pointer(event, node));\n}\n;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selectAll.js\n\n\n/* harmony default export */ function src_selectAll(selector) {\n  return typeof selector === "string" ? new Selection([document.querySelectorAll(selector)], [document.documentElement]) : new Selection([array_array(selector)], root);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-selection/src/index.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n;// CONCATENATED MODULE: ./node_modules/d3-shape/src/constant.js\n/* harmony default export */ function d3_shape_src_constant(x) {\n  return function constant() {\n    return x;\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/d3-shape/src/math.js\nconst d3_shape_src_math_abs = Math.abs;\nconst math_atan2 = Math.atan2;\nconst src_math_cos = Math.cos;\nconst src_math_max = Math.max;\nconst math_min = Math.min;\nconst src_math_sin = Math.sin;\nconst math_sqrt = Math.sqrt;\nconst d3_shape_src_math_epsilon = 1e-12;\nconst src_math_pi = Math.PI;\nconst src_math_halfPi = src_math_pi / 2;\nconst src_math_tau = 2 * src_math_pi;\nfunction math_acos(x) {\n  return x > 1 ? 0 : x < -1 ? src_math_pi : Math.acos(x);\n}\nfunction math_asin(x) {\n  return x >= 1 ? src_math_halfPi : x <= -1 ? -src_math_halfPi : Math.asin(x);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-shape/src/path.js\n\nfunction withPath(shape) {\n  let digits = 3;\n  shape.digits = function (_) {\n    if (!arguments.length) return digits;\n    if (_ == null) {\n      digits = null;\n    } else {\n      const d = Math.floor(_);\n      if (!(d >= 0)) throw new RangeError(`invalid digits: ${_}`);\n      digits = d;\n    }\n    return shape;\n  };\n  return () => new Path(digits);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-shape/src/arc.js\n\n\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0,\n    y10 = y1 - y0,\n    x32 = x3 - x2,\n    y32 = y3 - y2,\n    t = y32 * x10 - x32 * y10;\n  if (t * t < d3_shape_src_math_epsilon) return;\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n    y01 = y0 - y1,\n    lo = (cw ? rc : -rc) / math_sqrt(x01 * x01 + y01 * y01),\n    ox = lo * y01,\n    oy = -lo * x01,\n    x11 = x0 + ox,\n    y11 = y0 + oy,\n    x10 = x1 + ox,\n    y10 = y1 + oy,\n    x00 = (x11 + x10) / 2,\n    y00 = (y11 + y10) / 2,\n    dx = x10 - x11,\n    dy = y10 - y11,\n    d2 = dx * dx + dy * dy,\n    r = r1 - rc,\n    D = x11 * y10 - x10 * y11,\n    d = (dy < 0 ? -1 : 1) * math_sqrt(src_math_max(0, r * r * d2 - D * D)),\n    cx0 = (D * dy - dx * d) / d2,\n    cy0 = (-D * dx - dy * d) / d2,\n    cx1 = (D * dy + dx * d) / d2,\n    cy1 = (-D * dx + dy * d) / d2,\n    dx0 = cx0 - x00,\n    dy0 = cy0 - y00,\n    dx1 = cx1 - x00,\n    dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n/* harmony default export */ function arc() {\n  var innerRadius = arcInnerRadius,\n    outerRadius = arcOuterRadius,\n    cornerRadius = d3_shape_src_constant(0),\n    padRadius = null,\n    startAngle = arcStartAngle,\n    endAngle = arcEndAngle,\n    padAngle = arcPadAngle,\n    context = null,\n    path = withPath(arc);\n  function arc() {\n    var buffer,\n      r,\n      r0 = +innerRadius.apply(this, arguments),\n      r1 = +outerRadius.apply(this, arguments),\n      a0 = startAngle.apply(this, arguments) - src_math_halfPi,\n      a1 = endAngle.apply(this, arguments) - src_math_halfPi,\n      da = d3_shape_src_math_abs(a1 - a0),\n      cw = a1 > a0;\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > d3_shape_src_math_epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > src_math_tau - d3_shape_src_math_epsilon) {\n      context.moveTo(r1 * src_math_cos(a0), r1 * src_math_sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > d3_shape_src_math_epsilon) {\n        context.moveTo(r0 * src_math_cos(a1), r0 * src_math_sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n        a11 = a1,\n        a00 = a0,\n        a10 = a1,\n        da0 = da,\n        da1 = da,\n        ap = padAngle.apply(this, arguments) / 2,\n        rp = ap > d3_shape_src_math_epsilon && (padRadius ? +padRadius.apply(this, arguments) : math_sqrt(r0 * r0 + r1 * r1)),\n        rc = math_min(d3_shape_src_math_abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n        rc0 = rc,\n        rc1 = rc,\n        t0,\n        t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > d3_shape_src_math_epsilon) {\n        var p0 = math_asin(rp / r0 * src_math_sin(ap)),\n          p1 = math_asin(rp / r1 * src_math_sin(ap));\n        if ((da0 -= p0 * 2) > d3_shape_src_math_epsilon) p0 *= cw ? 1 : -1, a00 += p0, a10 -= p0;else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > d3_shape_src_math_epsilon) p1 *= cw ? 1 : -1, a01 += p1, a11 -= p1;else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n      var x01 = r1 * src_math_cos(a01),\n        y01 = r1 * src_math_sin(a01),\n        x10 = r0 * src_math_cos(a10),\n        y10 = r0 * src_math_sin(a10);\n\n      // Apply rounded corners?\n      if (rc > d3_shape_src_math_epsilon) {\n        var x11 = r1 * src_math_cos(a11),\n          y11 = r1 * src_math_sin(a11),\n          x00 = r0 * src_math_cos(a00),\n          y00 = r0 * src_math_sin(a00),\n          oc;\n\n        // Restrict the corner radius according to the sector angle. If this\n        // intersection fails, it’s probably because the arc is too small, so\n        // disable the corner radius entirely.\n        if (da < src_math_pi) {\n          if (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10)) {\n            var ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / src_math_sin(math_acos((ax * bx + ay * by) / (math_sqrt(ax * ax + ay * ay) * math_sqrt(bx * bx + by * by))) / 2),\n              lc = math_sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n            rc0 = math_min(rc, (r0 - lc) / (kc - 1));\n            rc1 = math_min(rc, (r1 - lc) / (kc + 1));\n          } else {\n            rc0 = rc1 = 0;\n          }\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > d3_shape_src_math_epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > d3_shape_src_math_epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, math_atan2(t0.y01, t0.x01), math_atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, math_atan2(t0.y01, t0.x01), math_atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, math_atan2(t0.cy + t0.y11, t0.cx + t0.x11), math_atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, math_atan2(t1.y11, t1.x11), math_atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > d3_shape_src_math_epsilon) || !(da0 > d3_shape_src_math_epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > d3_shape_src_math_epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, math_atan2(t0.y01, t0.x01), math_atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, math_atan2(t0.y01, t0.x01), math_atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, math_atan2(t0.cy + t0.y11, t0.cx + t0.x11), math_atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, math_atan2(t1.y11, t1.x11), math_atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n    context.closePath();\n    if (buffer) return context = null, buffer + "" || null;\n  }\n  arc.centroid = function () {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n      a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - src_math_pi / 2;\n    return [src_math_cos(a) * r, src_math_sin(a) * r];\n  };\n  arc.innerRadius = function (_) {\n    return arguments.length ? (innerRadius = typeof _ === "function" ? _ : d3_shape_src_constant(+_), arc) : innerRadius;\n  };\n  arc.outerRadius = function (_) {\n    return arguments.length ? (outerRadius = typeof _ === "function" ? _ : d3_shape_src_constant(+_), arc) : outerRadius;\n  };\n  arc.cornerRadius = function (_) {\n    return arguments.length ? (cornerRadius = typeof _ === "function" ? _ : d3_shape_src_constant(+_), arc) : cornerRadius;\n  };\n  arc.padRadius = function (_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === "function" ? _ : d3_shape_src_constant(+_), arc) : padRadius;\n  };\n  arc.startAngle = function (_) {\n    return arguments.length ? (startAngle = typeof _ === "function" ? _ : d3_shape_src_constant(+_), arc) : startAngle;\n  };\n  arc.endAngle = function (_) {\n    return arguments.length ? (endAngle = typeof _ === "function" ? _ : d3_shape_src_constant(+_), arc) : endAngle;\n  };\n  arc.padAngle = function (_) {\n    return arguments.length ? (padAngle = typeof _ === "function" ? _ : d3_shape_src_constant(+_), arc) : padAngle;\n  };\n  arc.context = function (_) {\n    return arguments.length ? (context = _ == null ? null : _, arc) : context;\n  };\n  return arc;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-shape/src/array.js\nvar d3_shape_src_array_slice = Array.prototype.slice;\n/* harmony default export */ function d3_shape_src_array(x) {\n  return typeof x === "object" && "length" in x ? x // Array, TypedArray, NodeList, array-like\n  : Array.from(x); // Map, Set, iterable, string, or anything else\n}\n;// CONCATENATED MODULE: ./node_modules/d3-shape/src/curve/linear.js\nfunction Linear(context) {\n  this._context = context;\n}\nLinear.prototype = {\n  areaStart: function () {\n    this._line = 0;\n  },\n  areaEnd: function () {\n    this._line = NaN;\n  },\n  lineStart: function () {\n    this._point = 0;\n  },\n  lineEnd: function () {\n    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function (x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);\n        break;\n      case 1:\n        this._point = 2;\n      // falls through\n      default:\n        this._context.lineTo(x, y);\n        break;\n    }\n  }\n};\n/* harmony default export */ function curve_linear(context) {\n  return new Linear(context);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-shape/src/point.js\nfunction point_x(p) {\n  return p[0];\n}\nfunction point_y(p) {\n  return p[1];\n}\n;// CONCATENATED MODULE: ./node_modules/d3-shape/src/line.js\n\n\n\n\n\n/* harmony default export */ function src_line(x, y) {\n  var defined = d3_shape_src_constant(true),\n    context = null,\n    curve = curve_linear,\n    output = null,\n    path = withPath(line);\n  x = typeof x === "function" ? x : x === undefined ? point_x : d3_shape_src_constant(x);\n  y = typeof y === "function" ? y : y === undefined ? point_y : d3_shape_src_constant(y);\n  function line(data) {\n    var i,\n      n = (data = d3_shape_src_array(data)).length,\n      d,\n      defined0 = false,\n      buffer;\n    if (context == null) output = curve(buffer = path());\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n    if (buffer) return output = null, buffer + "" || null;\n  }\n  line.x = function (_) {\n    return arguments.length ? (x = typeof _ === "function" ? _ : d3_shape_src_constant(+_), line) : x;\n  };\n  line.y = function (_) {\n    return arguments.length ? (y = typeof _ === "function" ? _ : d3_shape_src_constant(+_), line) : y;\n  };\n  line.defined = function (_) {\n    return arguments.length ? (defined = typeof _ === "function" ? _ : d3_shape_src_constant(!!_), line) : defined;\n  };\n  line.curve = function (_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n  line.context = function (_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n  return line;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-shape/src/area.js\n\n\n\n\n\n\n/* harmony default export */ function d3_shape_src_area(x0, y0, y1) {\n  var x1 = null,\n    defined = d3_shape_src_constant(true),\n    context = null,\n    curve = curve_linear,\n    output = null,\n    path = withPath(area);\n  x0 = typeof x0 === "function" ? x0 : x0 === undefined ? point_x : d3_shape_src_constant(+x0);\n  y0 = typeof y0 === "function" ? y0 : y0 === undefined ? d3_shape_src_constant(0) : d3_shape_src_constant(+y0);\n  y1 = typeof y1 === "function" ? y1 : y1 === undefined ? point_y : d3_shape_src_constant(+y1);\n  function area(data) {\n    var i,\n      j,\n      k,\n      n = (data = d3_shape_src_array(data)).length,\n      d,\n      defined0 = false,\n      buffer,\n      x0z = new Array(n),\n      y0z = new Array(n);\n    if (context == null) output = curve(buffer = path());\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n    if (buffer) return output = null, buffer + "" || null;\n  }\n  function arealine() {\n    return src_line().defined(defined).curve(curve).context(context);\n  }\n  area.x = function (_) {\n    return arguments.length ? (x0 = typeof _ === "function" ? _ : d3_shape_src_constant(+_), x1 = null, area) : x0;\n  };\n  area.x0 = function (_) {\n    return arguments.length ? (x0 = typeof _ === "function" ? _ : d3_shape_src_constant(+_), area) : x0;\n  };\n  area.x1 = function (_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === "function" ? _ : d3_shape_src_constant(+_), area) : x1;\n  };\n  area.y = function (_) {\n    return arguments.length ? (y0 = typeof _ === "function" ? _ : d3_shape_src_constant(+_), y1 = null, area) : y0;\n  };\n  area.y0 = function (_) {\n    return arguments.length ? (y0 = typeof _ === "function" ? _ : d3_shape_src_constant(+_), area) : y0;\n  };\n  area.y1 = function (_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === "function" ? _ : d3_shape_src_constant(+_), area) : y1;\n  };\n  area.lineX0 = area.lineY0 = function () {\n    return arealine().x(x0).y(y0);\n  };\n  area.lineY1 = function () {\n    return arealine().x(x0).y(y1);\n  };\n  area.lineX1 = function () {\n    return arealine().x(x1).y(y0);\n  };\n  area.defined = function (_) {\n    return arguments.length ? (defined = typeof _ === "function" ? _ : d3_shape_src_constant(!!_), area) : defined;\n  };\n  area.curve = function (_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n  area.context = function (_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n  return area;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-shape/src/descending.js\n/* harmony default export */ function src_descending(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-shape/src/identity.js\n/* harmony default export */ function d3_shape_src_identity(d) {\n  return d;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-shape/src/pie.js\n\n\n\n\n\n/* harmony default export */ function pie() {\n  var value = d3_shape_src_identity,\n    sortValues = src_descending,\n    sort = null,\n    startAngle = d3_shape_src_constant(0),\n    endAngle = d3_shape_src_constant(src_math_tau),\n    padAngle = d3_shape_src_constant(0);\n  function pie(data) {\n    var i,\n      n = (data = d3_shape_src_array(data)).length,\n      j,\n      k,\n      sum = 0,\n      index = new Array(n),\n      arcs = new Array(n),\n      a0 = +startAngle.apply(this, arguments),\n      da = Math.min(src_math_tau, Math.max(-src_math_tau, endAngle.apply(this, arguments) - a0)),\n      a1,\n      p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n      pa = p * (da < 0 ? -1 : 1),\n      v;\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function (i, j) {\n      return sortValues(arcs[i], arcs[j]);\n    });else if (sort != null) index.sort(function (i, j) {\n      return sort(data[i], data[j]);\n    });\n\n    // Compute the arcs! They are stored in the original data\'s order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n    return arcs;\n  }\n  pie.value = function (_) {\n    return arguments.length ? (value = typeof _ === "function" ? _ : d3_shape_src_constant(+_), pie) : value;\n  };\n  pie.sortValues = function (_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n  pie.sort = function (_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n  pie.startAngle = function (_) {\n    return arguments.length ? (startAngle = typeof _ === "function" ? _ : d3_shape_src_constant(+_), pie) : startAngle;\n  };\n  pie.endAngle = function (_) {\n    return arguments.length ? (endAngle = typeof _ === "function" ? _ : d3_shape_src_constant(+_), pie) : endAngle;\n  };\n  pie.padAngle = function (_) {\n    return arguments.length ? (padAngle = typeof _ === "function" ? _ : d3_shape_src_constant(+_), pie) : padAngle;\n  };\n  return pie;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-shape/src/curve/radial.js\n\nvar curveRadialLinear = curveRadial(curve_linear);\nfunction Radial(curve) {\n  this._curve = curve;\n}\nRadial.prototype = {\n  areaStart: function () {\n    this._curve.areaStart();\n  },\n  areaEnd: function () {\n    this._curve.areaEnd();\n  },\n  lineStart: function () {\n    this._curve.lineStart();\n  },\n  lineEnd: function () {\n    this._curve.lineEnd();\n  },\n  point: function (a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\nfunction curveRadial(curve) {\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n  radial._curve = curve;\n  return radial;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-shape/src/lineRadial.js\n\n\nfunction lineRadial(l) {\n  var c = l.curve;\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  l.curve = function (_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n  return l;\n}\n/* harmony default export */ function src_lineRadial() {\n  return lineRadial(src_line().curve(curveRadialLinear));\n}\n;// CONCATENATED MODULE: ./node_modules/d3-shape/src/areaRadial.js\n\n\n\n/* harmony default export */ function areaRadial() {\n  var a = d3_shape_src_area().curve(curveRadialLinear),\n    c = a.curve,\n    x0 = a.lineX0,\n    x1 = a.lineX1,\n    y0 = a.lineY0,\n    y1 = a.lineY1;\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function () {\n    return lineRadial(x0());\n  }, delete a.lineX0;\n  a.lineEndAngle = function () {\n    return lineRadial(x1());\n  }, delete a.lineX1;\n  a.lineInnerRadius = function () {\n    return lineRadial(y0());\n  }, delete a.lineY0;\n  a.lineOuterRadius = function () {\n    return lineRadial(y1());\n  }, delete a.lineY1;\n  a.curve = function (_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n  return a;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-shape/src/pointRadial.js\n/* harmony default export */ function pointRadial(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n}\n;// CONCATENATED MODULE: ./node_modules/d3-shape/src/curve/bump.js\n\nclass Bump {\n  constructor(context, x) {\n    this._context = context;\n    this._x = x;\n  }\n  areaStart() {\n    this._line = 0;\n  }\n  areaEnd() {\n    this._line = NaN;\n  }\n  lineStart() {\n    this._point = 0;\n  }\n  lineEnd() {\n    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();\n    this._line = 1 - this._line;\n  }\n  point(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0:\n        {\n          this._point = 1;\n          if (this._line) this._context.lineTo(x, y);else this._context.moveTo(x, y);\n          break;\n        }\n      case 1:\n        this._point = 2;\n      // falls through\n      default:\n        {\n          if (this._x) this._context.bezierCurveTo(this._x0 = (this._x0 + x) / 2, this._y0, this._x0, y, x, y);else this._context.bezierCurveTo(this._x0, this._y0 = (this._y0 + y) / 2, x, this._y0, x, y);\n          break;\n        }\n    }\n    this._x0 = x, this._y0 = y;\n  }\n}\nclass BumpRadial {\n  constructor(context) {\n    this._context = context;\n  }\n  lineStart() {\n    this._point = 0;\n  }\n  lineEnd() {}\n  point(x, y) {\n    x = +x, y = +y;\n    if (this._point === 0) {\n      this._point = 1;\n    } else {\n      const p0 = pointRadial(this._x0, this._y0);\n      const p1 = pointRadial(this._x0, this._y0 = (this._y0 + y) / 2);\n      const p2 = pointRadial(x, this._y0);\n      const p3 = pointRadial(x, y);\n      this._context.moveTo(...p0);\n      this._context.bezierCurveTo(...p1, ...p2, ...p3);\n    }\n    this._x0 = x, this._y0 = y;\n  }\n}\nfunction bumpX(context) {\n  return new Bump(context, true);\n}\nfunction bumpY(context) {\n  return new Bump(context, false);\n}\nfunction bumpRadial(context) {\n  return new BumpRadial(context);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-shape/src/link.js\n\n\n\n\n\nfunction linkSource(d) {\n  return d.source;\n}\nfunction linkTarget(d) {\n  return d.target;\n}\nfunction link_link(curve) {\n  let source = linkSource,\n    target = linkTarget,\n    x = point_x,\n    y = point_y,\n    context = null,\n    output = null,\n    path = withPath(link);\n  function link() {\n    let buffer;\n    const argv = d3_shape_src_array_slice.call(arguments);\n    const s = source.apply(this, argv);\n    const t = target.apply(this, argv);\n    if (context == null) output = curve(buffer = path());\n    output.lineStart();\n    argv[0] = s, output.point(+x.apply(this, argv), +y.apply(this, argv));\n    argv[0] = t, output.point(+x.apply(this, argv), +y.apply(this, argv));\n    output.lineEnd();\n    if (buffer) return output = null, buffer + "" || null;\n  }\n  link.source = function (_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n  link.target = function (_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n  link.x = function (_) {\n    return arguments.length ? (x = typeof _ === "function" ? _ : d3_shape_src_constant(+_), link) : x;\n  };\n  link.y = function (_) {\n    return arguments.length ? (y = typeof _ === "function" ? _ : d3_shape_src_constant(+_), link) : y;\n  };\n  link.context = function (_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), link) : context;\n  };\n  return link;\n}\nfunction linkHorizontal() {\n  return link_link(bumpX);\n}\nfunction linkVertical() {\n  return link_link(bumpY);\n}\nfunction linkRadial() {\n  const l = link_link(bumpRadial);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-shape/src/symbol/asterisk.js\n\nconst sqrt3 = math_sqrt(3);\n/* harmony default export */ const asterisk = ({\n  draw(context, size) {\n    const r = math_sqrt(size + math_min(size / 28, 0.75)) * 0.59436;\n    const t = r / 2;\n    const u = t * sqrt3;\n    context.moveTo(0, r);\n    context.lineTo(0, -r);\n    context.moveTo(-u, -t);\n    context.lineTo(u, t);\n    context.moveTo(-u, t);\n    context.lineTo(u, -t);\n  }\n});\n;// CONCATENATED MODULE: ./node_modules/d3-shape/src/symbol/circle.js\n\n/* harmony default export */ const symbol_circle = ({\n  draw(context, size) {\n    const r = math_sqrt(size / src_math_pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, src_math_tau);\n  }\n});\n;// CONCATENATED MODULE: ./node_modules/d3-shape/src/symbol/cross.js\n\n/* harmony default export */ const symbol_cross = ({\n  draw(context, size) {\n    const r = math_sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n});\n;// CONCATENATED MODULE: ./node_modules/d3-shape/src/symbol/diamond.js\n\nconst tan30 = math_sqrt(1 / 3);\nconst tan30_2 = tan30 * 2;\n/* harmony default export */ const diamond = ({\n  draw(context, size) {\n    const y = math_sqrt(size / tan30_2);\n    const x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n});\n;// CONCATENATED MODULE: ./node_modules/d3-shape/src/symbol/diamond2.js\n\n/* harmony default export */ const diamond2 = ({\n  draw(context, size) {\n    const r = math_sqrt(size) * 0.62625;\n    context.moveTo(0, -r);\n    context.lineTo(r, 0);\n    context.lineTo(0, r);\n    context.lineTo(-r, 0);\n    context.closePath();\n  }\n});\n;// CONCATENATED MODULE: ./node_modules/d3-shape/src/symbol/plus.js\n\n/* harmony default export */ const plus = ({\n  draw(context, size) {\n    const r = math_sqrt(size - math_min(size / 7, 2)) * 0.87559;\n    context.moveTo(-r, 0);\n    context.lineTo(r, 0);\n    context.moveTo(0, r);\n    context.lineTo(0, -r);\n  }\n});\n;// CONCATENATED MODULE: ./node_modules/d3-shape/src/symbol/square.js\n\n/* harmony default export */ const symbol_square = ({\n  draw(context, size) {\n    const w = math_sqrt(size);\n    const x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n});\n;// CONCATENATED MODULE: ./node_modules/d3-shape/src/symbol/square2.js\n\n/* harmony default export */ const square2 = ({\n  draw(context, size) {\n    const r = math_sqrt(size) * 0.4431;\n    context.moveTo(r, r);\n    context.lineTo(r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, r);\n    context.closePath();\n  }\n});\n;// CONCATENATED MODULE: ./node_modules/d3-shape/src/symbol/star.js\n\nconst ka = 0.89081309152928522810;\nconst kr = src_math_sin(src_math_pi / 10) / src_math_sin(7 * src_math_pi / 10);\nconst kx = src_math_sin(src_math_tau / 10) * kr;\nconst ky = -src_math_cos(src_math_tau / 10) * kr;\n/* harmony default export */ const star = ({\n  draw(context, size) {\n    const r = math_sqrt(size * ka);\n    const x = kx * r;\n    const y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (let i = 1; i < 5; ++i) {\n      const a = src_math_tau * i / 5;\n      const c = src_math_cos(a);\n      const s = src_math_sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n});\n;// CONCATENATED MODULE: ./node_modules/d3-shape/src/symbol/triangle.js\n\nconst triangle_sqrt3 = math_sqrt(3);\n/* harmony default export */ const triangle = ({\n  draw(context, size) {\n    const y = -math_sqrt(size / (triangle_sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-triangle_sqrt3 * y, -y);\n    context.lineTo(triangle_sqrt3 * y, -y);\n    context.closePath();\n  }\n});\n;// CONCATENATED MODULE: ./node_modules/d3-shape/src/symbol/triangle2.js\n\nconst triangle2_sqrt3 = math_sqrt(3);\n/* harmony default export */ const triangle2 = ({\n  draw(context, size) {\n    const s = math_sqrt(size) * 0.6824;\n    const t = s / 2;\n    const u = s * triangle2_sqrt3 / 2; // cos(Math.PI / 6)\n    context.moveTo(0, -s);\n    context.lineTo(u, t);\n    context.lineTo(-u, t);\n    context.closePath();\n  }\n});\n;// CONCATENATED MODULE: ./node_modules/d3-shape/src/symbol/wye.js\n\nconst wye_c = -0.5;\nconst s = math_sqrt(3) / 2;\nconst k = 1 / math_sqrt(12);\nconst wye_a = (k / 2 + 1) * 3;\n/* harmony default export */ const wye = ({\n  draw(context, size) {\n    const r = math_sqrt(size / wye_a);\n    const x0 = r / 2,\n      y0 = r * k;\n    const x1 = x0,\n      y1 = r * k + r;\n    const x2 = -x1,\n      y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(wye_c * x0 - s * y0, s * x0 + wye_c * y0);\n    context.lineTo(wye_c * x1 - s * y1, s * x1 + wye_c * y1);\n    context.lineTo(wye_c * x2 - s * y2, s * x2 + wye_c * y2);\n    context.lineTo(wye_c * x0 + s * y0, wye_c * y0 - s * x0);\n    context.lineTo(wye_c * x1 + s * y1, wye_c * y1 - s * x1);\n    context.lineTo(wye_c * x2 + s * y2, wye_c * y2 - s * x2);\n    context.closePath();\n  }\n});\n;// CONCATENATED MODULE: ./node_modules/d3-shape/src/symbol/times.js\n\n/* harmony default export */ const times = ({\n  draw(context, size) {\n    const r = math_sqrt(size - math_min(size / 6, 1.7)) * 0.6189;\n    context.moveTo(-r, -r);\n    context.lineTo(r, r);\n    context.moveTo(-r, r);\n    context.lineTo(r, -r);\n  }\n});\n;// CONCATENATED MODULE: ./node_modules/d3-shape/src/symbol.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// These symbols are designed to be filled.\nconst symbolsFill = [symbol_circle, symbol_cross, diamond, symbol_square, star, triangle, wye];\n\n// These symbols are designed to be stroked (with a width of 1.5px and round caps).\nconst symbolsStroke = [symbol_circle, plus, times, triangle2, asterisk, square2, diamond2];\nfunction symbol_Symbol(type, size) {\n  let context = null,\n    path = withPath(symbol);\n  type = typeof type === "function" ? type : d3_shape_src_constant(type || symbol_circle);\n  size = typeof size === "function" ? size : d3_shape_src_constant(size === undefined ? 64 : +size);\n  function symbol() {\n    let buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + "" || null;\n  }\n  symbol.type = function (_) {\n    return arguments.length ? (type = typeof _ === "function" ? _ : d3_shape_src_constant(_), symbol) : type;\n  };\n  symbol.size = function (_) {\n    return arguments.length ? (size = typeof _ === "function" ? _ : d3_shape_src_constant(+_), symbol) : size;\n  };\n  symbol.context = function (_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n  return symbol;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-shape/src/noop.js\n/* harmony default export */ function d3_shape_src_noop() {}\n;// CONCATENATED MODULE: ./node_modules/d3-shape/src/curve/basis.js\nfunction basis_point(that, x, y) {\n  that._context.bezierCurveTo((2 * that._x0 + that._x1) / 3, (2 * that._y0 + that._y1) / 3, (that._x0 + 2 * that._x1) / 3, (that._y0 + 2 * that._y1) / 3, (that._x0 + 4 * that._x1 + x) / 6, (that._y0 + 4 * that._y1 + y) / 6);\n}\nfunction Basis(context) {\n  this._context = context;\n}\nBasis.prototype = {\n  areaStart: function () {\n    this._line = 0;\n  },\n  areaEnd: function () {\n    this._line = NaN;\n  },\n  lineStart: function () {\n    this._x0 = this._x1 = this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function () {\n    switch (this._point) {\n      case 3:\n        basis_point(this, this._x1, this._y1);\n      // falls through\n      case 2:\n        this._context.lineTo(this._x1, this._y1);\n        break;\n    }\n    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function (x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);\n        break;\n      case 1:\n        this._point = 2;\n        break;\n      case 2:\n        this._point = 3;\n        this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6);\n      // falls through\n      default:\n        basis_point(this, x, y);\n        break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n/* harmony default export */ function curve_basis(context) {\n  return new Basis(context);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-shape/src/curve/basisClosed.js\n\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\nBasisClosed.prototype = {\n  areaStart: d3_shape_src_noop,\n  areaEnd: d3_shape_src_noop,\n  lineStart: function () {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function () {\n    switch (this._point) {\n      case 1:\n        {\n          this._context.moveTo(this._x2, this._y2);\n          this._context.closePath();\n          break;\n        }\n      case 2:\n        {\n          this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n          this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n          this._context.closePath();\n          break;\n        }\n      case 3:\n        {\n          this.point(this._x2, this._y2);\n          this.point(this._x3, this._y3);\n          this.point(this._x4, this._y4);\n          break;\n        }\n    }\n  },\n  point: function (x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        this._x2 = x, this._y2 = y;\n        break;\n      case 1:\n        this._point = 2;\n        this._x3 = x, this._y3 = y;\n        break;\n      case 2:\n        this._point = 3;\n        this._x4 = x, this._y4 = y;\n        this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6);\n        break;\n      default:\n        basis_point(this, x, y);\n        break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n/* harmony default export */ function curve_basisClosed(context) {\n  return new BasisClosed(context);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-shape/src/curve/basisOpen.js\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\nBasisOpen.prototype = {\n  areaStart: function () {\n    this._line = 0;\n  },\n  areaEnd: function () {\n    this._line = NaN;\n  },\n  lineStart: function () {\n    this._x0 = this._x1 = this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function () {\n    if (this._line || this._line !== 0 && this._point === 3) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function (x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        break;\n      case 1:\n        this._point = 2;\n        break;\n      case 2:\n        this._point = 3;\n        var x0 = (this._x0 + 4 * this._x1 + x) / 6,\n          y0 = (this._y0 + 4 * this._y1 + y) / 6;\n        this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0);\n        break;\n      case 3:\n        this._point = 4;\n      // falls through\n      default:\n        basis_point(this, x, y);\n        break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n/* harmony default export */ function basisOpen(context) {\n  return new BasisOpen(context);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-shape/src/curve/bundle.js\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\nBundle.prototype = {\n  lineStart: function () {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function () {\n    var x = this._x,\n      y = this._y,\n      j = x.length - 1;\n    if (j > 0) {\n      var x0 = x[0],\n        y0 = y[0],\n        dx = x[j] - x0,\n        dy = y[j] - y0,\n        i = -1,\n        t;\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(this._beta * x[i] + (1 - this._beta) * (x0 + t * dx), this._beta * y[i] + (1 - this._beta) * (y0 + t * dy));\n      }\n    }\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function (x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n/* harmony default export */ const bundle = ((function custom(beta) {\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n  bundle.beta = function (beta) {\n    return custom(+beta);\n  };\n  return bundle;\n})(0.85));\n;// CONCATENATED MODULE: ./node_modules/d3-shape/src/curve/cardinal.js\nfunction cardinal_point(that, x, y) {\n  that._context.bezierCurveTo(that._x1 + that._k * (that._x2 - that._x0), that._y1 + that._k * (that._y2 - that._y0), that._x2 + that._k * (that._x1 - x), that._y2 + that._k * (that._y1 - y), that._x2, that._y2);\n}\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\nCardinal.prototype = {\n  areaStart: function () {\n    this._line = 0;\n  },\n  areaEnd: function () {\n    this._line = NaN;\n  },\n  lineStart: function () {\n    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function () {\n    switch (this._point) {\n      case 2:\n        this._context.lineTo(this._x2, this._y2);\n        break;\n      case 3:\n        cardinal_point(this, this._x1, this._y1);\n        break;\n    }\n    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function (x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);\n        break;\n      case 1:\n        this._point = 2;\n        this._x1 = x, this._y1 = y;\n        break;\n      case 2:\n        this._point = 3;\n      // falls through\n      default:\n        cardinal_point(this, x, y);\n        break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n/* harmony default export */ const cardinal = ((function custom(tension) {\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n  cardinal.tension = function (tension) {\n    return custom(+tension);\n  };\n  return cardinal;\n})(0));\n;// CONCATENATED MODULE: ./node_modules/d3-shape/src/curve/cardinalClosed.js\n\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\nCardinalClosed.prototype = {\n  areaStart: d3_shape_src_noop,\n  areaEnd: d3_shape_src_noop,\n  lineStart: function () {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function () {\n    switch (this._point) {\n      case 1:\n        {\n          this._context.moveTo(this._x3, this._y3);\n          this._context.closePath();\n          break;\n        }\n      case 2:\n        {\n          this._context.lineTo(this._x3, this._y3);\n          this._context.closePath();\n          break;\n        }\n      case 3:\n        {\n          this.point(this._x3, this._y3);\n          this.point(this._x4, this._y4);\n          this.point(this._x5, this._y5);\n          break;\n        }\n    }\n  },\n  point: function (x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        this._x3 = x, this._y3 = y;\n        break;\n      case 1:\n        this._point = 2;\n        this._context.moveTo(this._x4 = x, this._y4 = y);\n        break;\n      case 2:\n        this._point = 3;\n        this._x5 = x, this._y5 = y;\n        break;\n      default:\n        cardinal_point(this, x, y);\n        break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n/* harmony default export */ const cardinalClosed = ((function custom(tension) {\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n  cardinal.tension = function (tension) {\n    return custom(+tension);\n  };\n  return cardinal;\n})(0));\n;// CONCATENATED MODULE: ./node_modules/d3-shape/src/curve/cardinalOpen.js\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\nCardinalOpen.prototype = {\n  areaStart: function () {\n    this._line = 0;\n  },\n  areaEnd: function () {\n    this._line = NaN;\n  },\n  lineStart: function () {\n    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function () {\n    if (this._line || this._line !== 0 && this._point === 3) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function (x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        break;\n      case 1:\n        this._point = 2;\n        break;\n      case 2:\n        this._point = 3;\n        this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2);\n        break;\n      case 3:\n        this._point = 4;\n      // falls through\n      default:\n        cardinal_point(this, x, y);\n        break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n/* harmony default export */ const cardinalOpen = ((function custom(tension) {\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n  cardinal.tension = function (tension) {\n    return custom(+tension);\n  };\n  return cardinal;\n})(0));\n;// CONCATENATED MODULE: ./node_modules/d3-shape/src/curve/catmullRom.js\n\n\nfunction catmullRom_point(that, x, y) {\n  var x1 = that._x1,\n    y1 = that._y1,\n    x2 = that._x2,\n    y2 = that._y2;\n  if (that._l01_a > d3_shape_src_math_epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n      n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n  if (that._l23_a > d3_shape_src_math_epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n      m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\nCatmullRom.prototype = {\n  areaStart: function () {\n    this._line = 0;\n  },\n  areaEnd: function () {\n    this._line = NaN;\n  },\n  lineStart: function () {\n    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;\n  },\n  lineEnd: function () {\n    switch (this._point) {\n      case 2:\n        this._context.lineTo(this._x2, this._y2);\n        break;\n      case 3:\n        this.point(this._x2, this._y2);\n        break;\n    }\n    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function (x, y) {\n    x = +x, y = +y;\n    if (this._point) {\n      var x23 = this._x2 - x,\n        y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);\n        break;\n      case 1:\n        this._point = 2;\n        break;\n      case 2:\n        this._point = 3;\n      // falls through\n      default:\n        catmullRom_point(this, x, y);\n        break;\n    }\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n/* harmony default export */ const catmullRom = ((function custom(alpha) {\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n  catmullRom.alpha = function (alpha) {\n    return custom(+alpha);\n  };\n  return catmullRom;\n})(0.5));\n;// CONCATENATED MODULE: ./node_modules/d3-shape/src/curve/catmullRomClosed.js\n\n\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\nCatmullRomClosed.prototype = {\n  areaStart: d3_shape_src_noop,\n  areaEnd: d3_shape_src_noop,\n  lineStart: function () {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;\n  },\n  lineEnd: function () {\n    switch (this._point) {\n      case 1:\n        {\n          this._context.moveTo(this._x3, this._y3);\n          this._context.closePath();\n          break;\n        }\n      case 2:\n        {\n          this._context.lineTo(this._x3, this._y3);\n          this._context.closePath();\n          break;\n        }\n      case 3:\n        {\n          this.point(this._x3, this._y3);\n          this.point(this._x4, this._y4);\n          this.point(this._x5, this._y5);\n          break;\n        }\n    }\n  },\n  point: function (x, y) {\n    x = +x, y = +y;\n    if (this._point) {\n      var x23 = this._x2 - x,\n        y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        this._x3 = x, this._y3 = y;\n        break;\n      case 1:\n        this._point = 2;\n        this._context.moveTo(this._x4 = x, this._y4 = y);\n        break;\n      case 2:\n        this._point = 3;\n        this._x5 = x, this._y5 = y;\n        break;\n      default:\n        catmullRom_point(this, x, y);\n        break;\n    }\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n/* harmony default export */ const catmullRomClosed = ((function custom(alpha) {\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n  catmullRom.alpha = function (alpha) {\n    return custom(+alpha);\n  };\n  return catmullRom;\n})(0.5));\n;// CONCATENATED MODULE: ./node_modules/d3-shape/src/curve/catmullRomOpen.js\n\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\nCatmullRomOpen.prototype = {\n  areaStart: function () {\n    this._line = 0;\n  },\n  areaEnd: function () {\n    this._line = NaN;\n  },\n  lineStart: function () {\n    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;\n  },\n  lineEnd: function () {\n    if (this._line || this._line !== 0 && this._point === 3) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function (x, y) {\n    x = +x, y = +y;\n    if (this._point) {\n      var x23 = this._x2 - x,\n        y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        break;\n      case 1:\n        this._point = 2;\n        break;\n      case 2:\n        this._point = 3;\n        this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2);\n        break;\n      case 3:\n        this._point = 4;\n      // falls through\n      default:\n        catmullRom_point(this, x, y);\n        break;\n    }\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n/* harmony default export */ const catmullRomOpen = ((function custom(alpha) {\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n  catmullRom.alpha = function (alpha) {\n    return custom(+alpha);\n  };\n  return catmullRom;\n})(0.5));\n;// CONCATENATED MODULE: ./node_modules/d3-shape/src/curve/linearClosed.js\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\nLinearClosed.prototype = {\n  areaStart: d3_shape_src_noop,\n  areaEnd: d3_shape_src_noop,\n  lineStart: function () {\n    this._point = 0;\n  },\n  lineEnd: function () {\n    if (this._point) this._context.closePath();\n  },\n  point: function (x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n/* harmony default export */ function linearClosed(context) {\n  return new LinearClosed(context);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-shape/src/curve/monotone.js\nfunction monotone_sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n    h1 = x2 - that._x1,\n    s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n    s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n    p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (monotone_sign(s0) + monotone_sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// "you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1".\nfunction monotone_point(that, t0, t1) {\n  var x0 = that._x0,\n    y0 = that._y0,\n    x1 = that._x1,\n    y1 = that._y1,\n    dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\nfunction MonotoneX(context) {\n  this._context = context;\n}\nMonotoneX.prototype = {\n  areaStart: function () {\n    this._line = 0;\n  },\n  areaEnd: function () {\n    this._line = NaN;\n  },\n  lineStart: function () {\n    this._x0 = this._x1 = this._y0 = this._y1 = this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function () {\n    switch (this._point) {\n      case 2:\n        this._context.lineTo(this._x1, this._y1);\n        break;\n      case 3:\n        monotone_point(this, this._t0, slope2(this, this._t0));\n        break;\n    }\n    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function (x, y) {\n    var t1 = NaN;\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);\n        break;\n      case 1:\n        this._point = 2;\n        break;\n      case 2:\n        this._point = 3;\n        monotone_point(this, slope2(this, t1 = slope3(this, x, y)), t1);\n        break;\n      default:\n        monotone_point(this, this._t0, t1 = slope3(this, x, y));\n        break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function (x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\nfunction ReflectContext(context) {\n  this._context = context;\n}\nReflectContext.prototype = {\n  moveTo: function (x, y) {\n    this._context.moveTo(y, x);\n  },\n  closePath: function () {\n    this._context.closePath();\n  },\n  lineTo: function (x, y) {\n    this._context.lineTo(y, x);\n  },\n  bezierCurveTo: function (x1, y1, x2, y2, x, y) {\n    this._context.bezierCurveTo(y1, x1, y2, x2, y, x);\n  }\n};\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-shape/src/curve/natural.js\nfunction Natural(context) {\n  this._context = context;\n}\nNatural.prototype = {\n  areaStart: function () {\n    this._line = 0;\n  },\n  areaEnd: function () {\n    this._line = NaN;\n  },\n  lineStart: function () {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function () {\n    var x = this._x,\n      y = this._y,\n      n = x.length;\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n          py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n    if (this._line || this._line !== 0 && n === 1) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function (x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n    n = x.length - 1,\n    m,\n    a = new Array(n),\n    b = new Array(n),\n    r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n/* harmony default export */ function natural(context) {\n  return new Natural(context);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-shape/src/curve/step.js\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\nStep.prototype = {\n  areaStart: function () {\n    this._line = 0;\n  },\n  areaEnd: function () {\n    this._line = NaN;\n  },\n  lineStart: function () {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function () {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function (x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);\n        break;\n      case 1:\n        this._point = 2;\n      // falls through\n      default:\n        {\n          if (this._t <= 0) {\n            this._context.lineTo(this._x, y);\n            this._context.lineTo(x, y);\n          } else {\n            var x1 = this._x * (1 - this._t) + x * this._t;\n            this._context.lineTo(x1, this._y);\n            this._context.lineTo(x1, y);\n          }\n          break;\n        }\n    }\n    this._x = x, this._y = y;\n  }\n};\n/* harmony default export */ function step(context) {\n  return new Step(context, 0.5);\n}\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-shape/src/offset/none.js\n/* harmony default export */ function offset_none(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n;// CONCATENATED MODULE: ./node_modules/d3-shape/src/order/none.js\n/* harmony default export */ function order_none(series) {\n  var n = series.length,\n    o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-shape/src/stack.js\n\n\n\n\nfunction stackValue(d, key) {\n  return d[key];\n}\nfunction stackSeries(key) {\n  const series = [];\n  series.key = key;\n  return series;\n}\n/* harmony default export */ function stack() {\n  var keys = d3_shape_src_constant([]),\n    order = order_none,\n    offset = offset_none,\n    value = stackValue;\n  function stack(data) {\n    var sz = Array.from(keys.apply(this, arguments), stackSeries),\n      i,\n      n = sz.length,\n      j = -1,\n      oz;\n    for (const d of data) {\n      for (i = 0, ++j; i < n; ++i) {\n        (sz[i][j] = [0, +value(d, sz[i].key, j, data)]).data = d;\n      }\n    }\n    for (i = 0, oz = d3_shape_src_array(order(sz)); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n    offset(sz, oz);\n    return sz;\n  }\n  stack.keys = function (_) {\n    return arguments.length ? (keys = typeof _ === "function" ? _ : d3_shape_src_constant(Array.from(_)), stack) : keys;\n  };\n  stack.value = function (_) {\n    return arguments.length ? (value = typeof _ === "function" ? _ : d3_shape_src_constant(+_), stack) : value;\n  };\n  stack.order = function (_) {\n    return arguments.length ? (order = _ == null ? order_none : typeof _ === "function" ? _ : d3_shape_src_constant(Array.from(_)), stack) : order;\n  };\n  stack.offset = function (_) {\n    return arguments.length ? (offset = _ == null ? offset_none : _, stack) : offset;\n  };\n  return stack;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-shape/src/offset/expand.js\n\n/* harmony default export */ function expand(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  offset_none(series, order);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-shape/src/offset/diverging.js\n/* harmony default export */ function offset_diverging(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) > 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = 0, d[1] = dy;\n      }\n    }\n  }\n}\n;// CONCATENATED MODULE: ./node_modules/d3-shape/src/offset/silhouette.js\n\n/* harmony default export */ function silhouette(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  offset_none(series, order);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-shape/src/offset/wiggle.js\n\n/* harmony default export */ function wiggle(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n        sij0 = si[j][1] || 0,\n        sij1 = si[j - 1][1] || 0,\n        s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n          skj0 = sk[j][1] || 0,\n          skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  offset_none(series, order);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-shape/src/order/appearance.js\n\n/* harmony default export */ function appearance(series) {\n  var peaks = series.map(peak);\n  return order_none(series).sort(function (a, b) {\n    return peaks[a] - peaks[b];\n  });\n}\nfunction peak(series) {\n  var i = -1,\n    j = 0,\n    n = series.length,\n    vi,\n    vj = -Infinity;\n  while (++i < n) if ((vi = +series[i][1]) > vj) vj = vi, j = i;\n  return j;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-shape/src/order/ascending.js\n\n/* harmony default export */ function order_ascending(series) {\n  var sums = series.map(ascending_sum);\n  return order_none(series).sort(function (a, b) {\n    return sums[a] - sums[b];\n  });\n}\nfunction ascending_sum(series) {\n  var s = 0,\n    i = -1,\n    n = series.length,\n    v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-shape/src/order/descending.js\n\n/* harmony default export */ function order_descending(series) {\n  return order_ascending(series).reverse();\n}\n;// CONCATENATED MODULE: ./node_modules/d3-shape/src/order/insideOut.js\n\n\n/* harmony default export */ function insideOut(series) {\n  var n = series.length,\n    i,\n    j,\n    sums = series.map(ascending_sum),\n    order = appearance(series),\n    top = 0,\n    bottom = 0,\n    tops = [],\n    bottoms = [];\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n  return bottoms.reverse().concat(tops);\n}\n;// CONCATENATED MODULE: ./node_modules/d3-shape/src/order/reverse.js\n\n/* harmony default export */ function order_reverse(series) {\n  return order_none(series).reverse();\n}\n;// CONCATENATED MODULE: ./node_modules/d3-shape/src/index.js\n\n\n\n\n // Note: radialArea is deprecated!\n // Note: radialLine is deprecated!\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n;// CONCATENATED MODULE: ./node_modules/d3-time/src/index.js\n\n\n\n\n\n\n\n\n\n\n;// CONCATENATED MODULE: ./node_modules/d3-time-format/src/isoFormat.js\n\nvar isoSpecifier = "%Y-%m-%dT%H:%M:%S.%LZ";\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\nvar formatIso = Date.prototype.toISOString ? formatIsoNative : utcFormat(isoSpecifier);\n/* harmony default export */ const isoFormat = (formatIso);\n;// CONCATENATED MODULE: ./node_modules/d3-time-format/src/isoParse.js\n\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\nvar parseIso = +new Date("2000-01-01T00:00:00.000Z") ? parseIsoNative : utcParse(isoSpecifier);\n/* harmony default export */ const isoParse = (parseIso);\n;// CONCATENATED MODULE: ./node_modules/d3-time-format/src/index.js\n\n\n\n\n;// CONCATENATED MODULE: ./node_modules/d3-timer/src/interval.js\n\n/* harmony default export */ function src_interval(callback, delay, time) {\n  var t = new Timer(),\n    total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  t._restart = t.restart;\n  t.restart = function (callback, delay, time) {\n    delay = +delay, time = time == null ? now() : +time;\n    t._restart(function tick(elapsed) {\n      elapsed += total;\n      t._restart(tick, total += delay, time);\n      callback(elapsed);\n    }, delay, time);\n  };\n  t.restart(callback, delay, time);\n  return t;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-timer/src/index.js\n\n\n\n;// CONCATENATED MODULE: ./node_modules/d3-zoom/src/constant.js\n/* harmony default export */ const d3_zoom_src_constant = (x => () => x);\n;// CONCATENATED MODULE: ./node_modules/d3-zoom/src/event.js\nfunction ZoomEvent(type, {\n  sourceEvent,\n  target,\n  transform,\n  dispatch\n}) {\n  Object.defineProperties(this, {\n    type: {\n      value: type,\n      enumerable: true,\n      configurable: true\n    },\n    sourceEvent: {\n      value: sourceEvent,\n      enumerable: true,\n      configurable: true\n    },\n    target: {\n      value: target,\n      enumerable: true,\n      configurable: true\n    },\n    transform: {\n      value: transform,\n      enumerable: true,\n      configurable: true\n    },\n    _: {\n      value: dispatch\n    }\n  });\n}\n;// CONCATENATED MODULE: ./node_modules/d3-zoom/src/transform.js\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\nTransform.prototype = {\n  constructor: Transform,\n  scale: function (k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function (x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function (point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function (x) {\n    return x * this.k + this.x;\n  },\n  applyY: function (y) {\n    return y * this.k + this.y;\n  },\n  invert: function (location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function (x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function (y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function (x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function (y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function () {\n    return "translate(" + this.x + "," + this.y + ") scale(" + this.k + ")";\n  }\n};\nvar transform_identity = new Transform(1, 0, 0);\ntransform_transform.prototype = Transform.prototype;\nfunction transform_transform(node) {\n  while (!node.__zoom) if (!(node = node.parentNode)) return transform_identity;\n  return node.__zoom;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-zoom/src/noevent.js\nfunction src_noevent_nopropagation(event) {\n  event.stopImmediatePropagation();\n}\n/* harmony default export */ function d3_zoom_src_noevent(event) {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n;// CONCATENATED MODULE: ./node_modules/d3-zoom/src/zoom.js\n\n\n\n\n\n\n\n\n\n\n// Ignore right-click, since that should open the context menu.\n// except for pinch-to-zoom, which is sent as a wheel+ctrlKey event\nfunction zoom_defaultFilter(event) {\n  return (!event.ctrlKey || event.type === \'wheel\') && !event.button;\n}\nfunction zoom_defaultExtent() {\n  var e = this;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    if (e.hasAttribute("viewBox")) {\n      e = e.viewBox.baseVal;\n      return [[e.x, e.y], [e.x + e.width, e.y + e.height]];\n    }\n    return [[0, 0], [e.width.baseVal.value, e.height.baseVal.value]];\n  }\n  return [[0, 0], [e.clientWidth, e.clientHeight]];\n}\nfunction defaultTransform() {\n  return this.__zoom || transform_identity;\n}\nfunction defaultWheelDelta(event) {\n  return -event.deltaY * (event.deltaMode === 1 ? 0.05 : event.deltaMode ? 1 : 0.002) * (event.ctrlKey ? 10 : 1);\n}\nfunction zoom_defaultTouchable() {\n  return navigator.maxTouchPoints || "ontouchstart" in this;\n}\nfunction defaultConstrain(transform, extent, translateExtent) {\n  var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0],\n    dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0],\n    dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1],\n    dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];\n  return transform.translate(dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1), dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1));\n}\n/* harmony default export */ function zoom() {\n  var filter = zoom_defaultFilter,\n    extent = zoom_defaultExtent,\n    constrain = defaultConstrain,\n    wheelDelta = defaultWheelDelta,\n    touchable = zoom_defaultTouchable,\n    scaleExtent = [0, Infinity],\n    translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],\n    duration = 250,\n    interpolate = src_zoom,\n    listeners = src_dispatch("start", "zoom", "end"),\n    touchstarting,\n    touchfirst,\n    touchending,\n    touchDelay = 500,\n    wheelDelay = 150,\n    clickDistance2 = 0,\n    tapDistance = 10;\n  function zoom(selection) {\n    selection.property("__zoom", defaultTransform).on("wheel.zoom", wheeled, {\n      passive: false\n    }).on("mousedown.zoom", mousedowned).on("dblclick.zoom", dblclicked).filter(touchable).on("touchstart.zoom", touchstarted).on("touchmove.zoom", touchmoved).on("touchend.zoom touchcancel.zoom", touchended).style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");\n  }\n  zoom.transform = function (collection, transform, point, event) {\n    var selection = collection.selection ? collection.selection() : collection;\n    selection.property("__zoom", defaultTransform);\n    if (collection !== selection) {\n      schedule(collection, transform, point, event);\n    } else {\n      selection.interrupt().each(function () {\n        gesture(this, arguments).event(event).start().zoom(null, typeof transform === "function" ? transform.apply(this, arguments) : transform).end();\n      });\n    }\n  };\n  zoom.scaleBy = function (selection, k, p, event) {\n    zoom.scaleTo(selection, function () {\n      var k0 = this.__zoom.k,\n        k1 = typeof k === "function" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    }, p, event);\n  };\n  zoom.scaleTo = function (selection, k, p, event) {\n    zoom.transform(selection, function () {\n      var e = extent.apply(this, arguments),\n        t0 = this.__zoom,\n        p0 = p == null ? centroid(e) : typeof p === "function" ? p.apply(this, arguments) : p,\n        p1 = t0.invert(p0),\n        k1 = typeof k === "function" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);\n    }, p, event);\n  };\n  zoom.translateBy = function (selection, x, y, event) {\n    zoom.transform(selection, function () {\n      return constrain(this.__zoom.translate(typeof x === "function" ? x.apply(this, arguments) : x, typeof y === "function" ? y.apply(this, arguments) : y), extent.apply(this, arguments), translateExtent);\n    }, null, event);\n  };\n  zoom.translateTo = function (selection, x, y, p, event) {\n    zoom.transform(selection, function () {\n      var e = extent.apply(this, arguments),\n        t = this.__zoom,\n        p0 = p == null ? centroid(e) : typeof p === "function" ? p.apply(this, arguments) : p;\n      return constrain(transform_identity.translate(p0[0], p0[1]).scale(t.k).translate(typeof x === "function" ? -x.apply(this, arguments) : -x, typeof y === "function" ? -y.apply(this, arguments) : -y), e, translateExtent);\n    }, p, event);\n  };\n  function scale(transform, k) {\n    k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k,\n      y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n  function schedule(transition, transform, point, event) {\n    transition.on("start.zoom", function () {\n      gesture(this, arguments).event(event).start();\n    }).on("interrupt.zoom end.zoom", function () {\n      gesture(this, arguments).event(event).end();\n    }).tween("zoom", function () {\n      var that = this,\n        args = arguments,\n        g = gesture(that, args).event(event),\n        e = extent.apply(that, args),\n        p = point == null ? centroid(e) : typeof point === "function" ? point.apply(that, args) : point,\n        w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n        a = that.__zoom,\n        b = typeof transform === "function" ? transform.apply(that, args) : transform,\n        i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n      return function (t) {\n        if (t === 1) t = b; // Avoid rounding error on end.\n        else {\n          var l = i(t),\n            k = w / l[2];\n          t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k);\n        }\n        g.zoom(null, t);\n      };\n    });\n  }\n  function gesture(that, args, clean) {\n    return !clean && that.__zooming || new Gesture(that, args);\n  }\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.active = 0;\n    this.sourceEvent = null;\n    this.extent = extent.apply(that, args);\n    this.taps = 0;\n  }\n  Gesture.prototype = {\n    event: function (event) {\n      if (event) this.sourceEvent = event;\n      return this;\n    },\n    start: function () {\n      if (++this.active === 1) {\n        this.that.__zooming = this;\n        this.emit("start");\n      }\n      return this;\n    },\n    zoom: function (key, transform) {\n      if (this.mouse && key !== "mouse") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== "touch") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== "touch") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit("zoom");\n      return this;\n    },\n    end: function () {\n      if (--this.active === 0) {\n        delete this.that.__zooming;\n        this.emit("end");\n      }\n      return this;\n    },\n    emit: function (type) {\n      var d = src_select(this.that).datum();\n      listeners.call(type, this.that, new ZoomEvent(type, {\n        sourceEvent: this.sourceEvent,\n        target: zoom,\n        type,\n        transform: this.that.__zoom,\n        dispatch: listeners\n      }), d);\n    }\n  };\n  function wheeled(event, ...args) {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, args).event(event),\n      t = this.__zoom,\n      k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\n      p = pointer(event);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n    d3_zoom_src_noevent(event);\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom("mouse", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n  function mousedowned(event, ...args) {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var currentTarget = event.currentTarget,\n      g = gesture(this, args, true).event(event),\n      v = src_select(event.view).on("mousemove.zoom", mousemoved, true).on("mouseup.zoom", mouseupped, true),\n      p = pointer(event, currentTarget),\n      x0 = event.clientX,\n      y0 = event.clientY;\n    nodrag(event.view);\n    src_noevent_nopropagation(event);\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n    function mousemoved(event) {\n      d3_zoom_src_noevent(event);\n      if (!g.moved) {\n        var dx = event.clientX - x0,\n          dy = event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n      g.event(event).zoom("mouse", constrain(translate(g.that.__zoom, g.mouse[0] = pointer(event, currentTarget), g.mouse[1]), g.extent, translateExtent));\n    }\n    function mouseupped(event) {\n      v.on("mousemove.zoom mouseup.zoom", null);\n      yesdrag(event.view, g.moved);\n      d3_zoom_src_noevent(event);\n      g.event(event).end();\n    }\n  }\n  function dblclicked(event, ...args) {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n      p0 = pointer(event.changedTouches ? event.changedTouches[0] : event, this),\n      p1 = t0.invert(p0),\n      k1 = t0.k * (event.shiftKey ? 0.5 : 2),\n      t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, args), translateExtent);\n    d3_zoom_src_noevent(event);\n    if (duration > 0) src_select(this).transition().duration(duration).call(schedule, t1, p0, event);else src_select(this).call(zoom.transform, t1, p0, event);\n  }\n  function touchstarted(event, ...args) {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.touches,\n      n = touches.length,\n      g = gesture(this, args, event.changedTouches.length === n).event(event),\n      started,\n      i,\n      t,\n      p;\n    src_noevent_nopropagation(event);\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = pointer(t, this);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true, g.taps = 1 + !!touchstarting;else if (!g.touch1 && g.touch0[2] !== p[2]) g.touch1 = p, g.taps = 0;\n    }\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    if (started) {\n      if (g.taps < 2) touchfirst = p[0], touchstarting = setTimeout(function () {\n        touchstarting = null;\n      }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n  function touchmoved(event, ...args) {\n    if (!this.__zooming) return;\n    var g = gesture(this, args).event(event),\n      touches = event.changedTouches,\n      n = touches.length,\n      i,\n      t,\n      p,\n      l;\n    d3_zoom_src_noevent(event);\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = pointer(t, this);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0],\n        l0 = g.touch0[1],\n        p1 = g.touch1[0],\n        l1 = g.touch1[1],\n        dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n        dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    } else if (g.touch0) p = g.touch0[0], l = g.touch0[1];else return;\n    g.zoom("touch", constrain(translate(t, p, l), g.extent, translateExtent));\n  }\n  function touchended(event, ...args) {\n    if (!this.__zooming) return;\n    var g = gesture(this, args).event(event),\n      touches = event.changedTouches,\n      n = touches.length,\n      i,\n      t;\n    src_noevent_nopropagation(event);\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function () {\n      touchending = null;\n    }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);else {\n      g.end();\n      // If this was a dbltap, reroute to the (optional) dblclick.zoom handler.\n      if (g.taps === 2) {\n        t = pointer(t, this);\n        if (Math.hypot(touchfirst[0] - t[0], touchfirst[1] - t[1]) < tapDistance) {\n          var p = src_select(this).on("dblclick.zoom");\n          if (p) p.apply(this, arguments);\n        }\n      }\n    }\n  }\n  zoom.wheelDelta = function (_) {\n    return arguments.length ? (wheelDelta = typeof _ === "function" ? _ : d3_zoom_src_constant(+_), zoom) : wheelDelta;\n  };\n  zoom.filter = function (_) {\n    return arguments.length ? (filter = typeof _ === "function" ? _ : d3_zoom_src_constant(!!_), zoom) : filter;\n  };\n  zoom.touchable = function (_) {\n    return arguments.length ? (touchable = typeof _ === "function" ? _ : d3_zoom_src_constant(!!_), zoom) : touchable;\n  };\n  zoom.extent = function (_) {\n    return arguments.length ? (extent = typeof _ === "function" ? _ : d3_zoom_src_constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n  zoom.scaleExtent = function (_) {\n    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];\n  };\n  zoom.translateExtent = function (_) {\n    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];\n  };\n  zoom.constrain = function (_) {\n    return arguments.length ? (constrain = _, zoom) : constrain;\n  };\n  zoom.duration = function (_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n  zoom.interpolate = function (_) {\n    return arguments.length ? (interpolate = _, zoom) : interpolate;\n  };\n  zoom.on = function () {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n  zoom.clickDistance = function (_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n  zoom.tapDistance = function (_) {\n    return arguments.length ? (tapDistance = +_, zoom) : tapDistance;\n  };\n  return zoom;\n}\n;// CONCATENATED MODULE: ./node_modules/d3-zoom/src/index.js\n\n\n;// CONCATENATED MODULE: ./node_modules/d3/src/index.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=webpack:///./node_modules/d3/src/index.js_+_564_modules?')}},__webpack_module_cache__={};function __webpack_require__(n){var e=__webpack_module_cache__[n];if(void 0!==e)return e.exports;var t=__webpack_module_cache__[n]={exports:{}};return __webpack_modules__[n].call(t.exports,t,t.exports,__webpack_require__),t.exports}__webpack_require__.d=(n,e)=>{for(var t in e)__webpack_require__.o(e,t)&&!__webpack_require__.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},__webpack_require__.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),__webpack_require__.r=n=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})};var __webpack_exports__=__webpack_require__(821);return __webpack_exports__})()));